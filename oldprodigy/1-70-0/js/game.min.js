function Util() {}

function Device() {}

function ApiClient(e, t) {
	function i(e, t) {
		var i = g[e];
		t.root = i + y, t.url.leaderboard = i + m, t.url.account = i + f, t.url.multiplayer = u[e], t.url.matchmaking = i + b, t.url.mailer = i + P, t.url.friend = i + v, t.url.events = i + C, t.url.assignments = i + w, t.url.planner = i + x, t.url.education = i + D, t.url.titan = i + k
	}

	function a(e, t, i, a, s, r) {
		void 0 === i && (i = {}), void 0 === r && (r = {}), i["auth-key"] = l.uniqueKey, i.token = l.uniqueKey;
		var n = {
			url: t,
			data: i,
			timeout: 3e4,
			type: e,
			success: a["200"],
			crossDomain: !0,
			error: function(e) {
				"Service Unavailable" === e.responseText && (e.status = 503), void 0 !== a[e.status] ? "function" == typeof a[e.status] ? a[e.status](s, e.status) : Util.log("APIClient Error: handler " + e.status + " is not a function", Util.ERROR) : l.generic_ajax_error(s, e.status)
			}
		};
		r.ignoreHeaders && (n.headers = null), $.ajax(n)
	}

	function s(e, t, i, s) {
		"/status" === e ? a("get", p.root + e.substr(1), t, i, s) : a("get", p.root + p.version + e, t, i, s)
	}

	function r(e, t, i, s) {
		a("post", p.root + p.version + e, t, i, s)
	}

	function n(e, t, i) {
		for (var a = 0, s = t.length; s > a; ++a)
			if (void 0 === e[t[a]]) return Util.log("Missing method for " + i + " statusCode: " + t[a], Util.ERROR), !1;
		return e
	}

	function o(e, t, i) {
		for (var a = $.extend({}, c), s = Object.keys(e), r = 0, o = s.length; o > r; ++r) a[s[r]] = e[s[r]];
		return void 0 !== t ? n(a, t, i) : void 0
	}

	function h(e) {
		return "[object Array]" !== Object.prototype.toString.call(e) && (e = [e]), JSON.stringify(e)
	}
	var l = this,
		d = {},
		c = {};
	this.generic_ajax_error = function() {}, this.uniqueKey = void 0, this.userID = void 0, this.socket = void 0, this.clientVersion = e.clientVersion;
	var p = {
			version: "v1",
			autoping: !0,
			url: {
				leaderboard: void 0,
				multiplayer: void 0,
				messages: void 0,
				matchmaking: void 0
			},
			ajax_timeout: 3e4,
			root: void 0
		},
		g = {
			dev: "/",
			staging: "https://www.prodigygame.org/",
			production: "https://www.prodigygame.com/"
		},
		u = {
			dev: "/",
			staging: "https://multiplayer.prodigygame.org/",
			production: "https://multiplayer.prodigygame.com/"
		},
		y = "game-api/",
		m = "leaderboard-api/",
		f = "account-api/",
		b = "matchmaking-api/",
		v = "friend-api/",
		P = "game-mailer-api/",
		w = "assignment-api/",
		x = "planner-api/",
		D = "education-api/",
		C = "events-api/",
		k = "titan-api/";
	switch (window.location.host) {
		case "dev.prodigygame.org":
			i("dev", p);
			break;
		case "stagingpublic.prodigygame.org":
		case "www.prodigygame.org":
		case "prodigygame.org":
			i("staging", p);
			break;
		case "www.prodigygame.com":
		case "prodigygame.com":
			i("production", p);
			break;
		default:
			i("dev", p)
	}
	var E = window.location.search;
	if (E.indexOf("env=dev") >= 0 ? i("dev", p) : E.indexOf("env=staging") >= 0 ? i("staging", p) : (E.indexOf("env=production") >= 0 || E.indexOf("env=prod") >= 0) && i("production", p), e)
		for (var I = Object.keys(p), _ = 0, S = I.length; S > _; ++_) void 0 !== e[I[_]] && (p[I[_]] = e[I[_]]);
	if (d = p, c["500"] = function() {
			Util.log("Something happened with the webservice...", Util.ERROR)
		}, c["404"] = function() {
			Util.log("The data you are attempting to access does not exist.")
		}, t)
		for (var A = Object.keys(t), _ = 0, S = A.length; S > _; ++_) void 0 !== t[A[_]] && (c[A[_]] = t[A[_]]);
	this.joinMultiplayerServer = function(e, t, i, a, s, r, n, h) {
		var d = o(i, ["200", "503"], "Join multiplayer Server");
		if (d) {
			var c = this.userID,
				g = this.uniqueKey;
			if (void 0 == c || void 0 == g) return Util.log("missing user id or token"), !1;
			var u = !1,
				y = p.url.multiplayer;
			/^https:\/\//.test(y) && (u = !0);
			var m = {
				"force new connection": !0,
				reconnection: !1,
				transports: ["websocket", "xhr-polling", "jsonp-polling", "htmlfile"],
				secure: u,
				query: "userId=" + c + "&worldId=" + e + "&userToken=" + g + "&zone=" + t
			};
			l.socket = io.connect(p.url.multiplayer, m), l.socket.on("connect", function() {
				Util.log("client connected")
			}), l.socket.on("connect", d["200"]), l.socket.on("connect_error", function(e) {
				Util.log("connect_error"), Util.log(e, Util.ERROR)
			}), l.socket.on("error", function(e) {
				e && Util.log(e, Util.ERROR), e.code && d[e.code] && d[e.code]()
			}), l.socket.on("connect_error", d["503"]), l.socket.on("message", function(e) {
				a(e)
			}), l.socket.on("playerJoined", function(e) {
				Util.log("player Joined - playerId: " + e), n(e)
			}), l.socket.on("playerLeft", function(e) {
				Util.log("player Left - playerId: " + e), h(e)
			}), l.socket.on("playerList", function(e) {
				Util.log("player list received"), s(e)
			}), l.socket.on("disconnect", function() {
				Util.log("Disconnected from multiplayer server"), r()
			})
		}
	}, this.emitMessage = function(e, t) {
		var i = o(t, ["200"], "emit message");
		return i && l.socket ? (l.socket.emit("message", e), !0) : !1
	}, this.getWorldList = function(e) {
		var t = o(e, ["200", "400", "500", "503"], "get world list");
		if (t) {
			var i = "v2/worlds",
				s = p.root + i;
			return a("get", s, {}, t, "getWorldList", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.login = function(e, t, i) {
		var a = o(i, ["200", "400", "401", "404", "426"], "login");
		if (!l.uniqueKey || !l.userID) {
			if (a) {
				var s = a["200"];
				return a["200"] = function(e) {
					l.uniqueKey = e.authToken, l.userID = e.userID, Util.log("SET!", l.userID, l.uniqueKey), s(e)
				}, "undefined" != typeof this.clientVersion && null !== this.clientVersion && (t.clientVersion = this.clientVersion), r("/login/" + e, t, a, "login"), !0
			}
			return !1
		}
	}, this.adminLogin = function(e, t, i, s) {
		var r = o(s, ["200", "401", "404"], "Admin Login");
		if (r) {
			var n = "v1/user/info",
				h = p.root + n,
				d = r["200"];
			r["200"] = function(e) {
				l.uniqueKey = e.authToken, l.userID = e.userID, Util.log("ADMIN LOGIN", l.userID, l.uniqueKey), d(e)
			};
			var c = {
				userId: e,
				sessionToken: t,
				key: i
			};
			return a("get", h, c, r, "adminLogin", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.verifyClassCode = function(e, t) {
		var i = o(t, ["200", "400", "404", "500"], "verifyClassCode");
		if (i) {
			var s = p.root + "v1/classCode/" + e;
			return a("post", s, {}, i, "verify-class-code"), !0
		}
		return !1
	}, this.attachStudentUsingClassCode = function(e, t) {
		var i = o(t, ["200"], "attachStudentUsingClassCode");
		if (i) {
			var s = p.root + "v1/users/" + l.userID + "/teacher";
			return a("post", s, {
				classCode: e
			}, i, "attachStudentUsingCassCode"), !0
		}
		return !1
	}, this.create = function(e, t, i, s) {
		i.first_name = e, i.last_name = t, "undefined" != typeof this.clientVersion && null !== this.clientVersion && (i.clientVersion = this.clientVersion);
		var r = o(s, ["200", "400", "426", "500"], "create");
		if (r) {
			var n = p.root + "v1";
			return a("post", n + "/users", i, r, "create"), !0
		}
		return !1
	}, this.createGoogle = function(e, t, i, s) {
		i.first_name = e, i.last_name = t, "undefined" != typeof this.clientVersion && null !== this.clientVersion && (i.clientVersion = this.clientVersion);
		var r = o(s, ["200", "400", "426", "500"], "create");
		if (r) {
			var n = p.root + "v1";
			return a("post", n + "/users/google", i, r, "create"), !0
		}
		return !1
	}, this.createCharacter = function(e, t, i) {
		var s = o(i, ["200"], "createCharacter");
		if (s) {
			var r = p.root + "v1";
			return a("post", r + "/characters/" + e, t, s, "createCharacter"), !0
		}
		return !1
	}, this.updateUser = function(e, t) {
		var i = o(t, ["200", "401"], "update user properties");
		if (e.clientVersion = this.clientVersion, i) {
			var s = p.root + "v1/users/" + l.userID;
			return a("post", s, e, i, "update"), !0
		}
		return !1
	}, this.setParentEmail = function(e, t) {
		var i = o(t, ["200", "401", "500"], "update user parent email");
		if (i) {
			var s = p.root + "v1/users/" + l.userID;
			return a("post", s, {
				parentEmail: e
			}, i, "updateParentEmail"), !0
		}
		return !1
	}, this.logout = function(e) {
		l.uniqueKey = void 0, l.userID = void 0, void 0 !== l.socket && (l.socket.disconnect(), l.socket = void 0), e["200"] && e["200"]()
	}, this.updateCharacter = function(e, t) {
		var i = o(t, ["200", "401"], "update property");
		if (i) {
			var s = p.root + "v1/characters/" + l.userID;
			return a("post", s, e, i, "update"), !0
		}
		return !1
	}, this.selectInstance = function(e, t, i) {
		i["200"] && i["200"]()
	}, this.switchZones = function(e, t) {
		return void 0 !== l.socket && l.socket.emit("switchZone", e), t["200"] && t["200"](), !0
	}, this.loadSkills = function(e, t, i) {
		var s = o(i, ["200"], "get user ability");
		if (s) {
			var r = p.root + "v1/users/" + e + "/education",
				n = (p.url.education + "v1/users/" + e + "/userAbility", p.url.assignments + "v1/user/" + e + "/assignments/active"),
				h = {
					token: l.uniqueKey,
					userID: l.userID
				},
				d = s["200"],
				c = 0,
				g = 2,
				u = {};
			return s["200"] = function() {
				c++;
				var e = Array.prototype.slice.call(arguments);
				if (u[this.url] = e, c === g) {
					var t, i, a;
					Object.keys(u).forEach(function(e) {
						-1 !== e.indexOf("assignment-api") ? a = u[e] : -1 !== e.indexOf("education-api") ? i = u[e] : t = u[e]
					}), i && i[0] && (t[0].skills = i[0]), t[0].homework = a[0], d.apply(null, t)
				}
			}, a("get", r, {
				classIDs: t.join(",")
			}, s, "load_skills"), a("get", n, h, s, "load_skills"), !0
		}
		return !1
	}, this.updatePlanStudent = function(e, t, i, s) {
		var r = o(s, ["200"], "fail plan"),
			n = {
				token: l.uniqueKey,
				userID: l.userID
			};
		if (void 0 !== t && (n.currentSkillId = t), void 0 !== i && (n.hasFailed = i ? 1 : 0), r) {
			var h = p.url.planner + "v1/plans/" + e + "/users/" + l.userID;
			return a("post", h, n, r, "updatePlanStudent"), !0
		}
		return !1
	}, this.updatePlacementTest = function(e, t, i) {
		var s = o(i, ["200"], "update placement test");
		if (s) {
			var r = p.url.account + "v2/users/" + l.userID + "/education/" + e + "/placement-test";
			return a("post", r, {
				ownerIDs: t
			}, s, "upgradePlacementTest"), !0
		}
		return !1
	}, this.updateUserAbility = function(e, t) {
		var i = o(t, ["200"], "bulk update user ability");
		if (i) {
			e = h(e);
			var s = p.root + "v1/users/" + l.userID + "/ability";
			return a("post", s, {
				userAbilityData: e
			}, i, "bulkUpdateUserAbility"), !0
		}
		return !1
	}, this.saveAnswer = function(e, t) {
		var i = o(t, ["200"], "save answer");
		if (i) {
			var s = p.root + "v1/users/" + l.userID + "/answers";
			return a("post", s, e, i, "saveAnswer"), !0
		}
		return !1
	}, this.getLeaderboard = function(e, t, i, s) {
		var r = o(s, ["200"], "get leaderboard");
		if (r) {
			var n = p.url.leaderboard;
			return a("get", n + "class/" + e, {
				sort: t,
				limit: i
			}, r, "leaderboard", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.getPvpLeaderboard = function(e, t, i, s, r) {
		var n = o(r, ["200"], "get pvp leaderboard");
		if (n) {
			var h = p.url.leaderboard;
			return a("get", h + "pvp/" + e.min + "/" + e.max, {
				page: i || 0,
				limit: s || 30,
				player_score: t.arenaScore,
				player_stars: t.stars,
				userID: l.userID
			}, n, "leaderboard", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.reopenMail = function(e, t, i) {
		var s = o(i, ["200"], "get mail details"),
			r = {
				userID: l.userID,
				type: t
			};
		if (s) {
			var n = p.url.mailer + "v1/mail/" + e;
			return a("get", n, r, s, "getMail"), !0
		}
		return !1
	}, this.openMail = function(e, t, i) {
		var s = o(i, ["200"], "Mark mail as read"),
			r = {
				id: e,
				rawData: t,
				userID: l.userID
			};
		if (s) {
			var n = p.url.mailer + "v1/mail/" + e;
			return a("post", n, r, s, "openMail"), !0
		}
		return !1
	}, this.getAllMail = function(e, t, i, s) {
		var r = o(s, ["200"], "get user mails"),
			n = e.toISOString().substring(0, 10),
			h = {
				offset: t,
				limit: i,
				userID: l.userID,
				userRegisterDate: n
			};
		if (r) {
			var d = p.url.mailer + "v1/mail";
			return a("get", d, h, r, "getAllMail"), !0
		}
		return !1
	}, this.deleteMail = function(e, t) {
		var i = o(t, ["200"], "delete mail"),
			s = {
				id: e,
				type: "broadcast",
				userID: l.userID
			};
		if (i) {
			var r = p.url.mailer + "v1/mail/" + e;
			return a("delete", r, s, i, "deleteMessage"), !0
		}
		return !1
	}, this.getTotalMail = function(e, t) {
		var i = o(t, ["200"], "get user mail counts"),
			s = Util.isDefined(e) ? e.toISOString().substring(0, 10) : null,
			r = {
				type: "broadcast",
				userID: l.userID,
				userRegisterDate: s
			};
		if (i) {
			var n = p.url.mailer + "v1/mailer/count";
			return a("get", n, r, i, "getMailCounts"), !0
		}
		return !1
	}, this.getUser = function(e, t, i) {
		var s = p.root + "v1/characters/" + e;
		3 === arguments.length ? s += "?fields=" + t.join(",") : i = t;
		var r = o(i, ["200"], "getUserData");
		return r ? (a("get", s, {}, r, "getUser", {
			ignoreHeaders: !0
		}), !0) : !1
	}, this.getUserInfo = function(e, t) {
		var i = o(t, ["200", "401", "404"], "User Info");
		if (i) {
			var s = "v1/user/" + e,
				r = p.root + s,
				n = {
					sessionToken: l.uniqueKey
				};
			return a("get", r, n, i, "getUserInfo", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.getTitans = function(e) {
		var t = o(e, ["200"], "get titans"),
			i = {};
		if (i.userID = l.userID, t) {
			var s = p.url.titan + "v1/titans";
			return a("get", s, i, t, "getTitans"), !0
		}
		return !1
	}, this.getTitan = function(e, t) {
		var i = o(t, ["200"], "get titans"),
			s = {};
		if (s.userID = l.userID, i) {
			var r = p.url.titan + "v1/titan/" + e;
			return a("get", r, s, i, "getTitan"), !0
		}
		return !1
	}, this.hitTitan = function(e, t) {
		var i = o(t, ["200"], "get titans"),
			s = {};
		if (s.userID = l.userID, s.hits = 1, i) {
			var r = p.url.titan + "v1/titan/" + e + "/hit";
			return a("post", r, s, i, "hitTitan"), !0
		}
		return !1
	}, this.getTitanUserData = function(e) {
		var t = o(e, ["200"], "get titan user data"),
			i = p.url.titan + "v1/titan/user/" + l.userID;
		a("get", i, {}, t, "getTitanUserData")
	}, this.startMatchmaking = function(e, t, i, s) {
		var r = o(s, ["200"], "startMatchmaking");
		if (r) {
			var n = p.url.matchmaking + "begin";
			return a("post", n, {
				userID: l.userID,
				level: e,
				score: t,
				playerData: i,
				token: l.uniqueKey
			}, r, "startMatchmaking"), !0
		}
		return !1
	}, this.quitMatchmaking = function(e) {
		var t = o(e, ["200"], "quitMatchmaking");
		if (t) {
			var i = p.url.matchmaking + "end";
			return a("post", i, {
				userID: l.userID,
				token: l.uniqueKey
			}, t, "quitMatchmaking"), !0
		}
		return !1
	}, this.getFriendList = function(e) {
		var t = o(e, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "getFriendList");
		if (t) {
			var i = {
					token: l.uniqueKey,
					offset: 0,
					limit: 0
				},
				s = p.url.friend + "v1/friend/" + l.userID;
			return a("get", s, i, t, "getFriendList"), !0
		}
		return !1
	}, this.getTotalFriendRequests = function(e) {
		var t = o(e, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "getTotalFriendRequests");
		if (t) {
			var i = {
					token: l.uniqueKey
				},
				s = p.url.friend + "v1/friend/" + l.userID + "/countFriendRequest";
			return a("get", s, i, t, "getTotalFriendRequests"), !0
		}
		return !1
	}, this.getFriendRequestList = function(e, t, i) {
		var s = o(i, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "getFriendRequestList");
		if (s) {
			var r = {
					token: l.uniqueKey,
					offset: e,
					limit: t
				},
				n = p.url.friend + "v1/friend/" + l.userID + "/request";
			return a("get", n, r, s, "getFriendRequestList"), !0
		}
		return !1
	}, this.sendFriendRequest = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "sendFriendRequest");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/add/" + e;
			return a("post", r, s, i, "sendFriendRequest"), !0
		}
		return !1
	}, this.cancelFriendRequest = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "cancelFriendRequest");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/cancel/" + e;
			return a("delete", r, s, i, "cancelFriendRequest"), !0
		}
		return !1
	}, this.acceptFriendRequest = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "acceptFriendRequest");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/accept/" + e;
			return a("post", r, s, i, "acceptFriendRequest"), !0
		}
		return !1
	}, this.rejectFriendRequest = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "rejectFriendRequest");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/reject/" + e;
			return a("delete", r, s, i, "rejectFriendRequest"), !0
		}
		return !1
	}, this.removeFriend = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "removeFriend");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/remove/" + e;
			return a("delete", r, s, i, "removeFriend"), !0
		}
		return !1
	}, this.getFriendshipStatus = function(e, t) {
		var i = o(t, ["200", "400", "401", "404", "406", "409", "423", "500", "503"], "getFriendshipStatus");
		if (i) {
			var s = {
					token: l.uniqueKey
				},
				r = p.url.friend + "v1/friend/" + l.userID + "/status/" + e;
			return a("get", r, s, i, "getFriendshipStatus"), !0
		}
		return !1
	}, this.getGiftBoxes = function(e) {
		var t = o(e, ["200", "400", "401", "403", "409", "500", "503"], "getGiftBoxes");
		if (t) {
			var i = {
					token: l.uniqueKey,
					userID: l.userID
				},
				s = p.root + "v1/users/" + l.userID + "/giftboxes";
			return a("get", s, i, t, "getGiftBoxes"), !0
		}
		return !1
	}, this.updateGiftBox = function(e, t, i) {
		var s = o(i, ["200", "400", "401", "403", "409", "500", "503"], "updateGiftBox");
		if (s) {
			var t = {
					token: l.uniqueKey,
					giftBoxData: JSON.stringify(t),
					userID: l.userID
				},
				r = p.root + "v1/users/" + l.userID + "/giftbox/" + e;
			return a("post", r, t, s, "updateGiftBox"), !0
		}
		return !1
	}, this.addGiftBox = function(e, t) {
		var i = o(t, ["200", "400", "401", "403", "409", "500", "503"], "addGiftBox");
		if (i) {
			var s = {
					token: l.uniqueKey,
					userID: l.userID,
					giftBoxID: e
				},
				r = p.root + "v1/users/" + l.userID + "/giftboxes";
			return a("post", r, s, i, "addGiftBox"), !0
		}
		return !1
	}, this.log = function(e, t, i) {
		var a = ["debug", "info", "notice", "warning", "error", "critical", "alert", "emergency"];
		return e = e.toLowerCase(), a.indexOf(e) >= 0 ? (i.message && (i.attr_message = i.message), i.message = t, r("/log/" + e, i, {
			200: function() {}
		}, "log"), !0) : !1
	}, this.track = function(e, t) {
		var i = o(t, ["200"], "trackEvent");
		if (i) {
			var s = {
					userID: l.userID,
					token: l.uniqueKey,
					event: e
				},
				r = p.url.events + "v1/game-event";
			return a("post", r, s, i, "trackEvent"), !0
		}
		return !1
	}, this.completeAssignment = function(e, t) {
		var i = o(t, ["200"], "completeStudentAssignment");
		if (i) {
			var s = {
					token: l.uniqueKey,
					userID: l.userID
				},
				r = p.url.assignments + "v1/users/" + l.userID + "/assignments/" + e;
			return a("post", r, s, i, "completeStudentAssignment"), !1
		}
		return !1
	}, this.status = function(e) {
		var t = o(e, ["200", "503"], "status check");
		return t ? (s("/status", {
			flook: +new Date
		}, t, "status"), !0) : !1
	}
}
var Prodigy = Prodigy || {};
Prodigy.extends = function(e, t, i) {
	e.prototype = Object.create(t.prototype);
	for (var a in i) e.prototype[a] = i[a]
}, Prodigy.NetworkHandlers = {}, Prodigy.Control = {}, Prodigy.Container = {}, Prodigy.Controller = {}, Prodigy.Event = {}, Prodigy.Factory = {}, Prodigy.Listener = {}, Prodigy.Menu = {
	FriendsList: {},
	FriendRequest: {}
}, Prodigy.HUD = {}, Prodigy.Lodash = _, Prodigy.Battle = {
	ComboMetre: {}
}, Prodigy.Attack = {}, Prodigy.StatusEffects = {}, Prodigy.Component = {
	Wheel: {},
	TwilightWheel: {}
}, Prodigy.Entity = {}, Prodigy.Breadcrumbs = {}, Prodigy.UI = {}, Prodigy.FSM = {
	Action: {}
}, Prodigy.Framework = {
	Behaviour: {},
	Core: {},
	ParticleSystem: {},
	Debug: {},
	Localization: {}
};
var GameConstants = GameConstants || function() {
	var e = {};
	if (e["GameConstants.Build.VERSION"] = "1-70-0", e["GameConstants.Build.LODASH_VERSION"] = "4.13.1", e["GameConstants.Build.DEBUG"] = !1, e["GameConstants.Build.SHOW_FPS"] = !1, e["GameConstants.Build.SHOW_DEBUG_VALUES"] = [], e["GameConstants.Build.MUTE_BGM"] = !1, e["GameConstants.Build.LOG_LEVEL"] = 12, e["GameConstants.Build.ASSETS_LOCATION"] = "https://cdn.prodigygame.com/game/assets/", e["GameConstants.Build.TELEPORT"] = "", e["GameConstants.Build.QUEST"] = [], e["GameConstants.Build.ITEM_TYPE"] = [], e["GameConstants.Build.KILL_GORE"] = !1, e["GameConstants.Build.EASY_MODE"] = !1, e["GameConstants.Build.MEMBERSHIP"] = !1, e["GameConstants.Tower.MAX_FREE_MEMBER_FLOOR"] = 5, e["GameConstants.Debug.AUTOSAVE_ENABLED"] = !0, e["GameConstants.Debug.POPUPS_ENABLED"] = !0, e["GameConstants.Debug.PLAYER_CARDS_ENABLED"] = !0, e["GameConstants.Debug.DISABLE_DAILY_BONUS"] = !1, e["GameConstants.Debug.ENABLE_MAP"] = !1, e["GameConstants.Debug.AUTO_LOGIN"] = [], e["GameConstants.Debug.GET_PET"] = [], e["GameConstants.Debug.SET_LEVEL"] = 0, e["GameConstants.Debug.DISABLE_ACHIEVEMENTS"] = !1, e["GameConstants.Debug.GET_GOLD"] = 0, e["GameConstants.Debug.GET_SPELL"] = 0, e["GameConstants.Debug.COMPLETE_TUTORIAL"] = !1, e["GameConstants.Debug.FORCE_DROPS"] = [], e["GameConstants.Debug.SCALE_ENCOUNTER_DISTANCE"] = 1, e["GameConstants.Debug.WIZARDS_ENABLED"] = !0, e["GameConstants.Debug.AUTO_RESOLVE_BATTLES_ENABLED"] = !1, e["GameConstants.Debug.GAME_SPEED"] = 1, e["GameConstants.Debug.FSM_LOGGING"] = !1, e["GameConstants.Debug.DEBUG_LOCALIZATION"] = !1, e["GameConstants.Debug.VERBOSE_LOCALIZATION"] = !1, e["GameConstants.Debug.AUTO_RESOLVE_TOWER_BATTLES_ENABLED"] = !1, e["GameConstants.Debug.EDUCATION_ENABLED"] = !0, e["GameConstants.Debug.AUTO_ANSWER_CORRECTLY"] = !1, e["GameConstants.Mailer.TEST_MAIL"] = !1, e["GameConstants.FriendsList.TEST_FRIENDS_LIST"] = !1, e["GameConstants.Features.ENABLE_HOUSE_MOVING"] = !0, e["GameConstants.Features.Wheel.COOLDOWN"] = 5, e["GameConstants.Features.Wheel.DEFAULT_SPINS"] = 1, e["GameConstants.Features.Wheel.MEMBER_SPINS"] = 2, e["GameConstants.Features.Wheel.SPIN_TIME"] = 15e3, e["GameConstants.Features.TwilightWheel.DEFAULT_SPINS"] = 1, e["GameConstants.Features.TwilightWheel.MEMBER_SPINS"] = 2, e["GameConstants.Features.TwilightWheel.SPIN_TIME"] = 15e3, e["GameConstants.Features.SplitTests.PLAY_AT_HOME"] = !0, e["GameConstants.Features.TwilightWheel.RIGGED_REWARD"] = null, e["GameConstants.Features.SplitTests.USER_ID_MOD"] = 4, e["GameConstants.Features.SplitTests.CLASS_ID_MOD"] = 0, e["GameConstants.Features.SplitTests.GRADE_MOD"] = 0, e["GameConstants.Features.SplitTests.GROUP_MOD"] = 4, e["GameConstants.Features.SplitTests.GROUP_SIZE"] = 1e4, e["GameConstants.Battle.VALID_PARENT_EMAIL_STARS_PERCENTAGE"] = 1.05, e["GameConstants.Battle.MAX_NUM_PETS"] = 1, e["GameConstants.Battle.ATTACK_OVERRIDE"] = -1, e["GameConstants.Battle.ESCAPE_CHANCE"] = .75, e["GameConstants.Inactivity.DIALOG_TIMER_SECONDS"] = 1500, e["GameConstants.Inactivity.LOG_OUT_TIMER_SECONDS"] = 300, e["GameConstants.Audio.DEFAULT_SOUND_VOLUME"] = .9, e["GameConstants.Audio.DEFAULT_MUSIC_VOLUME"] = .3, e["GameConstants.Audio.DEFAULT_VOICE_VOLUME"] = 1, e["GameConstants.LocationSelection.NONE"] = "none", e["GameConstants.LocationSelection.HOME"] = "home", e["GameConstants.LocationSelection.SCHOOL"] = "school", "undefined" != typeof gameConstantsLocal)
		for (var t in gameConstantsLocal) e[t] = gameConstantsLocal[t];
	return {
		MAX_SAFE_INTEGER: 9007199254740991,
		get: function(t) {
			return e[t]
		},
		setLogLevel: function(t) {
			e["GameConstants.Build.LOG_LEVEL"] = t
		},
		enableDebug: function(t, i, a) {
			var s = CryptoJS.MD5(i);
			"EqEeMbbSqu+ms5NROS97KQ==" === s.toString(CryptoJS.enc.Base64) && (e["GameConstants.Build.DEBUG"] = !0, e["GameConstants.Build.SHOW_FPS"] = Util.isDefined(a) && a, t.prodigy.debug.enableDebugCalls(t, !1))
		},
		setNightWOWRewardIndex: function(t, i) {
			e["GameConstants.Features.TwilightWheel.RIGGED_REWARD"] = i
		},
		setDrops: function(t, i) {
			e["GameConstants.Debug.FORCE_DROPS"] = i
		},
		enableGameConstant: function(t, i) {
			e[t] = i
		},
		setAttackOverride: function(t) {
			e["GameConstants.Battle.ATTACK_OVERRIDE"] = t
		},
		setEscapeChance: function(t) {
			e["GameConstants.Battle.ESCAPE_CHANCE"] = t
		},
		scaleEncounterDistance: function(t) {
			e["GameConstants.Debug.SCALE_ENCOUNTER_DISTANCE"] = t
		},
		setGameSpeed: function(t) {
			e["GameConstants.Debug.GAME_SPEED"] = t
		}
	}
}();
Prodigy.Container.PlayerContainerAnimations = {
	stand: {
		loop: !0,
		head: {
			y: {
				interval: 30,
				frames: [0, -.2, -.4, -.6, -.8, -1, -1.2, -1.4, -1.6, -1.8, -2, -2.2, -2.4, -2.6, -2.8, -3, -2.8, -2.6, -2.4, -2.2, -2, -1.8, -1.6, -1.4, -1.2, -1, -.8, -.6, -.4, -.3, -.15]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			frameName: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, -.15, -.3, -.45, -.6, -.75, -.9, -1.05, -1.2, -1.35, -1.5, -1.65, -1.8, -1.95, -2.1, -2.25, -2.4, -2.4, -2.2, -2, -1.8, -1.6, -1.4, -1.2, -1, -.8, -.6, -.4, -.3, -.2, -.1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, -.25, -.5, -.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1.75, -1.5, -1.25, -1, -.75, -.5, -.25]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, -.25, -.5, -.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1.75, -1.5, -1.25, -1, -.75, -.5, -.25]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		weapon: {
			x: {
				interval: 93,
				frames: [0, -.1, -.2, -.3, -.4, -.5, -.4, -.3, -.2, -.1]
			},
			y: {
				interval: 30,
				frames: [0, -.35, -.7, -1.05, -1.4, -1.75, -2.1, -2.45, -2.8, -3.15, -3.5, -3.85, -4.2, -4.55, -4.9, -5.25, -5.25, -4.9, -4.55, -4.2, -3.85, -3.5, -3.15, -2.8, -2.45, -2.1, -1.75, -1.4, -1.05, -.7, -.35]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		}
	},
	standFloat: {
		loop: !0,
		head: {
			y: {
				interval: 30,
				frames: [0, -.2, -.4, -.6, -.8, -1, -1.2, -1.4, -1.6, -1.8, -2, -2.2, -2.4, -2.6, -2.8, -3, -2.8, -2.6, -2.4, -2.2, -2, -1.8, -1.6, -1.4, -1.2, -1, -.8, -.6, -.4, -.3, -.15]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			frameName: {
				interval: 1e4,
				frames: [3]
			},
			y: {
				interval: 30,
				frames: [0, .1, .2, .3, .4, .5, .6, .7, .8, .9, .9, .85, .8, .75, .7, .65, .6, .55, .5, .45, .4, .35, .3, .25, .2, .15, .1, .05, 0, -.05, -.05]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, -.15, -.3, -.45, -.6, -.75, -.9, -1.05, -1.2, -1.35, -1.5, -1.65, -1.8, -1.95, -2.1, -2.25, -2.4, -2.4, -2.2, -2, -1.8, -1.6, -1.4, -1.2, -1, -.8, -.6, -.4, -.3, -.2, -.1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, -.25, -.5, -.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1.75, -1.5, -1.25, -1, -.75, -.5, -.25]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, -.25, -.5, -.75, -1, -1.25, -1.5, -1.75, -2, -2.25, -2.5, -2.75, -3, -3.25, -3.5, -3.75, -3.75, -3.5, -3.25, -3, -2.75, -2.5, -2.25, -2, -1.75, -1.5, -1.25, -1, -.75, -.5, -.25]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		weapon: {
			x: {
				interval: 93,
				frames: [0, -.1, -.2, -.3, -.4, -.5, -.4, -.3, -.2, -.1]
			},
			y: {
				interval: 30,
				frames: [0, -.35, -.7, -1.05, -1.4, -1.75, -2.1, -2.45, -2.8, -3.15, -3.5, -3.85, -4.2, -4.55, -4.9, -5.25, -5.25, -4.9, -4.55, -4.2, -3.85, -3.5, -3.15, -2.8, -2.45, -2.1, -1.75, -1.4, -1.05, -.7, -.35]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		}
	},
	walk: {
		loop: !0,
		head: {
			y: {
				interval: 30,
				frames: [0, -1, -2, -2.6, -2.4, -2.2, -2, -1.8, -.5, .2, 1.2, 1.4, 1.5, 1.6]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, -.4, -.8, -1, -1.2, -1.5, -1.5, -1.6, -.6, .6, 1.6, 1.5, 1.4, 1.3]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, -.6, -1.3, -1.7, -2, -2.5, -2.4, -2.3, -1, .2, 1.5, 1.7, 1.9, 2]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, -.6, -1.3, -1.7, -2, -2.5, -2.4, -2.3, -1, .2, 1.5, 1.7, 1.9, 2]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		weapon: {
			y: {
				interval: 30,
				frames: [0, -.7, -1.4, -1.9, -2.4, -2.8, -2.8, -2.7, -1.4, -.1, 1.2, 1.3, 1.4, 1.5]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			frameName: {
				interval: 80,
				frames: [1, 2, 3, 4]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			}
		}
	},
	walkFloat: {
		loop: !0,
		head: {
			y: {
				interval: 30,
				frames: [-.4, 0, .5, 1, 1.4, 1.9, 2.3, 2.1, 2, 1.8, 1.2, .6, .4, .2, 0, 0, -.1, -.2]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [1.3, 1.5, 1.7, 1.9, 2, 2.2, 2.4, 2.5, 2.7, 2.9, 2.6, 2.3, 1.9, 1.6, 1.3, 1.2, 1.1, 1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [1.3, 1.5, 1.7, 1.9, 2, 2.2, 2.4, 2.5, 2.7, 2.9, 2.6, 2.3, 1.9, 1.6, 1.3, 1.2, 1.1, 1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [1.3, 1.5, 1.7, 1.9, 2, 2.2, 2.4, 2.5, 2.7, 2.9, 2.6, 2.3, 1.9, 1.6, 1.3, 1.2, 1.1, 1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		weapon: {
			y: {
				interval: 30,
				frames: [1.3, 1.5, 1.7, 1.9, 2, 2.2, 2.4, 2.5, 2.7, 2.9, 2.6, 2.3, 1.9, 1.6, 1.3, 1.2, 1.1, 1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			y: {
				interval: 30,
				frames: [-0, -.3, -.6, -.9, -1.2, -1.5, -1.8, -2.1, -1.9, -1.7, -1.5, -1.3, -1.1, -.9, -.7, -.5, -.3, -.1]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			frameName: {
				interval: 1e4,
				frames: [3]
			},
			angle: {
				interval: 1e4,
				frames: [15]
			}
		}
	},
	dig: {
		loop: !1,
		head: {
			x: {
				interval: 30,
				frames: [-4.4, -1, 2.2, 5.6, 5.4, 5.2, 5, 4.9, 4.7, 4.5, 4.4, 4.2, 4, 3.9, 3.8, 3.6, 2.8, 1.4, .6, -.1, -.9, -1.6, -2.4, -3.1, 0]
			},
			y: {
				interval: 30,
				frames: [.4, .2, .9, 1.6, 1.5, 1.4, 1.3, 1.2, 1, 1, .9, .8, .8, .8, .8, .8, .6, .2, 0, -.2, -.4, -.6, -.8, -1, 0]
			},
			angle: {
				interval: 30,
				frames: [-4, 0, 2, 6, 10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 6, 5, 4, 3, 2, 1, 0, 0]
			}
		},
		shirt: {
			angle: {
				interval: 30,
				frames: [0, 5, 11, 17, 16, 16, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 11, 10, 9, 8, 7, 6, 4, 2, 0]
			},
			x: {
				interval: 30,
				frames: [0, .9, 1.8, 2.7, 2.5, 2.5, 2.4, 2.2, 2.1, 2, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.2, 1.1, 1, .9, .8, .7, .6, .4, 0]
			},
			y: {
				interval: 30,
				frames: [0, .5, 1, 1.5, 1.5, 1.4, 1.3, 1.3, 1.2, 1.1, 1, 1, .9, .8, .8, .7, .6, .5, .5, .4, .3, .3, .2, .1, 0]
			}
		},
		rightArm: {
			angle: {
				interval: 30,
				frames: [0, 11, 22, 34, 40, 45, 42, 38, 35, 32, 29, 25, 22, 19, 15, 12, 8, 4, 0, -4, -8, -12, -16, -20, -24]
			},
			x: {
				interval: 30,
				frames: [0, 2.4, 4.9, 7.4, 7, 6.8, 6.5, 6.2, 5.9, 5.7, 5.4, 5.1, 4.8, 4.6, 4.3, 4, 3.5, 3.1, 2.7, 2.3, 1.8, 1.4, 1, .6, .2]
			}
		},
		leftArm: {
			angle: {
				interval: 30,
				frames: [0, 5, 10, 15, 15, 20, 18, 16, 16, 15, 13, 12, 10, 9, 6, 3, 0, -4, -7, -11, -14, -18, -22, -25, -29]
			},
			x: {
				interval: 30,
				frames: [0, 2.4, 4.6, 6.8, 6.6, 6.4, 6.2, 6, 5.8, 5.6, 5.4, 5.2, 5, 4.9, 4.7, 4.5, 4, 3.7, 3.3, 2.9, 2.6, 2.2, 1.7, 1.4, .9]
			},
			y: {
				interval: 30,
				frames: [0, 1.2, 2.4, 3.9, 3.7, 3.6, 3.5, 3.3, 3.2, 3, 2.9, 2.8, 2.6, 2.5, 2.4, 2.3, 2, 1.8, 1.5, 1.3, 1.1, .9, .7, .5, .2]
			}
		},
		legs: {
			frameName: {
				interval: 1e4,
				frames: [1]
			},
			y: {
				interval: 1e4,
				frames: [0]
			}
		},
		weapon: {
			x: {
				interval: 30,
				frames: [-25.2, -24.5, -23.8, -22.9, -23.5, -24.8, -24.6, -24.3, -24.2, -24, -23.8, -23.7, -23.5, -22.8, -22.1, -21.5, -20.9, -20.2, -19.6, -18.9, -18.3, -17.7, -17.1, -16.6, -16.2]
			},
			y: {
				interval: 30,
				frames: [.4, .1, -.6, -1.3, -1.4, -3.4, -3.1, -2.8, -2.6, -2.3, -2, -1.8, -1.6, -1.4, -1, -.6, -.2, 0, .3, .4, .4, .4, .2, 0, 0, -.5]
			},
			angle: {
				interval: 30,
				frames: [45, 46, 60, 67, 68, 75, 74, 73, 72, 70, 69, 68, 67, 66, 64, 61, 59, 55, 53, 50, 47, 43, 41, 38, 35, 33]
			}
		}
	},
	attack: {
		loop: !1,
		head: {
			y: {
				interval: 30,
				frames: [0, -.1, -.1, -.2, -.2, -.3, .3, .8, 1.4, 2.6, 0, -2.7, -5.4, -8, -10.7, -13.5, -16.1, -18.8, -21.5, -24.2, -26, -28, -24.8, -21.5, -18.3, -15, -11.8, -8.6, -5.4, -2, 1.5, 2, 2, 1.8, 1, 0, -.4, -.8, -.6, -.4, -.2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.2, -4.4, -6.6, -8.7, -10.9, -13.1, -15.3, -17.5, -19.7, -21.9, -24.1, -26.27, -23.3, -20.3, -17.4, -14.4, -11.5, -8.5, -5.5, -2.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			},
			frameName: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 28, 36, 44, 52, 60, 68, 76, 84, 92, 100, 93, 86, 79, 72, 65, 58, 51, 44, 37, 30, 23, 16, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, -8, -16, -24, -32, -40, -48, -56, -64, -72, -80, -85, -90, -95, -100, -104, -107, -97, -87, -77, -67, -57, -47, -37, -27, -17, -7, -5, -3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		weapon: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .9, .2, -.7, -1, 8, -3, -7.7, -12.4, -17.13, -21.9, -26.6, -31.3, -35.8, -40.3, -44.5, -48.6, -48.3, -47.7, -41.6, -35.3, -28.9, -22.6, -16.5, -12.8, -9.1, -5.5, -1.8, 0, -.2, -.6, -1, -1.4, -1.8, -2.3, -2.6, -3, -2.9, -2.8, -2.4, -2, -1.5, -1, -.5, 0]
			},
			x: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 1.5, 3, 4.2, 5.2, 5.9, 6.4, 6.5, 6.4, 6, 5.4, 4.5, 3.3, 1.9, .4, 2.7, 4.5, 5.7, 6.4, 6.5, 5.8, 4.7, 4.5, 4.2, 3.9, 3.6, 3.6, 3.5, 3.5, 3.5, 3.4, 3.4, 3.3, 3.3, 3.3, 3.2, 3.2, 3.1, 2.9, 2.5, 2, 1.5, 1, .5, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, -8, -15, -23, -31, -37, -46, -54, -62, -69, -77, -84, -92, -100, -73, -58, -43, -28, -13, 2, 17, 32, 37, 43, 48, 53, 58, 55, 52, 49, 45, 42, 38, 35, 32, 29, 25, 22, 18, 15, 12, 9, 6, 3, 0]
			}
		}
	},
	attackFloat: {
		loop: !1,
		head: {
			y: {
				interval: 30,
				frames: [0, -.1, -.1, -.2, -.2, -.3, .3, .8, 1.4, 2.6, 0, -2.7, -5.4, -8, -10.7, -13.5, -16.1, -18.8, -21.5, -24.2, -26, -28, -24.8, -21.5, -18.3, -15, -11.8, -8.6, -5.4, -2, 1.5, 2, 2, 1.8, 1, 0, -.4, -.8, -.6, -.4, -.2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.2, -4.4, -6.6, -8.7, -10.9, -13.1, -15.3, -17.5, -19.7, -21.9, -24.1, -26.27, -23.3, -20.3, -17.4, -14.4, -11.5, -8.5, -5.5, -2.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			},
			frameName: {
				interval: 1e4,
				frames: [3]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, -1, -2, -3, -5, -8, -10, -12, -14, -16, -18, -20, -22, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 28, 36, 44, 52, 60, 68, 76, 84, 92, 100, 93, 86, 79, 72, 65, 58, 51, 44, 37, 30, 23, 16, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, -8, -16, -24, -32, -40, -48, -56, -64, -72, -80, -85, -90, -95, -100, -104, -107, -97, -87, -77, -67, -57, -47, -37, -27, -17, -7, -5, -3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		weapon: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .9, .2, -.7, -1, 8, -3, -7.7, -12.4, -17.13, -21.9, -26.6, -31.3, -35.8, -40.3, -44.5, -48.6, -48.3, -47.7, -41.6, -35.3, -28.9, -22.6, -16.5, -12.8, -9.1, -5.5, -1.8, 0, -.2, -.6, -1, -1.4, -1.8, -2.3, -2.6, -3, -2.9, -2.8, -2.4, -2, -1.5, -1, -.5, 0]
			},
			x: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 1.5, 3, 4.2, 5.2, 5.9, 6.4, 6.5, 6.4, 6, 5.4, 4.5, 3.3, 1.9, .4, 2.7, 4.5, 5.7, 6.4, 6.5, 5.8, 4.7, 4.5, 4.2, 3.9, 3.6, 3.6, 3.5, 3.5, 3.5, 3.4, 3.4, 3.3, 3.3, 3.3, 3.2, 3.2, 3.1, 2.9, 2.5, 2, 1.5, 1, .5, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, -8, -15, -23, -31, -37, -46, -54, -62, -69, -77, -84, -92, -100, -73, -58, -43, -28, -13, 2, 17, 32, 37, 43, 48, 53, 58, 55, 52, 49, 45, 42, 38, 35, 32, 29, 25, 22, 18, 15, 12, 9, 6, 3, 0]
			}
		}
	},
	attackBig: {
		loop: !1,
		head: {
			y: {
				interval: 30,
				frames: [0, -.1, -.1, -.2, -.2, -.3, .3, .8, 1.4, 2.6, 0, -2.7, -5.4, -8, -10.7, -13.5, -16.1, -18.8, -21.5, -24.2, -26, -28, -24.8, -21.5, -18.3, -15, -11.8, -8.6, -5.4, -2, 1.5, 2, 2, 1.8, 1, 0, -.4, -.8, -.6, -.4, -.2, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		shirt: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		legs: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.2, -4.4, -6.6, -8.7, -10.9, -13.1, -15.3, -17.5, -19.7, -21.9, -24.1, -26.27, -23.3, -20.3, -17.4, -14.4, -11.5, -8.5, -5.5, -2.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			},
			frameName: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		rightArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 28, 36, 44, 52, 60, 68, 76, 84, 92, 100, 93, 86, 79, 72, 65, 58, 51, 44, 37, 30, 23, 16, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		leftArm: {
			y: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, .6, 1.2, 1.8, 2.4, 3, .3, -2.3, -5, -7.7, -10.4, -13, -15.8, -18.4, -21.1, -23.8, -25.7, -27.6, -24.4, -21.1, -17.9, -14.7, -11.5, -8.2, -5, -1.5, 1.4, 1.7, 1.2, .8, .4, .3, .2, .1, 0, -.1, -.2, -.3, -.3, -.2, -.2, -.1, -.1, 0, 0]
			},
			angle: {
				interval: 30,
				frames: [0, 0, 0, 0, 0, 0, 0, -8, -16, -24, -32, -40, -48, -56, -64, -72, -80, -85, -90, -95, -100, -104, -107, -97, -87, -77, -67, -57, -47, -37, -27, -17, -7, -5, -3, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		weapon: {
			angle: {
				interval: 30,
				frames: [23, 24, 26, 27, 29, 30, 32, 33, 25, 16, 8, 0, -8, -16, -25, -33, -29, -26, -20, -15, -9, -3, 3, 8.5, 14, 22, 26, 31, 36, 40, 43, 43, 44, 45, 45, 46, 47, 48, 49, 47, 45, 43, 42, 40, 41, 42, 42, 43, 44, 45]
			},
			x: {
				interval: 30,
				frames: [-26.1, -27.6, -29.2, -31, -32.7, -34.6, -36.6, -38.6, -35, -31.6, -28.7, -26.6, -25.1, -24, -23.5, -23.5, -23.5, -23.5, -23, -22.4, -22, -22, -21.4, -21.4, -21.7, -22.2, -24.1, -26, -28, -30.3, -32.7, -32, -33, -33, -33, -34, -34, -34.3, -34.6, -36.5, -38.5, -40.4, -42.3, -44.2, -38.2, -32.3, -27, -21, -16, -6]
			},
			y: {
				interval: 30,
				frames: [13.5, 14.6, 15.7, 16.6, 17.4, 18, 18.5, 18.8, 19.8, 19.8, 19.1, 17, 14.7, 5.2, -4.2, -13.4, -21.5, -29.6, -36, -42.2, -37, -31.6, -26, -19.9, -13.6, -7.1, -2, 3, 8, 12, 15.8, 15.2, 15, 15, 15, 15, 15, 14.7, 14.6, 14.5, 14.3, 14, 14, 13.4, 15.2, 16, 16, 15, 15, 12.4]
			}
		}
	},
	moonwalkfemale: {
		loop: !0,
		rightArm: {
			x: {
				interval: 40,
				frames: [0, .5, 1, 1.4, 1.9, 1.5, 1, .5, 0, .4, .9, 1.4, 1.9, 1.5, 1, .5, 0, .4, .9, 1.4, 2, 1.5, 1, .5, 0, .4, .9, 1.5, 2, 1.5, 1, .5, 0, .4, 1, 1.5, 2.1, 1.6, 1, .4, -.2, .4, 1, 1.6, 2.3, 1.6, .8, 0, -.9]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			}
		},
		character: {
			x: {
				interval: 40,
				frames: [0, -1.2, -2.4, -3.6, -4.8, -6, -7.2, -8.4, -9.6, -11.2, -12.4, -13.6, -14.8, -16, -17.2, -18.4, -19.6, -21.2, -22.4, -23.6, -24.8, -26, -27.2, -28.4, -29.6, -28.8, -27.6, -26.4, -25.2, -24, -22.8, -21.6, -20.4, -18.8, -17.6, -16.4, -15.2, -14, -12.8, -11.6, -10.4, -8.8, -7.6, -6.4, -5.2, -4, -2.8, -1.6, -.4]
			},
			xScale: {
				interval: 40,
				frames: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
			}
		},
		head: {
			y: {
				interval: 40,
				frames: [0, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, -2]
			}
		},
		leftArm: {
			x: {
				interval: 40,
				frames: [0, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4]
			}
		}
	},
	moonwalkmale: {
		loop: !0,
		rightArm: {
			x: {
				interval: 40,
				frames: [0, .5, 1, 1.4, 1.9, 1.5, 1, .5, 0, .4, .9, 1.4, 1.9, 1.5, 1, .5, 0, .4, .9, 1.4, 2, 1.5, 1, .5, 0, .4, .9, 1.5, 2, 1.5, 1, .5, 0, .4, 1, 1.5, 2.1, 1.6, 1, .4, -.2, .4, 1, 1.6, 2.3, 1.6, .8, 0, -.9]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			}
		},
		character: {
			x: {
				interval: 40,
				frames: [0, -1.2, -2.4, -3.6, -4.8, -6, -7.2, -8.4, -9.6, -11.2, -12.4, -13.6, -14.8, -16, -17.2, -18.4, -19.6, -21.2, -22.4, -23.6, -24.8, -26, -27.2, -28.4, -29.6, -28.8, -27.6, -26.4, -25.2, -24, -22.8, -21.6, -20.4, -18.8, -17.6, -16.4, -15.2, -14, -12.8, -11.6, -10.4, -8.8, -7.6, -6.4, -5.2, -4, -2.8, -1.6, -.4]
			},
			xScale: {
				interval: 40,
				frames: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
			}
		},
		head: {
			y: {
				interval: 40,
				frames: [0, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1, -.5, -1, -1.4, -1.9, -1.5, -1, -.6, -.1]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, 0, 0, -2, -2, -2, -2, -2]
			}
		},
		leftArm: {
			x: {
				interval: 40,
				frames: [0, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4]
			}
		}
	},
	runningMan: {
		loop: !0,
		character: {
			x: {
				interval: 40,
				frames: [0, 0, 2.67, 2.67, 4.67, 4.67, 6.67, 8.67, 8.67, 8.67, 8.67, 8.67, 7.67, 6.67, 5.67, 4.67, 2.67, 2.67, 0, 0, 0, 0]
			}
		},
		leftArm: {
			x: {
				interval: 1e4,
				frames: [-1.31]
			},
			y: {
				interval: 1e4,
				frames: [1.52]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 40,
				frames: [-18.45, -13.9, -9.4, -4.8, -.3, -2.4, -5.3, -8.1, -10.9, -13.7, -16.5, -27.2, -36, -44.7, -53.5, -62.3, -59.3, -49.1, -38.9, -28.7]
			}
		},
		rightArm: {
			x: {
				interval: 1e4,
				frames: [-1]
			},
			y: {
				interval: 1e4,
				frames: [-1]
			},
			angle: {
				interval: 40,
				frames: [.39, -5.4, -11.3, -17.1, -23, -28.8, -26.8, -20, -13.2, -6.4, 13.8, 27.2, 40.6, 54, 67.3, 62.8, 47.2, 31.6, 16, 8]
			}
		},
		head: {
			y: {
				interval: 40,
				frames: [-2, -1.5, -1.1, -.6, -.2, .3, .7, .3, -.4, -1.2, -1.9, -1.6, -1.1, -.7, -.2, .2, .7, .3, -.4, -1.2, -1.9]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			},
			x: {
				interval: 1e4,
				frames: [0]
			}
		},
		shirt: {
			y: {
				interval: 40,
				frames: [-2, -1.7, -1.4, -1.1, -.8, -.5, -.2, -.5, -1, -1.4, -1.9, -1.8, -1.6, -1.4, -1.2, -1, -.8, -1.2, -1.8, -2.3, -2.9]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4]
			}
		}
	},
	hammermale: {
		loop: !0,
		character: {
			x: {
				interval: 40,
				frames: [0, .4, .7, 1.1, 1.4, 1.8, 2.2, 2.5, 2.9, 3.9, 4.8, 5.7, 6.9, 7.8, 8.7, 9.9, 10.8, 11.7, 12.9, 13.8, 14.7, 15.9, 16.8, 17.7, 17.4, 16.8, 16.2, 15.6, 14.1, 13.2, 12.3, 11.1, 10.2, 9.3, 8.1, 7.2, 6.3, 5.1, 4.2, 3.3, 2.1, 1.2, .3, 0, 0, 0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			}
		},
		head: {
			x: {
				interval: 40,
				frames: [0, .4, .8, 1.6, 2.4, 2.8, 2.4, 1.6, 1.2, .4, -.4, -.8, -1.6, -2.4, -2.8, -2.4, -1.6, -1.2, -.4, .4, .8, 1.6, 2.4, 2.8, 2.4, 1.6, 1.2, .4, -.4, -.8, -1.6, -2.4, -2.8, -2.4, -1.6, -1.2, -.4]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			x: {
				interval: 40,
				frames: [0, .2, .3, .5, .6, .8, 1, 1.1, 1.3, 1.4, 1.6, 1.8, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, -.1, -.1, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			},
			angle: {
				interval: 40,
				frames: [0, 8.7, 17.4, 26, 34.7, 43.4, 52.1, 60.7, 69.4, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 54.9, 37.6, 20.3, 3]
			}
		},
		leftArm: {
			x: {
				interval: 40,
				frames: [0, .2, .3, .5, .6, .8, 1, 1.1, 1.3, 1.4, 1.6, 1.8, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.9, -13.8, -20.6, -27.5, -34.4, -41.3, -48.2, -55, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -43.6, -29.8, -16.1, -2.4]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [2, 2, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0]
			}
		}
	},
	hammerfemale: {
		loop: !0,
		character: {
			x: {
				interval: 40,
				frames: [0, .4, .7, 1.1, 1.4, 1.8, 2.2, 2.5, 2.9, 3.9, 4.8, 5.7, 6.9, 7.8, 8.7, 9.9, 10.8, 11.7, 12.9, 13.8, 14.7, 15.9, 16.8, 17.7, 17.4, 16.8, 16.2, 15.6, 14.1, 13.2, 12.3, 11.1, 10.2, 9.3, 8.1, 7.2, 6.3, 5.1, 4.2, 3.3, 2.1, 1.2, .3, 0, 0, 0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			}
		},
		head: {
			x: {
				interval: 40,
				frames: [0, .4, .8, 1.6, 2.4, 2.8, 2.4, 1.6, 1.2, .4, -.4, -.8, -1.6, -2.4, -2.8, -2.4, -1.6, -1.2, -.4, .4, .8, 1.6, 2.4, 2.8, 2.4, 1.6, 1.2, .4, -.4, -.8, -1.6, -2.4, -2.8, -2.4, -1.6, -1.2, -.4]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			}
		},
		rightArm: {
			x: {
				interval: 40,
				frames: [0, .2, .3, .5, .6, .8, 1, 1.1, 1.3, 1.4, 1.6, 1.8, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, -.1, -.1, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0, 0, 0, -.1, -.1, -.1, 0, 0, 0]
			},
			angle: {
				interval: 40,
				frames: [0, 8.7, 17.4, 26, 34.7, 43.4, 52.1, 60.7, 69.4, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 72.2, 54.9, 37.6, 20.3, 3]
			}
		},
		leftArm: {
			x: {
				interval: 40,
				frames: [0, .2, .3, .5, .6, .8, 1, 1.1, 1.3, 1.4, 1.6, 1.8, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1, .5, 1, 1.4, 1.9, 1.5, 1, .6, .1]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.9, -13.8, -20.6, -27.5, -34.4, -41.3, -48.2, -55, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -57.3, -43.6, -29.8, -16.1, -2.4]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [1, 1, 1, 1, 1, 1, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 1, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4]
			}
		}
	},
	shimmy: {
		loop: !0,
		rightArm: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [.13, -17, -34.2, -51.4, -68.5, -103, -120.4, -118.4, -107.8, -97.1, -86.5, -93.9, -111.9, -129.9, -118.2, -100.6, -83.1, -68.4, -59.5, -50.6, -41.7, -51.9, -63.6, -75.3, -68.8, -58.5, -48.2, -37.9, -43, -58.4, -73.8, -64.6, -50, -35.4, -41.8, -53, -64.2, -75.3, -72.4, -67.5, -62.6, -57.7, -52.9, -48, -43.1, -38.2, -33.3, -28.5, -23.6, -18.7, -13.8, -8.9, -4]
			}
		},
		leftArm: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -10.3, -20.6, -30.8, -41.1, -56.6, -61.8, -51.3, -38.2, -25.1, -12, -17.9, -36.9, -55.9, -45.1, -28.1, -11.1, -19.3, -32.9, -46.6, -60.2, -41.8, -21, -.2, -7.5, -21.5, -35.5, -49.5, -42.2, -20.9, .4, -14, -35.9, -57.7, -61, -57.1, -53.2, -49.3, -45.4, -41.5, -37.6, -33.8, -29.9, -26, -22.1, -18.2, -14.3, -10.4, -6.6, -2.7, 1.2, 5.1, 9]
			}
		},
		head: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 40,
				frames: [0, .4, .8, 1.2, 1.7, 1.2, .4, .7, 1.3, 2, 2.6, 2, .8, -.5, .2, 1.2, 2.3, 1.9, 1.1, .3, -.5, .4, 1.5, 2.5, 2.1, 1.3, .6, -.2, -.1, .7, 1.5, 1.4, 1.1, .8, 1.1, 1.5, 1.9, 2.4, 2.3, 2.1, 2, 1.8, 1.7, 1.5, 1.4, 1.3, 1.1, 1, .8, .7, .5, .4, .2]
			},
			angle: {
				interval: 1e4,
				frames: [0]
			},
			xScale: {
				interval: 1e4,
				frames: [1]
			},
			yScale: {
				interval: 1e4,
				frames: [1]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		}
	},
	dabfemale: {
		loop: !0,
		character: {
			xScale: {
				interval: 2040,
				frames: [1, -1]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
			},
			x: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6, -2.6]
			}
		},
		rightArm: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.7, -13.4, -20.2, -26.9, -33.6, -40.3, -47.1, -60.8, -70.5, -80.2, -90.9, -100.7, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120]
			}
		},
		leftArm: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.1, -12.2, -18.4, -24.5, -30.6, -36.7, -42.9, -49, -55.1, -61.2, -67.3, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80]
			}
		},
		head: {
			x: {
				interval: 40,
				frames: [0, -.2, -.4, -.6, -.8, -1, -1.3, -1.5, -1.7, -1.9, -2.1, -2.3, -2.3, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12]
			},
			y: {
				interval: 40,
				frames: [0, -.4, -.7, -1.1, -1.5, -1.9, -2.2, -2.6, -3, -3, -3, -3, -3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
			},
			xScale: {
				interval: 40,
				frames: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
			},
			angle: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94]
			}
		},
		shirt: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 40,
				frames: [0, -.3, -.5, -.8, -1.1, -1.4, -1.6, -1.9, -2.2, -2.4, -2.7, -3, 1, .9, .7, .6, .5, .3, .2, 0, .1, .1, .2, .3, .3, .4, .5, .5, .6, .7, .7, .8, .9, .9, 1, 1.1, 1, .9, .8, .7, .6, .5, .4, .3, .2, .1, 0, 0, 0, 0, 0]
			}
		}
	},
	dabmale: {
		loop: !0,
		character: {
			xScale: {
				interval: 2040,
				frames: [1, -1]
			}
		},
		legs: {
			frameName: {
				interval: 40,
				frames: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			}
		},
		rightArm: {
			x: {
				interval: 1e4,
				frames: [-2]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.7, -13.4, -20.2, -26.9, -33.6, -40.3, -47.1, -60.8, -70.5, -80.2, -90.9, -100.7, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120, -120]
			}
		},
		leftArm: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 1e4,
				frames: [0]
			},
			angle: {
				interval: 40,
				frames: [0, -6.1, -12.2, -18.4, -24.5, -30.6, -36.7, -42.9, -49, -55.1, -61.2, -67.3, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80]
			}
		},
		head: {
			x: {
				interval: 40,
				frames: [0, -.2, -.4, -.6, -.8, -1, -1.3, -1.5, -1.7, -1.9, -2.1, -2.3, -2.3, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12]
			},
			y: {
				interval: 40,
				frames: [0, -.4, -.7, -1.1, -1.5, -1.9, -2.2, -2.6, -3, -3, -3, -3, -3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
			},
			xScale: {
				interval: 40,
				frames: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
			},
			angle: {
				interval: 40,
				frames: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94, -15.94]
			}
		},
		shirt: {
			x: {
				interval: 1e4,
				frames: [0]
			},
			y: {
				interval: 40,
				frames: [0, -.3, -.5, -.8, -1.1, -1.4, -1.6, -1.9, -2.2, -2.4, -2.7, -3, 1, .9, .7, .6, .5, .3, .2, 0, .1, .1, .2, .3, .3, .4, .5, .5, .6, .7, .7, .8, .9, .9, 1, 1.1, 1, .9, .8, .7, .6, .5, .4, .3, .2, .1, 0, 0, 0, 0, 0]
			}
		}
	},
	floatDig: {},
	setup: {}
}, Util.capitalize = function(e) {
	return Util.isDefined(e) ? e.charAt(0).toUpperCase() + e.slice(1) : ""
}, Util.setCookie = function(e, t, i) {
	var a = new Date;
	a.setTime(a.getTime() + 24 * i * 60 * 60 * 1e3);
	var s = "expires=" + a.toUTCString();
	document.cookie = e + "=" + t + "; " + s
}, Util.getDate = function() {
	var e = new Date,
		t = e.getDate(),
		i = e.getMonth() + 1,
		a = e.getFullYear();
	return 10 > t && (t = "0" + t), 10 > i && (i = "0" + i), i + "" + t + a
}, Util.DEBUG_DAY_LENGTH = 864e5, Util.getDateId = function() {
	return GameConstants.get("GameConstants.Build.DEBUG") ? Math.floor((new Date).getTime() / Util.DEBUG_DAY_LENGTH) : Math.floor((new Date).getTime() / 864e5)
}, Util.isDateToday = function(e) {
	var t = new Date;
	return e.getUTCDate() == t.getUTCDate() && e.getUTCMonth() == t.getUTCMonth() && e.getUTCFullYear() == t.getUTCFullYear()
}, Util.elapsedTimeInHours = function(e, t) {
	return (t - e) / 36e5
}, Util.getCookie = function(e) {
	e += "=";
	for (var t = document.cookie.split(";"), i = 0; i < t.length; i++) {
		for (var a = t[i];
			" " == a.charAt(0);) a = a.substring(1);
		if (0 == a.indexOf(e)) return a.substring(e.length, a.length)
	}
	return ""
}, Util.convertItemToIcon = function(e) {
	return "gold" === e.type ? "item/26" : "spell" === e.type ? (e.data = e.data || Items.getItemData(e.type, e.ID), e.data.element) : "boss" === e.type ? "boss" : "player" === e.type ? "player" : "dorm" === e.type ? "" + e.ID : Util.isDefined(e.metadata) && Util.isDefined(e.metadata.icon) ? "" + e.metadata.icon : Util.isDefined(e.type) && Util.isDefined(e.ID) ? e.type + "/" + e.ID : Util.isDefined(e.tag) ? e.tag : "string" == typeof e ? e : "empty"
}, Util.numberToString = function(e) {
	e = "" + e;
	for (var t = "", i = 1, a = e.length - 1; a >= 0; a--) t = e.charAt(a) + t, i % 3 === 0 && i > 0 && a > 0 && (t = "," + t), i++;
	return t
}, Util.isSchoolHours = function() {
	var e = new Date,
		t = e.getHours();
	return t >= 8 && 15 >= t
}, Util.isSchoolDay = function() {
	var e = new Date,
		t = e.getDay();
	return 0 !== t && 6 !== t
}, Util.isNightTime = function() {
	return Prodigy.Lodash.inRange((new Date).getHours(), 16, 23)
}, Util.isDefined = function(e) {
	return !("undefined" == typeof e || null === e || "null" === e)
}, Util.isNullOrUndefined = function(e) {
	return null === e || void 0 === e
}, Util.has = function(e, t) {
	if (Util.isDefined(e)) {
		for (var i = t.split("."), a = 0; a < i.length; a++)
			if (e = e[i[a]], "undefined" == typeof e || null === e || "null" === e) return !1;
		return !0
	}
	return !1
}, Util.isString = function(e) {
	return "string" == typeof e || e instanceof String
}, Util.getDateTime = function() {
	var e = new Date;
	return new Date(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDay()).getTime()
}, Util.highlightAll = function(e, t, i, a) {
	for (var s = 0; s < e.length; s++) Util.isDefined(e[s].highlight) && e[s].highlight(t, i, a)
}, Util.getObject = function(e) {
	return "null" === e ? null : Util.isString(e) ? JSON.parse(e) : e
}, Util.copyObject = function(e) {
	var t = {};
	if (null == e || "object" != typeof e) return e;
	if (e instanceof Array) {
		t = [];
		for (var i = 0, a = e.length; a > i; i++) t[i] = Util.copyObject(e[i])
	}
	if (e instanceof Object)
		for (var s in e) e.hasOwnProperty(s) && (t[s] = Util.copyObject(e[s]));
	return t
}, Util.isEmptyObject = function(e) {
	if (!Util.isDefined(e)) return !0;
	for (var t in e)
		if (e.hasOwnProperty(t)) return !1;
	return !0
}, Util.inArray = function(e, t) {
	for (var i = 0; i < e.length; i++)
		if (e[i] === t) return !0;
	return !1
}, Util.removeDuplicates = function(e) {
	for (var t = [], i = 0; i < e.length; i++) Util.inArray(t, e[i]) || t.push(e[i]);
	return t
}, Util.equalArrays = function(e, t) {
	if (e === t) return !0;
	if (null == e || null == t) return !1;
	if (e.length != t.length) return !1;
	for (var i = 0; i < e.length; ++i)
		if (e[i] !== t[i]) return !1;
	return !0
}, Util.strip = function(e) {
	try {
		e = e.replace(/[^a-zA-Z0-9]/g, "")
	} catch (t) {}
	return e
}, Util.getUrlVariable = function(e) {
	{
		var t = {};
		window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(e, i, a) {
			t[i] = a
		})
	}
	return t[e]
}, Util.removeParamsFromUrl = function(e, t) {
	for (var i = e, a = "", s = 0; s < t.length; s++) a = t[s], i = i.replace(new RegExp("([?&]+)" + a + "=[^&]*&*", "gi"), function(e, t) {
		return t
	});
	if (i.length > 0) {
		var r = i[i.length - 1];
		("?" === r || "&" === r) && (i = i.substring(0, i.length - 1))
	}
	return i
}, Util.removeFromArray = function(e, t) {
	for (var i = 0; i < t.length; i++)
		if (t[i] === e) {
			t.splice(i, 1);
			break
		}
}, Util.moveArrayElement = function(e, t, i) {
	if (i >= e.length)
		for (var a = i - e.length; a + 1 !== 0;) e.push(void 0), a -= 1;
	return e.splice(i, 0, e.splice(t, 1)[0]), e
}, Util.centreObject = function(e, t, i, a, s) {
	Util.isDefined(t) && Util.isDefined(a) && (e.x = t - .5 * a), Util.isDefined(i) && Util.isDefined(s) && (e.y = i - .5 * s)
}, Util.getCenteredXY = function(e, t, i, a, s, r) {
	return {
		x: i + .5 * (s - e),
		y: a + .5 * (r - t)
	}
}, Util.processTime = function(e) {
	if (0 >= e) return "00:00";
	var t = Math.floor(e / 36e5),
		i = Math.floor((e - 36e5 * t) / 6e4),
		a = Math.floor((e - 36e5 * t - 6e4 * i) / 1e3);
	return 0 === t ? t = "00" : 10 > t && (t = "0" + t), 0 === i ? i = "00" : 10 > i && (i = "0" + i), 0 === a ? a = "00" : 10 > a && (a = "0" + a), "00" === t ? i + ":" + a : 24 > t ? t + ":" + i + ":" + a : Math.floor(t / 24) + " days"
}, Util.calculateItemSpacing = function(e, t, i) {
	return (i - e * t) / (e + 1)
}, Util.calculateItemCoordinate = function(e, t, i) {
	return (t + i) * e + i
}, Util.centerItemsWithinContainer = function(e, t, i, a, s) {
	var r = {
		width: 0,
		height: 0
	};
	if (Util.isDefined(s)) r.width = s.width, r.height = s.height;
	else {
		for (var n = 0; n < e.length; n++) {
			var o = e[n];
			o.width > r.width && (r.width = o.width), r.height += o.height
		}
		r.height /= e.length
	}
	var h = i ? 0 : t.x,
		l = i ? 0 : t.y;
	Util.isDefined(a) && (h += Util.isDefined(a.x) ? a.x : 0, l += Util.isDefined(a.y) ? a.y : 0);
	var d = Util.calculateItemSpacing(e.length, r.width, t.width),
		c = Util.calculateItemSpacing(1, r.height, t.height),
		p = l + Util.calculateItemCoordinate(0, r.height, c);
	e.forEach(function(e, t) {
		e.x = h + Util.calculateItemCoordinate(t, r.width, d), e.y = p
	})
}, Util.DEV = 1, Util.DEBUG = 2, Util.INFO = 4, Util.ERROR = 8, Util.log = function(e, t) {
	if (t = Util.isDefined(t) ? t : 1, t & GameConstants.get("GameConstants.Build.LOG_LEVEL")) {
		var i = "string" == typeof e;
		switch (t) {
			case 8:
				console.log(i ? "%c[PRODIGY][ERROR] " + e : e, "background: #900; color: #FFF");
				break;
			case 4:
				console.log(i ? "%c[PRODIGY][INFO] " + e : e, "background: #009; color: #FFF");
				break;
			case 2:
				console.log(i ? "[PRODIGY][DEBUG] " + e : e);
				break;
			default:
				console.log(i ? "[PRODIGY][DEV] " + e : e)
		}
	}
}, Util.frameDataToFrameJson = function(e) {
	for (var t = {}, i = 0; i < e.length; i++) t[e[i].name] = {
		frame: {
			x: e[i].x,
			y: e[i].y,
			w: e[i].width,
			h: e[i].height
		},
		trimmed: e[i].trimmed,
		sourceSize: {
			w: e[i].sourceSizeW,
			h: e[i].sourceSizeH
		},
		spriteSourceSize: {
			x: e[i].spriteSourceSizeX,
			y: e[i].spriteSourceSizeY,
			w: e[i].spriteSourceSizeW,
			h: e[i].spriteSourceSizeH
		}
	};
	return {
		frames: t
	}
}, Util.filterDuplicateKeys = function(e, t) {
	for (var i = [], a = 0; a < t.length; a++) {
		var s = t[a];
		"key" === s.type && e.prodigy.player.backpack.hasItem("key", s.ID) || "spell" === s.type && Util.isDefined(e.prodigy.player.data.spells) && -1 !== e.prodigy.player.data.spells.indexOf(s.ID) || i.push(s)
	}
	return i
}, Util.validateVersion = function(e) {
	return /^[0-9-]+$/.test(e) ? e : null
}, Util.trimText = function(e, t, i) {
	return e.length > t && (e = e.substring(0, t), Util.isDefined(i) && i && (e += "...")), e
}, Util.joinByProperty = function(e, t, i) {
	Util.isDefined(i) || (i = ",");
	for (var a = "", s = e.length, r = 0; s > r; r++) a += e[r][t] + (s - 1 > r ? i : "");
	return a
}, Util.rgbArrayToHex = function(e) {
	return this.rgb2hex(e[0], e[1], e[2])
}, Util.rgb2hex = function(e, t, i) {
	return 16777216 + (i | t << 8 | e << 16)
}, Util.cleanUpGameID = function(e) {
	for (var t in e)
		for (var i = 0; i < e[t].length; i++) e[t][i].hasOwnProperty("gameID") && (e[t][i].hasOwnProperty("ID") === !1 && (e[t][i].ID = e[t][i].gameID), delete e[t][i].gameID)
}, Util.getEnvironment = function() {
	switch (window.location.host) {
		case "dev.prodigygame.org":
			return "dev";
		case "stagingpublic.prodigygame.org":
		case "www.prodigygame.org":
		case "prodigygame.org":
			return "staging";
		case "www.prodigygame.com":
		case "prodigygame.com":
			return "production"
	}
	return "dev"
}, Util.getOptionalParameter = function(e, t) {
	return void 0 === e ? t : e
}, Util.isSpineLoaded = function(e, t) {
	if (e.checkTextKey(t + "Atlas") && e.checkJSONKey(t)) {
		for (var i = e.getText(t + "Atlas"), a = /\S+(?:\.png|\.jpg|\.jpeg)/g, s = a.exec(i), r = 0; r < s.length; ++r)
			if (!e.checkImageKey(s[r])) return !1;
		return !0
	}
	return !1
}, Util.getWorldPosition = function(e) {
	var t = 0,
		i = 0;
	if (!Util.isNullOrUndefined(e)) {
		t = e.position.x, i = e.position.y;
		for (var a = e.parent; !Util.isNullOrUndefined(a);) t += a.position.x, i += a.position.y, a = a.parent
	}
	return {
		x: t,
		y: i
	}
}, Util.hilightObjectOnLayer = function(e, t, i, a, s) {
	s = s || a;
	var r = s.add(e.prodigy.create.sprite(t || 0, i || 0, "icons", "help"));
	return r.anchor.setTo(.5, 1), Util.isNullOrUndefined(a) || (r.x += Util.getWorldPosition(a).x - Util.getWorldPosition(s).x, r.y += Util.getWorldPosition(a).y - Util.getWorldPosition(s).y), e.add.tween(r).to({
		y: r.y + 25
	}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), r
}, Prodigy.DrawUtil = {
	createBox: function(e, t, i, a, s, r, n, o) {
		var h = e.add.graphics(0, 0, o);
		return h.beginFill(r, n), h.lineTo(a, 0), h.lineTo(a, s), h.lineTo(0, s), h.lineTo(0, 0), h.x = t, h.y = i, h.endFill(), h
	}
}, Prodigy.Events = {}, Prodigy.Events.VictoryManager = {
	SHOW_DROPS: "Prodigy.Events.VictoryManager.SHOW_DROPS",
	COMPLETE: "Prodigy.Events.VictoryManager.COMPLETE"
}, Prodigy.Events.Screen = {
	ADD_CHILD: "Prodigy.Events.Screen.ADD_CHILD",
	GET_LAYER: "Prodigy.Events.Screen.GET_LAYER"
}, Prodigy.Events.WalkableScreen = {
	PLAYER_ADDED: "Prodigy.Events.WalkableScreen.PLAYER_ADDED",
	PLAYER_UPDATED: "Prodigy.Events.WalkableScreen.PLAYER_UPDATED"
}, Prodigy.Events.FlyingMemberStars = {
	DONE: "Prodigy.Events.FlyingMemberStars.DONE"
}, Prodigy.Events.FlyingPippetStars = {
	DONE: "Prodigy.Events.FlyingPippetStars.DONE"
}, Prodigy.Events.FlyingStars = {
	DONE: "Prodigy.Events.FlyingStars.DONE"
}, Prodigy.Events.Battle = {
	GET_IS_RUNNING: "Prodigy.Events.Battle.GET_IS_RUNNING",
	POPUP_CLOSED: "Prodigy.Events.Battle.POPUP_CLOSED",
	END_BATTLE: "Prodigy.Events.Battle.END_BATTLE",
	APPLY_SLOT_BONUS: "Prodigy.Events.Battle.APPLY_SLOT_BONUS",
	PVP_COMBO_INCREASE: "Prodigy.Events.Battle.PVP_COMBO_INCREASE",
	PVP_COMBO_BREAK: "Prodigy.Events.Battle.PVP_COMBO_BREAK",
	PVP_UPDATE: "Prodigy.Events.Battle.PVP_UPDATE",
	PVP_COMBO_METRE_MOVE_IN: "Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_IN",
	PVP_COMBO_METRE_MOVE_OUT: "Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT"
}, Prodigy.Events.Creature = {
	ANIMATION_DONE: "Prodigy.Events.Creature.ANIMATION_DONE",
	LEVEL_UP: "Prodigy.Events.Creature.LEVEL_UP",
	STARS_ADDED: "Prodigy.Events.Creature.STARS_ADDED",
	PLAYER_LOADED: "Prodigy.Events.Creature.PLAYER_LOADED"
}, Prodigy.Events.Chest = {
	SHOW_PIPPET_BATTLE_BONUS: "Prodigy.Events.Chest.SHOW_PIPPET_BATTLE_BONUS",
	SHOW_MEMBER_STARS: "Prodigy.Events.Chest.SHOW_MEMBER_STARS"
}, Prodigy.Events.Map = {
	ENABLE_DYNAMIC_LAYER: "Prodigy.Events.Map.ENABLE_DYNAMIC_LAYER"
}, Prodigy.Events.NetworkHandlers = {}, Prodigy.Events.NetworkHandlers.SETUP = "Prodigy.Events.NetworkHandlers.SETUP", Prodigy.Events.HUD = {}, Prodigy.Events.HUD.OPEN_CHAT = "Prodigy.Events.HUD.OPEN_CHAT", Prodigy.Events.HUD.CLOSE_CHAT = "Prodigy.Events.HUD.CLOSE_CHAT", Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP = "Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP", Prodigy.Events.HUD.HIDE_CHAT_NOTIF = "Prodigy.Events.HUD.HIDE_CHAT_NOTIF", Prodigy.Events.Mailer = {}, Prodigy.Events.Mailer.GET_TOTAL_MAIL = "Prodigy.Events.Mailer.GET_TOTAL_MAIL", Prodigy.Events.Mailer.GET_ALL_MAIL = "Prodigy.Events.Mailer.GET_ALL_MAIL", Prodigy.Events.Mailer.MARK_AS_READ = "Prodigy.Events.Mailer.MARK_AS_READ", Prodigy.Events.Mailer.DELETE_MAIL = "Prodigy.Events.Mailer.DELETE_MAIL", Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL = "Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL", Prodigy.Events.Mailer.UPDATE_MAIL_COUNTERS = "Prodigy.Events.Mailer.UPDATE_MAIL_COUNTERS", Prodigy.Events.Mailer.SHOW_INDICATOR = "Prodigy.Events.Mailer.SHOW_INDICATOR", Prodigy.Events.Microtransaction = {}, Prodigy.Events.Microtransaction.GET_CONJURE_CUBES = "Prodigy.Events.Microtransaction.GET_CONJURE_CUBES", Prodigy.Events.Microtransaction.RECEIVE_CONJURE_CUBE = "Prodigy.Events.Microtransaction.RECEIVE_CONJURE_CUBE", Prodigy.Events.Microtransaction.MARK_AS_OPEN = "Prodigy.Events.Microtransaction.MARK_AS_OPEN", Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT = "Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT", Prodigy.Events.Microtransaction.QUESTION_ANSWERED = "Prodigy.Events.Microtransaction.QUESTION_ANSWERED", Prodigy.Events.Survey = {}, Prodigy.Events.Survey.ON_GET_DATA_COMPLETE = "Prodigy.Events.Survey.ON_GET_DATA_COMPLETE", Prodigy.Events.Boss = {}, Prodigy.Events.Boss.ON_GET_DATA_COMPLETE = "Prodigy.Events.Boss.ON_GET_DATA_COMPLETE", Prodigy.Events.GameObj = {}, Prodigy.Events.GameObj.UPDATE = "Prodigy.Events.GameObj.UPDATE", Prodigy.Events.GameObj.PLAYER_INITIALIZED = "Prodigy.Events.GameObj.PLAYER_INITIALIZED", Prodigy.Events.Boot = {}, Prodigy.Events.Boot.LOADED = "Prodigy.Events.Boot.LOADED", Prodigy.Events.Loading = {}, Prodigy.Events.Loading.WORKER_LOAD_COMPLETE = "Prodigy.Events.Loading.WORKER_LOAD_COMPLETE", Prodigy.Events.House = {}, Prodigy.Events.House.CLICKED_HOUSE_ICON = "Prodigy.Events.House.CLICKED_HOUSE_ICON", Prodigy.Events.House.OPEN_EDITOR = "Prodigy.Events.House.OPEN_EDITOR", Prodigy.Events.House.CLOSE_EDITOR = "Prodigy.Events.House.CLOSE_EDITOR", Prodigy.Events.ShipwreckShore = {}, Prodigy.Events.ShipwreckShore.INK_BLASTED = "Prodigy.Events.ShipwreckShore.INK_BLASTED", Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED = "Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED", Prodigy.Events.Debug = {}, Prodigy.Events.Debug.AUTO_CLICK = "Prodigy.Events.Debug.AUTO_CLICK", Prodigy.Events.Debug.AUTO_CLICK_UI = "Prodigy.Events.Debug.AUTO_CLICK_UI", Prodigy.Events.Debug.AUTO_CLICK_SCENE = "Prodigy.Events.Debug.AUTO_CLICK_SCENE", Prodigy.Events.Debug.AUTO_CLICK_LIST = "Prodigy.Events.Debug.AUTO_CLICK_LIST", Prodigy.Events.Debug.GET_UI_ELEMENT = "Prodigy.Events.Debug.GET_UI_ELEMENT", Prodigy.Events.Input = {
	ON_MOUSE_DOWN: "Prodigy.Events.Input.ON_MOUSE_DOWN",
	ON_MOUSE_UP: "Prodigy.Events.Input.ON_MOUSE_UP",
	ON_MOUSE_MOVE: "Prodigy.Events.Input.ON_MOUSE_MOVE",
	ON_MOUSE_OUT: "Prodigy.Events.Input.ON_MOUSE_OUT",
	ON_MOUSE_OVER: "Prodigy.Events.Input.ON_MOUSE_OVER",
	ON_MOUSE_WHEEL: "Prodigy.Events.Input.ON_MOUSE_WHEEL"
};
for (var keyCode in Phaser.KeyCode) {
	var event = "ON_KEY_DOWN_" + keyCode;
	Prodigy.Events.Input[event] = "Prodigy.Events.Input." + event, event = "ON_KEY_UP_" + keyCode, Prodigy.Events.Input[event] = "Prodigy.Events.Input." + event, event = "ON_KEY_PRESS_" + keyCode, Prodigy.Events.Input[event] = "Prodigy.Events.Input." + event
}
Prodigy.Events.FriendsList = {
	GOT_FRIENDS_LIST: "Prodigy.Events.FriendsList.GOT_FRIENDS_LIST",
	GET_TOTAL_FRIEND_REQUESTS: "Prodigy.Events.FriendsList.GET_TOTAL_FRIEND_REQUESTS",
	CLEAR_FRIEND_REQUESTS_CACHE: "Prodigy.Events.FriendsList.CLEAR_FRIEND_REQUESTS_CACHE",
	GET_FRIEND_REQUEST_LIST: "Prodigy.Events.FriendsList.GET_FRIEND_REQUEST_LIST",
	GOT_FRIEND_REQUEST_LIST: "Prodigy.Events.FriendsList.GOT_FRIEND_REQUEST_LIST",
	SET_REQUESTS: "Prodigy.Events.FriendsList.SET_REQUESTS",
	SEND_REQUEST: "Prodigy.Events.FriendsList.SEND_REQUEST",
	CANCEL_REQUEST: "Prodigy.Events.FriendsList.CANCEL_REQUEST",
	ACCEPT_REQUEST: "Prodigy.Events.FriendsList.ACCEPT_REQUEST",
	REJECT_REQUEST: "Prodigy.Events.FriendsList.REJECT_REQUEST",
	REQUEST_SENT: "Prodigy.Events.FriendsList.REQUEST_SENT",
	REQUEST_CANCELLED: "Prodigy.Events.FriendsList.REQUEST_CANCELLED",
	REQUEST_RECEIVED: "Prodigy.Events.FriendsList.REQUEST_RECEIVED",
	REQUEST_ACCEPTED: "Prodigy.Events.FriendsList.REQUEST_ACCEPTED",
	REQUEST_REJECTED: "Prodigy.Events.FriendsList.REQUEST_REJECTED",
	REMOVE_FRIEND: "Prodigy.Events.FriendsList.REMOVE_FRIEND",
	FRIEND_REMOVED: "Prodigy.Events.FriendsList.FRIEND_REMOVED",
	GET_FRIENDSHIP_STATUS: "Prodigy.Events.FriendsList.GET_FRIENDSHIP_STATUS",
	GOT_FRIENDSHIP_STATUS: "Prodigy.Events.FriendsList.GOT_FRIENDSHIP_STATUS",
	FRIENDS_APPEARANCE_UPDATED: "Prodigy.Events.FriendsList.FRIENDS_APPEARANCE_UPDATED",
	ILLOGICAL_REQUEST_ACTION: "Prodigy.Events.FriendsList.ILLOGICAL_REQUEST_ACTION",
	SEND_QUEST_UPDATE: "Prodigy.Events.FriendsList.SEND_QUEST_UPDATE"
}, Prodigy.Events.PlayerLocomotion = {}, Prodigy.Events.PlayerLocomotion.MOVE_PLAYER = "Prodigy.Events.PlayerLocomotion.MOVE_PLAYER", Prodigy.Events.PlayerLocomotion.STOP_PLAYER = "Prodigy.Events.PlayerLocomotion.STOP_PLAYER", Prodigy.Events.PlayerLocomotion.GET_TARGET = "Prodigy.Events.PlayerLocomotion.GET_TARGET", Prodigy.Events.AccountCreate = {}, Prodigy.Events.AccountCreate.SET_BACKGROUND_PANEL_TILE_DIMENSIONS = "Prodigy.Events.LocationPage.SET_BACKGROUND_PANEL_TILE_DIMENSIONS", Prodigy.Events.AccountCreate.GET_DEFAULT_BACKGROUND_PANEL_TILE_DIMENSIONS = "Prodigy.Events.LocationPage.GET_BACKGROUND_PANEL_TILE_DIMENSIONS", Prodigy.Events.UI = {
	MENU_OPENED: "Prodigy.Events.UI.MENU_OPENED"
}, Prodigy.Event.UI = {}, Prodigy.Event.UI.TAB_BUTTON_CLICKED = "Prodigy.Event.UI.TAB_BUTTON_CLICKED", Prodigy.Event.UI.TAB_SELECTED = "Prodigy.Event.UI.TAB_SELECTED", Prodigy.Event.UI.CHILD_ADDED = "Prodigy.Event.UI.CHILD_ADDED", Prodigy.Event.UI.CHILD_REMOVED = "Prodigy.Event.UI.CHILD_REMOVED", Prodigy.Events.Titan = {
	GOT_TITANS: "Prodigy.Events.Titan.GOT_TITANS",
	GOT_TITAN: "Prodigy.Events.Titan.GOT_TITAN"
}, Prodigy.Event.PlayerContainer = {}, Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED = "Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED", Prodigy.Control.Element = function(e, t, i, a) {
	Phaser.Group.call(this, e, t), Util.isDefined(i) && (this.x = i), Util.isDefined(a) && (this.y = a)
}, Prodigy.extends(Prodigy.Control.Element, Phaser.Group, {
	constructor: Prodigy.Control.Element,
	setRenderState: function(e, t) {
		this.renderOnly = e, this.tintElement = t, this.renderUpdate = !0
	},
	showTooltip: function(e, t) {
		if (Util.isDefined(this.tooltip) && (this.tooltip.destroy(), this.tooltip = null), Util.isDefined(e)) {
			this.tooltip = this.game.prodigy.create.element(this, t);
			var i = this.tooltip.add(this.game.prodigy.create.sprite(30, 0, "core", "tooltip"));
			i.alpha = .9, i.width = 300, i.height = 50, this.game.prodigy.create.font(this.tooltip, 90, 11, e, {
				width: 230,
				align: "center"
			}), i = this.tooltip.add(this.game.prodigy.create.sprite(0, 0, "icons", "type")), this.game.add.tween(i).to({
				x: 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)
		}
	},
	showHouseTooltip: function(e, t) {
		if (Util.isDefined(this.tooltip) && (this.tooltip.destroy(), this.tooltip = null), Util.isDefined(e)) {
			this.tooltip = this.game.prodigy.create.element(this, t);
			var i = this.tooltip.add(this.game.prodigy.create.sprite(30, 0, "core", "tooltip"));
			i.alpha = .9, i.width = 300, i.height = 50, this.game.prodigy.create.font(this.tooltip, 90, 11, e, {
				width: 230,
				align: "center"
			}), i = this.tooltip.add(this.game.prodigy.create.sprite(0, 0, "icons", "arrow")), this.game.add.tween(i).to({
				x: 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)
		}
	},
	hasTooltip: function() {
		return Util.isDefined(this.tooltip)
	},
	highlight: function(e, t, i) {
		Util.isDefined(this.arrow) && (this.arrow.destroy(), this.arrow = null), e && (this.arrow = this.add(this.game.prodigy.create.sprite(0, 0, "icons", "help")), this.arrow.x = (t || 0) + Math.floor(this.width / 2), this.arrow.y = (i || 0) - this.arrow.height + 10, this.game.add.tween(this.arrow).to({
			y: this.arrow.y + 25
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0))
	},
	isHighlighted: function() {
		return Util.isDefined(this.arrow)
	},
	destroy: function() {
		this.unregisterGetElementListener(), Phaser.Group.prototype.destroy.call(this)
	},
	registerGetElementListener: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.broadcaster.addAppListener(Prodigy.Events.Debug.GET_UI_ELEMENT, this.onGetUIElement.bind(this), this, this.game)
	},
	unregisterGetElementListener: function() {
		Util.isNullOrUndefined(this.game) || this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.GET_UI_ELEMENT, this, this.game)
	},
	onGetUIElement: function(e) {
		return !Util.isNullOrUndefined(e) && this instanceof e ? this : null
	}
}), Prodigy.Assets = function() {
	var e = "images/player/reduced/outfits/male/",
		t = "images/player/reduced/outfits/female/",
		i = "images/player/reduced/hair/male/",
		a = "images/player/reduced/hair/female/",
		s = "images/player/reduced/hats/",
		r = "images/player/normal/outfits/male/",
		n = "images/player/normal/outfits/female/",
		o = "images/player/normal/hair/male/",
		h = "images/player/normal/hair/female/",
		l = "images/player/normal/hats/",
		d = "images/player/normal/weapons/",
		c = "v1/tilesets/",
		p = "v1/tiled-data/",
		g = "v1/data/game/ui/",
		u = "images/boss/",
		y = "images/boss/small/",
		m = "images/prompts/",
		f = "v1/data/locale/";
		q = "https://daboss7173.github.io/oldprodigy/1-70-0/images/"
	this._assets = {
		"boss-12": {
			type: "atlas",
			key: "boss-skywatch",
			v: "1"
		},
		"boss-13": {
			type: "atlas",
			key: "boss-bonfire",
			v: "1"
		},
		"event-daily_login_bonus": {
			type: "atlas",
			key: "event-daily-login-bonus",
			v: "1"
		},
		"event-october": {
			type: "atlas",
			key: "event-october",
			v: "2"
		},
		"event-pumpkinfest": {
			type: "atlas",
			key: "event-pumpkinfest",
			v: "1"
		},
		"event-starlight_festival": {
			type: "atlas",
			key: "event-starlight-festival",
			v: "2"
		},
		"event-winterfest": {
			type: "atlas",
			key: "event-winterfest",
			v: "1"
		},
		"font-black": {
			type: "atlas",
			key: "font-black",
			v: "1"
		},
		"font-button": {
			type: "atlas",
			key: "font-button",
			v: "1"
		},
		"font-general": {
			type: "atlas",
			key: "font-general",
			v: "2"
		},
		"font-microtransactions": {
			type: "atlas",
			key: "font-microtransactions",
			v: "1"
		},
		"font-battle": {
			type: "atlas",
			key: "font-battle",
			v: "6"
		},
		"font-shadow": {
			type: "atlas",
			key: "font-shadow",
			v: "1"
		},
		"game-dancedance": {
			type: "atlas",
			key: "game-dancedance",
			v: "1"
		},
		"game-dinodig": {
			type: "atlas",
			key: "game-dinodig",
			v: "1"
		},
		attacks: {
			type: "atlas",
			key: "general-attacks",
			v: "2"
		},
		battle: {
			type: "atlas",
			key: "general-battle",
			v: "17"
		},
		core: {
			type: "atlas",
			key: "general-core",
			v: "6"
		},
		"core-2": {
			type: "atlas",
			key: "general-core-2",
			v: "20"
		},
		heads: {
			type: "atlas",
			key: "general-head",
			v: "1"
		},
		icons: {
			type: "atlas",
			key: "general-icons",
			v: "67"
		},
		"icons-hud": {
			type: "atlas",
			key: "general-icons-hud",
			v: "4"
		},
		"icons-house": {
			type: "atlas",
			key: "icons-house",
			v: "3"
		},
		"icons-menu": {
			type: "atlas",
			key: "icons-menu",
			v: "7"
		},
		"general-hair-icons": {
			type: "atlas",
			key: "general-hair-icons",
			v: "1"
		},
		login: {
			type: "atlas",
			key: "general-login",
			v: "6"
		},
		"login-buttons": {
			type: "local",
			base: q,
			key: "general-login",
			v: "1"
		},
		map: {
			type: "atlas",
			key: "general-map",
			v: "6"
		},
		microtransactions: {
			type: "atlas",
			key: "general-microtransactions",
			v: "3"
		},
		pets: {
			type: "atlas",
			key: "general-pets",
			v: "11"
		},
		"npc-face-benni": {
			type: "atlas",
			key: "npc-face-benni",
			v: "1"
		},
		"npc-face-bok": {
			type: "atlas",
			key: "npc-face-bok",
			v: "1"
		},
		"npc-face-boombox": {
			type: "atlas",
			key: "npc-face-boombox",
			v: "1"
		},
		"npc-face-broccolina": {
			type: "atlas",
			key: "npc-face-broccolina",
			v: "1"
		},
		"npc-face-cebollini": {
			type: "atlas",
			key: "npc-face-cebollini",
			v: "1"
		},
		"npc-face-clankboot": {
			type: "atlas",
			key: "npc-face-clankboot",
			v: "1"
		},
		"npc-face-cumulo": {
			type: "atlas",
			key: "npc-face-cumulo",
			v: "1"
		},
		"npc-face-eugene": {
			type: "atlas",
			key: "npc-face-eugene",
			v: "1"
		},
		"npc-face-eve": {
			type: "atlas",
			key: "npc-face-eve",
			v: "3"
		},
		"npc-face-flora": {
			type: "atlas",
			key: "npc-face-flora",
			v: "1"
		},
		"npc-face-guard": {
			type: "atlas",
			key: "npc-face-guard",
			v: "1"
		},
		"npc-face-harvey": {
			type: "atlas",
			key: "npc-face-harvey",
			v: "1"
		},
		"npc-face-howard_cornelius": {
			type: "atlas",
			key: "npc-face-howard-cornelius",
			v: "1"
		},
		"npc-face-julia_ghoulia": {
			type: "atlas",
			key: "npc-face-julia-ghoulia",
			v: "1"
		},
		"npc-face-mama_star": {
			type: "atlas",
			key: "npc-face-mama-star",
			v: "1"
		},
		"npc-face-merchant": {
			type: "atlas",
			key: "npc-face-merchant",
			v: "1"
		},
		"npc-face-mira": {
			type: "atlas",
			key: "npc-face-mira",
			v: "1"
		},
		"npc-face-morris": {
			type: "atlas",
			key: "npc-face-morris",
			v: "1"
		},
		"npc-face-mozza-ella": {
			type: "atlas",
			key: "npc-face-mozza-ella",
			v: "2"
		},
		"npc-face-mugs": {
			type: "atlas",
			key: "npc-face-mugs",
			v: "1"
		},
		"npc-face-noot": {
			type: "atlas",
			key: "npc-face-noot",
			v: "1"
		},
		"npc-face-pippet": {
			type: "atlas",
			key: "npc-face-pippet",
			v: "1"
		},
		"npc-face-puppetmaster": {
			type: "atlas",
			key: "npc-face-puppetmaster",
			v: "1"
		},
		"npc-face-scoog": {
			type: "atlas",
			key: "npc-face-scoog",
			v: "1"
		},
		"npc-face-slime_guard": {
			type: "atlas",
			key: "npc-face-slime-guard",
			v: "1"
		},
		"npc-face-slime_queen": {
			type: "atlas",
			key: "npc-face-slime-queen",
			v: "1"
		},
		"npc-face-slime_worker": {
			type: "atlas",
			key: "npc-face-slime-worker",
			v: "1"
		},
		"npc-face-slurpy": {
			type: "atlas",
			key: "npc-face-slurpy",
			v: "1"
		},
		"npc-face-stache": {
			type: "atlas",
			key: "npc-face-stache",
			v: "1"
		},
		"npc-face-toy": {
			type: "atlas",
			key: "npc-face-toy",
			v: "3"
		},
		"npc-face-wizard": {
			type: "atlas",
			key: "npc-face-wizard",
			v: "1"
		},
		"npc-sprite-benni": {
			type: "atlas",
			key: "npc-sprite-benni",
			v: "1"
		},
		"npc-sprite-bok": {
			type: "atlas",
			key: "npc-sprite-bok",
			v: "1"
		},
		"npc-sprite-boombox": {
			type: "atlas",
			key: "npc-sprite-boombox",
			v: "1"
		},
		"npc-sprite-broccolina": {
			type: "atlas",
			key: "npc-sprite-broccolina",
			v: "1"
		},
		"npc-sprite-cebollini": {
			type: "atlas",
			key: "npc-sprite-cebollini",
			v: "1"
		},
		"npc-sprite-clankboot": {
			type: "atlas",
			key: "npc-sprite-clankboot",
			v: "1"
		},
		"npc-sprite-cumulo": {
			type: "atlas",
			key: "npc-sprite-cumulo",
			v: "1"
		},
		"npc-sprite-eugene": {
			type: "atlas",
			key: "npc-sprite-eugene",
			v: "1"
		},
		"npc-sprite-eve": {
			type: "atlas",
			key: "npc-sprite-eve",
			v: "1"
		},
		"npc-sprite-flora": {
			type: "atlas",
			key: "npc-sprite-flora",
			v: "4"
		},
		"npc-sprite-gnome": {
			type: "atlas",
			key: "npc-sprite-gnome",
			v: "2"
		},
		"npc-sprite-guard": {
			type: "atlas",
			key: "npc-sprite-guard",
			v: "1"
		},
		"npc-sprite-howard_cornelius": {
			type: "atlas",
			key: "npc-sprite-howard-cornelius",
			v: "1"
		},
		"npc-sprite-julia_ghoulia": {
			type: "atlas",
			key: "npc-sprite-julia-ghoulia",
			v: "1"
		},
		"npc-sprite-mama_star": {
			type: "atlas",
			key: "npc-sprite-mama-star",
			v: "1"
		},
		"npc-sprite-merchant": {
			type: "atlas",
			key: "npc-sprite-merchant",
			v: "1"
		},
		"npc-sprite-mira": {
			type: "atlas",
			key: "npc-sprite-mira",
			v: "2"
		},
		"npc-sprite-morris": {
			type: "atlas",
			key: "npc-sprite-morris",
			v: "1"
		},
		"npc-sprite-mozza-ella": {
			type: "atlas",
			key: "npc-sprite-mozza-ella",
			v: "1"
		},
		"npc-sprite-mugs": {
			type: "atlas",
			key: "npc-sprite-mugs",
			v: "1"
		},
		"npc-sprite-noot": {
			type: "atlas",
			key: "npc-sprite-noot",
			v: "1"
		},
		"npc-sprite-pippet": {
			type: "atlas",
			key: "npc-sprite-pippet",
			v: "1"
		},
		"npc-sprite-puppetmaster": {
			type: "atlas",
			key: "npc-sprite-puppetmaster",
			v: "1"
		},
		"npc-sprite-scoog": {
			type: "atlas",
			key: "npc-sprite-scoog",
			v: "1"
		},
		"npc-sprite-slime_guard": {
			type: "atlas",
			key: "npc-sprite-slime-guard",
			v: "1"
		},
		"npc-sprite-slime_queen": {
			type: "atlas",
			key: "npc-sprite-slime-queen",
			v: "1"
		},
		"npc-sprite-worker-slime": {
			type: "atlas",
			key: "npc-sprite-slime-worker",
			v: "1"
		},
		"npc-sprite-slurpy": {
			type: "atlas",
			key: "npc-sprite-slurpy",
			v: "1"
		},
		"npc-sprite-stache": {
			type: "atlas",
			key: "npc-sprite-stache",
			v: "1"
		},
		"npc-sprite-toy": {
			type: "atlas",
			key: "npc-sprite-toy",
			v: "4"
		},
		"npc-sprite-wizard": {
			type: "atlas",
			key: "npc-sprite-wizard",
			v: "1"
		},
		"popup-member": {
			type: "atlas",
			key: "popup-member",
			v: "1"
		},
		"popup-member2": {
			type: "atlas",
			key: "popup-member2",
			v: "1"
		},
		"popup-toyStore": {
			type: "atlas",
			key: "popup-toystore",
			v: "11"
		},
		"popup-after-hours": {
			type: "atlas",
			key: "popup-after-hours",
			v: "1"
		},
		"popup-toyZone": {
			type: "atlas",
			key: "popup-toyzone",
			v: "20"
		},
		"scene-intro": {
			type: "atlas",
			key: "scene-intro",
			v: "1"
		},
		"store-cloud": {
			type: "atlas",
			key: "store-cloud",
			v: "1"
		},
		"store-dorm": {
			type: "atlas",
			key: "store-dorm",
			v: "1"
		},
		"store-forest": {
			type: "atlas",
			key: "store-forest",
			v: "1"
		},
		"store-mountain": {
			type: "atlas",
			key: "store-mountain",
			v: "1"
		},
		"store-pirate": {
			type: "atlas",
			key: "store-pirate",
			v: "1"
		},
		"store-tech": {
			type: "atlas",
			key: "store-tech",
			v: "1"
		},
		"store-volcano": {
			type: "atlas",
			key: "store-volcano",
			v: "1"
		},
		"store-stylist": {
			type: "atlas",
			key: "store-stylist",
			v: "3"
		},
		"tileset-core": {
			type: "atlas",
			key: "tileset-core",
			v: "2"
		},
		"zone-arena": {
			type: "atlas",
			key: "zone-arena",
			v: "1"
		},
		"zone-bonfire": {
			type: "atlas",
			key: "zone-bonfire",
			v: "5"
		},
		"zone-cloud": {
			type: "atlas",
			key: "zone-cloud",
			v: "1"
		},
		"zone-dino": {
			type: "atlas",
			key: "zone-dino",
			v: "1"
		},
		"zone-forest": {
			type: "atlas",
			key: "zone-forest",
			v: "1"
		},
		"zone-lamplight": {
			type: "atlas",
			key: "zone-lamplight",
			v: "5"
		},
		"zone-museum": {
			type: "atlas",
			key: "zone-museum",
			v: "1"
		},
		"zone-pirate": {
			type: "atlas",
			key: "zone-pirate",
			v: "1"
		},
		"zone-plains": {
			type: "atlas",
			key: "zone-plains",
			v: "1"
		},
		"zone-shipwreck": {
			type: "atlas",
			key: "zone-shipwreck",
			v: "11"
		},
		"zone-shiverchill": {
			type: "atlas",
			key: "zone-shiverchill",
			v: "2"
		},
		"zone-skywatch": {
			type: "atlas",
			key: "zone-skywatch",
			v: "4"
		},
		"zone-tech": {
			type: "atlas",
			key: "zone-tech",
			v: "1"
		},
		"zone-tower": {
			type: "atlas",
			key: "zone-tower",
			v: "6"
		},
		"zone-towerbase": {
			type: "atlas",
			key: "zone-towerbase",
			v: "1"
		},
		"zone-toyzone": {
			type: "atlas",
			key: "zone-toyzone",
			v: "1"
		},
		"zone-volcano": {
			type: "atlas",
			key: "zone-volcano",
			v: "1"
		},
		"popup-member-modular": {
			type: "atlas",
			key: "popup-member-modular",
			v: "11"
		},
		"npc-face-sir-vey": {
			type: "atlas",
			key: "npc-face-sir-vey",
			v: "1"
		},
		"boss-gerald": {
			type: "atlas",
			key: "boss-gerald",
			v: "2"
		},
		"icons-house-buying": {
			type: "atlas",
			key: "icons-house-buying",
			v: "1"
		},
		"popup-parent-link": {
			type: "atlas",
			key: "popup-parent-link",
			v: "4"
		},
		"popup-toy-survey": {
			type: "atlas",
			key: "popup-toy-survey",
			v: "2"
		},
		"npc-sprite-potion": {
			type: "atlas",
			key: "npc-sprite-potion",
			v: "3"
		},
		"npc-face-potion": {
			type: "atlas",
			key: "npc-face-potion",
			v: "5"
		},
		"npc-face-windsail": {
			type: "atlas",
			key: "npc-face-windsail",
			v: "4"
		},
		"npc-sprite-windsail": {
			type: "atlas",
			key: "npc-sprite-windsail",
			v: "1"
		},
		"npc-face-swoopy": {
			type: "atlas",
			key: "npc-face-swoopy",
			v: "1"
		},
		"npc-sprite-swoopy": {
			type: "atlas",
			key: "npc-sprite-swoopy",
			v: "1"
		},
		"boss-titan": {
			type: "atlas",
			key: "boss-titan",
			v: "7"
		},
		"boss-titan-barrier": {
			type: "atlas",
			key: "boss-titan-barrier",
			v: "2"
		},
		"boss-titan-barrier-break": {
			type: "atlas",
			key: "boss-titan-barrier-break",
			v: "1"
		},
		"boss-titan-spark": {
			type: "atlas",
			key: "boss-titan-spark",
			v: "1"
		},
		"ui-shared": {
			type: "atlas",
			key: "ui-shared",
			v: "45"
		},
		"ui-titan": {
			type: "atlas",
			key: "ui-titan",
			v: "8"
		},
		"ui-forest-progress": {
			type: "atlas",
			key: "ui-forest-progress",
			v: "22"
		},
		"ui-bonfire-progress": {
			type: "atlas",
			key: "ui-bonfire-progress",
			v: "23"
		},
		"ui-shipwreck-progress": {
			type: "atlas",
			key: "ui-shipwreck-progress",
			v: "26"
		},
		"ui-shiverchill-progress": {
			type: "atlas",
			key: "ui-shiverchill-progress",
			v: "20"
		},
		"ui-skywatch-progress": {
			type: "atlas",
			key: "ui-skywatch-progress",
			v: "20"
		},
		"npc-face-jim": {
			type: "atlas",
			key: "npc-face-jim",
			v: "3"
		},
		"npc-sprite-jim": {
			type: "atlas",
			key: "npc-sprite-jim",
			v: "2"
		},
		"npc-face-fishthing": {
			type: "atlas",
			key: "npc-face-fishthing",
			v: "3"
		},
		"npc-sprite-fishthing": {
			type: "atlas",
			key: "npc-sprite-fishthing",
			v: "2"
		},
		"skin-underwater": {
			type: "atlas",
			key: "skin-underwater",
			v: "1"
		},
		"font-ui": {
			type: "atlas",
			key: "font-ui",
			v: "4"
		},
		"ui-home-school-server": {
			type: "atlas",
			key: "ui-home-school-server",
			v: "2"
		},
		"chat-hud": {
			type: "atlas",
			key: "general-chat-hud",
			v: "7"
		},
		particles: {
			type: "atlas",
			key: "particles",
			v: "4"
		},
		"tileset-bonfire": {
			type: "spritesheet",
			base: c,
			url: "tileset-bonfire/12/tileset-bonfire.png",
			w: 40,
			h: 40
		},
		"tileset-cloud": {
			type: "spritesheet",
			base: c,
			url: "tileset-cloud/2/tileset-cloud.png",
			w: 40,
			h: 40
		},
		"tileset-cloud-no-collisions": {
			type: "spritesheet",
			base: c,
			url: "tileset-cloud-no-collisions/2/tileset-cloud-no-collisions.png",
			w: 40,
			h: 40
		},
		"tileset-collisions": {
			type: "spritesheet",
			base: c,
			url: "tileset-collisions/2/tileset-collisions.png",
			w: 40,
			h: 40
		},
		"tileset-forest": {
			type: "spritesheet",
			base: c,
			url: "tileset-forest/2/tileset-forest.png",
			w: 40,
			h: 40
		},
		"tileset-forest-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-forest-new/10/tileset-forest-new.png",
			w: 40,
			h: 40
		},
		"tileset-firefly-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-firefly-new/6/tileset-firefly-new.png",
			w: 40,
			h: 40
		},
		"tileset-generic": {
			type: "spritesheet",
			base: c,
			url: "tileset-generic/2/tileset-generic.png",
			w: 40,
			h: 40
		},
		"tileset-generic-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-generic-new/7/tileset-generic-new.png",
			w: 40,
			h: 40
		},
		"tileset-icecave": {
			type: "spritesheet",
			base: c,
			url: "tileset-icecave/4/tileset-icecave.png",
			w: 40,
			h: 40
		},
		"tileset-interior": {
			type: "spritesheet",
			base: c,
			url: "tileset-interior/2/tileset-interior.png",
			w: 40,
			h: 40
		},
		"tileset-interior-general": {
			type: "spritesheet",
			base: c,
			url: "tileset-interior-general/2/tileset-interior-general.png",
			w: 40,
			h: 40
		},
		"tileset-outside": {
			type: "spritesheet",
			base: c,
			url: "tileset-outside/2/tileset-outside.png",
			w: 40,
			h: 40
		},
		"tileset-outsidesnow": {
			type: "spritesheet",
			base: c,
			url: "tileset-outsidesnow/2/tileset-outsidesnow.png",
			w: 40,
			h: 40
		},
		"tileset-railruins": {
			type: "spritesheet",
			base: c,
			url: "tileset-railruins/2/tileset-railruins.png",
			w: 40,
			h: 40
		},
		"tileset-town": {
			type: "spritesheet",
			base: c,
			url: "tileset-town/2/tileset-town.png",
			w: 40,
			h: 40
		},
		"tileset-town-december": {
			type: "spritesheet",
			base: c,
			url: "tileset-town-december/2/tileset-town-december.png",
			w: 40,
			h: 40
		},
		"tileset-town-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-town-new/7/tileset-town-new.png",
			w: 40,
			h: 40
		},
		"tileset-town-november": {
			type: "spritesheet",
			base: c,
			url: "tileset-town-november/2/tileset-town-november.png",
			w: 40,
			h: 40
		},
		"tileset-town-october": {
			type: "spritesheet",
			base: c,
			url: "tileset-town-october/2/tileset-town-october.png",
			w: 40,
			h: 40
		},
		"tileset-toyzone": {
			type: "spritesheet",
			base: c,
			url: "tileset-toyzone/4/tileset-toyzone.png",
			w: 40,
			h: 40
		},
		"tileset-toyzone-dragons": {
			type: "spritesheet",
			base: c,
			url: "tileset-toyzone-dragons/3/tileset-toyzone-dragons.png",
			w: 40,
			h: 40
		},
		"tileset-toy-ruins-test": {
			type: "spritesheet",
			base: c,
			url: "tileset-toyzone/3/tileset-toyzone.png",
			w: 40,
			h: 40
		},
		"tileset-volcano": {
			type: "spritesheet",
			base: c,
			url: "tileset-volcano/2/tileset-volcano.png",
			w: 40,
			h: 40
		},
		"tileset-volcano-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-volcano-new/11/tileset-volcano-new.png",
			w: 40,
			h: 40
		},
		"tileset-wall-collisions": {
			type: "spritesheet",
			base: c,
			url: "tileset-wall-collisions/2/tileset-wall-collisions.png",
			w: 40,
			h: 40
		},
		"tileset-interior-icecave": {
			type: "spritesheet",
			base: c,
			url: "tileset-interior-icecave/2/tileset-interior-icecave.png",
			w: 40,
			h: 40
		},
		"tileset-firepit": {
			type: "spritesheet",
			base: c,
			url: "tileset-firepit/2/tileset-firepit.png",
			w: 40,
			h: 40
		},
		"tileset-interior-treehouse": {
			type: "spritesheet",
			base: c,
			url: "tileset-interior-treehouse/2/tileset-interior-treehouse.png",
			w: 40,
			h: 40
		},
		"tileset-UI": {
			type: "spritesheet",
			base: c,
			url: "tileset-UI/1/tileset-UI.png",
			w: 40,
			h: 40
		},
		"tileset-twilight-arcade": {
			type: "spritesheet",
			base: c,
			url: "tileset-twilight-arcade/2/tileset-twilight-arcade.png",
			w: 40,
			h: 40
		},
		"tileset-shiverchill-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-shiverchill-new/1/tileset-shiverchill-new.png",
			w: 40,
			h: 40
		},
		"tileset-water-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-water-new/19/tileset-water-new.png",
			w: 40,
			h: 40
		},
		"tileset-activityzone": {
			type: "spritesheet",
			base: c,
			url: "tileset-activityzone/2/tileset-activityzone.png",
			w: 40,
			h: 40
		},
		"tileset-generic-snow": {
			type: "spritesheet",
			base: c,
			url: "tileset-generic-snow/2/tileset-generic-snow.png",
			w: 40,
			h: 40
		},
		"tileset-icecave-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-icecave-new/4/tileset-icecave-new.png",
			w: 40,
			h: 40
		},
		"tileset-iceruins": {
			type: "spritesheet",
			base: c,
			url: "tileset-iceruins/2/tileset-iceruins.png",
			w: 40,
			h: 40
		},
		"tileset-minecarts": {
			type: "spritesheet",
			base: c,
			url: "tileset-minecarts/2/tileset-minecarts.png",
			w: 40,
			h: 40
		},
		"tileset-ship-exterior": {
			type: "spritesheet",
			base: c,
			url: "tileset-ship-exterior/3/tileset-ship-exterior.png",
			w: 40,
			h: 40
		},
		"tileset-ship-interior": {
			type: "spritesheet",
			base: c,
			url: "tileset-ship-interior/4/tileset-ship-interior.png",
			w: 40,
			h: 40
		},
		"tileset-shiverchill": {
			type: "spritesheet",
			base: c,
			url: "tileset-shiverchill/2/tileset-shiverchill.png",
			w: 40,
			h: 40
		},
		"tileset-cloud-new": {
			type: "spritesheet",
			base: c,
			url: "tileset-cloud-new/10/tileset-cloud-new.png",
			w: 40,
			h: 40
		},
		"tileset-skywatch-factory": {
			type: "spritesheet",
			base: c,
			url: "tileset-skywatch factory/2/tileset-skywatch-factory.png",
			w: 40,
			h: 40
		},
		"tileset-skywatch-buildings": {
			type: "spritesheet",
			base: c,
			url: "tileset-skywatch-buildings/4/tileset-skywatch-buildings.png",
			w: 40,
			h: 40
		},
		"tileset-skywatch": {
			type: "spritesheet",
			base: c,
			url: "tileset-skywatch/11/tileset-skywatch.png",
			w: 40,
			h: 40
		},
		"tileset-darktower": {
			type: "spritesheet",
			base: c,
			url: "tileset-darktower/21/tileset-darktower.png",
			w: 40,
			h: 40
		},
		"ui-test": {
			type: "json",
			base: g,
			url: "ui-test/1/ui-test.json"
		},
		"ui-test-menu": {
			type: "json",
			base: g,
			url: "ui-test-menu/1/ui-test-menu.json"
		},
		"ui-message-box": {
			type: "json",
			base: g,
			url: "ui-message-box/10/ui-message-box.json"
		},
		"ui-open-mail": {
			type: "json",
			base: g,
			url: "ui-open-mail/9/ui-open-mail.json"
		},
		"ui-your-mail": {
			type: "json",
			base: g,
			url: "ui-your-mail/9/ui-your-mail.json"
		},
		"ui-settings-menu": {
			type: "json",
			base: g,
			url: "ui-settings-menu/6/ui-settings-menu.json"
		},
		"ui-house-preview": {
			type: "json",
			base: g,
			url: "ui-house-preview/5/ui-house-preview.json"
		},
		"ui-zone-progress": {
			type: "json",
			base: g,
			url: "ui-zone-progress/27/ui-zone-progress.json"
		},
		"ui-titan-progress": {
			type: "json",
			base: g,
			url: "ui-titan-progress/4/ui-titan-progress.json"
		},
		"ui-membership-parent": {
			type: "json",
			base: g,
			url: "ui-membership-parent/4/ui-membership-parent.json"
		},
		"game-data": {
			type: "json",
			base: "",
			fullURL: "https://cdn.prodigygame.com/game/items/" + Util.getEnvironment() + "/items.json",
			noCache: !0
		},
		"store-data": {
			type: "json",
			base: "",
			url: "https://cdn.prodigygame.com/game/assets/v1/data/store/64/store-data.json"
		},
		"map-pathing": {
			type: "json",
			base: p,
			url: "map-pathing/1/map-pathing.json"
		},
		"map-tutorial-b9": {
			type: "json",
			base: p,
			url: "map-tutorial-b9/1/map-tutorial-b9.json"
		},
		"map-tutorial-c9": {
			type: "json",
			base: p,
			url: "map-tutorial-c9/1/map-tutorial-c9.json"
		},
		"map-tutorial-d8": {
			type: "json",
			base: p,
			url: "map-tutorial-d8/1/map-tutorial-d8.json"
		},
		"map-tutorial-d9": {
			type: "json",
			base: p,
			url: "map-tutorial-d9/1/map-tutorial-d9.json"
		},
		"map-forest-a3": {
			type: "json",
			base: p,
			url: "map-forest-a3/5/map-forest-a3.json"
		},
		"map-forest-a4": {
			type: "json",
			base: p,
			url: "map-forest-a4/5/map-forest-a4.json"
		},
		"map-forest-a5": {
			type: "json",
			base: p,
			url: "map-forest-a5/6/map-forest-a5.json"
		},
		"map-forest-b5": {
			type: "json",
			base: p,
			url: "map-forest-b5/4/map-forest-b5.json"
		},
		"map-forest-b6": {
			type: "json",
			base: p,
			url: "map-forest-b6/4/map-forest-b6.json"
		},
		"map-forest-b7": {
			type: "json",
			base: p,
			url: "map-forest-b7/5/map-forest-b7.json"
		},
		"map-forest-b8": {
			type: "json",
			base: p,
			url: "map-forest-b8/5/map-forest-b8.json"
		},
		"map-forest-c4": {
			type: "json",
			base: p,
			url: "map-forest-c4/4/map-forest-c4.json"
		},
		"map-forest-c7": {
			type: "json",
			base: p,
			url: "map-forest-c7/4/map-forest-c7.json"
		},
		"map-forest-c8": {
			type: "json",
			base: p,
			url: "map-forest-c8/8/map-forest-c8.json"
		},
		"map-forest-d3": {
			type: "json",
			base: p,
			url: "map-forest-d3/15/map-forest-d3.json"
		},
		"map-shiverchill-a5": {
			type: "json",
			base: p,
			url: "map-shiverchill-a5/6/map-shiverchill-a5.json"
		},
		"map-shiverchill-a6": {
			type: "json",
			base: p,
			url: "map-shiverchill-a6/5/map-shiverchill-a6.json"
		},
		"map-shiverchill-a7": {
			type: "json",
			base: p,
			url: "map-shiverchill-a7/4/map-shiverchill-a7.json"
		},
		"map-shiverchill-a11": {
			type: "json",
			base: p,
			url: "map-shiverchill-a11/5/map-shiverchill-a11.json"
		},
		"map-shiverchill-a10": {
			type: "json",
			base: p,
			url: "map-shiverchill-a10/6/map-shiverchill-a10.json"
		},
		"map-shiverchill-a9": {
			type: "json",
			base: p,
			url: "map-shiverchill-a9/5/map-shiverchill-a9.json"
		},
		"map-shiverchill-b3": {
			type: "json",
			base: p,
			url: "map-shiverchill-b3/5/map-shiverchill-b3.json"
		},
		"map-shiverchill-b6": {
			type: "json",
			base: p,
			url: "map-shiverchill-b6/4/map-shiverchill-b6.json"
		},
		"map-shiverchill-b7": {
			type: "json",
			base: p,
			url: "map-shiverchill-b7/5/map-shiverchill-b7.json"
		},
		"map-shiverchill-b1": {
			type: "json",
			base: p,
			url: "map-shiverchill-b1/5/map-shiverchill-b1.json"
		},
		"map-shiverchill-b10": {
			type: "json",
			base: p,
			url: "map-shiverchill-b10/6/map-shiverchill-b10.json"
		},
		"map-shiverchill-a4": {
			type: "json",
			base: p,
			url: "map-shiverchill-a4/5/map-shiverchill-a4.json"
		},
		"map-shiverchill-a3": {
			type: "json",
			base: p,
			url: "map-shiverchill-a3/4/map-shiverchill-a3.json"
		},
		"map-shiverchill-a2": {
			type: "json",
			base: p,
			url: "map-shiverchill-a2/4/map-shiverchill-a2.json"
		},
		"map-shiverchill-b2": {
			type: "json",
			base: p,
			url: "map-shiverchill-b2/5/map-shiverchill-b2.json"
		},
		"map-shiverchill-b8": {
			type: "json",
			base: p,
			url: "map-shiverchill-b8/5/map-shiverchill-b8.json"
		},
		"map-shiverchill-b9": {
			type: "json",
			base: p,
			url: "map-shiverchill-b9/4/map-shiverchill-b9.json"
		},
		"map-lamplight-a2": {
			type: "json",
			base: p,
			url: "map-lamplight-a2/1/map-lamplight-a2.json"
		},
		"map-lamplight-a3": {
			type: "json",
			base: p,
			url: "map-lamplight-a3/2/map-lamplight-a3.json"
		},
		"map-lamplight-a4": {
			type: "json",
			base: p,
			url: "map-lamplight-a4/1/map-lamplight-a4.json"
		},
		"map-lamplight-b0": {
			type: "json",
			base: p,
			url: "map-lamplight-b0/1/map-lamplight-b0.json"
		},
		"map-lamplight-b1": {
			type: "json",
			base: p,
			url: "map-lamplight-b1/1/map-lamplight-b1.json"
		},
		"map-lamplight-b2": {
			type: "json",
			base: p,
			url: "map-lamplight-b2/1/map-lamplight-b2.json"
		},
		"map-lamplight-b3": {
			type: "json",
			base: p,
			url: "map-lamplight-b3/3/map-lamplight-b3.json"
		},
		"map-lamplight-b4": {
			type: "json",
			base: p,
			url: "map-lamplight-b4/1/map-lamplight-b4.json"
		},
		"map-lamplight-b5": {
			type: "json",
			base: p,
			url: "map-lamplight-b5/1/map-lamplight-b5.json"
		},
		"map-lamplight-c1": {
			type: "json",
			base: p,
			url: "map-lamplight-c1/1/map-lamplight-c1.json"
		},
		"map-lamplight-c2": {
			type: "json",
			base: p,
			url: "map-lamplight-c2/1/map-lamplight-c2.json"
		},
		"map-lamplight-c3": {
			type: "json",
			base: p,
			url: "map-lamplight-c3/3/map-lamplight-c3.json"
		},
		"map-lamplight-c4": {
			type: "json",
			base: p,
			url: "map-lamplight-c4/1/map-lamplight-c4.json"
		},
		"map-lamplight-a2-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a2-pumpkinfest/2/map-lamplight-a2-pumpkinfest.json"
		},
		"map-lamplight-a3-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a3-pumpkinfest/3/map-lamplight-a3-pumpkinfest.json"
		},
		"map-lamplight-a4-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a4-pumpkinfest/2/map-lamplight-a4-pumpkinfest.json"
		},
		"map-lamplight-b0-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b0-pumpkinfest/1/map-lamplight-b0-pumpkinfest.json"
		},
		"map-lamplight-b1-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b1-pumpkinfest/1/map-lamplight-b1-pumpkinfest.json"
		},
		"map-lamplight-b2-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b2-pumpkinfest/3/map-lamplight-b2-pumpkinfest.json"
		},
		"map-lamplight-b3-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b3-pumpkinfest/2/map-lamplight-b3-pumpkinfest.json"
		},
		"map-lamplight-b4-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b4-pumpkinfest/2/map-lamplight-b4-pumpkinfest.json"
		},
		"map-lamplight-b5-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b5-pumpkinfest/1/map-lamplight-b5-pumpkinfest.json"
		},
		"map-lamplight-c1-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c1-pumpkinfest.json"
		},
		"map-lamplight-c2-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c2-pumpkinfest/2/map-lamplight-c2-pumpkinfest.json"
		},
		"map-lamplight-c3-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c3-pumpkinfest/5/map-lamplight-c3-pumpkinfest.json"
		},
		"map-lamplight-c4-pumpkinfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c4-pumpkinfest/2/map-lamplight-c4-pumpkinfest.json"
		},
		"map-lamplight-a2-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-a2-starlight_festival/1/map-lamplight-a2-starlight_festival.json"
		},
		"map-lamplight-a3-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-a3-starlight_festival/3/map-lamplight-a3-starlight_festival.json"
		},
		"map-lamplight-a4-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-a4-starlight_festival/1/map-lamplight-a4-starlight_festival.json"
		},
		"map-lamplight-b0-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b0-starlight_festival/1/map-lamplight-b0-starlight_festival.json"
		},
		"map-lamplight-b1-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b1-starlight_festival/1/map-lamplight-b1-starlight_festival.json"
		},
		"map-lamplight-b2-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b2-starlight_festival/1/map-lamplight-b2-starlight_festival.json"
		},
		"map-lamplight-b3-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b3-starlight_festival/2/map-lamplight-b3-starlight_festival.json"
		},
		"map-lamplight-b4-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b4-starlight_festival/1/map-lamplight-b4-starlight_festival.json"
		},
		"map-lamplight-b5-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-b5-starlight_festival/1/map-lamplight-b5-starlight_festival.json"
		},
		"map-lamplight-c1-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-c1-starlight_festival.json"
		},
		"map-lamplight-c2-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-c2-starlight_festival/1/map-lamplight-c2-starlight_festival.json"
		},
		"map-lamplight-c3-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-c3-starlight_festival/3/map-lamplight-c3-starlight_festival.json"
		},
		"map-lamplight-c4-starlight_festival": {
			type: "json",
			base: p,
			url: "map-lamplight-c4-starlight_festival/1/map-lamplight-c4-starlight_festival.json"
		},
		"map-lamplight-a2-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a2-winterfest/1/map-lamplight-a2-winterfest.json"
		},
		"map-lamplight-a3-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a3-winterfest/3/map-lamplight-a3-winterfest.json"
		},
		"map-lamplight-a4-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-a4-winterfest/2/map-lamplight-a4-winterfest.json"
		},
		"map-lamplight-b0-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b0-winterfest/1/map-lamplight-b0-winterfest.json"
		},
		"map-lamplight-b1-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b1-winterfest/1/map-lamplight-b1-winterfest.json"
		},
		"map-lamplight-b2-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b2-winterfest/1/map-lamplight-b2-winterfest.json"
		},
		"map-lamplight-b3-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b3-winterfest/3/map-lamplight-b3-winterfest.json"
		},
		"map-lamplight-b4-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b4-winterfest/2/map-lamplight-b4-winterfest.json"
		},
		"map-lamplight-b5-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-b5-winterfest/1/map-lamplight-b5-winterfest.json"
		},
		"map-lamplight-c2-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c2-winterfest/1/map-lamplight-c2-winterfest.json"
		},
		"map-lamplight-c3-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c3-winterfest/7/map-lamplight-c3-winterfest.json"
		},
		"map-lamplight-c4-winterfest": {
			type: "json",
			base: p,
			url: "map-lamplight-c4-winterfest/2/map-lamplight-c4-winterfest.json"
		},
		"map-skywatch-a0": {
			type: "json",
			base: p,
			url: "map-cloudzone-a0/4/map-cloudzone-a0.json"
		},
		"map-skywatch-a1": {
			type: "json",
			base: p,
			url: "map-cloudzone-a1/3/map-cloudzone-a1.json"
		},
		"map-skywatch-b1": {
			type: "json",
			base: p,
			url: "map-cloudzone-b1/7/map-cloudzone-b1.json"
		},
		"map-skywatch-b2": {
			type: "json",
			base: p,
			url: "map-cloudzone-b2/7/map-cloudzone-b2.json"
		},
		"map-skywatch-b3": {
			type: "json",
			base: p,
			url: "map-cloudzone-b3/10/map-cloudzone-b3.json"
		},
		"map-skywatch-c1": {
			type: "json",
			base: p,
			url: "map-cloudzone-c1/3/map-cloudzone-c1.json"
		},
		"map-skywatch-c2": {
			type: "json",
			base: p,
			url: "map-cloudzone-c2/4/map-cloudzone-c2.json"
		},
		"map-skywatch-c3": {
			type: "json",
			base: p,
			url: "map-cloudzone-c3/3/map-cloudzone-c3.json"
		},
		"map-skywatch-c4": {
			type: "json",
			base: p,
			url: "map-cloudzone-c4/12/map-cloudzone-c4.json"
		},
		"map-skywatch-c5": {
			type: "json",
			base: p,
			url: "map-cloudzone-c5/1/map-cloudzone-c5.json"
		},
		"map-skywatch-d1": {
			type: "json",
			base: p,
			url: "map-cloudzone-d1/6/map-cloudzone-d1.json"
		},
		"map-skywatch-d2": {
			type: "json",
			base: p,
			url: "map-cloudzone-d2/11/map-cloudzone-d2.json"
		},
		"map-skywatch-d3": {
			type: "json",
			base: p,
			url: "map-cloudzone-d3/12/map-cloudzone-d3.json"
		},
		"map-skywatch-e1": {
			type: "json",
			base: p,
			url: "map-cloudzone-e1/3/map-cloudzone-e1.json"
		},
		"map-skywatch-e2": {
			type: "json",
			base: p,
			url: "map-cloudzone-e2/6/map-cloudzone-e2.json"
		},
		"map-skywatch-e3": {
			type: "json",
			base: p,
			url: "map-cloudzone-e3/3/map-cloudzone-e3.json"
		},
		"map-skywatch-e4": {
			type: "json",
			base: p,
			url: "map-cloudzone-e4/3/map-cloudzone-e4.json"
		},
		"map-skywatch-e5": {
			type: "json",
			base: p,
			url: "map-cloudzone-e5/5/map-cloudzone-e5.json"
		},
		"map-bonfire_spire-a1": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-a1/4/map-bonfire_spire-a1.json"
		},
		"map-bonfire_spire-a4": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-a4/6/map-bonfire_spire-a4.json"
		},
		"map-bonfire_spire-b1": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-b1/10/map-bonfire_spire-b1.json"
		},
		"map-bonfire_spire-b2": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-b2/8/map-bonfire_spire-b2.json"
		},
		"map-bonfire_spire-b4": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-b4/11/map-bonfire_spire-b4.json"
		},
		"map-bonfire_spire-b5": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-b5/7/map-bonfire_spire-b5.json"
		},
		"map-bonfire_spire-c1": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-c1/6/map-bonfire_spire-c1.json"
		},
		"map-bonfire_spire-c2": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-c2/7/map-bonfire_spire-c2.json"
		},
		"map-bonfire_spire-c3": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-c3/7/map-bonfire_spire-c3.json"
		},
		"map-bonfire_spire-c4": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-c4/7/map-bonfire_spire-c4.json"
		},
		"map-bonfire_spire-c6": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-c6/10/map-bonfire_spire-c6.json"
		},
		"map-bonfire_spire-d1": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d1/8/map-bonfire_spire-d1.json"
		},
		"map-bonfire_spire-d2": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d2/4/map-bonfire_spire-d2.json"
		},
		"map-bonfire_spire-d3": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d3/5/map-bonfire_spire-d3.json"
		},
		"map-bonfire_spire-d4": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d4/7/map-bonfire_spire-d4.json"
		},
		"map-bonfire_spire-d5": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d5/5/map-bonfire_spire-d5.json"
		},
		"map-bonfire_spire-d6": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-d6/5/map-bonfire_spire-d6.json"
		},
		"map-bonfire_spire-e5": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-e5/5/map-bonfire_spire-e5.json"
		},
		"map-bonfire_spire-e6": {
			type: "json",
			base: p,
			url: "map-bonfire_spire-e6/9/map-bonfire_spire-e6.json"
		},
		"map-dyno-a0": {
			type: "json",
			base: p,
			url: "map-dyno-a0/2/map-dyno-a0.json"
		},
		"map-house-exit": {
			type: "json",
			base: p,
			url: "map-house-exit/1/map-house-exit.json"
		},
		"map-house-suburbs": {
			type: "json",
			base: p,
			url: "map-house-suburbs/2/map-house-suburbs.json"
		},
		"map-house-icecaves": {
			type: "json",
			base: p,
			url: "map-house-icecaves/1/map-house-icecaves.json"
		},
		"map-house-treehouse": {
			type: "json",
			base: p,
			url: "map-house-treehouse/1/map-house-treehouse.json"
		},
		"map-house-cool-cave": {
			type: "json",
			base: p,
			url: "map-house-cool-cave/2/map-house-cool-cave.json"
		},
		"map-house-fire-pit": {
			type: "json",
			base: p,
			url: "map-house-fire-pit/3/map-house-fire-pit.json"
		},
		"map-house-forest": {
			type: "json",
			base: p,
			url: "map-house-forest/3/map-house-forest.json"
		},
		"map-house-large-0": {
			type: "json",
			base: p,
			url: "map-house-large-0/2/map-house-large-0.json"
		},
		"map-house-large-1": {
			type: "json",
			base: p,
			url: "map-house-large-1/2/map-house-large-1.json"
		},
		"map-house-medium-0": {
			type: "json",
			base: p,
			url: "map-house-medium-0/2/map-house-medium-0.json"
		},
		"map-house-medium-1": {
			type: "json",
			base: p,
			url: "map-house-medium-1/2/map-house-medium-1.json"
		},
		"map-house-small-0": {
			type: "json",
			base: p,
			url: "map-house-small-0/2/map-house-small-0.json"
		},
		"map-house-small-1": {
			type: "json",
			base: p,
			url: "map-house-small-1/2/map-house-small-1.json"
		},
		"map-toyzone-a1": {
			type: "json",
			base: p,
			url: "map-toyzone-a1/10/map-toyzone-a1.json"
		},
		"map-toyzone-b1": {
			type: "json",
			base: p,
			url: "map-toyzone-b1/12/map-toyzone-b1.json"
		},
		"map-toyzone-b2": {
			type: "json",
			base: p,
			url: "map-toyzone-b2/13/map-toyzone-b2.json"
		},
		"map-house-fire-pit-2": {
			type: "json",
			base: p,
			url: "map-house-fire-pit-2/3/map-house-fire-pit-2.json"
		},
		"map-house-fire-pit-3": {
			type: "json",
			base: p,
			url: "map-house-fire-pit-3/2/map-house-fire-pit-3.json"
		},
		"map-house-house-large-3": {
			type: "json",
			base: p,
			url: "map-house-house-large-3/4/map-house-house-large-3.json"
		},
		"map-house-house-large-4": {
			type: "json",
			base: p,
			url: "map-house-house-large-4/5/map-house-house-large-4.json"
		},
		"map-house-cool-cave-unique-1": {
			type: "json",
			base: p,
			url: "map-house-cool-cave-unique-1/9/map-house-cool-cave-unique-1.json"
		},
		"map-house-cool-cave-unique-2": {
			type: "json",
			base: p,
			url: "map-house-cool-cave-unique-2/2/map-house-cool-cave-unique-2.json"
		},
		"map-house-treehouse-unique-1": {
			type: "json",
			base: p,
			url: "map-house-treehouse-unique-1/3/map-house-treehouse-unique-1.json"
		},
		"map-house-treehouse-unique-2": {
			type: "json",
			base: p,
			url: "map-house-treehouse-unique-2/5/map-house-treehouse-unique-2.json"
		},
		"map-lamplight-b3-twilight-wheel": {
			type: "json",
			base: p,
			url: "map-lamplight-b3-twilight-wheel/5/map-lamplight-b3-twilight-wheel.json"
		},
		"map-lamplight-c3-twilight-wheel": {
			type: "json",
			base: p,
			url: "map-lamplight-c3-twilight-wheel/2/map-lamplight-c3-twilight-wheel.json"
		},
		"map-activity_zone-a1": {
			type: "json",
			base: p,
			url: "map-activity_zone-a1/7/map-activity_zone-a1.json"
		},
		"map-activity_zone-a2": {
			type: "json",
			base: p,
			url: "map-activity_zone-a2/5/map-activity_zone-a2.json"
		},
		"map-activity_zone-b1": {
			type: "json",
			base: p,
			url: "map-activity_zone-b1/9/map-activity_zone-b1.json"
		},
		"map-activity_zone-b2": {
			type: "json",
			base: p,
			url: "map-activity_zone-b2/9/map-activity_zone-b2.json"
		},
		"map-activity_zone-c1": {
			type: "json",
			base: p,
			url: "map-activity_zone-c1/8/map-activity_zone-c1.json"
		},
		"map-activity_zone-c2": {
			type: "json",
			base: p,
			url: "map-activity_zone-c2/7/map-activity_zone-c2.json"
		},
		"map-activity_zone-b3": {
			type: "json",
			base: p,
			url: "map-activity_zone-b3/6/map-activity_zone-b3.json"
		},
		"map-shipwreck_shore-a1": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a1/5/map-shipwreck_shore-a1.json"
		},
		"map-shipwreck_shore-a2": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a2/4/map-shipwreck_shore-a2.json"
		},
		"map-shipwreck_shore-a3": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a3/5/map-shipwreck_shore-a3.json"
		},
		"map-shipwreck_shore-a4": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a4/4/map-shipwreck_shore-a4.json"
		},
		"map-shipwreck_shore-a5": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a5/9/map-shipwreck_shore-a5.json"
		},
		"map-shipwreck_shore-a7": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-a7/5/map-shipwreck_shore-a7.json"
		},
		"map-shipwreck_shore-b10": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b10/5/map-shipwreck_shore-b10.json"
		},
		"map-shipwreck_shore-b11": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b11/6/map-shipwreck_shore-b11.json"
		},
		"map-shipwreck_shore-b12": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b12/7/map-shipwreck_shore-b12.json"
		},
		"map-shipwreck_shore-b13": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b13/6/map-shipwreck_shore-b13.json"
		},
		"map-shipwreck_shore-b2": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b2/4/map-shipwreck_shore-b2.json"
		},
		"map-shipwreck_shore-b4": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b4/3/map-shipwreck_shore-b4.json"
		},
		"map-shipwreck_shore-b5": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b5/5/map-shipwreck_shore-b5.json"
		},
		"map-shipwreck_shore-b6": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b6/7/map-shipwreck_shore-b6.json"
		},
		"map-shipwreck_shore-b7": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b7/7/map-shipwreck_shore-b7.json"
		},
		"map-shipwreck_shore-b8": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-b8/4/map-shipwreck_shore-b8.json"
		},
		"map-shipwreck_shore-c10": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c10/5/map-shipwreck_shore-c10.json"
		},
		"map-shipwreck_shore-c11": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c11/6/map-shipwreck_shore-c11.json"
		},
		"map-shipwreck_shore-c12": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c12/5/map-shipwreck_shore-c12.json"
		},
		"map-shipwreck_shore-c6": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c6/4/map-shipwreck_shore-c6.json"
		},
		"map-shipwreck_shore-c7": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c7/4/map-shipwreck_shore-c7.json"
		},
		"map-shipwreck_shore-c8": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c8/6/map-shipwreck_shore-c8.json"
		},
		"map-shipwreck_shore-c9": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-c9/8/map-shipwreck_shore-c9.json"
		},
		"map-darktower-a1": {
			type: "json",
			base: p,
			url: "map-darktower-a1/14/map-darktower-a1.json"
		},
		"map-darktower-a2": {
			type: "json",
			base: p,
			url: "map-darktower-a2/23/map-darktower-a2.json"
		},
		"map-darktower-a3": {
			type: "json",
			base: p,
			url: "map-darktower-a3/9/map-darktower-a3.json"
		},
		"map-shipwreck_shore-titan": {
			type: "json",
			base: p,
			url: "map-shipwreck_shore-titan/5/map-shipwreck_shore-titan.json"
		},
		"bg-battle-academy": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-arena": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-cloud": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-dino": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-forest": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-mountain": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-pirate": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-tech": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-tower": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-volcano": {
			type: "singleImage",
			v: 1
		},
		"scene-intro-bg1": {
			type: "singleImage",
			v: 1
		},
		"scene-intro-bg2": {
			type: "singleImage",
			v: 1
		},
		"scene-intro-bg3": {
			type: "singleImage",
			v: 1
		},
		"login-bg-1": {
			type: "singleImage",
			v: 11
		},
		"login-bg-2": {
			type: "singleImage",
			v: 2
		},
		"bg-battle-shipwreck-beach": {
			type: "singleImage",
			v: 1
		},
		"bg-battle-shipwreck-underwater": {
			type: "singleImage",
			v: 2
		},
		"login-google-signin": {
			type: "singleImage",
			v: 1
		},
		"letter-mail-open-image": {
			type: "singleImage",
			v: 2
		},
		"voice-1-1": {
			type: "sfx",
			v: 3
		},
		"voice-1-2": {
			type: "sfx",
			v: 3
		},
		"voice-1-3": {
			type: "sfx",
			v: 3
		},
		"voice-1-4": {
			type: "sfx",
			v: 3
		},
		"voice-1-5": {
			type: "sfx",
			v: 3
		},
		"voice-1-6": {
			type: "sfx",
			v: 3
		},
		"voice-1-7": {
			type: "sfx",
			v: 3
		},
		"voice-1-8": {
			type: "sfx",
			v: 3
		},
		"voice-1-9": {
			type: "sfx",
			v: 3
		},
		"voice-1-10": {
			type: "sfx",
			v: 3
		},
		"voice-1-11": {
			type: "sfx",
			v: 3
		},
		"voice-1-12": {
			type: "sfx",
			v: 3
		},
		"voice-1-13": {
			type: "sfx",
			v: 3
		},
		"voice-1-14": {
			type: "sfx",
			v: 3
		},
		"voice-1-15": {
			type: "sfx",
			v: 3
		},
		"voice-0": {
			type: "sfx",
			v: 3
		},
		"voice-2": {
			type: "sfx",
			v: 3
		},
		"voice-3": {
			type: "sfx",
			v: 3
		},
		"voice-4": {
			type: "sfx",
			v: 3
		},
		"voice-5": {
			type: "sfx",
			v: 3
		},
		"voice-6": {
			type: "sfx",
			v: 3
		},
		"voice-7": {
			type: "sfx",
			v: 3
		},
		"voice-8-1": {
			type: "sfx",
			v: 3
		},
		"voice-8-2": {
			type: "sfx",
			v: 3
		},
		"voice-8-3": {
			type: "sfx",
			v: 3
		},
		"voice-8-4": {
			type: "sfx",
			v: 3
		},
		"voice-8-5": {
			type: "sfx",
			v: 3
		},
		"voice-8-6": {
			type: "sfx",
			v: 3
		},
		"voice-8-7": {
			type: "sfx",
			v: 3
		},
		"voice-8-8": {
			type: "sfx",
			v: 3
		},
		"voice-8-9": {
			type: "sfx",
			v: 3
		},
		"voice-8-10": {
			type: "sfx",
			v: 3
		},
		"voice-8-11": {
			type: "sfx",
			v: 3
		},
		"voice-8-12": {
			type: "sfx",
			v: 3
		},
		"voice-8-13": {
			type: "sfx",
			v: 3
		},
		"voice-8-14": {
			type: "sfx",
			v: 3
		},
		"voice-9": {
			type: "sfx",
			v: 3
		},
		"voice-10-1": {
			type: "sfx",
			v: 3
		},
		"voice-10-2": {
			type: "sfx",
			v: 3
		},
		"voice-10-3": {
			type: "sfx",
			v: 3
		},
		"voice-10-4": {
			type: "sfx",
			v: 3
		},
		"voice-10-5": {
			type: "sfx",
			v: 3
		},
		"voice-10-6": {
			type: "sfx",
			v: 3
		},
		"voice-10-7": {
			type: "sfx",
			v: 3
		},
		"voice-10-8": {
			type: "sfx",
			v: 3
		},
		"voice-10-9": {
			type: "sfx",
			v: 3
		},
		"voice-10-10": {
			type: "sfx",
			v: 3
		},
		"voice-10-11": {
			type: "sfx",
			v: 3
		},
		"voice-10-12": {
			type: "sfx",
			v: 3
		},
		"voice-10-13": {
			type: "sfx",
			v: 3
		},
		"voice-10-14": {
			type: "sfx",
			v: 3
		},
		"voice-10-15": {
			type: "sfx",
			v: 3
		},
		"voice-10-16": {
			type: "sfx",
			v: 3
		},
		"voice-10-17": {
			type: "sfx",
			v: 3
		},
		"voice-10-18": {
			type: "sfx",
			v: 3
		},
		"voice-10-19": {
			type: "sfx",
			v: 3
		},
		"voice-10-20": {
			type: "sfx",
			v: 3
		},
		"voice-10-21": {
			type: "sfx",
			v: 3
		},
		"voice-10-22": {
			type: "sfx",
			v: 3
		},
		"voice-10-23": {
			type: "sfx",
			v: 3
		},
		"voice-10-24": {
			type: "sfx",
			v: 3
		},
		"voice-10-25": {
			type: "sfx",
			v: 3
		},
		"voice-10-26": {
			type: "sfx",
			v: 3
		},
		"voice-10-27": {
			type: "sfx",
			v: 3
		},
		"voice-10-28": {
			type: "sfx",
			v: 3
		},
		"voice-10-29": {
			type: "sfx",
			v: 3
		},
		"voice-10-30": {
			type: "sfx",
			v: 3
		},
		"voice-10-31": {
			type: "sfx",
			v: 3
		},
		"voice-10-32": {
			type: "sfx",
			v: 3
		},
		"voice-10-33": {
			type: "sfx",
			v: 3
		},
		"voice-10-34": {
			type: "sfx",
			v: 3
		},
		"voice-10-35": {
			type: "sfx",
			v: 3
		},
		"voice-10-36": {
			type: "sfx",
			v: 3
		},
		"voice-10-37": {
			type: "sfx",
			v: 3
		},
		"voice-10-38": {
			type: "sfx",
			v: 3
		},
		"voice-10-39": {
			type: "sfx",
			v: 3
		},
		"voice-10-40": {
			type: "sfx",
			v: 3
		},
		"voice-10-41": {
			type: "sfx",
			v: 3
		},
		"voice-10-42": {
			type: "sfx",
			v: 3
		},
		"voice-10-43": {
			type: "sfx",
			v: 3
		},
		"voice-10-44": {
			type: "sfx",
			v: 3
		},
		"voice-10-45": {
			type: "sfx",
			v: 3
		},
		"voice-10-46": {
			type: "sfx",
			v: 3
		},
		"voice-10-47": {
			type: "sfx",
			v: 3
		},
		"voice-10-48": {
			type: "sfx",
			v: 3
		},
		"voice-10-49": {
			type: "sfx",
			v: 3
		},
		"voice-10-50": {
			type: "sfx",
			v: 3
		},
		"voice-10-51": {
			type: "sfx",
			v: 3
		},
		"voice-10-52": {
			type: "sfx",
			v: 3
		},
		"voice-10-53": {
			type: "sfx",
			v: 3
		},
		"voice-10-54": {
			type: "sfx",
			v: 3
		},
		"voice-10-55": {
			type: "sfx",
			v: 3
		},
		"voice-10-56": {
			type: "sfx",
			v: 3
		},
		"voice-10-57": {
			type: "sfx",
			v: 3
		},
		"voice-10-58": {
			type: "sfx",
			v: 3
		},
		"voice-10-59": {
			type: "sfx",
			v: 3
		},
		"voice-10-60": {
			type: "sfx",
			v: 3
		},
		"voice-10-61": {
			type: "sfx",
			v: 3
		},
		"voice-10-62": {
			type: "sfx",
			v: 3
		},
		"voice-10-63": {
			type: "sfx",
			v: 3
		},
		"voice-10-64": {
			type: "sfx",
			v: 3
		},
		"voice-10-65": {
			type: "sfx",
			v: 1
		},
		"voice-10-66": {
			type: "sfx",
			v: 3
		},
		"voice-11": {
			type: "sfx",
			v: 3
		},
		"voice-11-1": {
			type: "sfx",
			v: 3
		},
		"voice-11-2": {
			type: "sfx",
			v: 3
		},
		"voice-11-3": {
			type: "sfx",
			v: 3
		},
		"voice-12-1": {
			type: "sfx",
			v: 3
		},
		"voice-12-2": {
			type: "sfx",
			v: 3
		},
		"voice-12-3": {
			type: "sfx",
			v: 3
		},
		"voice-12-4": {
			type: "sfx",
			v: 3
		},
		"voice-12-5": {
			type: "sfx",
			v: 3
		},
		"voice-12-6": {
			type: "sfx",
			v: 3
		},
		"voice-12-7": {
			type: "sfx",
			v: 3
		},
		"voice-12-8": {
			type: "sfx",
			v: 3
		},
		"voice-12-9": {
			type: "sfx",
			v: 3
		},
		"voice-12-10": {
			type: "sfx",
			v: 3
		},
		"voice-12-11": {
			type: "sfx",
			v: 3
		},
		"voice-12-12": {
			type: "sfx",
			v: 3
		},
		"voice-12-13": {
			type: "sfx",
			v: 3
		},
		"voice-12-14": {
			type: "sfx",
			v: 3
		},
		"voice-12-15": {
			type: "sfx",
			v: 3
		},
		"voice-12-16": {
			type: "sfx",
			v: 3
		},
		"voice-12-17": {
			type: "sfx",
			v: 3
		},
		"voice-12-18": {
			type: "sfx",
			v: 3
		},
		"voice-13-1": {
			type: "sfx",
			v: 3
		},
		"voice-14-1": {
			type: "sfx",
			v: 3
		},
		"voice-14-2": {
			type: "sfx",
			v: 3
		},
		"voice-15-1": {
			type: "sfx",
			v: 3
		},
		"voice-15-2": {
			type: "sfx",
			v: 3
		},
		"voice-15-3": {
			type: "sfx",
			v: 3
		},
		"voice-15-4": {
			type: "sfx",
			v: 3
		},
		"voice-15-5": {
			type: "sfx",
			v: 3
		},
		"voice-15-6": {
			type: "sfx",
			v: 3
		},
		"voice-15-7": {
			type: "sfx",
			v: 3
		},
		"voice-15-8": {
			type: "sfx",
			v: 3
		},
		"voice-15-9": {
			type: "sfx",
			v: 3
		},
		"voice-15-10": {
			type: "sfx",
			v: 3
		},
		"voice-15-11": {
			type: "sfx",
			v: 3
		},
		"voice-15-12": {
			type: "sfx",
			v: 3
		},
		"voice-15-13": {
			type: "sfx",
			v: 3
		},
		"voice-15-14": {
			type: "sfx",
			v: 3
		},
		"voice-15-15": {
			type: "sfx",
			v: 3
		},
		"voice-15-16": {
			type: "sfx",
			v: 3
		},
		"voice-15-17": {
			type: "sfx",
			v: 3
		},
		"voice-15-18": {
			type: "sfx",
			v: 3
		},
		"voice-16-1": {
			type: "sfx",
			v: 3
		},
		"voice-16-2": {
			type: "sfx",
			v: 3
		},
		"voice-16-3": {
			type: "sfx",
			v: 3
		},
		"voice-17-1": {
			type: "sfx",
			v: 3
		},
		"voice-17-2": {
			type: "sfx",
			v: 3
		},
		"voice-17-3": {
			type: "sfx",
			v: 3
		},
		"voice-17-4": {
			type: "sfx",
			v: 3
		},
		"voice-18-1": {
			type: "sfx",
			v: 3
		},
		"voice-18-2": {
			type: "sfx",
			v: 3
		},
		"voice-18-3": {
			type: "sfx",
			v: 3
		},
		"voice-18-4": {
			type: "sfx",
			v: 3
		},
		"voice-18-5": {
			type: "sfx",
			v: 3
		},
		"voice-19-1": {
			type: "sfx",
			v: 3
		},
		"voice-20-1": {
			type: "sfx",
			v: 3
		},
		"voice-20-2": {
			type: "sfx",
			v: 1
		},
		"voice-21-1": {
			type: "sfx",
			v: 3
		},
		"voice-21-2": {
			type: "sfx",
			v: 3
		},
		"voice-22-1": {
			type: "sfx",
			v: 3
		},
		"voice-22-2": {
			type: "sfx",
			v: 1
		},
		"voice-23-1": {
			type: "sfx",
			v: 3
		},
		"voice-23-2": {
			type: "sfx",
			v: 1
		},
		"voice-23-3": {
			type: "sfx",
			v: 1
		},
		"voice-24-1": {
			type: "sfx",
			v: 3
		},
		"voice-25-1": {
			type: "sfx",
			v: 2
		},
		"voice-26-1": {
			type: "sfx",
			v: 2
		},
		"voice-27-1": {
			type: "sfx",
			v: 2
		},
		"voice-28-1": {
			type: "sfx",
			v: 2
		},
		"voice-29-1": {
			type: "sfx",
			v: 1
		},
		"bgm-victory": {
			type: "bgm",
			v: 2
		},
		"bgm-battle": {
			type: "bgm",
			v: 2
		},
		"bgm-intro": {
			type: "bgm",
			v: 2
		},
		"bgm-space": {
			type: "bgm",
			v: 2
		},
		"bgm-game": {
			type: "bgm",
			v: 2
		},
		"bgm-dance1": {
			type: "bgm",
			v: 2
		},
		"bgm-dance2": {
			type: "bgm",
			v: 2
		},
		"bgm-intro-1": {
			type: "bgm",
			v: 2
		},
		"bgm-lamplight": {
			type: "bgm",
			v: 2
		},
		"bgm-tutorial": {
			type: "bgm",
			v: 2
		},
		"bgm-fun": {
			type: "bgm",
			v: 2
		},
		"bgm-puppetmaster": {
			type: "bgm",
			v: 2
		},
		"bgm-winterfest": {
			type: "bgm",
			v: 2
		},
		"sfx-main": {
			type: "sfx",
			v: 2
		},
		"attack-forest-fury": {
			type: "sfx",
			v: 1
		},
		"attack-frigid-blast": {
			type: "sfx",
			v: 1
		},
		"attack-hot-snow": {
			type: "sfx",
			v: 1
		},
		"attack-storm-wrath": {
			type: "sfx",
			v: 1
		},
		"attack-tidal-twister": {
			type: "sfx",
			v: 1
		},
		"attack-royal-roar": {
			type: "sfx",
			v: 1
		},
		"sfx-battle": {
			type: "sfx",
			v: 1
		},
		"sfx-bonfire-spire-q5": {
			type: "sfx",
			v: 1
		},
		"sfx-bonfire-spire-q6-and-q14": {
			type: "sfx",
			v: 1
		},
		"sfx-dance-dance": {
			type: "sfx",
			v: 1
		},
		"sfx-dino-dig": {
			type: "sfx",
			v: 1
		},
		"sfx-house-intro": {
			type: "sfx",
			v: 1
		},
		"sfx-lamplight-pets": {
			type: "sfx",
			v: 1
		},
		"sfx-lamplight": {
			type: "sfx",
			v: 1
		},
		"sfx-pvp": {
			type: "sfx",
			v: 1
		},
		"sfx-skywatch": {
			type: "sfx",
			v: 1
		},
		"sfx-ui": {
			type: "sfx",
			v: 1
		},
		"sfx-world": {
			type: "sfx",
			v: 1
		},
		"sfx-shipwreck-shore": {
			type: "sfx",
			v: 1
		},
		"sfx-titan": {
			type: "sfx",
			v: 1
		},
		"npc-sir-vey": {
			type: "spine",
			v: 1
		},
		"npc-harvey": {
			type: "spine",
			v: 3
		},
		"boss-shipwreck_shore": {
			type: "spine",
			v: 1
		},
		"spine-boss-shiverchill": {
			type: "spine",
			v: 2
		},
		"micro-cube": {
			type: "spine",
			v: 2
		},
		"spine-boss-titan": {
			type: "spine",
			v: 7
		},
		"font-user-name": {
			type: "bitmapFont",
			v: 1
		},
		"prompt-more-gold": {
			type: "sprite",
			base: m,
			url: "prompt-more-gold.png"
		},
		"prompt-more-exp": {
			type: "sprite",
			base: m,
			url: "prompt-more-exp.png"
		},
		"prompt-premium-item": {
			type: "sprite",
			base: m,
			url: "prompt-premium-item.png"
		},
		"prompt-wheel-spin": {
			type: "sprite",
			base: m,
			url: "prompt-wheel-spin.png"
		},
		"prompt-bigger-team": {
			type: "sprite",
			base: m,
			url: "prompt-bigger-team.png"
		},
		"prompt-bigger-roster": {
			type: "sprite",
			base: m,
			url: "prompt-bigger-roster.png"
		},
		"boss-small-1": {
			type: "sprite",
			base: y,
			url: "1.png",
			x: 390
		},
		"boss-1": {
			type: "spritesheet",
			base: u,
			url: "1.png",
			x: 390,
			w: 717,
			h: 634
		},
		"boss-small-10": {
			type: "sprite",
			base: y,
			url: "10.png",
			x: 256
		},
		"boss-10": {
			type: "spritesheet",
			base: u,
			url: "10.png",
			x: 256,
			w: 344,
			h: 351
		},
		"boss-small-11": {
			type: "sprite",
			base: y,
			url: "11.png",
			x: 145
		},
		"boss-11": {
			type: "spritesheet",
			base: u,
			url: "11.png",
			x: 145,
			w: 363,
			h: 438
		},
		"boss-small-2": {
			type: "sprite",
			base: y,
			url: "2.png",
			x: 450
		},
		"boss-2": {
			type: "spritesheet",
			base: u,
			url: "2.png",
			x: 450,
			w: 853,
			h: 785
		},
		"boss-small-3": {
			type: "sprite",
			base: y,
			url: "3.png",
			x: 178
		},
		"boss-3": {
			type: "spritesheet",
			base: u,
			url: "3.png",
			x: 178,
			w: 440,
			h: 410
		},
		"boss-small-4": {
			type: "sprite",
			base: y,
			url: "4.png",
			x: 270
		},
		"boss-4": {
			type: "spritesheet",
			base: u,
			url: "4.png",
			x: 270,
			w: 664,
			h: 640
		},
		"boss-small-5": {
			type: "sprite",
			base: y,
			url: "5.png",
			x: 366
		},
		"boss-5": {
			type: "spritesheet",
			base: u,
			url: "5.png",
			x: 366,
			w: 745,
			h: 712
		},
		"boss-small-6": {
			type: "sprite",
			base: y,
			url: "6.png",
			x: 280
		},
		"boss-6": {
			type: "spritesheet",
			base: u,
			url: "6.png",
			x: 280,
			w: 634,
			h: 621
		},
		"boss-small-7": {
			type: "sprite",
			base: y,
			url: "7.png",
			x: 250
		},
		"boss-7": {
			type: "spritesheet",
			base: u,
			url: "7.png",
			x: 250,
			w: 712,
			h: 638
		},
		"boss-small-8": {
			type: "sprite",
			base: y,
			url: "8.png",
			x: 267
		},
		"boss-8": {
			type: "spritesheet",
			base: u,
			url: "8.png",
			x: 267,
			w: 599,
			h: 572
		},
		"boss-small-9": {
			type: "sprite",
			base: y,
			url: "9.png",
			x: 128
		},
		"boss-9": {
			type: "spritesheet",
			base: u,
			url: "9.png",
			x: 128,
			w: 133,
			h: 175
		},
		"normal-outfit-male-1": {
			type: "spritesheet",
			base: r,
			url: "1.png",
			x: 91,
			y: 144,
			w: 75,
			h: 91
		},
		"normal-outfit-male-10": {
			type: "spritesheet",
			base: r,
			url: "10.png",
			x: 91,
			y: 129,
			w: 75,
			h: 106
		},
		"normal-outfit-male-11": {
			type: "spritesheet",
			base: r,
			url: "11.png",
			x: 91,
			y: 150,
			w: 75,
			h: 85
		},
		"normal-outfit-male-12": {
			type: "spritesheet",
			base: r,
			url: "12.png",
			x: 91,
			y: 138,
			w: 75,
			h: 97
		},
		"normal-outfit-male-13": {
			type: "spritesheet",
			base: r,
			url: "13.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-14": {
			type: "spritesheet",
			base: r,
			url: "14.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-15": {
			type: "spritesheet",
			base: r,
			url: "15.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-16": {
			type: "spritesheet",
			base: r,
			url: "16.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-17": {
			type: "spritesheet",
			base: r,
			url: "17.png",
			x: 61,
			y: 144,
			w: 120,
			h: 91
		},
		"normal-outfit-male-18": {
			type: "spritesheet",
			base: r,
			url: "18.png",
			x: 91,
			y: 156,
			w: 75,
			h: 79
		},
		"normal-outfit-male-19": {
			type: "spritesheet",
			base: r,
			url: "19.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-2": {
			type: "spritesheet",
			base: r,
			url: "2.png",
			x: 68,
			y: 152,
			w: 98,
			h: 83
		},
		"normal-outfit-male-20": {
			type: "spritesheet",
			base: r,
			url: "20.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-21": {
			type: "spritesheet",
			base: r,
			url: "21.png",
			x: 91,
			y: 156,
			w: 75,
			h: 79
		},
		"normal-outfit-male-22": {
			type: "spritesheet",
			base: r,
			url: "22.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-23": {
			type: "spritesheet",
			base: r,
			url: "23.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-24": {
			type: "spritesheet",
			base: r,
			url: "24.png",
			x: 54,
			y: 141,
			w: 112,
			h: 94
		},
		"normal-outfit-male-25": {
			type: "spritesheet",
			base: r,
			url: "25.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-26": {
			type: "spritesheet",
			base: r,
			url: "26.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-27": {
			type: "spritesheet",
			base: r,
			url: "27.png",
			x: 91,
			y: 140,
			w: 75,
			h: 95
		},
		"normal-outfit-male-28": {
			type: "spritesheet",
			base: r,
			url: "28.png",
			x: 86,
			y: 154,
			w: 80,
			h: 81
		},
		"normal-outfit-male-29": {
			type: "spritesheet",
			base: r,
			url: "29.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-3": {
			type: "spritesheet",
			base: r,
			url: "3.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-30": {
			type: "spritesheet",
			base: r,
			url: "30.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-31": {
			type: "spritesheet",
			base: r,
			url: "31.png",
			x: 72,
			y: 144,
			w: 94,
			h: 91
		},
		"normal-outfit-male-32": {
			type: "spritesheet",
			base: r,
			url: "32.png",
			x: 88,
			y: 68,
			w: 78,
			h: 167
		},
		"normal-outfit-male-33": {
			type: "spritesheet",
			base: r,
			url: "33.png",
			x: 74,
			y: 150,
			w: 92,
			h: 85
		},
		"normal-outfit-male-34": {
			type: "spritesheet",
			base: r,
			url: "34.png",
			x: 66,
			y: 138,
			w: 100,
			h: 97
		},
		"normal-outfit-male-35": {
			type: "spritesheet",
			base: r,
			url: "35.png",
			x: 88,
			y: 155,
			w: 79,
			h: 80
		},
		"normal-outfit-male-36": {
			type: "spritesheet",
			base: r,
			url: "36.png",
			x: 91,
			y: 155,
			w: 76,
			h: 80
		},
		"normal-outfit-male-37": {
			type: "spritesheet",
			base: r,
			url: "37.png",
			x: 61,
			y: 153,
			w: 105,
			h: 82
		},
		"normal-outfit-male-38": {
			type: "spritesheet",
			base: r,
			url: "38.png",
			x: 30,
			y: 34,
			w: 165,
			h: 221
		},
		"normal-outfit-male-39": {
			type: "spritesheet",
			base: r,
			url: "39.png",
			x: 91,
			y: 151,
			w: 75,
			h: 84
		},
		"normal-outfit-male-4": {
			type: "spritesheet",
			base: r,
			url: "4.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-40": {
			type: "spritesheet",
			base: r,
			url: "40.png",
			x: 75,
			y: 153,
			w: 91,
			h: 82
		},
		"normal-outfit-male-41": {
			type: "spritesheet",
			base: r,
			url: "41.png",
			x: 91,
			y: 150,
			w: 75,
			h: 85
		},
		"normal-outfit-male-42": {
			type: "spritesheet",
			base: r,
			url: "42.png",
			x: 92,
			y: 154,
			w: 74,
			h: 81
		},
		"normal-outfit-male-43": {
			type: "spritesheet",
			base: r,
			url: "43.png",
			x: 89,
			y: 151,
			w: 95,
			h: 86
		},
		"normal-outfit-male-44": {
			type: "spritesheet",
			base: r,
			url: "44.png",
			x: 78,
			y: 137,
			w: 96,
			h: 98
		},
		"normal-outfit-male-45": {
			type: "spritesheet",
			base: r,
			url: "45.png",
			x: 90,
			y: 153,
			w: 79,
			h: 83
		},
		"normal-outfit-male-46": {
			type: "spritesheet",
			base: r,
			url: "46.png",
			x: 84,
			y: 155,
			w: 77,
			h: 80
		},
		"normal-outfit-male-47": {
			type: "spritesheet",
			base: r,
			url: "47.png",
			x: 89,
			y: 149,
			w: 77,
			h: 88
		},
		"normal-outfit-male-48": {
			type: "spritesheet",
			base: r,
			url: "48.png",
			x: 56,
			y: 138,
			w: 110,
			h: 97
		},
		"normal-outfit-male-49": {
			type: "spritesheet",
			base: r,
			url: "49.png",
			x: 87,
			y: 152,
			w: 83,
			h: 81
		},
		"normal-outfit-male-5": {
			type: "spritesheet",
			base: r,
			url: "5.png",
			x: 54,
			y: 141,
			w: 112,
			h: 94
		},
		"normal-outfit-male-50": {
			type: "spritesheet",
			base: r,
			url: "50.png",
			x: 74,
			y: 150,
			w: 107,
			h: 99
		},
		"normal-outfit-male-51": {
			type: "spritesheet",
			base: r,
			url: "51.png",
			x: 71,
			y: 147,
			w: 98,
			h: 87
		},
		"normal-outfit-male-52": {
			type: "spritesheet",
			base: r,
			url: "52.png",
			x: 78,
			y: 139,
			w: 90,
			h: 99
		},
		"normal-outfit-male-53": {
			type: "spritesheet",
			base: r,
			url: "53.png",
			x: 21,
			y: 75,
			w: 145,
			h: 160
		},
		"normal-outfit-male-54": {
			type: "spritesheet",
			base: r,
			url: "54.png",
			x: 51,
			y: 151,
			w: 123,
			h: 84
		},
		"normal-outfit-male-55": {
			type: "spritesheet",
			base: r,
			url: "55.png",
			x: 60,
			y: 143,
			w: 117,
			h: 92
		},
		"normal-outfit-male-56": {
			type: "spritesheet",
			base: r,
			url: "56.png",
			x: 59,
			y: 132,
			w: 118,
			h: 99
		},
		"normal-outfit-male-6": {
			type: "spritesheet",
			base: r,
			url: "6.png",
			x: 88,
			y: 139,
			w: 78,
			h: 96
		},
		"normal-outfit-male-7": {
			type: "spritesheet",
			base: r,
			url: "7.png",
			x: 74,
			y: 145,
			w: 92,
			h: 90
		},
		"normal-outfit-male-8": {
			type: "spritesheet",
			base: r,
			url: "8.png",
			x: 83,
			y: 137,
			w: 83,
			h: 98
		},
		"normal-outfit-male-9": {
			type: "spritesheet",
			base: r,
			url: "9.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"reduced-outfit-male-1": {
			type: "spritesheet",
			base: e,
			url: "1.png",
			x: 43,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-10": {
			type: "spritesheet",
			base: e,
			url: "10.png",
			x: 43,
			y: 72,
			w: 38,
			h: 53
		},
		"reduced-outfit-male-11": {
			type: "spritesheet",
			base: e,
			url: "11.png",
			x: 43,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-12": {
			type: "spritesheet",
			base: e,
			url: "12.png",
			x: 43,
			y: 80,
			w: 38,
			h: 45
		},
		"reduced-outfit-male-13": {
			type: "spritesheet",
			base: e,
			url: "13.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-14": {
			type: "spritesheet",
			base: e,
			url: "14.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-15": {
			type: "spritesheet",
			base: e,
			url: "15.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-16": {
			type: "spritesheet",
			base: e,
			url: "16.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-17": {
			type: "spritesheet",
			base: e,
			url: "17.png",
			x: 28,
			y: 82,
			w: 60,
			h: 43
		},
		"reduced-outfit-male-18": {
			type: "spritesheet",
			base: e,
			url: "18.png",
			x: 43,
			y: 86,
			w: 38,
			h: 39
		},
		"reduced-outfit-male-19": {
			type: "spritesheet",
			base: e,
			url: "19.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-2": {
			type: "spritesheet",
			base: e,
			url: "2.png",
			x: 32,
			y: 83,
			w: 49,
			h: 42
		},
		"reduced-outfit-male-20": {
			type: "spritesheet",
			base: e,
			url: "20.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-21": {
			type: "spritesheet",
			base: e,
			url: "21.png",
			x: 43,
			y: 86,
			w: 38,
			h: 39
		},
		"reduced-outfit-male-22": {
			type: "spritesheet",
			base: e,
			url: "22.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-23": {
			type: "spritesheet",
			base: e,
			url: "23.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-24": {
			type: "spritesheet",
			base: e,
			url: "24.png",
			x: 25,
			y: 78,
			w: 56,
			h: 47
		},
		"reduced-outfit-male-25": {
			type: "spritesheet",
			base: e,
			url: "25.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-26": {
			type: "spritesheet",
			base: e,
			url: "26.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-27": {
			type: "spritesheet",
			base: e,
			url: "27.png",
			x: 43,
			y: 78,
			w: 38,
			h: 47
		},
		"reduced-outfit-male-28": {
			type: "spritesheet",
			base: e,
			url: "28.png",
			x: 41,
			y: 85,
			w: 40,
			h: 40
		},
		"reduced-outfit-male-29": {
			type: "spritesheet",
			base: e,
			url: "29.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-3": {
			type: "spritesheet",
			base: e,
			url: "3.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-30": {
			type: "spritesheet",
			base: e,
			url: "30.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-31": {
			type: "spritesheet",
			base: e,
			url: "31.png",
			x: 33,
			y: 80,
			w: 48,
			h: 45
		},
		"reduced-outfit-male-32": {
			type: "spritesheet",
			base: e,
			url: "32.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-33": {
			type: "spritesheet",
			base: e,
			url: "33.png",
			x: 37,
			y: 82,
			w: 44,
			h: 43
		},
		"reduced-outfit-male-34": {
			type: "spritesheet",
			base: e,
			url: "34.png",
			x: 31,
			y: 77,
			w: 50,
			h: 48
		},
		"reduced-outfit-male-35": {
			type: "spritesheet",
			base: e,
			url: "35.png",
			x: 42,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-36": {
			type: "spritesheet",
			base: e,
			url: "36.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-37": {
			type: "spritesheet",
			base: e,
			url: "37.png",
			x: 39,
			y: 84,
			w: 44,
			h: 41
		},
		"reduced-outfit-male-38": {
			type: "spritesheet",
			base: e,
			url: "38.png",
			x: 17,
			y: 0,
			w: 78,
			h: 128
		},
		"reduced-outfit-male-39": {
			type: "spritesheet",
			base: e,
			url: "39.png",
			x: 17,
			y: 66,
			w: 79,
			h: 59
		},
		"reduced-outfit-male-4": {
			type: "spritesheet",
			base: e,
			url: "4.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-40": {
			type: "spritesheet",
			base: e,
			url: "40.png",
			x: 41,
			y: 84,
			w: 42,
			h: 44
		},
		"reduced-outfit-male-41": {
			type: "spritesheet",
			base: e,
			url: "41.png",
			x: 45,
			y: 83,
			w: 38,
			h: 42
		},
		"reduced-outfit-male-42": {
			type: "spritesheet",
			base: e,
			url: "42.png",
			x: 45,
			y: 84,
			w: 37,
			h: 42
		},
		"reduced-outfit-male-43": {
			type: "spritesheet",
			base: e,
			url: "43.png",
			x: 40,
			y: 84,
			w: 52,
			h: 42
		},
		"reduced-outfit-male-44": {
			type: "spritesheet",
			base: e,
			url: "44.png",
			x: 39,
			y: 79,
			w: 48,
			h: 46
		},
		"reduced-outfit-male-45": {
			type: "spritesheet",
			base: e,
			url: "45.png",
			x: 42,
			y: 85,
			w: 43,
			h: 41
		},
		"reduced-outfit-male-46": {
			type: "spritesheet",
			base: e,
			url: "46.png",
			x: 41,
			y: 85,
			w: 38,
			h: 38
		},
		"reduced-outfit-male-47": {
			type: "spritesheet",
			base: e,
			url: "47.png",
			x: 45,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-48": {
			type: "spritesheet",
			base: e,
			url: "48.png",
			x: 28,
			y: 77,
			w: 55,
			h: 48
		},
		"reduced-outfit-male-49": {
			type: "spritesheet",
			base: e,
			url: "49.png",
			x: 40,
			y: 85,
			w: 44,
			h: 40
		},
		"reduced-outfit-male-5": {
			type: "spritesheet",
			base: e,
			url: "5.png",
			x: 25,
			y: 78,
			w: 56,
			h: 47
		},
		"reduced-outfit-male-50": {
			type: "spritesheet",
			base: e,
			url: "50.png",
			x: 36,
			y: 82,
			w: 53,
			h: 45
		},
		"reduced-outfit-male-51": {
			type: "spritesheet",
			base: e,
			url: "51.png",
			x: 36,
			y: 81,
			w: 49,
			h: 44
		},
		"reduced-outfit-male-52": {
			type: "spritesheet",
			base: e,
			url: "52.png",
			x: 40,
			y: 78,
			w: 45,
			h: 49
		},
		"reduced-outfit-male-53": {
			type: "spritesheet",
			base: e,
			url: "53.png",
			x: 27,
			y: 77,
			w: 56,
			h: 48
		},
		"reduced-outfit-male-54": {
			type: "spritesheet",
			base: e,
			url: "54.png",
			x: 25,
			y: 83,
			w: 63,
			h: 42
		},
		"reduced-outfit-male-55": {
			type: "spritesheet",
			base: e,
			url: "55.png",
			x: 28,
			y: 80,
			w: 60,
			h: 45
		},
		"reduced-outfit-male-56": {
			type: "spritesheet",
			base: e,
			url: "56.png",
			x: 34,
			y: 76,
			w: 54,
			h: 49
		},
		"reduced-outfit-male-6": {
			type: "spritesheet",
			base: e,
			url: "6.png",
			x: 42,
			y: 78,
			w: 39,
			h: 47
		},
		"reduced-outfit-male-7": {
			type: "spritesheet",
			base: e,
			url: "7.png",
			x: 35,
			y: 80,
			w: 46,
			h: 45
		},
		"reduced-outfit-male-8": {
			type: "spritesheet",
			base: e,
			url: "8.png",
			x: 39,
			y: 76,
			w: 42,
			h: 49
		},
		"reduced-outfit-male-9": {
			type: "spritesheet",
			base: e,
			url: "9.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"normal-outfit-female-1": {
			type: "spritesheet",
			base: n,
			url: "1.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-10": {
			type: "spritesheet",
			base: n,
			url: "10.png",
			x: 94,
			y: 129,
			w: 68,
			h: 105
		},
		"normal-outfit-female-11": {
			type: "spritesheet",
			base: n,
			url: "11.png",
			x: 94,
			y: 151,
			w: 68,
			h: 83
		},
		"normal-outfit-female-12": {
			type: "spritesheet",
			base: n,
			url: "12.png",
			x: 94,
			y: 141,
			w: 68,
			h: 93
		},
		"normal-outfit-female-13": {
			type: "spritesheet",
			base: n,
			url: "13.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-14": {
			type: "spritesheet",
			base: n,
			url: "14.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-15": {
			type: "spritesheet",
			base: n,
			url: "15.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-16": {
			type: "spritesheet",
			base: n,
			url: "16.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-17": {
			type: "spritesheet",
			base: n,
			url: "17.png",
			x: 69,
			y: 155,
			w: 104,
			h: 79
		},
		"normal-outfit-female-18": {
			type: "spritesheet",
			base: n,
			url: "18.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-19": {
			type: "spritesheet",
			base: n,
			url: "19.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-2": {
			type: "spritesheet",
			base: n,
			url: "2.png",
			x: 94,
			y: 157,
			w: 68,
			h: 77
		},
		"normal-outfit-female-20": {
			type: "spritesheet",
			base: n,
			url: "20.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-21": {
			type: "spritesheet",
			base: n,
			url: "21.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-22": {
			type: "spritesheet",
			base: n,
			url: "22.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-23": {
			type: "spritesheet",
			base: n,
			url: "23.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-24": {
			type: "spritesheet",
			base: n,
			url: "24.png",
			x: 63,
			y: 145,
			w: 104,
			h: 89
		},
		"normal-outfit-female-25": {
			type: "spritesheet",
			base: n,
			url: "25.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-26": {
			type: "spritesheet",
			base: n,
			url: "26.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-27": {
			type: "spritesheet",
			base: n,
			url: "27.png",
			x: 93,
			y: 140,
			w: 69,
			h: 94
		},
		"normal-outfit-female-28": {
			type: "spritesheet",
			base: n,
			url: "28.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-29": {
			type: "spritesheet",
			base: n,
			url: "29.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-3": {
			type: "spritesheet",
			base: n,
			url: "3.png",
			x: 94,
			y: 157,
			w: 68,
			h: 77
		},
		"normal-outfit-female-30": {
			type: "spritesheet",
			base: n,
			url: "30.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-31": {
			type: "spritesheet",
			base: n,
			url: "31.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-32": {
			type: "spritesheet",
			base: n,
			url: "32.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-33": {
			type: "spritesheet",
			base: n,
			url: "33.png",
			x: 74,
			y: 151,
			w: 88,
			h: 83
		},
		"normal-outfit-female-34": {
			type: "spritesheet",
			base: n,
			url: "34.png",
			x: 66,
			y: 145,
			w: 99,
			h: 89
		},
		"normal-outfit-female-35": {
			type: "spritesheet",
			base: n,
			url: "35.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-36": {
			type: "spritesheet",
			base: n,
			url: "36.png",
			x: 91,
			y: 156,
			w: 72,
			h: 78
		},
		"normal-outfit-female-37": {
			type: "spritesheet",
			base: n,
			url: "37.png",
			x: 72,
			y: 153,
			w: 90,
			h: 81
		},
		"normal-outfit-female-38": {
			type: "spritesheet",
			base: n,
			url: "38.png",
			x: 30,
			y: 34,
			w: 165,
			h: 221
		},
		"normal-outfit-female-39": {
			type: "spritesheet",
			base: n,
			url: "39.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-4": {
			type: "spritesheet",
			base: n,
			url: "4.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-40": {
			type: "spritesheet",
			base: n,
			url: "40.png",
			x: 75,
			y: 155,
			w: 87,
			h: 79
		},
		"normal-outfit-female-41": {
			type: "spritesheet",
			base: n,
			url: "41.png",
			x: 94,
			y: 153,
			w: 68,
			h: 81
		},
		"normal-outfit-female-42": {
			type: "spritesheet",
			base: n,
			url: "42.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-43": {
			type: "spritesheet",
			base: n,
			url: "43.png",
			x: 89,
			y: 151,
			w: 95,
			h: 86
		},
		"normal-outfit-female-44": {
			type: "spritesheet",
			base: n,
			url: "44.png",
			x: 78,
			y: 135,
			w: 95,
			h: 99
		},
		"normal-outfit-female-45": {
			type: "spritesheet",
			base: n,
			url: "45.png",
			x: 94,
			y: 154,
			w: 79,
			h: 82
		},
		"normal-outfit-female-46": {
			type: "spritesheet",
			base: n,
			url: "46.png",
			x: 89,
			y: 156,
			w: 74,
			h: 77
		},
		"normal-outfit-female-47": {
			type: "spritesheet",
			base: n,
			url: "47.png",
			x: 94,
			y: 149,
			w: 68,
			h: 87
		},
		"normal-outfit-female-48": {
			type: "spritesheet",
			base: n,
			url: "48.png",
			x: 64,
			y: 138,
			w: 98,
			h: 96
		},
		"normal-outfit-female-49": {
			type: "spritesheet",
			base: n,
			url: "49.png",
			x: 87,
			y: 152,
			w: 83,
			h: 81
		},
		"normal-outfit-female-5": {
			type: "spritesheet",
			base: n,
			url: "5.png",
			x: 63,
			y: 145,
			w: 104,
			h: 89
		},
		"normal-outfit-female-50": {
			type: "spritesheet",
			base: n,
			url: "50.png",
			x: 89,
			y: 150,
			w: 77,
			h: 84
		},
		"normal-outfit-female-51": {
			type: "spritesheet",
			base: n,
			url: "51.png",
			x: 88,
			y: 147,
			w: 76,
			h: 87
		},
		"normal-outfit-female-52": {
			type: "spritesheet",
			base: n,
			url: "52.png",
			x: 82,
			y: 139,
			w: 83,
			h: 94
		},
		"normal-outfit-female-53": {
			type: "spritesheet",
			base: n,
			url: "53.png",
			x: 76,
			y: 146,
			w: 90,
			h: 88
		},
		"normal-outfit-female-54": {
			type: "spritesheet",
			base: n,
			url: "54.png",
			x: 57,
			y: 154,
			w: 123,
			h: 80
		},
		"normal-outfit-female-55": {
			type: "spritesheet",
			base: n,
			url: "55.png",
			x: 76,
			y: 143,
			w: 101,
			h: 91
		},
		"normal-outfit-female-56": {
			type: "spritesheet",
			base: n,
			url: "56.png",
			x: 59,
			y: 132,
			w: 113,
			h: 98
		},
		"normal-outfit-female-6": {
			type: "spritesheet",
			base: n,
			url: "6.png",
			x: 91,
			y: 140,
			w: 71,
			h: 94
		},
		"normal-outfit-female-7": {
			type: "spritesheet",
			base: n,
			url: "7.png",
			x: 75,
			y: 149,
			w: 87,
			h: 85
		},
		"normal-outfit-female-8": {
			type: "spritesheet",
			base: n,
			url: "8.png",
			x: 92,
			y: 137,
			w: 70,
			h: 97
		},
		"normal-outfit-female-9": {
			type: "spritesheet",
			base: n,
			url: "9.png",
			x: 94,
			y: 153,
			w: 68,
			h: 81
		},
		"reduced-outfit-female-1": {
			type: "spritesheet",
			base: t,
			url: "1.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-10": {
			type: "spritesheet",
			base: t,
			url: "10.png",
			x: 44,
			y: 72,
			w: 35,
			h: 53
		},
		"reduced-outfit-female-11": {
			type: "spritesheet",
			base: t,
			url: "11.png",
			x: 44,
			y: 83,
			w: 35,
			h: 42
		},
		"reduced-outfit-female-12": {
			type: "spritesheet",
			base: t,
			url: "12.png",
			x: 44,
			y: 78,
			w: 35,
			h: 47
		},
		"reduced-outfit-female-13": {
			type: "spritesheet",
			base: t,
			url: "13.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-14": {
			type: "spritesheet",
			base: t,
			url: "14.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-15": {
			type: "spritesheet",
			base: t,
			url: "15.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-16": {
			type: "spritesheet",
			base: t,
			url: "16.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-17": {
			type: "spritesheet",
			base: t,
			url: "17.png",
			x: 32,
			y: 84,
			w: 53,
			h: 41
		},
		"reduced-outfit-female-18": {
			type: "spritesheet",
			base: t,
			url: "18.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-19": {
			type: "spritesheet",
			base: t,
			url: "19.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-2": {
			type: "spritesheet",
			base: t,
			url: "2.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-20": {
			type: "spritesheet",
			base: t,
			url: "20.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-21": {
			type: "spritesheet",
			base: t,
			url: "21.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-22": {
			type: "spritesheet",
			base: t,
			url: "22.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-23": {
			type: "spritesheet",
			base: t,
			url: "23.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-24": {
			type: "spritesheet",
			base: t,
			url: "24.png",
			x: 29,
			y: 79,
			w: 51,
			h: 46
		},
		"reduced-outfit-female-25": {
			type: "spritesheet",
			base: t,
			url: "25.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-26": {
			type: "spritesheet",
			base: t,
			url: "26.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-27": {
			type: "spritesheet",
			base: t,
			url: "27.png",
			x: 43,
			y: 77,
			w: 36,
			h: 48
		},
		"reduced-outfit-female-28": {
			type: "spritesheet",
			base: t,
			url: "28.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-29": {
			type: "spritesheet",
			base: t,
			url: "29.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-3": {
			type: "spritesheet",
			base: t,
			url: "3.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-30": {
			type: "spritesheet",
			base: t,
			url: "30.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-31": {
			type: "spritesheet",
			base: t,
			url: "31.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-32": {
			type: "spritesheet",
			base: t,
			url: "32.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-33": {
			type: "spritesheet",
			base: t,
			url: "33.png",
			x: 39,
			y: 83,
			w: 40,
			h: 42
		},
		"reduced-outfit-female-34": {
			type: "spritesheet",
			base: t,
			url: "34.png",
			x: 31,
			y: 80,
			w: 48,
			h: 45
		},
		"reduced-outfit-female-35": {
			type: "spritesheet",
			base: t,
			url: "35.png",
			x: 44,
			y: 84,
			w: 35,
			h: 41
		},
		"reduced-outfit-female-36": {
			type: "spritesheet",
			base: t,
			url: "36.png",
			x: 43,
			y: 86,
			w: 36,
			h: 39
		},
		"reduced-outfit-female-37": {
			type: "spritesheet",
			base: t,
			url: "37.png",
			x: 36,
			y: 83,
			w: 45,
			h: 42
		},
		"reduced-outfit-female-38": {
			type: "spritesheet",
			base: t,
			url: "38.png",
			x: 17,
			y: 0,
			w: 78,
			h: 128
		},
		"reduced-outfit-female-39": {
			type: "spritesheet",
			base: t,
			url: "39.png",
			x: 16,
			y: 68,
			w: 79,
			h: 57
		},
		"reduced-outfit-female-4": {
			type: "spritesheet",
			base: t,
			url: "4.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-40": {
			type: "spritesheet",
			base: t,
			url: "40.png",
			x: 41,
			y: 85,
			w: 39,
			h: 43
		},
		"reduced-outfit-female-41": {
			type: "spritesheet",
			base: t,
			url: "41.png",
			x: 45,
			y: 84,
			w: 35,
			h: 41
		},
		"reduced-outfit-female-42": {
			type: "spritesheet",
			base: t,
			url: "42.png",
			x: 45,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-43": {
			type: "spritesheet",
			base: t,
			url: "43.png",
			x: 40,
			y: 84,
			w: 52,
			h: 42
		},
		"reduced-outfit-female-44": {
			type: "spritesheet",
			base: t,
			url: "44.png",
			x: 37,
			y: 75,
			w: 47,
			h: 50
		},
		"reduced-outfit-female-45": {
			type: "spritesheet",
			base: t,
			url: "45.png",
			x: 42,
			y: 85,
			w: 43,
			h: 41
		},
		"reduced-outfit-female-46": {
			type: "spritesheet",
			base: t,
			url: "46.png",
			x: 43,
			y: 85,
			w: 36,
			h: 36
		},
		"reduced-outfit-female-47": {
			type: "spritesheet",
			base: t,
			url: "47.png",
			x: 45,
			y: 82,
			w: 35,
			h: 43
		},
		"reduced-outfit-female-48": {
			type: "spritesheet",
			base: t,
			url: "48.png",
			x: 31,
			y: 77,
			w: 49,
			h: 48
		},
		"reduced-outfit-female-49": {
			type: "spritesheet",
			base: t,
			url: "49.png",
			x: 40,
			y: 85,
			w: 44,
			h: 40
		},
		"reduced-outfit-female-5": {
			type: "spritesheet",
			base: t,
			url: "5.png",
			x: 29,
			y: 79,
			w: 51,
			h: 46
		},
		"reduced-outfit-female-50": {
			type: "spritesheet",
			base: t,
			url: "50.png",
			x: 39,
			y: 82,
			w: 42,
			h: 44
		},
		"reduced-outfit-female-51": {
			type: "spritesheet",
			base: t,
			url: "51.png",
			x: 44,
			y: 83,
			w: 38,
			h: 41
		},
		"reduced-outfit-female-52": {
			type: "spritesheet",
			base: t,
			url: "52.png",
			x: 41,
			y: 79,
			w: 43,
			h: 45
		},
		"reduced-outfit-female-53": {
			type: "spritesheet",
			base: t,
			url: "53.png",
			x: 38,
			y: 80,
			w: 45,
			h: 44
		},
		"reduced-outfit-female-54": {
			type: "spritesheet",
			base: t,
			url: "54.png",
			x: 25,
			y: 85,
			w: 63,
			h: 39
		},
		"reduced-outfit-female-55": {
			type: "spritesheet",
			base: t,
			url: "55.png",
			x: 33,
			y: 80,
			w: 50,
			h: 45
		},
		"reduced-outfit-female-56": {
			type: "spritesheet",
			base: t,
			url: "56.png",
			x: 34,
			y: 76,
			w: 52,
			h: 46
		},
		"reduced-outfit-female-6": {
			type: "spritesheet",
			base: t,
			url: "6.png",
			x: 43,
			y: 77,
			w: 36,
			h: 48
		},
		"reduced-outfit-female-7": {
			type: "spritesheet",
			base: t,
			url: "7.png",
			x: 38,
			y: 82,
			w: 41,
			h: 43
		},
		"reduced-outfit-female-8": {
			type: "spritesheet",
			base: t,
			url: "8.png",
			x: 40,
			y: 76,
			w: 39,
			h: 49
		},
		"reduced-outfit-female-9": {
			type: "spritesheet",
			base: t,
			url: "9.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"normal-hat-1": {
			type: "spritesheet",
			base: l,
			url: "1.png",
			x: 49,
			y: 39,
			w: 131,
			h: 89
		},
		"normal-hat-10": {
			type: "spritesheet",
			base: l,
			url: "10.png",
			x: 97,
			y: 14,
			w: 75,
			h: 105
		},
		"normal-hat-11": {
			type: "spritesheet",
			base: l,
			url: "11.png",
			x: 11,
			y: 28,
			w: 172,
			h: 139
		},
		"normal-hat-12": {
			type: "spritesheet",
			base: l,
			url: "12.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-13": {
			type: "spritesheet",
			base: l,
			url: "13.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-14": {
			type: "spritesheet",
			base: l,
			url: "14.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-15": {
			type: "spritesheet",
			base: l,
			url: "15.png",
			x: 58,
			y: 38,
			w: 129,
			h: 85
		},
		"normal-hat-16": {
			type: "spritesheet",
			base: l,
			url: "16.png",
			x: 58,
			y: 38,
			w: 129,
			h: 85
		},
		"normal-hat-17": {
			type: "spritesheet",
			base: l,
			url: "17.png",
			x: 71,
			y: 35,
			w: 118,
			h: 89
		},
		"normal-hat-18": {
			type: "spritesheet",
			base: l,
			url: "18.png",
			x: 65,
			y: 40,
			w: 117,
			h: 84
		},
		"normal-hat-19": {
			type: "spritesheet",
			base: l,
			url: "19.png",
			x: 63,
			y: 37,
			w: 132,
			h: 90
		},
		"normal-hat-2": {
			type: "spritesheet",
			base: l,
			url: "2.png",
			x: 85,
			y: 34,
			w: 94,
			h: 93
		},
		"normal-hat-20": {
			type: "spritesheet",
			base: l,
			url: "20.png",
			x: 71,
			y: 35,
			w: 118,
			h: 89
		},
		"normal-hat-21": {
			type: "spritesheet",
			base: l,
			url: "21.png",
			x: 65,
			y: 40,
			w: 117,
			h: 84
		},
		"normal-hat-22": {
			type: "spritesheet",
			base: l,
			url: "22.png",
			x: 60,
			y: 37,
			w: 117,
			h: 85
		},
		"normal-hat-23": {
			type: "spritesheet",
			base: l,
			url: "23.png",
			x: 93,
			y: 52,
			w: 77,
			h: 58
		},
		"normal-hat-24": {
			type: "spritesheet",
			base: l,
			url: "24.png",
			x: 49,
			y: 53,
			w: 137,
			h: 78
		},
		"normal-hat-25": {
			type: "spritesheet",
			base: l,
			url: "25.png",
			x: 85,
			y: 43,
			w: 95,
			h: 82
		},
		"normal-hat-26": {
			type: "spritesheet",
			base: l,
			url: "26.png",
			x: 69,
			y: 25,
			w: 124,
			h: 99
		},
		"normal-hat-27": {
			type: "spritesheet",
			base: l,
			url: "27.png",
			x: 88,
			y: 80,
			w: 67,
			h: 65
		},
		"normal-hat-28": {
			type: "spritesheet",
			base: l,
			url: "28.png",
			x: 77,
			y: 68,
			w: 100,
			h: 89
		},
		"normal-hat-29": {
			type: "spritesheet",
			base: l,
			url: "29.png",
			x: 62,
			y: 49,
			w: 118,
			h: 99
		},
		"normal-hat-3": {
			type: "spritesheet",
			base: l,
			url: "3.png",
			x: 93,
			y: 61,
			w: 77,
			h: 56
		},
		"normal-hat-30": {
			type: "spritesheet",
			base: l,
			url: "30.png",
			x: 66,
			y: 16,
			w: 124,
			h: 144
		},
		"normal-hat-31": {
			type: "spritesheet",
			base: l,
			url: "31.png",
			x: 55,
			y: 31,
			w: 130,
			h: 110
		},
		"normal-hat-32": {
			type: "spritesheet",
			base: l,
			url: "32.png",
			x: 26,
			y: 35,
			w: 154,
			h: 109
		},
		"normal-hat-33": {
			type: "spritesheet",
			base: l,
			url: "33.png",
			x: 72,
			y: 32,
			w: 117,
			h: 96
		},
		"normal-hat-34": {
			type: "spritesheet",
			base: l,
			url: "34.png",
			x: 99,
			y: 49,
			w: 76,
			h: 71
		},
		"normal-hat-35": {
			type: "spritesheet",
			base: l,
			url: "35.png",
			x: 102,
			y: 54,
			w: 75,
			h: 70
		},
		"normal-hat-36": {
			type: "spritesheet",
			base: l,
			url: "36.png",
			x: 65,
			y: 15,
			w: 129,
			h: 113
		},
		"normal-hat-37": {
			type: "spritesheet",
			base: l,
			url: "37.png",
			x: 61,
			y: 37,
			w: 124,
			h: 104
		},
		"normal-hat-38": {
			type: "spritesheet",
			base: l,
			url: "38.png",
			x: 57,
			y: 37,
			w: 125,
			h: 96
		},
		"normal-hat-39": {
			type: "spritesheet",
			base: l,
			url: "39.png",
			x: 72,
			y: 63,
			w: 120,
			h: 109
		},
		"normal-hat-4": {
			type: "spritesheet",
			base: l,
			url: "4.png",
			x: 61,
			y: 49,
			w: 141,
			h: 78
		},
		"normal-hat-40": {
			type: "spritesheet",
			base: l,
			url: "40.png",
			x: 79,
			y: 84,
			w: 96,
			h: 77
		},
		"normal-hat-41": {
			type: "spritesheet",
			base: l,
			url: "41.png",
			x: 73,
			y: 72,
			w: 109,
			h: 107
		},
		"normal-hat-42": {
			type: "spritesheet",
			base: l,
			url: "42.png",
			x: 63,
			y: 61,
			w: 112,
			h: 93
		},
		"normal-hat-43": {
			type: "spritesheet",
			base: l,
			url: "43.png",
			x: 78,
			y: 48,
			w: 106,
			h: 83
		},
		"normal-hat-44": {
			type: "spritesheet",
			base: l,
			url: "44.png",
			x: 68,
			y: 54,
			w: 125,
			h: 75
		},
		"normal-hat-45": {
			type: "spritesheet",
			base: l,
			url: "45.png",
			x: 73,
			y: 32,
			w: 115,
			h: 93
		},
		"normal-hat-46": {
			type: "spritesheet",
			base: l,
			url: "46.png",
			x: 59,
			y: 41,
			w: 130,
			h: 117
		},
		"normal-hat-47": {
			type: "spritesheet",
			base: l,
			url: "47.png",
			x: 84,
			y: 70,
			w: 85,
			h: 80
		},
		"normal-hat-48": {
			type: "spritesheet",
			base: l,
			url: "48.png",
			x: 64,
			y: 34,
			w: 136,
			h: 124
		},
		"normal-hat-49": {
			type: "spritesheet",
			base: l,
			url: "49.png",
			x: 72,
			y: 45,
			w: 110,
			h: 117
		},
		"normal-hat-5": {
			type: "spritesheet",
			base: l,
			url: "5.png",
			x: 61,
			y: 27,
			w: 151,
			h: 107
		},
		"normal-hat-50": {
			type: "spritesheet",
			base: l,
			url: "50.png",
			x: 27,
			y: 67,
			w: 149,
			h: 110
		},
		"normal-hat-51": {
			type: "spritesheet",
			base: l,
			url: "51.png",
			x: 88,
			y: 83,
			w: 91,
			h: 91
		},
		"normal-hat-52": {
			type: "spritesheet",
			base: l,
			url: "52.png",
			x: 104,
			y: 99,
			w: 69,
			h: 69
		},
		"normal-hat-53": {
			type: "spritesheet",
			base: l,
			url: "53.png",
			x: 93,
			y: 69,
			w: 80,
			h: 95
		},
		"normal-hat-54": {
			type: "spritesheet",
			base: l,
			url: "54.png",
			x: 80,
			y: 55,
			w: 97,
			h: 79
		},
		"normal-hat-55": {
			type: "spritesheet",
			base: l,
			url: "55.png",
			x: 56,
			y: 37,
			w: 118,
			h: 110
		},
		"normal-hat-56": {
			type: "spritesheet",
			base: l,
			url: "56.png",
			x: 75,
			y: 35,
			w: 115,
			h: 163
		},
		"normal-hat-57": {
			type: "spritesheet",
			base: l,
			url: "57.png",
			x: 77,
			y: 34,
			w: 102,
			h: 135
		},
		"normal-hat-58": {
			type: "spritesheet",
			base: l,
			url: "58.png",
			x: 79,
			y: 57,
			w: 100,
			h: 139
		},
		"normal-hat-59": {
			type: "spritesheet",
			base: l,
			url: "59.png",
			x: 69,
			y: 70,
			w: 107,
			h: 89
		},
		"normal-hat-6": {
			type: "spritesheet",
			base: l,
			url: "6.png",
			x: 105,
			y: 34,
			w: 64,
			h: 89
		},
		"normal-hat-60": {
			type: "spritesheet",
			base: l,
			url: "60.png",
			x: 39,
			y: 34,
			w: 133,
			h: 124
		},
		"normal-hat-61": {
			type: "spritesheet",
			base: l,
			url: "61.png",
			x: 18,
			y: 40,
			w: 163,
			h: 111
		},
		"normal-hat-62": {
			type: "spritesheet",
			base: l,
			url: "62.png",
			x: 56,
			y: 23,
			w: 122,
			h: 149
		},
		"normal-hat-63": {
			type: "spritesheet",
			base: l,
			url: "63.png",
			x: 60,
			y: 55,
			w: 135,
			h: 92
		},
		"normal-hat-64": {
			type: "spritesheet",
			base: l,
			url: "64.png",
			x: 85,
			y: 14,
			w: 95,
			h: 144
		},
		"normal-hat-65": {
			type: "spritesheet",
			base: l,
			url: "65.png",
			x: 76,
			y: 12,
			w: 104,
			h: 139
		},
		"normal-hat-66": {
			type: "spritesheet",
			base: l,
			url: "66.png",
			x: 71,
			y: 68,
			w: 109,
			h: 70
		},
		"normal-hat-67": {
			type: "spritesheet",
			base: l,
			url: "67.png",
			x: 67,
			y: 39,
			w: 118,
			h: 107
		},
		"normal-hat-68": {
			type: "spritesheet",
			base: l,
			url: "68.png",
			x: 57,
			y: 19,
			w: 132,
			h: 128
		},
		"normal-hat-69": {
			type: "spritesheet",
			base: l,
			url: "69.png",
			x: 67,
			y: 45,
			w: 115,
			h: 101
		},
		"normal-hat-7": {
			type: "spritesheet",
			base: l,
			url: "7.png",
			x: 69,
			y: 35,
			w: 116,
			h: 83
		},
		"normal-hat-70": {
			type: "spritesheet",
			base: l,
			url: "70.png",
			x: 68,
			y: 38,
			w: 123,
			h: 108
		},
		"normal-hat-8": {
			type: "spritesheet",
			base: l,
			url: "8.png",
			x: 72,
			y: 57,
			w: 97,
			h: 58
		},
		"normal-hat-9": {
			type: "spritesheet",
			base: l,
			url: "9.png",
			x: 62,
			y: 33,
			w: 127,
			h: 95
		},
		"normal-hat-71": {
			type: "spritesheet",
			base: l,
			url: "71.png",
			x: 63,
			y: 37,
			w: 133,
			h: 128
		},
		"normal-hat-72": {
			type: "spritesheet",
			base: l,
			url: "72.png",
			x: 66,
			y: 22,
			w: 109,
			h: 139
		},
		"normal-hat-73": {
			type: "spritesheet",
			base: l,
			url: "73.png",
			x: 49,
			y: 31,
			w: 142,
			h: 141
		},
		"normal-hat-74": {
			type: "spritesheet",
			base: l,
			url: "74.png",
			x: 77,
			y: 65,
			w: 59,
			h: 50
		},
		"normal-hat-75": {
			type: "spritesheet",
			base: l,
			url: "75.png",
			x: 68,
			y: 13,
			w: 115,
			h: 113
		},
		"reduced-hat-1": {
			type: "spritesheet",
			base: s,
			url: "1.png",
			x: 23,
			y: 29,
			w: 65,
			h: 45
		},
		"reduced-hat-10": {
			type: "spritesheet",
			base: s,
			url: "10.png",
			x: 48,
			y: 15,
			w: 37,
			h: 52
		},
		"reduced-hat-11": {
			type: "spritesheet",
			base: s,
			url: "11.png",
			x: 7,
			y: 24,
			w: 86,
			h: 67
		},
		"reduced-hat-12": {
			type: "spritesheet",
			base: s,
			url: "12.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-13": {
			type: "spritesheet",
			base: s,
			url: "13.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-14": {
			type: "spritesheet",
			base: s,
			url: "14.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-15": {
			type: "spritesheet",
			base: s,
			url: "15.png",
			x: 26,
			y: 29,
			w: 64,
			h: 42
		},
		"reduced-hat-16": {
			type: "spritesheet",
			base: s,
			url: "16.png",
			x: 26,
			y: 29,
			w: 64,
			h: 42
		},
		"reduced-hat-17": {
			type: "spritesheet",
			base: s,
			url: "17.png",
			x: 33,
			y: 25,
			w: 59,
			h: 45
		},
		"reduced-hat-18": {
			type: "spritesheet",
			base: s,
			url: "18.png",
			x: 28,
			y: 29,
			w: 60,
			h: 42
		},
		"reduced-hat-19": {
			type: "spritesheet",
			base: s,
			url: "19.png",
			x: 24,
			y: 24,
			w: 69,
			h: 46
		},
		"reduced-hat-2": {
			type: "spritesheet",
			base: s,
			url: "2.png",
			x: 40,
			y: 23,
			w: 48,
			h: 48
		},
		"reduced-hat-20": {
			type: "spritesheet",
			base: s,
			url: "20.png",
			x: 33,
			y: 25,
			w: 59,
			h: 45
		},
		"reduced-hat-21": {
			type: "spritesheet",
			base: s,
			url: "21.png",
			x: 28,
			y: 29,
			w: 60,
			h: 42
		},
		"reduced-hat-22": {
			type: "spritesheet",
			base: s,
			url: "22.png",
			x: 28,
			y: 30,
			w: 60,
			h: 42
		},
		"reduced-hat-23": {
			type: "spritesheet",
			base: s,
			url: "23.png",
			x: 44,
			y: 34,
			w: 39,
			h: 27
		},
		"reduced-hat-24": {
			type: "spritesheet",
			base: s,
			url: "24.png",
			x: 21,
			y: 35,
			w: 69,
			h: 40
		},
		"reduced-hat-25": {
			type: "spritesheet",
			base: s,
			url: "25.png",
			x: 39,
			y: 27,
			w: 48,
			h: 41
		},
		"reduced-hat-26": {
			type: "spritesheet",
			base: s,
			url: "26.png",
			x: 32,
			y: 20,
			w: 62,
			h: 49
		},
		"reduced-hat-27": {
			type: "spritesheet",
			base: s,
			url: "27.png",
			x: 42,
			y: 48,
			w: 33,
			h: 32
		},
		"reduced-hat-28": {
			type: "spritesheet",
			base: s,
			url: "28.png",
			x: 36,
			y: 42,
			w: 50,
			h: 45
		},
		"reduced-hat-29": {
			type: "spritesheet",
			base: s,
			url: "29.png",
			x: 29,
			y: 32,
			w: 59,
			h: 49
		},
		"reduced-hat-3": {
			type: "spritesheet",
			base: s,
			url: "3.png",
			x: 44,
			y: 34,
			w: 39,
			h: 27
		},
		"reduced-hat-30": {
			type: "spritesheet",
			base: s,
			url: "30.png",
			x: 31,
			y: 16,
			w: 62,
			h: 72
		},
		"reduced-hat-31": {
			type: "spritesheet",
			base: s,
			url: "31.png",
			x: 25,
			y: 24,
			w: 65,
			h: 55
		},
		"reduced-hat-32": {
			type: "spritesheet",
			base: s,
			url: "32.png",
			x: 9,
			y: 33,
			w: 77,
			h: 50
		},
		"reduced-hat-33": {
			type: "spritesheet",
			base: s,
			url: "33.png",
			x: 32,
			y: 24,
			w: 59,
			h: 48
		},
		"reduced-hat-34": {
			type: "spritesheet",
			base: s,
			url: "34.png",
			x: 48,
			y: 31,
			w: 38,
			h: 33
		},
		"reduced-hat-35": {
			type: "spritesheet",
			base: s,
			url: "35.png",
			x: 46,
			y: 30,
			w: 39,
			h: 35
		},
		"reduced-hat-36": {
			type: "spritesheet",
			base: s,
			url: "36.png",
			x: 29,
			y: 16,
			w: 65,
			h: 57
		},
		"reduced-hat-37": {
			type: "spritesheet",
			base: s,
			url: "37.png",
			x: 26,
			y: 25,
			w: 62,
			h: 52
		},
		"reduced-hat-38": {
			type: "spritesheet",
			base: s,
			url: "38.png",
			x: 25,
			y: 28,
			w: 63,
			h: 49
		},
		"reduced-hat-39": {
			type: "spritesheet",
			base: s,
			url: "39.png",
			x: 33,
			y: 39,
			w: 61,
			h: 55
		},
		"reduced-hat-4": {
			type: "spritesheet",
			base: s,
			url: "4.png",
			x: 28,
			y: 31,
			w: 70,
			h: 40
		},
		"reduced-hat-40": {
			type: "spritesheet",
			base: s,
			url: "40.png",
			x: 37,
			y: 47,
			w: 49,
			h: 39
		},
		"reduced-hat-41": {
			type: "spritesheet",
			base: s,
			url: "41.png",
			x: 36,
			y: 42,
			w: 55,
			h: 54
		},
		"reduced-hat-42": {
			type: "spritesheet",
			base: s,
			url: "42.png",
			x: 31,
			y: 38,
			w: 57,
			h: 47
		},
		"reduced-hat-43": {
			type: "spritesheet",
			base: s,
			url: "43.png",
			x: 37,
			y: 32,
			w: 54,
			h: 43
		},
		"reduced-hat-44": {
			type: "spritesheet",
			base: s,
			url: "44.png",
			x: 32,
			y: 34,
			w: 63,
			h: 39
		},
		"reduced-hat-45": {
			type: "spritesheet",
			base: s,
			url: "45.png",
			x: 35,
			y: 22,
			w: 58,
			h: 48
		},
		"reduced-hat-46": {
			type: "spritesheet",
			base: s,
			url: "46.png",
			x: 29,
			y: 28,
			w: 66,
			h: 59
		},
		"reduced-hat-47": {
			type: "spritesheet",
			base: s,
			url: "47.png",
			x: 41,
			y: 43,
			w: 44,
			h: 39
		},
		"reduced-hat-48": {
			type: "spritesheet",
			base: s,
			url: "48.png",
			x: 31,
			y: 24,
			w: 68,
			h: 63
		},
		"reduced-hat-49": {
			type: "spritesheet",
			base: s,
			url: "49.png",
			x: 34,
			y: 30,
			w: 55,
			h: 58
		},
		"reduced-hat-5": {
			type: "spritesheet",
			base: s,
			url: "5.png",
			x: 29,
			y: 20,
			w: 76,
			h: 56
		},
		"reduced-hat-50": {
			type: "spritesheet",
			base: s,
			url: "50.png",
			x: 10,
			y: 41,
			w: 76,
			h: 56
		},
		"reduced-hat-51": {
			type: "spritesheet",
			base: s,
			url: "51.png",
			x: 43,
			y: 48,
			w: 46,
			h: 46
		},
		"reduced-hat-52": {
			type: "spritesheet",
			base: s,
			url: "52.png",
			x: 50,
			y: 56,
			w: 35,
			h: 35
		},
		"reduced-hat-53": {
			type: "spritesheet",
			base: s,
			url: "53.png",
			x: 46,
			y: 43,
			w: 40,
			h: 48
		},
		"reduced-hat-54": {
			type: "spritesheet",
			base: s,
			url: "54.png",
			x: 37,
			y: 31,
			w: 50,
			h: 40
		},
		"reduced-hat-55": {
			type: "spritesheet",
			base: s,
			url: "55.png",
			x: 25,
			y: 26,
			w: 60,
			h: 56
		},
		"reduced-hat-56": {
			type: "spritesheet",
			base: s,
			url: "56.png",
			x: 34,
			y: 26,
			w: 59,
			h: 81
		},
		"reduced-hat-57": {
			type: "spritesheet",
			base: s,
			url: "57.png",
			x: 38,
			y: 21,
			w: 52,
			h: 69
		},
		"reduced-hat-58": {
			type: "spritesheet",
			base: s,
			url: "58.png",
			x: 39,
			y: 32,
			w: 51,
			h: 71
		},
		"reduced-hat-59": {
			type: "spritesheet",
			base: s,
			url: "59.png",
			x: 33,
			y: 41,
			w: 54,
			h: 45
		},
		"reduced-hat-6": {
			type: "spritesheet",
			base: s,
			url: "6.png",
			x: 50,
			y: 23,
			w: 32,
			h: 44
		},
		"reduced-hat-60": {
			type: "spritesheet",
			base: s,
			url: "60.png",
			x: 16,
			y: 25,
			w: 68,
			h: 62
		},
		"reduced-hat-61": {
			type: "spritesheet",
			base: s,
			url: "61.png",
			x: 9,
			y: 27,
			w: 81,
			h: 56
		},
		"reduced-hat-62": {
			type: "spritesheet",
			base: s,
			url: "62.png",
			x: 27,
			y: 18,
			w: 62,
			h: 74
		},
		"reduced-hat-63": {
			type: "spritesheet",
			base: s,
			url: "63.png",
			x: 26,
			y: 33,
			w: 69,
			h: 47
		},
		"reduced-hat-64": {
			type: "spritesheet",
			base: s,
			url: "64.png",
			x: 41,
			y: 13,
			w: 47,
			h: 73
		},
		"reduced-hat-65": {
			type: "spritesheet",
			base: s,
			url: "65.png",
			x: 38,
			y: 16,
			w: 52,
			h: 69
		},
		"reduced-hat-66": {
			type: "spritesheet",
			base: s,
			url: "66.png",
			x: 32,
			y: 41,
			w: 55,
			h: 35
		},
		"reduced-hat-67": {
			type: "spritesheet",
			base: s,
			url: "67.png",
			x: 33,
			y: 27,
			w: 57,
			h: 54
		},
		"reduced-hat-68": {
			type: "spritesheet",
			base: s,
			url: "68.png",
			x: 17,
			y: 11,
			w: 78,
			h: 75
		},
		"reduced-hat-69": {
			type: "spritesheet",
			base: s,
			url: "69.png",
			x: 26,
			y: 26,
			w: 64,
			h: 56
		},
		"reduced-hat-7": {
			type: "spritesheet",
			base: s,
			url: "7.png",
			x: 31,
			y: 28,
			w: 58,
			h: 41
		},
		"reduced-hat-70": {
			type: "spritesheet",
			base: s,
			url: "70.png",
			x: 32,
			y: 26,
			w: 62,
			h: 55
		},
		"reduced-hat-8": {
			type: "spritesheet",
			base: s,
			url: "8.png",
			x: 32,
			y: 35,
			w: 49,
			h: 29
		},
		"reduced-hat-9": {
			type: "spritesheet",
			base: s,
			url: "9.png",
			x: 27,
			y: 23,
			w: 64,
			h: 49
		},
		"reduced-hat-71": {
			type: "spritesheet",
			base: s,
			url: "71.png",
			x: 30,
			y: 28,
			w: 67,
			h: 64
		},
		"reduced-hat-72": {
			type: "spritesheet",
			base: s,
			url: "72.png",
			x: 31,
			y: 19,
			w: 55,
			h: 71
		},
		"reduced-hat-73": {
			type: "spritesheet",
			base: s,
			url: "73.png",
			x: 22,
			y: 23,
			w: 72,
			h: 71
		},
		"reduced-hat-74": {
			type: "spritesheet",
			base: s,
			url: "74.png",
			x: 39,
			y: 40,
			w: 29,
			h: 24
		},
		"reduced-hat-75": {
			type: "spritesheet",
			base: s,
			url: "75.png",
			x: 32,
			y: 13,
			w: 59,
			h: 57
		},
		"normal-weapon-1": {
			type: "spritesheet",
			base: d,
			url: "1.png",
			x: 137,
			y: 140,
			w: 59,
			h: 53
		},
		"normal-weapon-10": {
			type: "spritesheet",
			base: d,
			url: "10.png",
			x: 142,
			y: 131,
			w: 64,
			h: 64
		},
		"normal-weapon-11": {
			type: "spritesheet",
			base: d,
			url: "11.png",
			x: 139,
			y: 133,
			w: 64,
			h: 65
		},
		"normal-weapon-12": {
			type: "spritesheet",
			base: d,
			url: "12.png",
			x: 140,
			y: 132,
			w: 63,
			h: 66
		},
		"normal-weapon-13": {
			type: "spritesheet",
			base: d,
			url: "13.png",
			x: 140,
			y: 131,
			w: 66,
			h: 66
		},
		"normal-weapon-14": {
			type: "spritesheet",
			base: d,
			url: "14.png",
			x: 142,
			y: 130,
			w: 61,
			h: 65
		},
		"normal-weapon-15": {
			type: "spritesheet",
			base: d,
			url: "15.png",
			x: 143,
			y: 138,
			w: 56,
			h: 56
		},
		"normal-weapon-16": {
			type: "spritesheet",
			base: d,
			url: "16.png",
			x: 131,
			y: 58,
			w: 106,
			h: 169
		},
		"normal-weapon-17": {
			type: "spritesheet",
			base: d,
			url: "17.png",
			x: 130,
			y: 49,
			w: 105,
			h: 177
		},
		"normal-weapon-18": {
			type: "spritesheet",
			base: d,
			url: "18.png",
			x: 129,
			y: 41,
			w: 114,
			h: 182
		},
		"normal-weapon-19": {
			type: "spritesheet",
			base: d,
			url: "19.png",
			x: 126,
			y: 57,
			w: 110,
			h: 172
		},
		"normal-weapon-2": {
			type: "spritesheet",
			base: d,
			url: "2.png",
			x: 143,
			y: 142,
			w: 52,
			h: 52
		},
		"normal-weapon-20": {
			type: "spritesheet",
			base: d,
			url: "20.png",
			x: 119,
			y: 15,
			w: 141,
			h: 217
		},
		"normal-weapon-21": {
			type: "spritesheet",
			base: d,
			url: "21.png",
			x: 127,
			y: 31,
			w: 141,
			h: 196
		},
		"normal-weapon-22": {
			type: "spritesheet",
			base: d,
			url: "22.png",
			x: 120,
			y: 13,
			w: 130,
			h: 216
		},
		"normal-weapon-23": {
			type: "spritesheet",
			base: d,
			url: "23.png",
			x: 129,
			y: 32,
			w: 149,
			h: 192
		},
		"normal-weapon-24": {
			type: "spritesheet",
			base: d,
			url: "24.png",
			x: 123,
			y: 37,
			w: 141,
			h: 192
		},
		"normal-weapon-25": {
			type: "spritesheet",
			base: d,
			url: "25.png",
			x: 144,
			y: 142,
			w: 51,
			h: 52
		},
		"normal-weapon-26": {
			type: "spritesheet",
			base: d,
			url: "26.png",
			x: 144,
			y: 142,
			w: 51,
			h: 52
		},
		"normal-weapon-27": {
			type: "spritesheet",
			base: d,
			url: "27.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-28": {
			type: "spritesheet",
			base: d,
			url: "28.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-29": {
			type: "spritesheet",
			base: d,
			url: "29.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-3": {
			type: "spritesheet",
			base: d,
			url: "3.png",
			x: 141,
			y: 136,
			w: 62,
			h: 59
		},
		"normal-weapon-30": {
			type: "spritesheet",
			base: d,
			url: "30.png",
			x: 144,
			y: 131,
			w: 61,
			h: 62
		},
		"normal-weapon-31": {
			type: "spritesheet",
			base: d,
			url: "31.png",
			x: 144,
			y: 129,
			w: 64,
			h: 64
		},
		"normal-weapon-32": {
			type: "spritesheet",
			base: d,
			url: "32.png",
			x: 144,
			y: 131,
			w: 61,
			h: 62
		},
		"normal-weapon-33": {
			type: "spritesheet",
			base: d,
			url: "33.png",
			x: 144,
			y: 129,
			w: 64,
			h: 64
		},
		"normal-weapon-34": {
			type: "spritesheet",
			base: d,
			url: "34.png",
			x: 142,
			y: 125,
			w: 71,
			h: 70
		},
		"normal-weapon-35": {
			type: "spritesheet",
			base: d,
			url: "35.png",
			x: 142,
			y: 125,
			w: 71,
			h: 70
		},
		"normal-weapon-36": {
			type: "spritesheet",
			base: d,
			url: "36.png",
			x: 133,
			y: 90,
			w: 86,
			h: 128
		},
		"normal-weapon-37": {
			type: "spritesheet",
			base: d,
			url: "37.png",
			x: 133,
			y: 90,
			w: 86,
			h: 128
		},
		"normal-weapon-38": {
			type: "spritesheet",
			base: d,
			url: "38.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-39": {
			type: "spritesheet",
			base: d,
			url: "39.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-4": {
			type: "spritesheet",
			base: d,
			url: "4.png",
			x: 144,
			y: 140,
			w: 53,
			h: 55
		},
		"normal-weapon-40": {
			type: "spritesheet",
			base: d,
			url: "40.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-41": {
			type: "spritesheet",
			base: d,
			url: "41.png",
			x: 127,
			y: 51,
			w: 108,
			h: 173
		},
		"normal-weapon-42": {
			type: "spritesheet",
			base: d,
			url: "42.png",
			x: 129,
			y: 48,
			w: 119,
			h: 179
		},
		"normal-weapon-43": {
			type: "spritesheet",
			base: d,
			url: "43.png",
			x: 127,
			y: 51,
			w: 108,
			h: 173
		},
		"normal-weapon-44": {
			type: "spritesheet",
			base: d,
			url: "44.png",
			x: 129,
			y: 48,
			w: 119,
			h: 179
		},
		"normal-weapon-45": {
			type: "spritesheet",
			base: d,
			url: "45.png",
			x: 128,
			y: 31,
			w: 113,
			h: 196
		},
		"normal-weapon-46": {
			type: "spritesheet",
			base: d,
			url: "46.png",
			x: 128,
			y: 31,
			w: 113,
			h: 196
		},
		"normal-weapon-47": {
			type: "spritesheet",
			base: d,
			url: "47.png",
			x: 131,
			y: 58,
			w: 106,
			h: 169
		},
		"normal-weapon-48": {
			type: "spritesheet",
			base: d,
			url: "48.png",
			x: 140,
			y: 143,
			w: 54,
			h: 53
		},
		"normal-weapon-49": {
			type: "spritesheet",
			base: d,
			url: "49.png",
			x: 141,
			y: 126,
			w: 70,
			h: 70
		},
		"normal-weapon-5": {
			type: "spritesheet",
			base: d,
			url: "5.png",
			x: 139,
			y: 128,
			w: 54,
			h: 69
		},
		"normal-weapon-50": {
			type: "spritesheet",
			base: d,
			url: "50.png",
			x: 141,
			y: 134,
			w: 62,
			h: 63
		},
		"normal-weapon-51": {
			type: "spritesheet",
			base: d,
			url: "51.png",
			x: 139,
			y: 137,
			w: 62,
			h: 62
		},
		"normal-weapon-52": {
			type: "spritesheet",
			base: d,
			url: "52.png",
			x: 139,
			y: 133,
			w: 66,
			h: 65
		},
		"normal-weapon-53": {
			type: "spritesheet",
			base: d,
			url: "53.png",
			x: 138,
			y: 127,
			w: 72,
			h: 72
		},
		"normal-weapon-54": {
			type: "spritesheet",
			base: d,
			url: "54.png",
			x: 142,
			y: 130,
			w: 63,
			h: 67
		},
		"normal-weapon-55": {
			type: "spritesheet",
			base: d,
			url: "55.png",
			x: 129,
			y: 50,
			w: 108,
			h: 175
		},
		"normal-weapon-56": {
			type: "spritesheet",
			base: d,
			url: "56.png",
			x: 126,
			y: 56,
			w: 115,
			h: 171
		},
		"normal-weapon-57": {
			type: "spritesheet",
			base: d,
			url: "57.png",
			x: 129,
			y: 52,
			w: 109,
			h: 174
		},
		"normal-weapon-58": {
			type: "spritesheet",
			base: d,
			url: "58.png",
			x: 128,
			y: 30,
			w: 124,
			h: 198
		},
		"normal-weapon-59": {
			type: "spritesheet",
			base: d,
			url: "59.png",
			x: 128,
			y: 46,
			w: 113,
			h: 184
		},
		"normal-weapon-6": {
			type: "spritesheet",
			base: d,
			url: "6.png",
			x: 141,
			y: 127,
			w: 64,
			h: 70
		},
		"normal-weapon-60": {
			type: "spritesheet",
			base: d,
			url: "60.png",
			x: 123,
			y: 16,
			w: 129,
			h: 210
		},
		"normal-weapon-61": {
			type: "spritesheet",
			base: d,
			url: "61.png",
			x: 132,
			y: 33,
			w: 103,
			h: 190
		},
		"normal-weapon-62": {
			type: "spritesheet",
			base: d,
			url: "62.png",
			x: 128,
			y: 26,
			w: 127,
			h: 198
		},
		"normal-weapon-63": {
			type: "spritesheet",
			base: d,
			url: "63.png",
			x: 127,
			y: 43,
			w: 118,
			h: 183
		},
		"normal-weapon-64": {
			type: "spritesheet",
			base: d,
			url: "64.png",
			x: 128,
			y: 28,
			w: 122,
			h: 199
		},
		"normal-weapon-65": {
			type: "spritesheet",
			base: d,
			url: "65.png",
			x: 80,
			y: 109,
			w: 48,
			h: 68
		},
		"normal-weapon-66": {
			type: "spritesheet",
			base: d,
			url: "66.png",
			x: 83,
			y: 143,
			w: 107,
			h: 75
		},
		"normal-weapon-67": {
			type: "spritesheet",
			base: d,
			url: "67.png",
			x: 152,
			y: 116,
			w: 55,
			h: 74
		},
		"normal-weapon-68": {
			type: "spritesheet",
			base: d,
			url: "68.png",
			x: 121,
			y: 3,
			w: 144,
			h: 223
		},
		"normal-weapon-69": {
			type: "spritesheet",
			base: d,
			url: "69.png",
			x: 141,
			y: 124,
			w: 55,
			h: 73
		},
		"normal-weapon-7": {
			type: "spritesheet",
			base: d,
			url: "7.png",
			x: 130,
			y: 53,
			w: 108,
			h: 173
		},
		"normal-weapon-70": {
			type: "spritesheet",
			base: d,
			url: "70.png",
			x: 78,
			y: 120,
			w: 66,
			h: 75
		},
		"normal-weapon-71": {
			type: "spritesheet",
			base: d,
			url: "71.png",
			x: 150,
			y: 131,
			w: 59,
			h: 59
		},
		"normal-weapon-72": {
			type: "spritesheet",
			base: d,
			url: "72.png",
			x: 156,
			y: 143,
			w: 47,
			h: 50
		},
		"normal-weapon-73": {
			type: "spritesheet",
			base: d,
			url: "73.png",
			x: 150,
			y: 119,
			w: 70,
			h: 72
		},
		"normal-weapon-74": {
			type: "spritesheet",
			base: d,
			url: "74.png",
			x: 150,
			y: 139,
			w: 48,
			h: 52
		},
		"normal-weapon-75": {
			type: "spritesheet",
			base: d,
			url: "75.png",
			x: 92,
			y: 150,
			w: 157,
			h: 59
		},
		"normal-weapon-76": {
			type: "spritesheet",
			base: d,
			url: "76.png",
			x: 172,
			y: 131,
			w: 50,
			h: 50
		},
		"normal-weapon-77": {
			type: "spritesheet",
			base: d,
			url: "77.png",
			x: 128,
			y: 6,
			w: 112,
			h: 210
		},
		"normal-weapon-78": {
			type: "spritesheet",
			base: d,
			url: "78.png",
			x: 98,
			y: 113,
			w: 139,
			h: 88
		},
		"normal-weapon-79": {
			type: "spritesheet",
			base: d,
			url: "79.png",
			x: 128,
			y: 99,
			w: 85,
			h: 117
		},
		"normal-weapon-8": {
			type: "spritesheet",
			base: d,
			url: "8.png",
			x: 131,
			y: 61,
			w: 104,
			h: 162
		},
		"normal-weapon-80": {
			type: "spritesheet",
			base: d,
			url: "80.png",
			x: 125,
			y: 60,
			w: 125,
			h: 115
		},
		"normal-weapon-81": {
			type: "spritesheet",
			base: d,
			url: "81.png",
			x: 60,
			y: -10,
			w: 2048,
			h: 256
		},
		"normal-weapon-82": {
			type: "spritesheet",
			base: d,
			url: "82.png",
			x: 122,
			y: 78,
			w: 113,
			h: 147
		},
		"normal-weapon-83": {
			type: "spritesheet",
			base: d,
			url: "83.png",
			x: 138,
			y: 131,
			w: 68,
			h: 68
		},
		"normal-weapon-84": {
			type: "spritesheet",
			base: d,
			url: "84.png",
			x: 134,
			y: 127,
			w: 77,
			h: 77
		},
		"normal-weapon-85": {
			type: "spritesheet",
			base: d,
			url: "85.png",
			x: 132,
			y: 131,
			w: 75,
			h: 75
		},
		"normal-weapon-86": {
			type: "spritesheet",
			base: d,
			url: "86.png",
			x: 132,
			y: 131,
			w: 74,
			h: 73
		},
		"normal-weapon-9": {
			type: "spritesheet",
			base: d,
			url: "9.png",
			x: 142,
			y: 136,
			w: 59,
			h: 59
		},
		"normal-weapon-87": {
			type: "spritesheet",
			base: d,
			url: "87.png",
			x: 130,
			y: 76,
			w: 95,
			h: 147
		},
		"normal-weapon-88": {
			type: "spritesheet",
			base: d,
			url: "88.png",
			x: 145,
			y: 127,
			w: 65,
			h: 65
		},
		"normal-weapon-89": {
			type: "spritesheet",
			base: d,
			url: "89.png",
			x: 142,
			y: 64,
			w: 95,
			h: 137
		},
		"normal-weapon-90": {
			type: "spritesheet",
			base: d,
			url: "90.png",
			x: 148,
			y: 130,
			w: 58,
			h: 64
		},
		"normal-weapon-91": {
			type: "spritesheet",
			base: d,
			url: "91.png",
			x: 145,
			y: 128,
			w: 61,
			h: 61
		},
		"normal-hair-male-1-1": {
			type: "spritesheet",
			base: o,
			url: "1-1.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-10": {
			type: "spritesheet",
			base: o,
			url: "1-10.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-11": {
			type: "spritesheet",
			base: o,
			url: "1-11.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-12": {
			type: "spritesheet",
			base: o,
			url: "1-12.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-13": {
			type: "spritesheet",
			base: o,
			url: "1-13.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-14": {
			type: "spritesheet",
			base: o,
			url: "1-14.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-15": {
			type: "spritesheet",
			base: o,
			url: "1-15.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-16": {
			type: "spritesheet",
			base: o,
			url: "1-16.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-2": {
			type: "spritesheet",
			base: o,
			url: "1-2.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-3": {
			type: "spritesheet",
			base: o,
			url: "1-3.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-4": {
			type: "spritesheet",
			base: o,
			url: "1-4.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-5": {
			type: "spritesheet",
			base: o,
			url: "1-5.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-6": {
			type: "spritesheet",
			base: o,
			url: "1-6.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-7": {
			type: "spritesheet",
			base: o,
			url: "1-7.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-8": {
			type: "spritesheet",
			base: o,
			url: "1-8.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-9": {
			type: "spritesheet",
			base: o,
			url: "1-9.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-2-1": {
			type: "spritesheet",
			base: o,
			url: "2-1.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-10": {
			type: "spritesheet",
			base: o,
			url: "2-10.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-11": {
			type: "spritesheet",
			base: o,
			url: "2-11.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-12": {
			type: "spritesheet",
			base: o,
			url: "2-12.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-13": {
			type: "spritesheet",
			base: o,
			url: "2-13.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-14": {
			type: "spritesheet",
			base: o,
			url: "2-14.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-15": {
			type: "spritesheet",
			base: o,
			url: "2-15.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-16": {
			type: "spritesheet",
			base: o,
			url: "2-16.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-2": {
			type: "spritesheet",
			base: o,
			url: "2-2.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-3": {
			type: "spritesheet",
			base: o,
			url: "2-3.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-4": {
			type: "spritesheet",
			base: o,
			url: "2-4.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-5": {
			type: "spritesheet",
			base: o,
			url: "2-5.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-6": {
			type: "spritesheet",
			base: o,
			url: "2-6.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-7": {
			type: "spritesheet",
			base: o,
			url: "2-7.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-8": {
			type: "spritesheet",
			base: o,
			url: "2-8.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-9": {
			type: "spritesheet",
			base: o,
			url: "2-9.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-3-1": {
			type: "spritesheet",
			base: o,
			url: "3-1.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-10": {
			type: "spritesheet",
			base: o,
			url: "3-10.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-11": {
			type: "spritesheet",
			base: o,
			url: "3-11.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-12": {
			type: "spritesheet",
			base: o,
			url: "3-12.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-13": {
			type: "spritesheet",
			base: o,
			url: "3-13.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-14": {
			type: "spritesheet",
			base: o,
			url: "3-14.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-15": {
			type: "spritesheet",
			base: o,
			url: "3-15.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-16": {
			type: "spritesheet",
			base: o,
			url: "3-16.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-2": {
			type: "spritesheet",
			base: o,
			url: "3-2.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-3": {
			type: "spritesheet",
			base: o,
			url: "3-3.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-4": {
			type: "spritesheet",
			base: o,
			url: "3-4.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-5": {
			type: "spritesheet",
			base: o,
			url: "3-5.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-6": {
			type: "spritesheet",
			base: o,
			url: "3-6.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-7": {
			type: "spritesheet",
			base: o,
			url: "3-7.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-8": {
			type: "spritesheet",
			base: o,
			url: "3-8.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-9": {
			type: "spritesheet",
			base: o,
			url: "3-9.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-4-1": {
			type: "spritesheet",
			base: o,
			url: "4-1.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-10": {
			type: "spritesheet",
			base: o,
			url: "4-10.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-11": {
			type: "spritesheet",
			base: o,
			url: "4-11.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-12": {
			type: "spritesheet",
			base: o,
			url: "4-12.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-13": {
			type: "spritesheet",
			base: o,
			url: "4-13.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-14": {
			type: "spritesheet",
			base: o,
			url: "4-14.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-15": {
			type: "spritesheet",
			base: o,
			url: "4-15.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-16": {
			type: "spritesheet",
			base: o,
			url: "4-16.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-2": {
			type: "spritesheet",
			base: o,
			url: "4-2.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-3": {
			type: "spritesheet",
			base: o,
			url: "4-3.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-4": {
			type: "spritesheet",
			base: o,
			url: "4-4.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-5": {
			type: "spritesheet",
			base: o,
			url: "4-5.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-6": {
			type: "spritesheet",
			base: o,
			url: "4-6.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-7": {
			type: "spritesheet",
			base: o,
			url: "4-7.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-8": {
			type: "spritesheet",
			base: o,
			url: "4-8.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-9": {
			type: "spritesheet",
			base: o,
			url: "4-9.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-5-1": {
			type: "spritesheet",
			base: o,
			url: "5-1.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-10": {
			type: "spritesheet",
			base: o,
			url: "5-10.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-11": {
			type: "spritesheet",
			base: o,
			url: "5-11.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-12": {
			type: "spritesheet",
			base: o,
			url: "5-12.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-13": {
			type: "spritesheet",
			base: o,
			url: "5-13.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-14": {
			type: "spritesheet",
			base: o,
			url: "5-14.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-15": {
			type: "spritesheet",
			base: o,
			url: "5-15.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-16": {
			type: "spritesheet",
			base: o,
			url: "5-16.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-2": {
			type: "spritesheet",
			base: o,
			url: "5-2.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-3": {
			type: "spritesheet",
			base: o,
			url: "5-3.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-4": {
			type: "spritesheet",
			base: o,
			url: "5-4.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-5": {
			type: "spritesheet",
			base: o,
			url: "5-5.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-6": {
			type: "spritesheet",
			base: o,
			url: "5-6.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-7": {
			type: "spritesheet",
			base: o,
			url: "5-7.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-8": {
			type: "spritesheet",
			base: o,
			url: "5-8.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-9": {
			type: "spritesheet",
			base: o,
			url: "5-9.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-6-1": {
			type: "spritesheet",
			base: o,
			url: "6-1.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-10": {
			type: "spritesheet",
			base: o,
			url: "6-10.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-11": {
			type: "spritesheet",
			base: o,
			url: "6-11.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-12": {
			type: "spritesheet",
			base: o,
			url: "6-12.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-13": {
			type: "spritesheet",
			base: o,
			url: "6-13.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-14": {
			type: "spritesheet",
			base: o,
			url: "6-14.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-15": {
			type: "spritesheet",
			base: o,
			url: "6-15.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-16": {
			type: "spritesheet",
			base: o,
			url: "6-16.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-2": {
			type: "spritesheet",
			base: o,
			url: "6-2.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-3": {
			type: "spritesheet",
			base: o,
			url: "6-3.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-4": {
			type: "spritesheet",
			base: o,
			url: "6-4.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-5": {
			type: "spritesheet",
			base: o,
			url: "6-5.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-6": {
			type: "spritesheet",
			base: o,
			url: "6-6.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-7": {
			type: "spritesheet",
			base: o,
			url: "6-7.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-8": {
			type: "spritesheet",
			base: o,
			url: "6-8.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-9": {
			type: "spritesheet",
			base: o,
			url: "6-9.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-7-1": {
			type: "spritesheet",
			base: o,
			url: "7-1.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-10": {
			type: "spritesheet",
			base: o,
			url: "7-10.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-11": {
			type: "spritesheet",
			base: o,
			url: "7-11.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-12": {
			type: "spritesheet",
			base: o,
			url: "7-12.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-13": {
			type: "spritesheet",
			base: o,
			url: "7-13.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-14": {
			type: "spritesheet",
			base: o,
			url: "7-14.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-15": {
			type: "spritesheet",
			base: o,
			url: "7-15.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-16": {
			type: "spritesheet",
			base: o,
			url: "7-16.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-2": {
			type: "spritesheet",
			base: o,
			url: "7-2.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-3": {
			type: "spritesheet",
			base: o,
			url: "7-3.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-4": {
			type: "spritesheet",
			base: o,
			url: "7-4.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-5": {
			type: "spritesheet",
			base: o,
			url: "7-5.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-6": {
			type: "spritesheet",
			base: o,
			url: "7-6.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-7": {
			type: "spritesheet",
			base: o,
			url: "7-7.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-8": {
			type: "spritesheet",
			base: o,
			url: "7-8.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-9": {
			type: "spritesheet",
			base: o,
			url: "7-9.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-8-1": {
			type: "spritesheet",
			base: o,
			url: "8-1.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-10": {
			type: "spritesheet",
			base: o,
			url: "8-10.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-11": {
			type: "spritesheet",
			base: o,
			url: "8-11.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-12": {
			type: "spritesheet",
			base: o,
			url: "8-12.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-13": {
			type: "spritesheet",
			base: o,
			url: "8-13.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-14": {
			type: "spritesheet",
			base: o,
			url: "8-14.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-15": {
			type: "spritesheet",
			base: o,
			url: "8-15.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-16": {
			type: "spritesheet",
			base: o,
			url: "8-16.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-2": {
			type: "spritesheet",
			base: o,
			url: "8-2.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-3": {
			type: "spritesheet",
			base: o,
			url: "8-3.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-4": {
			type: "spritesheet",
			base: o,
			url: "8-4.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-5": {
			type: "spritesheet",
			base: o,
			url: "8-5.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-6": {
			type: "spritesheet",
			base: o,
			url: "8-6.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-7": {
			type: "spritesheet",
			base: o,
			url: "8-7.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-8": {
			type: "spritesheet",
			base: o,
			url: "8-8.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-9": {
			type: "spritesheet",
			base: o,
			url: "8-9.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"reduced-hair-male-1-1": {
			type: "spritesheet",
			base: i,
			url: "1-1.png",
			x: 41,
			y: 45,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-10": {
			type: "spritesheet",
			base: i,
			url: "1-10.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-11": {
			type: "spritesheet",
			base: i,
			url: "1-11.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-12": {
			type: "spritesheet",
			base: i,
			url: "1-12.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-13": {
			type: "spritesheet",
			base: i,
			url: "1-13.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-14": {
			type: "spritesheet",
			base: i,
			url: "1-14.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-15": {
			type: "spritesheet",
			base: i,
			url: "1-15.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-16": {
			type: "spritesheet",
			base: i,
			url: "1-16.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-2": {
			type: "spritesheet",
			base: i,
			url: "1-2.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-3": {
			type: "spritesheet",
			base: i,
			url: "1-3.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-4": {
			type: "spritesheet",
			base: i,
			url: "1-4.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-5": {
			type: "spritesheet",
			base: i,
			url: "1-5.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-6": {
			type: "spritesheet",
			base: i,
			url: "1-6.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-7": {
			type: "spritesheet",
			base: i,
			url: "1-7.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-8": {
			type: "spritesheet",
			base: i,
			url: "1-8.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-9": {
			type: "spritesheet",
			base: i,
			url: "1-9.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-2-1": {
			type: "spritesheet",
			base: i,
			url: "2-1.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-10": {
			type: "spritesheet",
			base: i,
			url: "2-10.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-11": {
			type: "spritesheet",
			base: i,
			url: "2-11.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-12": {
			type: "spritesheet",
			base: i,
			url: "2-12.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-13": {
			type: "spritesheet",
			base: i,
			url: "2-13.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-14": {
			type: "spritesheet",
			base: i,
			url: "2-14.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-15": {
			type: "spritesheet",
			base: i,
			url: "2-15.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-16": {
			type: "spritesheet",
			base: i,
			url: "2-16.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-2": {
			type: "spritesheet",
			base: i,
			url: "2-2.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-3": {
			type: "spritesheet",
			base: i,
			url: "2-3.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-4": {
			type: "spritesheet",
			base: i,
			url: "2-4.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-5": {
			type: "spritesheet",
			base: i,
			url: "2-5.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-6": {
			type: "spritesheet",
			base: i,
			url: "2-6.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-7": {
			type: "spritesheet",
			base: i,
			url: "2-7.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-8": {
			type: "spritesheet",
			base: i,
			url: "2-8.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-9": {
			type: "spritesheet",
			base: i,
			url: "2-9.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-3-1": {
			type: "spritesheet",
			base: i,
			url: "3-1.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-10": {
			type: "spritesheet",
			base: i,
			url: "3-10.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-11": {
			type: "spritesheet",
			base: i,
			url: "3-11.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-12": {
			type: "spritesheet",
			base: i,
			url: "3-12.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-13": {
			type: "spritesheet",
			base: i,
			url: "3-13.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-14": {
			type: "spritesheet",
			base: i,
			url: "3-14.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-15": {
			type: "spritesheet",
			base: i,
			url: "3-15.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-16": {
			type: "spritesheet",
			base: i,
			url: "3-16.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-2": {
			type: "spritesheet",
			base: i,
			url: "3-2.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-3": {
			type: "spritesheet",
			base: i,
			url: "3-3.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-4": {
			type: "spritesheet",
			base: i,
			url: "3-4.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-5": {
			type: "spritesheet",
			base: i,
			url: "3-5.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-6": {
			type: "spritesheet",
			base: i,
			url: "3-6.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-7": {
			type: "spritesheet",
			base: i,
			url: "3-7.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-8": {
			type: "spritesheet",
			base: i,
			url: "3-8.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-9": {
			type: "spritesheet",
			base: i,
			url: "3-9.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-4-1": {
			type: "spritesheet",
			base: i,
			url: "4-1.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-10": {
			type: "spritesheet",
			base: i,
			url: "4-10.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-11": {
			type: "spritesheet",
			base: i,
			url: "4-11.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-12": {
			type: "spritesheet",
			base: i,
			url: "4-12.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-13": {
			type: "spritesheet",
			base: i,
			url: "4-13.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-14": {
			type: "spritesheet",
			base: i,
			url: "4-14.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-15": {
			type: "spritesheet",
			base: i,
			url: "4-15.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-16": {
			type: "spritesheet",
			base: i,
			url: "4-16.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-2": {
			type: "spritesheet",
			base: i,
			url: "4-2.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-3": {
			type: "spritesheet",
			base: i,
			url: "4-3.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-4": {
			type: "spritesheet",
			base: i,
			url: "4-4.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-5": {
			type: "spritesheet",
			base: i,
			url: "4-5.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-6": {
			type: "spritesheet",
			base: i,
			url: "4-6.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-7": {
			type: "spritesheet",
			base: i,
			url: "4-7.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-8": {
			type: "spritesheet",
			base: i,
			url: "4-8.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-9": {
			type: "spritesheet",
			base: i,
			url: "4-9.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-5-1": {
			type: "spritesheet",
			base: i,
			url: "5-1.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-10": {
			type: "spritesheet",
			base: i,
			url: "5-10.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-11": {
			type: "spritesheet",
			base: i,
			url: "5-11.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-12": {
			type: "spritesheet",
			base: i,
			url: "5-12.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-13": {
			type: "spritesheet",
			base: i,
			url: "5-13.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-14": {
			type: "spritesheet",
			base: i,
			url: "5-14.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-15": {
			type: "spritesheet",
			base: i,
			url: "5-15.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-16": {
			type: "spritesheet",
			base: i,
			url: "5-16.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-2": {
			type: "spritesheet",
			base: i,
			url: "5-2.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-3": {
			type: "spritesheet",
			base: i,
			url: "5-3.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-4": {
			type: "spritesheet",
			base: i,
			url: "5-4.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-5": {
			type: "spritesheet",
			base: i,
			url: "5-5.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-6": {
			type: "spritesheet",
			base: i,
			url: "5-6.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-7": {
			type: "spritesheet",
			base: i,
			url: "5-7.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-8": {
			type: "spritesheet",
			base: i,
			url: "5-8.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-9": {
			type: "spritesheet",
			base: i,
			url: "5-9.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-6-1": {
			type: "spritesheet",
			base: i,
			url: "6-1.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-10": {
			type: "spritesheet",
			base: i,
			url: "6-10.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-11": {
			type: "spritesheet",
			base: i,
			url: "6-11.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-12": {
			type: "spritesheet",
			base: i,
			url: "6-12.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-13": {
			type: "spritesheet",
			base: i,
			url: "6-13.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-14": {
			type: "spritesheet",
			base: i,
			url: "6-14.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-15": {
			type: "spritesheet",
			base: i,
			url: "6-15.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-16": {
			type: "spritesheet",
			base: i,
			url: "6-16.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-2": {
			type: "spritesheet",
			base: i,
			url: "6-2.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-3": {
			type: "spritesheet",
			base: i,
			url: "6-3.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-4": {
			type: "spritesheet",
			base: i,
			url: "6-4.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-5": {
			type: "spritesheet",
			base: i,
			url: "6-5.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-6": {
			type: "spritesheet",
			base: i,
			url: "6-6.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-7": {
			type: "spritesheet",
			base: i,
			url: "6-7.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-8": {
			type: "spritesheet",
			base: i,
			url: "6-8.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-9": {
			type: "spritesheet",
			base: i,
			url: "6-9.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-7-1": {
			type: "spritesheet",
			base: i,
			url: "7-1.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-10": {
			type: "spritesheet",
			base: i,
			url: "7-10.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-11": {
			type: "spritesheet",
			base: i,
			url: "7-11.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-12": {
			type: "spritesheet",
			base: i,
			url: "7-12.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-13": {
			type: "spritesheet",
			base: i,
			url: "7-13.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-14": {
			type: "spritesheet",
			base: i,
			url: "7-14.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-15": {
			type: "spritesheet",
			base: i,
			url: "7-15.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-16": {
			type: "spritesheet",
			base: i,
			url: "7-16.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-2": {
			type: "spritesheet",
			base: i,
			url: "7-2.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-3": {
			type: "spritesheet",
			base: i,
			url: "7-3.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-4": {
			type: "spritesheet",
			base: i,
			url: "7-4.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-5": {
			type: "spritesheet",
			base: i,
			url: "7-5.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-6": {
			type: "spritesheet",
			base: i,
			url: "7-6.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-7": {
			type: "spritesheet",
			base: i,
			url: "7-7.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-8": {
			type: "spritesheet",
			base: i,
			url: "7-8.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-9": {
			type: "spritesheet",
			base: i,
			url: "7-9.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-8-1": {
			type: "spritesheet",
			base: i,
			url: "8-1.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-10": {
			type: "spritesheet",
			base: i,
			url: "8-10.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-11": {
			type: "spritesheet",
			base: i,
			url: "8-11.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-12": {
			type: "spritesheet",
			base: i,
			url: "8-12.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-13": {
			type: "spritesheet",
			base: i,
			url: "8-13.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-14": {
			type: "spritesheet",
			base: i,
			url: "8-14.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-15": {
			type: "spritesheet",
			base: i,
			url: "8-15.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-16": {
			type: "spritesheet",
			base: i,
			url: "8-16.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-2": {
			type: "spritesheet",
			base: i,
			url: "8-2.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-3": {
			type: "spritesheet",
			base: i,
			url: "8-3.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-4": {
			type: "spritesheet",
			base: i,
			url: "8-4.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-5": {
			type: "spritesheet",
			base: i,
			url: "8-5.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-6": {
			type: "spritesheet",
			base: i,
			url: "8-6.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-7": {
			type: "spritesheet",
			base: i,
			url: "8-7.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-8": {
			type: "spritesheet",
			base: i,
			url: "8-8.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-9": {
			type: "spritesheet",
			base: i,
			url: "8-9.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"normal-hair-female-1-1": {
			type: "spritesheet",
			base: h,
			url: "1-1.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-10": {
			type: "spritesheet",
			base: h,
			url: "1-10.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-11": {
			type: "spritesheet",
			base: h,
			url: "1-11.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-12": {
			type: "spritesheet",
			base: h,
			url: "1-12.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-13": {
			type: "spritesheet",
			base: h,
			url: "1-13.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-14": {
			type: "spritesheet",
			base: h,
			url: "1-14.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-15": {
			type: "spritesheet",
			base: h,
			url: "1-15.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-16": {
			type: "spritesheet",
			base: h,
			url: "1-16.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-2": {
			type: "spritesheet",
			base: h,
			url: "1-2.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-3": {
			type: "spritesheet",
			base: h,
			url: "1-3.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-4": {
			type: "spritesheet",
			base: h,
			url: "1-4.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-5": {
			type: "spritesheet",
			base: h,
			url: "1-5.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-6": {
			type: "spritesheet",
			base: h,
			url: "1-6.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-7": {
			type: "spritesheet",
			base: h,
			url: "1-7.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-8": {
			type: "spritesheet",
			base: h,
			url: "1-8.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-9": {
			type: "spritesheet",
			base: h,
			url: "1-9.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-10-1": {
			type: "spritesheet",
			base: h,
			url: "10-1.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-10": {
			type: "spritesheet",
			base: h,
			url: "10-10.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-11": {
			type: "spritesheet",
			base: h,
			url: "10-11.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-12": {
			type: "spritesheet",
			base: h,
			url: "10-12.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-13": {
			type: "spritesheet",
			base: h,
			url: "10-13.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-14": {
			type: "spritesheet",
			base: h,
			url: "10-14.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-15": {
			type: "spritesheet",
			base: h,
			url: "10-15.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-16": {
			type: "spritesheet",
			base: h,
			url: "10-16.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-2": {
			type: "spritesheet",
			base: h,
			url: "10-2.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-3": {
			type: "spritesheet",
			base: h,
			url: "10-3.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-4": {
			type: "spritesheet",
			base: h,
			url: "10-4.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-5": {
			type: "spritesheet",
			base: h,
			url: "10-5.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-6": {
			type: "spritesheet",
			base: h,
			url: "10-6.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-7": {
			type: "spritesheet",
			base: h,
			url: "10-7.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-8": {
			type: "spritesheet",
			base: h,
			url: "10-8.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-9": {
			type: "spritesheet",
			base: h,
			url: "10-9.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-11-1": {
			type: "spritesheet",
			base: h,
			url: "11-1.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-10": {
			type: "spritesheet",
			base: h,
			url: "11-10.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-11": {
			type: "spritesheet",
			base: h,
			url: "11-11.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-12": {
			type: "spritesheet",
			base: h,
			url: "11-12.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-13": {
			type: "spritesheet",
			base: h,
			url: "11-13.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-14": {
			type: "spritesheet",
			base: h,
			url: "11-14.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-15": {
			type: "spritesheet",
			base: h,
			url: "11-15.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-16": {
			type: "spritesheet",
			base: h,
			url: "11-16.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-2": {
			type: "spritesheet",
			base: h,
			url: "11-2.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-3": {
			type: "spritesheet",
			base: h,
			url: "11-3.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-4": {
			type: "spritesheet",
			base: h,
			url: "11-4.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-5": {
			type: "spritesheet",
			base: h,
			url: "11-5.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-6": {
			type: "spritesheet",
			base: h,
			url: "11-6.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-7": {
			type: "spritesheet",
			base: h,
			url: "11-7.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-8": {
			type: "spritesheet",
			base: h,
			url: "11-8.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-9": {
			type: "spritesheet",
			base: h,
			url: "11-9.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-12-1": {
			type: "spritesheet",
			base: h,
			url: "12-1.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-10": {
			type: "spritesheet",
			base: h,
			url: "12-10.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-11": {
			type: "spritesheet",
			base: h,
			url: "12-11.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-12": {
			type: "spritesheet",
			base: h,
			url: "12-12.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-13": {
			type: "spritesheet",
			base: h,
			url: "12-13.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-14": {
			type: "spritesheet",
			base: h,
			url: "12-14.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-15": {
			type: "spritesheet",
			base: h,
			url: "12-15.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-16": {
			type: "spritesheet",
			base: h,
			url: "12-16.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-2": {
			type: "spritesheet",
			base: h,
			url: "12-2.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-3": {
			type: "spritesheet",
			base: h,
			url: "12-3.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-4": {
			type: "spritesheet",
			base: h,
			url: "12-4.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-5": {
			type: "spritesheet",
			base: h,
			url: "12-5.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-6": {
			type: "spritesheet",
			base: h,
			url: "12-6.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-7": {
			type: "spritesheet",
			base: h,
			url: "12-7.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-8": {
			type: "spritesheet",
			base: h,
			url: "12-8.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-9": {
			type: "spritesheet",
			base: h,
			url: "12-9.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-13-1": {
			type: "spritesheet",
			base: h,
			url: "13-1.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-10": {
			type: "spritesheet",
			base: h,
			url: "13-10.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-11": {
			type: "spritesheet",
			base: h,
			url: "13-11.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-12": {
			type: "spritesheet",
			base: h,
			url: "13-12.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-13": {
			type: "spritesheet",
			base: h,
			url: "13-13.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-14": {
			type: "spritesheet",
			base: h,
			url: "13-14.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-15": {
			type: "spritesheet",
			base: h,
			url: "13-15.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-16": {
			type: "spritesheet",
			base: h,
			url: "13-16.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-2": {
			type: "spritesheet",
			base: h,
			url: "13-2.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-3": {
			type: "spritesheet",
			base: h,
			url: "13-3.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-4": {
			type: "spritesheet",
			base: h,
			url: "13-4.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-5": {
			type: "spritesheet",
			base: h,
			url: "13-5.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-6": {
			type: "spritesheet",
			base: h,
			url: "13-6.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-7": {
			type: "spritesheet",
			base: h,
			url: "13-7.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-8": {
			type: "spritesheet",
			base: h,
			url: "13-8.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-9": {
			type: "spritesheet",
			base: h,
			url: "13-9.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-14-1": {
			type: "spritesheet",
			base: h,
			url: "14-1.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-10": {
			type: "spritesheet",
			base: h,
			url: "14-10.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-11": {
			type: "spritesheet",
			base: h,
			url: "14-11.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-12": {
			type: "spritesheet",
			base: h,
			url: "14-12.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-13": {
			type: "spritesheet",
			base: h,
			url: "14-13.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-14": {
			type: "spritesheet",
			base: h,
			url: "14-14.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-15": {
			type: "spritesheet",
			base: h,
			url: "14-15.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-16": {
			type: "spritesheet",
			base: h,
			url: "14-16.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-2": {
			type: "spritesheet",
			base: h,
			url: "14-2.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-3": {
			type: "spritesheet",
			base: h,
			url: "14-3.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-4": {
			type: "spritesheet",
			base: h,
			url: "14-4.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-5": {
			type: "spritesheet",
			base: h,
			url: "14-5.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-6": {
			type: "spritesheet",
			base: h,
			url: "14-6.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-7": {
			type: "spritesheet",
			base: h,
			url: "14-7.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-8": {
			type: "spritesheet",
			base: h,
			url: "14-8.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-9": {
			type: "spritesheet",
			base: h,
			url: "14-9.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-1": {
			type: "spritesheet",
			base: h,
			url: "15-1.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-10": {
			type: "spritesheet",
			base: h,
			url: "15-10.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-11": {
			type: "spritesheet",
			base: h,
			url: "15-11.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-12": {
			type: "spritesheet",
			base: h,
			url: "15-12.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-13": {
			type: "spritesheet",
			base: h,
			url: "15-13.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-14": {
			type: "spritesheet",
			base: h,
			url: "15-14.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-15": {
			type: "spritesheet",
			base: h,
			url: "15-15.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-16": {
			type: "spritesheet",
			base: h,
			url: "15-16.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-2": {
			type: "spritesheet",
			base: h,
			url: "15-2.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-3": {
			type: "spritesheet",
			base: h,
			url: "15-3.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-4": {
			type: "spritesheet",
			base: h,
			url: "15-4.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-5": {
			type: "spritesheet",
			base: h,
			url: "15-5.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-6": {
			type: "spritesheet",
			base: h,
			url: "15-6.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-7": {
			type: "spritesheet",
			base: h,
			url: "15-7.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-8": {
			type: "spritesheet",
			base: h,
			url: "15-8.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-9": {
			type: "spritesheet",
			base: h,
			url: "15-9.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-2-1": {
			type: "spritesheet",
			base: h,
			url: "2-1.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-10": {
			type: "spritesheet",
			base: h,
			url: "2-10.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-11": {
			type: "spritesheet",
			base: h,
			url: "2-11.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-12": {
			type: "spritesheet",
			base: h,
			url: "2-12.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-13": {
			type: "spritesheet",
			base: h,
			url: "2-13.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-14": {
			type: "spritesheet",
			base: h,
			url: "2-14.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-15": {
			type: "spritesheet",
			base: h,
			url: "2-15.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-16": {
			type: "spritesheet",
			base: h,
			url: "2-16.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-2": {
			type: "spritesheet",
			base: h,
			url: "2-2.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-3": {
			type: "spritesheet",
			base: h,
			url: "2-3.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-4": {
			type: "spritesheet",
			base: h,
			url: "2-4.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-5": {
			type: "spritesheet",
			base: h,
			url: "2-5.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-6": {
			type: "spritesheet",
			base: h,
			url: "2-6.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-7": {
			type: "spritesheet",
			base: h,
			url: "2-7.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-8": {
			type: "spritesheet",
			base: h,
			url: "2-8.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-9": {
			type: "spritesheet",
			base: h,
			url: "2-9.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-3-1": {
			type: "spritesheet",
			base: h,
			url: "3-1.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-10": {
			type: "spritesheet",
			base: h,
			url: "3-10.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-11": {
			type: "spritesheet",
			base: h,
			url: "3-11.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-12": {
			type: "spritesheet",
			base: h,
			url: "3-12.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-13": {
			type: "spritesheet",
			base: h,
			url: "3-13.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-14": {
			type: "spritesheet",
			base: h,
			url: "3-14.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-15": {
			type: "spritesheet",
			base: h,
			url: "3-15.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-16": {
			type: "spritesheet",
			base: h,
			url: "3-16.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-2": {
			type: "spritesheet",
			base: h,
			url: "3-2.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-3": {
			type: "spritesheet",
			base: h,
			url: "3-3.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-4": {
			type: "spritesheet",
			base: h,
			url: "3-4.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-5": {
			type: "spritesheet",
			base: h,
			url: "3-5.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-6": {
			type: "spritesheet",
			base: h,
			url: "3-6.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-7": {
			type: "spritesheet",
			base: h,
			url: "3-7.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-8": {
			type: "spritesheet",
			base: h,
			url: "3-8.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-9": {
			type: "spritesheet",
			base: h,
			url: "3-9.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-4-1": {
			type: "spritesheet",
			base: h,
			url: "4-1.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-10": {
			type: "spritesheet",
			base: h,
			url: "4-10.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-11": {
			type: "spritesheet",
			base: h,
			url: "4-11.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-12": {
			type: "spritesheet",
			base: h,
			url: "4-12.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-13": {
			type: "spritesheet",
			base: h,
			url: "4-13.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-14": {
			type: "spritesheet",
			base: h,
			url: "4-14.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-15": {
			type: "spritesheet",
			base: h,
			url: "4-15.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-16": {
			type: "spritesheet",
			base: h,
			url: "4-16.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-2": {
			type: "spritesheet",
			base: h,
			url: "4-2.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-3": {
			type: "spritesheet",
			base: h,
			url: "4-3.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-4": {
			type: "spritesheet",
			base: h,
			url: "4-4.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-5": {
			type: "spritesheet",
			base: h,
			url: "4-5.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-6": {
			type: "spritesheet",
			base: h,
			url: "4-6.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-7": {
			type: "spritesheet",
			base: h,
			url: "4-7.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-8": {
			type: "spritesheet",
			base: h,
			url: "4-8.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-9": {
			type: "spritesheet",
			base: h,
			url: "4-9.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-1": {
			type: "spritesheet",
			base: h,
			url: "5-1.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-10": {
			type: "spritesheet",
			base: h,
			url: "5-10.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-11": {
			type: "spritesheet",
			base: h,
			url: "5-11.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-12": {
			type: "spritesheet",
			base: h,
			url: "5-12.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-13": {
			type: "spritesheet",
			base: h,
			url: "5-13.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-14": {
			type: "spritesheet",
			base: h,
			url: "5-14.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-15": {
			type: "spritesheet",
			base: h,
			url: "5-15.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-16": {
			type: "spritesheet",
			base: h,
			url: "5-16.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-2": {
			type: "spritesheet",
			base: h,
			url: "5-2.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-3": {
			type: "spritesheet",
			base: h,
			url: "5-3.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-4": {
			type: "spritesheet",
			base: h,
			url: "5-4.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-5": {
			type: "spritesheet",
			base: h,
			url: "5-5.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-6": {
			type: "spritesheet",
			base: h,
			url: "5-6.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-7": {
			type: "spritesheet",
			base: h,
			url: "5-7.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-8": {
			type: "spritesheet",
			base: h,
			url: "5-8.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-9": {
			type: "spritesheet",
			base: h,
			url: "5-9.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-6-1": {
			type: "spritesheet",
			base: h,
			url: "6-1.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-10": {
			type: "spritesheet",
			base: h,
			url: "6-10.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-11": {
			type: "spritesheet",
			base: h,
			url: "6-11.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-12": {
			type: "spritesheet",
			base: h,
			url: "6-12.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-13": {
			type: "spritesheet",
			base: h,
			url: "6-13.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-14": {
			type: "spritesheet",
			base: h,
			url: "6-14.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-15": {
			type: "spritesheet",
			base: h,
			url: "6-15.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-16": {
			type: "spritesheet",
			base: h,
			url: "6-16.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-2": {
			type: "spritesheet",
			base: h,
			url: "6-2.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-3": {
			type: "spritesheet",
			base: h,
			url: "6-3.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-4": {
			type: "spritesheet",
			base: h,
			url: "6-4.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-5": {
			type: "spritesheet",
			base: h,
			url: "6-5.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-6": {
			type: "spritesheet",
			base: h,
			url: "6-6.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-7": {
			type: "spritesheet",
			base: h,
			url: "6-7.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-8": {
			type: "spritesheet",
			base: h,
			url: "6-8.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-9": {
			type: "spritesheet",
			base: h,
			url: "6-9.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-7-1": {
			type: "spritesheet",
			base: h,
			url: "7-1.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-10": {
			type: "spritesheet",
			base: h,
			url: "7-10.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-11": {
			type: "spritesheet",
			base: h,
			url: "7-11.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-12": {
			type: "spritesheet",
			base: h,
			url: "7-12.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-13": {
			type: "spritesheet",
			base: h,
			url: "7-13.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-14": {
			type: "spritesheet",
			base: h,
			url: "7-14.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-15": {
			type: "spritesheet",
			base: h,
			url: "7-15.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-16": {
			type: "spritesheet",
			base: h,
			url: "7-16.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-2": {
			type: "spritesheet",
			base: h,
			url: "7-2.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-3": {
			type: "spritesheet",
			base: h,
			url: "7-3.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-4": {
			type: "spritesheet",
			base: h,
			url: "7-4.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-5": {
			type: "spritesheet",
			base: h,
			url: "7-5.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-6": {
			type: "spritesheet",
			base: h,
			url: "7-6.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-7": {
			type: "spritesheet",
			base: h,
			url: "7-7.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-8": {
			type: "spritesheet",
			base: h,
			url: "7-8.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-9": {
			type: "spritesheet",
			base: h,
			url: "7-9.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-8-1": {
			type: "spritesheet",
			base: h,
			url: "8-1.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-10": {
			type: "spritesheet",
			base: h,
			url: "8-10.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-11": {
			type: "spritesheet",
			base: h,
			url: "8-11.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-12": {
			type: "spritesheet",
			base: h,
			url: "8-12.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-13": {
			type: "spritesheet",
			base: h,
			url: "8-13.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-14": {
			type: "spritesheet",
			base: h,
			url: "8-14.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-15": {
			type: "spritesheet",
			base: h,
			url: "8-15.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-16": {
			type: "spritesheet",
			base: h,
			url: "8-16.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-2": {
			type: "spritesheet",
			base: h,
			url: "8-2.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-3": {
			type: "spritesheet",
			base: h,
			url: "8-3.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-4": {
			type: "spritesheet",
			base: h,
			url: "8-4.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-5": {
			type: "spritesheet",
			base: h,
			url: "8-5.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-6": {
			type: "spritesheet",
			base: h,
			url: "8-6.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-7": {
			type: "spritesheet",
			base: h,
			url: "8-7.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-8": {
			type: "spritesheet",
			base: h,
			url: "8-8.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-9": {
			type: "spritesheet",
			base: h,
			url: "8-9.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-9-1": {
			type: "spritesheet",
			base: h,
			url: "9-1.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-10": {
			type: "spritesheet",
			base: h,
			url: "9-10.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-11": {
			type: "spritesheet",
			base: h,
			url: "9-11.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-12": {
			type: "spritesheet",
			base: h,
			url: "9-12.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-13": {
			type: "spritesheet",
			base: h,
			url: "9-13.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-14": {
			type: "spritesheet",
			base: h,
			url: "9-14.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-15": {
			type: "spritesheet",
			base: h,
			url: "9-15.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-16": {
			type: "spritesheet",
			base: h,
			url: "9-16.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-2": {
			type: "spritesheet",
			base: h,
			url: "9-2.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-3": {
			type: "spritesheet",
			base: h,
			url: "9-3.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-4": {
			type: "spritesheet",
			base: h,
			url: "9-4.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-5": {
			type: "spritesheet",
			base: h,
			url: "9-5.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-6": {
			type: "spritesheet",
			base: h,
			url: "9-6.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-7": {
			type: "spritesheet",
			base: h,
			url: "9-7.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-8": {
			type: "spritesheet",
			base: h,
			url: "9-8.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-9": {
			type: "spritesheet",
			base: h,
			url: "9-9.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"reduced-hair-female-1-1": {
			type: "spritesheet",
			base: a,
			url: "1-1.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-10": {
			type: "spritesheet",
			base: a,
			url: "1-10.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-11": {
			type: "spritesheet",
			base: a,
			url: "1-11.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-12": {
			type: "spritesheet",
			base: a,
			url: "1-12.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-13": {
			type: "spritesheet",
			base: a,
			url: "1-13.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-14": {
			type: "spritesheet",
			base: a,
			url: "1-14.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-15": {
			type: "spritesheet",
			base: a,
			url: "1-15.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-16": {
			type: "spritesheet",
			base: a,
			url: "1-16.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-2": {
			type: "spritesheet",
			base: a,
			url: "1-2.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-3": {
			type: "spritesheet",
			base: a,
			url: "1-3.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-4": {
			type: "spritesheet",
			base: a,
			url: "1-4.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-5": {
			type: "spritesheet",
			base: a,
			url: "1-5.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-6": {
			type: "spritesheet",
			base: a,
			url: "1-6.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-7": {
			type: "spritesheet",
			base: a,
			url: "1-7.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-8": {
			type: "spritesheet",
			base: a,
			url: "1-8.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-9": {
			type: "spritesheet",
			base: a,
			url: "1-9.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-10-1": {
			type: "spritesheet",
			base: a,
			url: "10-1.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-10": {
			type: "spritesheet",
			base: a,
			url: "10-10.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-11": {
			type: "spritesheet",
			base: a,
			url: "10-11.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-12": {
			type: "spritesheet",
			base: a,
			url: "10-12.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-13": {
			type: "spritesheet",
			base: a,
			url: "10-13.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-14": {
			type: "spritesheet",
			base: a,
			url: "10-14.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-15": {
			type: "spritesheet",
			base: a,
			url: "10-15.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-16": {
			type: "spritesheet",
			base: a,
			url: "10-16.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-2": {
			type: "spritesheet",
			base: a,
			url: "10-2.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-3": {
			type: "spritesheet",
			base: a,
			url: "10-3.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-4": {
			type: "spritesheet",
			base: a,
			url: "10-4.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-5": {
			type: "spritesheet",
			base: a,
			url: "10-5.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-6": {
			type: "spritesheet",
			base: a,
			url: "10-6.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-7": {
			type: "spritesheet",
			base: a,
			url: "10-7.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-8": {
			type: "spritesheet",
			base: a,
			url: "10-8.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-9": {
			type: "spritesheet",
			base: a,
			url: "10-9.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-11-1": {
			type: "spritesheet",
			base: a,
			url: "11-1.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-10": {
			type: "spritesheet",
			base: a,
			url: "11-10.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-11": {
			type: "spritesheet",
			base: a,
			url: "11-11.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-12": {
			type: "spritesheet",
			base: a,
			url: "11-12.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-13": {
			type: "spritesheet",
			base: a,
			url: "11-13.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-14": {
			type: "spritesheet",
			base: a,
			url: "11-14.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-15": {
			type: "spritesheet",
			base: a,
			url: "11-15.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-16": {
			type: "spritesheet",
			base: a,
			url: "11-16.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-2": {
			type: "spritesheet",
			base: a,
			url: "11-2.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-3": {
			type: "spritesheet",
			base: a,
			url: "11-3.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-4": {
			type: "spritesheet",
			base: a,
			url: "11-4.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-5": {
			type: "spritesheet",
			base: a,
			url: "11-5.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-6": {
			type: "spritesheet",
			base: a,
			url: "11-6.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-7": {
			type: "spritesheet",
			base: a,
			url: "11-7.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-8": {
			type: "spritesheet",
			base: a,
			url: "11-8.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-9": {
			type: "spritesheet",
			base: a,
			url: "11-9.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-12-1": {
			type: "spritesheet",
			base: a,
			url: "12-1.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-10": {
			type: "spritesheet",
			base: a,
			url: "12-10.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-11": {
			type: "spritesheet",
			base: a,
			url: "12-11.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-12": {
			type: "spritesheet",
			base: a,
			url: "12-12.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-13": {
			type: "spritesheet",
			base: a,
			url: "12-13.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-14": {
			type: "spritesheet",
			base: a,
			url: "12-14.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-15": {
			type: "spritesheet",
			base: a,
			url: "12-15.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-16": {
			type: "spritesheet",
			base: a,
			url: "12-16.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-2": {
			type: "spritesheet",
			base: a,
			url: "12-2.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-3": {
			type: "spritesheet",
			base: a,
			url: "12-3.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-4": {
			type: "spritesheet",
			base: a,
			url: "12-4.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-5": {
			type: "spritesheet",
			base: a,
			url: "12-5.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-6": {
			type: "spritesheet",
			base: a,
			url: "12-6.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-7": {
			type: "spritesheet",
			base: a,
			url: "12-7.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-8": {
			type: "spritesheet",
			base: a,
			url: "12-8.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-9": {
			type: "spritesheet",
			base: a,
			url: "12-9.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-13-1": {
			type: "spritesheet",
			base: a,
			url: "13-1.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-10": {
			type: "spritesheet",
			base: a,
			url: "13-10.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-11": {
			type: "spritesheet",
			base: a,
			url: "13-11.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-12": {
			type: "spritesheet",
			base: a,
			url: "13-12.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-13": {
			type: "spritesheet",
			base: a,
			url: "13-13.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-14": {
			type: "spritesheet",
			base: a,
			url: "13-14.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-15": {
			type: "spritesheet",
			base: a,
			url: "13-15.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-16": {
			type: "spritesheet",
			base: a,
			url: "13-16.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-2": {
			type: "spritesheet",
			base: a,
			url: "13-2.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-3": {
			type: "spritesheet",
			base: a,
			url: "13-3.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-4": {
			type: "spritesheet",
			base: a,
			url: "13-4.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-5": {
			type: "spritesheet",
			base: a,
			url: "13-5.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-6": {
			type: "spritesheet",
			base: a,
			url: "13-6.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-7": {
			type: "spritesheet",
			base: a,
			url: "13-7.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-8": {
			type: "spritesheet",
			base: a,
			url: "13-8.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-9": {
			type: "spritesheet",
			base: a,
			url: "13-9.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-1": {
			type: "spritesheet",
			base: a,
			url: "14-1.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-10": {
			type: "spritesheet",
			base: a,
			url: "14-10.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-11": {
			type: "spritesheet",
			base: a,
			url: "14-11.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-12": {
			type: "spritesheet",
			base: a,
			url: "14-12.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-13": {
			type: "spritesheet",
			base: a,
			url: "14-13.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-14": {
			type: "spritesheet",
			base: a,
			url: "14-14.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-15": {
			type: "spritesheet",
			base: a,
			url: "14-15.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-16": {
			type: "spritesheet",
			base: a,
			url: "14-16.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-2": {
			type: "spritesheet",
			base: a,
			url: "14-2.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-3": {
			type: "spritesheet",
			base: a,
			url: "14-3.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-4": {
			type: "spritesheet",
			base: a,
			url: "14-4.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-5": {
			type: "spritesheet",
			base: a,
			url: "14-5.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-6": {
			type: "spritesheet",
			base: a,
			url: "14-6.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-7": {
			type: "spritesheet",
			base: a,
			url: "14-7.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-8": {
			type: "spritesheet",
			base: a,
			url: "14-8.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-9": {
			type: "spritesheet",
			base: a,
			url: "14-9.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-15-1": {
			type: "spritesheet",
			base: a,
			url: "15-1.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-10": {
			type: "spritesheet",
			base: a,
			url: "15-10.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-11": {
			type: "spritesheet",
			base: a,
			url: "15-11.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-12": {
			type: "spritesheet",
			base: a,
			url: "15-12.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-13": {
			type: "spritesheet",
			base: a,
			url: "15-13.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-14": {
			type: "spritesheet",
			base: a,
			url: "15-14.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-15": {
			type: "spritesheet",
			base: a,
			url: "15-15.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-16": {
			type: "spritesheet",
			base: a,
			url: "15-16.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-2": {
			type: "spritesheet",
			base: a,
			url: "15-2.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-3": {
			type: "spritesheet",
			base: a,
			url: "15-3.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-4": {
			type: "spritesheet",
			base: a,
			url: "15-4.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-5": {
			type: "spritesheet",
			base: a,
			url: "15-5.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-6": {
			type: "spritesheet",
			base: a,
			url: "15-6.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-7": {
			type: "spritesheet",
			base: a,
			url: "15-7.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-8": {
			type: "spritesheet",
			base: a,
			url: "15-8.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-9": {
			type: "spritesheet",
			base: a,
			url: "15-9.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-2-1": {
			type: "spritesheet",
			base: a,
			url: "2-1.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-10": {
			type: "spritesheet",
			base: a,
			url: "2-10.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-11": {
			type: "spritesheet",
			base: a,
			url: "2-11.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-12": {
			type: "spritesheet",
			base: a,
			url: "2-12.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-13": {
			type: "spritesheet",
			base: a,
			url: "2-13.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-14": {
			type: "spritesheet",
			base: a,
			url: "2-14.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-15": {
			type: "spritesheet",
			base: a,
			url: "2-15.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-16": {
			type: "spritesheet",
			base: a,
			url: "2-16.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-2": {
			type: "spritesheet",
			base: a,
			url: "2-2.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-3": {
			type: "spritesheet",
			base: a,
			url: "2-3.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-4": {
			type: "spritesheet",
			base: a,
			url: "2-4.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-5": {
			type: "spritesheet",
			base: a,
			url: "2-5.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-6": {
			type: "spritesheet",
			base: a,
			url: "2-6.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-7": {
			type: "spritesheet",
			base: a,
			url: "2-7.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-8": {
			type: "spritesheet",
			base: a,
			url: "2-8.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-9": {
			type: "spritesheet",
			base: a,
			url: "2-9.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-3-1": {
			type: "spritesheet",
			base: a,
			url: "3-1.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-10": {
			type: "spritesheet",
			base: a,
			url: "3-10.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-11": {
			type: "spritesheet",
			base: a,
			url: "3-11.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-12": {
			type: "spritesheet",
			base: a,
			url: "3-12.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-13": {
			type: "spritesheet",
			base: a,
			url: "3-13.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-14": {
			type: "spritesheet",
			base: a,
			url: "3-14.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-15": {
			type: "spritesheet",
			base: a,
			url: "3-15.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-16": {
			type: "spritesheet",
			base: a,
			url: "3-16.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-2": {
			type: "spritesheet",
			base: a,
			url: "3-2.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-3": {
			type: "spritesheet",
			base: a,
			url: "3-3.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-4": {
			type: "spritesheet",
			base: a,
			url: "3-4.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-5": {
			type: "spritesheet",
			base: a,
			url: "3-5.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-6": {
			type: "spritesheet",
			base: a,
			url: "3-6.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-7": {
			type: "spritesheet",
			base: a,
			url: "3-7.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-8": {
			type: "spritesheet",
			base: a,
			url: "3-8.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-9": {
			type: "spritesheet",
			base: a,
			url: "3-9.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-4-1": {
			type: "spritesheet",
			base: a,
			url: "4-1.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-10": {
			type: "spritesheet",
			base: a,
			url: "4-10.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-11": {
			type: "spritesheet",
			base: a,
			url: "4-11.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-12": {
			type: "spritesheet",
			base: a,
			url: "4-12.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-13": {
			type: "spritesheet",
			base: a,
			url: "4-13.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-14": {
			type: "spritesheet",
			base: a,
			url: "4-14.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-15": {
			type: "spritesheet",
			base: a,
			url: "4-15.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-16": {
			type: "spritesheet",
			base: a,
			url: "4-16.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-2": {
			type: "spritesheet",
			base: a,
			url: "4-2.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-3": {
			type: "spritesheet",
			base: a,
			url: "4-3.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-4": {
			type: "spritesheet",
			base: a,
			url: "4-4.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-5": {
			type: "spritesheet",
			base: a,
			url: "4-5.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-6": {
			type: "spritesheet",
			base: a,
			url: "4-6.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-7": {
			type: "spritesheet",
			base: a,
			url: "4-7.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-8": {
			type: "spritesheet",
			base: a,
			url: "4-8.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-9": {
			type: "spritesheet",
			base: a,
			url: "4-9.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-5-1": {
			type: "spritesheet",
			base: a,
			url: "5-1.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-10": {
			type: "spritesheet",
			base: a,
			url: "5-10.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-11": {
			type: "spritesheet",
			base: a,
			url: "5-11.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-12": {
			type: "spritesheet",
			base: a,
			url: "5-12.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-13": {
			type: "spritesheet",
			base: a,
			url: "5-13.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-14": {
			type: "spritesheet",
			base: a,
			url: "5-14.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-15": {
			type: "spritesheet",
			base: a,
			url: "5-15.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-16": {
			type: "spritesheet",
			base: a,
			url: "5-16.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-2": {
			type: "spritesheet",
			base: a,
			url: "5-2.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-3": {
			type: "spritesheet",
			base: a,
			url: "5-3.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-4": {
			type: "spritesheet",
			base: a,
			url: "5-4.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-5": {
			type: "spritesheet",
			base: a,
			url: "5-5.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-6": {
			type: "spritesheet",
			base: a,
			url: "5-6.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-7": {
			type: "spritesheet",
			base: a,
			url: "5-7.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-8": {
			type: "spritesheet",
			base: a,
			url: "5-8.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-9": {
			type: "spritesheet",
			base: a,
			url: "5-9.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-6-1": {
			type: "spritesheet",
			base: a,
			url: "6-1.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-10": {
			type: "spritesheet",
			base: a,
			url: "6-10.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-11": {
			type: "spritesheet",
			base: a,
			url: "6-11.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-12": {
			type: "spritesheet",
			base: a,
			url: "6-12.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-13": {
			type: "spritesheet",
			base: a,
			url: "6-13.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-14": {
			type: "spritesheet",
			base: a,
			url: "6-14.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-15": {
			type: "spritesheet",
			base: a,
			url: "6-15.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-16": {
			type: "spritesheet",
			base: a,
			url: "6-16.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-2": {
			type: "spritesheet",
			base: a,
			url: "6-2.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-3": {
			type: "spritesheet",
			base: a,
			url: "6-3.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-4": {
			type: "spritesheet",
			base: a,
			url: "6-4.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-5": {
			type: "spritesheet",
			base: a,
			url: "6-5.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-6": {
			type: "spritesheet",
			base: a,
			url: "6-6.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-7": {
			type: "spritesheet",
			base: a,
			url: "6-7.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-8": {
			type: "spritesheet",
			base: a,
			url: "6-8.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-9": {
			type: "spritesheet",
			base: a,
			url: "6-9.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-7-1": {
			type: "spritesheet",
			base: a,
			url: "7-1.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-10": {
			type: "spritesheet",
			base: a,
			url: "7-10.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-11": {
			type: "spritesheet",
			base: a,
			url: "7-11.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-12": {
			type: "spritesheet",
			base: a,
			url: "7-12.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-13": {
			type: "spritesheet",
			base: a,
			url: "7-13.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-14": {
			type: "spritesheet",
			base: a,
			url: "7-14.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-15": {
			type: "spritesheet",
			base: a,
			url: "7-15.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-16": {
			type: "spritesheet",
			base: a,
			url: "7-16.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-2": {
			type: "spritesheet",
			base: a,
			url: "7-2.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-3": {
			type: "spritesheet",
			base: a,
			url: "7-3.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-4": {
			type: "spritesheet",
			base: a,
			url: "7-4.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-5": {
			type: "spritesheet",
			base: a,
			url: "7-5.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-6": {
			type: "spritesheet",
			base: a,
			url: "7-6.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-7": {
			type: "spritesheet",
			base: a,
			url: "7-7.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-8": {
			type: "spritesheet",
			base: a,
			url: "7-8.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-9": {
			type: "spritesheet",
			base: a,
			url: "7-9.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-8-1": {
			type: "spritesheet",
			base: a,
			url: "8-1.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-10": {
			type: "spritesheet",
			base: a,
			url: "8-10.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-11": {
			type: "spritesheet",
			base: a,
			url: "8-11.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-12": {
			type: "spritesheet",
			base: a,
			url: "8-12.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-13": {
			type: "spritesheet",
			base: a,
			url: "8-13.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-14": {
			type: "spritesheet",
			base: a,
			url: "8-14.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-15": {
			type: "spritesheet",
			base: a,
			url: "8-15.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-16": {
			type: "spritesheet",
			base: a,
			url: "8-16.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-2": {
			type: "spritesheet",
			base: a,
			url: "8-2.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-3": {
			type: "spritesheet",
			base: a,
			url: "8-3.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-4": {
			type: "spritesheet",
			base: a,
			url: "8-4.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-5": {
			type: "spritesheet",
			base: a,
			url: "8-5.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-6": {
			type: "spritesheet",
			base: a,
			url: "8-6.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-7": {
			type: "spritesheet",
			base: a,
			url: "8-7.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-8": {
			type: "spritesheet",
			base: a,
			url: "8-8.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-9": {
			type: "spritesheet",
			base: a,
			url: "8-9.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-9-1": {
			type: "spritesheet",
			base: a,
			url: "9-1.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-10": {
			type: "spritesheet",
			base: a,
			url: "9-10.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-11": {
			type: "spritesheet",
			base: a,
			url: "9-11.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-12": {
			type: "spritesheet",
			base: a,
			url: "9-12.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-13": {
			type: "spritesheet",
			base: a,
			url: "9-13.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-14": {
			type: "spritesheet",
			base: a,
			url: "9-14.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-15": {
			type: "spritesheet",
			base: a,
			url: "9-15.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-16": {
			type: "spritesheet",
			base: a,
			url: "9-16.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-2": {
			type: "spritesheet",
			base: a,
			url: "9-2.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-3": {
			type: "spritesheet",
			base: a,
			url: "9-3.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-4": {
			type: "spritesheet",
			base: a,
			url: "9-4.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-5": {
			type: "spritesheet",
			base: a,
			url: "9-5.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-6": {
			type: "spritesheet",
			base: a,
			url: "9-6.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-7": {
			type: "spritesheet",
			base: a,
			url: "9-7.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-8": {
			type: "spritesheet",
			base: a,
			url: "9-8.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-9": {
			type: "spritesheet",
			base: a,
			url: "9-9.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"language-en-us": {
			type: "json",
			base: f,
			url: "en-us/1/en-us.json"
		}
	}
}, Prodigy.Assets.prototype = {
	getAsset: function(e) {
		if (!Util.isDefined(this._assets[e])) {
			var t = null,
				i = null,
				a = 0 === e.indexOf("horizontal-dorm") || 0 === e.indexOf("vertical-dorm") || 0 === e.indexOf("sheets-dorm"),
				s = 0 === e.indexOf("default-pet-") || 0 === e.indexOf("reduced-pet-") || 0 === e.indexOf("small-pet-"),
				r = 0 === e.indexOf("male-outfit-") || 0 === e.indexOf("female-outfit-");
			0 === e.indexOf("icon-") ? (t = e.split("-"), t.length > 2 && (i = Items.getItemMetadata(t[1], parseInt(t[2])), this._assets[e] = {
				type: "singleImage",
				v: Util.isDefined(i) && Util.isDefined(i.vIcon) ? i.vIcon : 1
			})) : a || s || r ? (t = e.split("-"), t.length > 2 && (i = Items.getItemMetadata(t[1], parseInt(t[2])), Util.isDefined(i) && (this._assets[e] = i.assets[t[0]]))) : 0 === e.indexOf("default-emote-") ? (t = e.split("-"), t.length > 2 && (i = Items.getItemMetadata(t[1], parseInt(t[2])).assets[t[0]], Util.isDefined(i) && (this._assets[e] = {
				type: i.type,
				v: Util.isDefined(i) && Util.isDefined(i.v) ? i.v : 1
			}))) : 0 === e.indexOf("spine-") ? (t = e.split("-"), t.length > 2 && (i = Items.getItemMetadata(t[1], parseInt(t[2])), this._assets[e] = {
				type: "spine",
				v: Util.isDefined(i) && Util.isDefined(i.v) ? i.v : 1
			})) : this._assets[e] = {}
		}
		return this._assets[e]
	},
	getImageBounds: function(e) {
		var t = this.getAsset(e);
		return Util.isDefined(t) ? [t.x, t.y, t.w, t.h] : [0, 0, 0, 0]
	},
	getImagePivots: function(e) {
		var t = this.getAsset(e);
		if (Util.isDefined(t)) {
			var i = Util.isDefined(t.pivotX) ? t.pivotX : null,
				a = Util.isDefined(t.pivotY) ? t.pivotY : null;
			return [i, a]
		}
		return [null, null]
	},
	appendAssets: function(e) {
		for (var t in e) this._assets[t] = e[t]
	}
}, Prodigy.Assets.prototype.constructor = Prodigy.Assets, Prodigy.StatusEffect = function(e, t) {
	this.game = e, this.target = t;
	var i = 1;
	this.getDuration = function() {
		return i
	}, this.setDuration = function(e) {
		i = e
	}, this.tickDuration = function() {
		i--
	}
}, Prodigy.StatusEffect.prototype = {
	constructor: Prodigy.StatusEffect,
	init: function(e) {
		this.setDuration(e.duration)
	},
	apply: function() {}
}, Prodigy.StatusEffect.StatusEffects = [Prodigy.StatusEffect.Ink], Prodigy.StatusEffects.Ink = function(e) {
	Prodigy.StatusEffect.call(this, e), this.blockedSpells = [], this.init({
		duration: 3
	})
}, Prodigy.extends(Prodigy.StatusEffects.Ink, Prodigy.StatusEffect, {
	constructor: Prodigy.StatusEffects.Ink,
	apply: function(e) {
		if (this.getDuration() > 0 && 0 === this.blockedSpells.length) {
			var t, i = e.source.source.getAttacks(),
				a = [];
			for (t = 0; t < i.length; t++) a.push(t);
			for (this.game.seededRandom.shuffleArray(a, (new Date).getTime()), t = 0; t < Math.floor(.5 * i.length); t++) this.blockedSpells.push(i[a[t]])
		}
		return Prodigy.StatusEffect.prototype.apply.call(this, e), Util.log(this.blockedSpells), this.blockedSpells
	}
}), Prodigy.Attacks = function(e) {
	this.game = e
}, Prodigy.extends(Prodigy.Attacks, Object, {
	constructor: Prodigy.Attacks,
	calculateDamage: function(e, t, i, a, s) {
		Util.isDefined(a) || (a = 0);
		var r = 0;
		Util.isDefined(e) && Util.isDefined(e.data.damage) && (r = e.data.damage);
		var n = e.data.element,
			o = i.getElement();
		return "Glacial Shield" !== e.data.name && 0 === i.modifiers.ignoreElement && (this.isStrong(n, o) ? r += 4 : this.isWeak(n, o) && (r -= 3, 0 >= r && (r = 2))), r = Math.floor(10 * r * s), Math.max(Math.floor(r + (Util.isDefined(a) ? a : 0)), 0)
	},
	isStrong: function(e, t) {
		return Util.isDefined(e) && Util.isDefined(t) && ("fire" === e && ("ice" === t || "earth" === t || "ice & fire" === t) || "water" === e && ("fire" === t || "ice & fire" === t) || "earth" === e && "water" === t || "storm" === e && "water" === t || "mech" === e && "mech" === t || "ice" === e && ("storm" === t || "mech" === t) || "shadow" === e && "wizard" !== t || "wizard" === e && "shadow" === t)
	},
	isWeak: function(e, t) {
		return Util.isDefined(e) && Util.isDefined(t) && ("fire" === e && "water" === t || "water" === e && ("earth" === t || "storm" === t || "mech" === t) || "earth" === e && ("fire" === t || "ice & fire" === t) || "storm" === e && "ice" === t || "ice & fire" === t || "mech" === e && "ice" === t || "ice & fire" === t || "ice" === e && "fire" === t || "ice & fire" === t || "shadow" === e && "wizard" === t || "wizard" !== e && "shadow" === t)
	},
	getBestAttack: function(e, t, i) {
		if (e.length <= 0) return null;
		for (var a = [], s = 0; s < e.length; s++) {
			var r = this.getAttack(e[s]);
			a[s] = "Glacial Shield" === r.data.name ? {
				dmg: 0,
				ID: e[s]
			} : {
				dmg: this.calculateDamage(r, null, t, 0, 1),
				ID: e[s]
			}
		}
		a.sort(function(e, t) {
			return t.dmg - e.dmg
		}), i = i || 0;
		for (var n = a[a.length - 1].ID, s = 0; s < a.length; s++) {
			if (Math.random() > i) {
				n = a[s].ID;
				break
			}
			i *= .75
		}
		return this.getAttack(n)
	},
	getHealingAttack: function(e) {
		for (var t = 0; t < e.length; t++) {
			var i = this.getAttack(e[t]);
			if (i.data.heal) return i
		}
		return null
	},
	getAttack: function(e) {
		var t = Prodigy.Attacks.data[e - 1];
		return Util.isDefined(t) ? t : null
	},
	getAttackPriority: function(e) {
		return Util.isDefined(e.priority) ? e.priority : 0
	}
}), Prodigy.Dialogues = function(e) {
	this.AUDIO = [{
		tag: "voice-2",
		s: 0,
		d: 1
	}, {
		tag: "voice-2",
		s: 1,
		d: 1
	}, {
		tag: "voice-2",
		s: 2,
		d: 1
	}, {
		tag: "voice-2",
		s: 3,
		d: 1
	}, {
		tag: "voice-2",
		s: 4,
		d: 2
	}, {
		tag: "voice-2",
		s: 6,
		d: 1
	}, {
		tag: "voice-2",
		s: 7,
		d: 2
	}, {
		tag: "voice-2",
		s: 9,
		d: 1
	}], this.localizedData = {
		mira: [{
			textKey: "DIALOGUE_MIRA_0",
			face: 0,
			anim: 4,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_1",
			face: 0,
			anim: 4,
			audio: {
				tag: "voice-2",
				s: 4,
				d: 2
			}
		}, {
			textKey: "DIALOGUE_MIRA_2",
			face: 2,
			audio: {
				tag: "voice-2",
				s: 9,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_3",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_4",
			face: 1,
			anim: 4,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_5",
			face: 2,
			audio: {
				tag: "voice-2",
				s: 3,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_6",
			face: 0,
			anim: 4,
			audio: {
				tag: "voice-2",
				s: 4,
				d: 2
			}
		}, {
			textKey: "DIALOGUE_MIRA_7",
			face: 0
		}, {
			textKey: "DIALOGUE_MIRA_8",
			face: 0,
			anim: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_9",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 2,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_10",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_11",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_12",
			face: 0
		}, {
			textKey: "DIALOGUE_MIRA_13",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_14",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_15",
			face: 1
		}, {
			textKey: "DIALOGUE_MIRA_16",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 7,
				d: 2
			}
		}, {
			textKey: "DIALOGUE_MIRA_17",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_18",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_19",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_20",
			face: 2,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_21",
			face: 1
		}, {
			textKey: "DIALOGUE_MIRA_22",
			face: 2,
			audio: {
				tag: "voice-2",
				s: 1,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_23",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_24",
			face: 0
		}, {
			textKey: "DIALOGUE_MIRA_25",
			face: 2,
			audio: {
				tag: "voice-2",
				s: 1,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_26",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 2,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_27",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 3,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_28",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_29",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_30",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_31",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_32",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_33",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_34",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_35",
			face: 1
		}, {
			textKey: "DIALOGUE_MIRA_36",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 2,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_37",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 1,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_38",
			face: 3
		}, {
			textKey: "DIALOGUE_MIRA_39",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 3,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_40",
			face: 3
		}, {
			textKey: "DIALOGUE_MIRA_41",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 2,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_42",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 1,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_43",
			face: 3
		}, {
			textKey: "DIALOGUE_MIRA_44",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 9,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_45",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_46",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 2,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_REWARD",
			face: 0,
			audio: {
				tag: "voice-2",
				s: 7,
				d: 2
			}
		}, {
			textKey: "DIALOGUE_MIRA_DEFEAT_0",
			face: 3,
			audio: {
				tag: "voice-2",
				s: 3,
				d: 1
			}
		}, {
			textKey: "DIALOGUE_MIRA_DEFEAT_1",
			face: 3
		}, {
			textKey: "DIALOGUE_MIRA_DEFEAT_2",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 7,
				d: 2
			}
		}, {
			textKey: "DIALOGUE_MIRA_DEFEAT_3",
			face: 2
		}, {
			textKey: "DIALOGUE_MIRA_DEFEAT_4",
			face: 1,
			audio: {
				tag: "voice-2",
				s: 0,
				d: 1
			}
		}]
	};
	for (var t in this.localizedData)
		for (var i = 0; i < this.localizedData[t].length; ++i) Object.defineProperty(this.localizedData[t][i], "text", {
			get: function() {
				return e.prodigy.localization.getString(this.textKey)
			}
		})
}, Prodigy.Dialogues.prototype = {
	get: function(e, t) {
		return Util.isNullOrUndefined(Prodigy.Dialogues.data[e]) ? this.localizedData[e][t] : Prodigy.Dialogues.data[e][t]
	},
	printScript: function(e, t) {
		for (var i = Prodigy.Dialogues.data[e], a = "", s = 0; s < i.length; s++)(!Util.isDefined(t) || t(i[s])) && (a += i[s].text + "\n");
		Util.log(a)
	}
}, Prodigy.Dialogues.prototype.constructor = Prodigy.Dialogues, Prodigy.Dialogues.data = {
	noot: [{
		text: "Look out below!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-12",
			s: 0,
			d: 1
		}
	}, {
		text: "Ouch!\n...\nAnother happy landing!",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-10-12",
			s: 1,
			d: 4
		}
	}, {
		text: "I'm Noot, and I'll be your fairy guide! All new wizards need a guide, and I'm ALL YOURS!",
		face: 0,
		audio: {
			tag: "voice-10-12",
			s: 5,
			d: 7
		}
	}, {
		text: "This is a wizard battle! The goal is to reduce your opponent's hearts to zero by casting spells.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-13",
			s: 0,
			d: 7
		}
	}, {
		text: "It's okay, try again! The scarecrow won't fight back, so practice away!",
		face: 1,
		audio: {
			tag: "voice-10-13",
			s: 7,
			d: 6
		}
	}, {
		text: "When you cast a spell, your opponent loses hearts! When they have no hearts left, you win!",
		face: 3,
		audio: {
			tag: "voice-10-13",
			s: 13,
			d: 7
		}
	}, {
		text: "Don't know how to walk, huh? Click the ground to walk, and follow me to the edge of the map!",
		face: 4,
		audio: {
			tag: "voice-10-14",
			s: 0,
			d: 6
		}
	}, {
		text: "I think you're ready for the next lesson...follow me!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-14",
			s: 6,
			d: 4
		}
	}, {
		text: "To cast a spell, press the Attack button. Then choose your spell from the list!",
		face: 4,
		audio: {
			tag: "voice-10-3",
			s: 2,
			d: 5
		}
	}, {
		text: "Uh oh! Your hearts are low! At times like this, it might be best to change team members!",
		face: 1,
		audio: {
			tag: "voice-10-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Just click the Switch button and choose another teammate.",
		face: 0,
		audio: {
			tag: "voice-10-1",
			s: 6,
			d: 3.5
		}
	}, {
		text: "Your opponent is getting tired! Now's the time to try to catch it!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-2",
			s: 0,
			d: 4
		}
	}, {
		text: "Just click the Catch button when you want to catch a new pet!",
		face: 3,
		audio: {
			tag: "voice-10-2",
			s: 4,
			d: 3
		}
	}, {
		text: "All you have to do is click this button when the arrow is pointing to the green area! Give it a try!",
		face: 4,
		audio: {
			tag: "voice-10-4",
			s: 0,
			d: 6
		}
	}, {
		text: "I think it's time you got a pet of your own! Choose a pet to join you on your adventures!",
		face: 0,
		audio: {
			tag: "voice-10-15",
			s: 8,
			d: 6
		}
	}, {
		text: "This is your backpack! All the items you collect are stored here!",
		face: 0,
		audio: {
			tag: "voice-10-5",
			s: 0,
			d: 4
		}
	}, {
		text: "To equip an item, click on one of your items and select 'wear'.",
		face: 4,
		audio: {
			tag: "voice-10-5",
			s: 4,
			d: 4
		}
	}, {
		text: "To unequip an item, click on an equipped item here. Looking good!",
		face: 3,
		audio: {
			tag: "voice-10-5",
			s: 8,
			d: 5
		}
	}, {
		text: "Your map shows all the areas on the island! To travel to a new area, just click the area's icon!",
		face: 2,
		audio: {
			tag: "voice-10-6",
			s: 0,
			d: 6
		}
	}, {
		text: "This is where you select your battle team!",
		face: 0,
		audio: {
			tag: "voice-10-7",
			s: 0,
			d: 3
		}
	}, {
		text: "First click one of your pets in the boxes here...",
		face: 4,
		audio: {
			tag: "voice-10-7",
			s: 3,
			d: 3
		}
	}, {
		text: "Then, click an open slot on your team. You can do this to remove pets from your team too!",
		face: 0,
		audio: {
			tag: "voice-10-7",
			s: 6,
			d: 6
		}
	}, {
		text: "Oh no! You ran out of hearts... You must be exhausted!",
		face: 1,
		anim: 1,
		audio: {
			tag: "voice-10-8",
			s: 0,
			d: 4
		}
	}, {
		text: "Don't worry, I'll heal you and your pets! But I'll have to charge you [gold] 100...",
		face: 4,
		audio: {
			tag: "voice-10-8",
			s: 4,
			d: 5
		}
	}, {
		text: "Let's keep going! There's still so much to explore!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-16",
			s: 0,
			d: 4
		}
	}, {
		text: "Uh oh! A monster is blocking our path!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-10-16",
			s: 4,
			d: 3
		}
	}, {
		text: "The Academy is full of monsters, and monsters love a good wizard battle! Click on the monster to challenge it!",
		face: 4,
		audio: {
			tag: "voice-10-16",
			s: 7,
			d: 8
		}
	}, {
		text: "Pets are very useful - they level up and cast spells just like you! They can also help you in battle!",
		face: 0,
		audio: {
			tag: "voice-10-15",
			s: 0,
			d: 8
		}
	}, {
		text: "But before we go anywhere, you need to know how to defend yourself from monsters!",
		face: 1,
		audio: {
			tag: "voice-10-12",
			s: 12,
			d: 5
		}
	}, {
		text: "Oh no! It looks like a monster broke the bridge! How will we get across now?",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-17",
			s: 0,
			d: 6
		}
	}, {
		text: "Oh, nice! It looks like there are some pieces nearby...go collect them and we can rebuild the bridge ourselves!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-17",
			s: 6,
			d: 8
		}
	}, {
		text: "Just click on the items around the map to pick them up...but watch out for monsters!",
		face: 1,
		audio: {
			tag: "voice-10-17",
			s: 14,
			d: 5
		}
	}, {
		text: "Great job! Now step back and watch this!",
		face: 3,
		audio: {
			tag: "voice-10-18",
			s: 0,
			d: 5
		}
	}, {
		text: "TADA! Not bad, huh? Okay, follow me!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-18",
			s: 5,
			d: 4
		}
	}, {
		text: "In battle, monsters also cast spells. The first to defeat the other wins the battle!",
		face: 0,
		audio: {
			tag: "voice-10-16",
			s: 15,
			d: 6
		}
	}, {
		text: "Well, that's all I have left to teach you, but your wizard quest has only just begun!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 0,
			d: 6
		}
	}, {
		text: "Follow the path to the left to meet the first master wizard, Flora!",
		face: 2,
		audio: {
			tag: "voice-10-19",
			s: 10,
			d: 5
		}
	}, {
		text: "Don't you worry, though, because I'll always be here to help you out!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-19",
			s: 6,
			d: 4
		}
	}, {
		text: "Do you want to heal you and your pets?",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-20",
			s: 0,
			d: 3
		}
	}, {
		text: "Oh dear! Try again!",
		face: 1,
		audio: {
			tag: "voice-10-20",
			s: 3,
			d: 2
		}
	}, {
		text: "Whoa, great job!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-20",
			s: 5,
			d: 3
		}
	}, {
		text: "All finished! Let's head back, okay?",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-20",
			s: 8,
			d: 3
		}
	}, {
		text: "To become a true PRODIGY, you must travel all over the island and meet the master wizards!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 15,
			d: 7
		}
	}, {
		text: "Each master will teach you new spells, and award you a gemstone for completing their trials!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 22,
			d: 6
		}
	}, {
		text: "First, ask your teacher for your class code, and enter it here!",
		face: 0,
		audio: {
			tag: "voice-10-21",
			s: 0,
			d: 4
		}
	}, {
		text: "Now, enter your first and last name!",
		face: 2,
		audio: {
			tag: "voice-10-21",
			s: 4,
			d: 3
		}
	}, {
		text: "Create a password for your account! Remember to enter it twice!",
		face: 3,
		audio: {
			tag: "voice-10-21",
			s: 7,
			d: 4
		}
	}, {
		text: "Where do you live?",
		face: 4,
		audio: {
			tag: "voice-10-21",
			s: 11,
			d: 1
		}
	}, {
		text: "What grade are you in?",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 12,
			d: 1
		}
	}, {
		text: "What does your wizard look like?",
		face: 2,
		audio: {
			tag: "voice-10-21",
			s: 13,
			d: 2
		}
	}, {
		text: "What is your wizard's name?",
		face: 3,
		audio: {
			tag: "voice-10-21",
			s: 15,
			d: 2
		}
	}, {
		text: "Here is your login information. Be sure to write these down!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-21",
			s: 17,
			d: 4
		}
	}, {
		text: "Uh oh! Something went wrong...do you want to try again?",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 21,
			d: 4
		}
	}, {
		text: "There's the healstone! When you're low on health, just click it to heal you and your pets!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-22",
			s: 0,
			d: 5
		}
	}, {
		text: "There are the Sprikes! In battle, monsters drop items, and some items are used for quests!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-23",
			s: 0,
			d: 6
		}
	}, {
		text: "Defeat the Sprikes until one of them drops some evidence for Flora!",
		face: 0,
		audio: {
			tag: "voice-10-23",
			s: 6,
			d: 4
		}
	}, {
		text: "Um...I think we found the TripTrop Trio!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-24",
			s: 0,
			d: 4
		}
	}, {
		text: "Whew, that wasn't so bad...good job!",
		face: 2,
		audio: {
			tag: "voice-10-24",
			s: 4,
			d: 4
		}
	}, {
		text: "See that gate? It leads to the icy Shiverchill Mountains... but you need the Firefly Gem to open it!",
		face: 4,
		audio: {
			tag: "voice-10-24",
			s: 8,
			d: 7
		}
	}, {
		text: "WOW! That must be Gerald! I guess he's sleeping...thank goodness! We should probably tell Flora.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-25",
			s: 0,
			d: 7
		}
	}, {
		text: "Oh no! A monster stole the flute! We'd better go tell Flora...",
		face: 5,
		audio: {
			tag: "voice-10-26",
			s: 0,
			d: 5
		}
	}, {
		text: "All we have to do is play this flute? Piece of cake, I used to take lessons!",
		face: 1,
		audio: {
			tag: "voice-10-27",
			s: 0,
			d: 6
		}
	}, {
		text: "Pftfbpfffppfbt!",
		face: 3,
		audio: {
			tag: "voice-10-27",
			s: 6,
			d: 2
		}
	}, {
		text: "What? I never said I was any good at it!",
		face: 5,
		audio: {
			tag: "voice-10-27",
			s: 8,
			d: 3
		}
	}, {
		text: "You opened the gate and got your first gemstone! Well done!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-28",
			s: 0,
			d: 4
		}
	}, {
		text: "Next stop, Shiverchill Mountains!",
		face: 3,
		audio: {
			tag: "voice-10-28",
			s: 4,
			d: 3
		}
	}, {
		text: "Enter your parent's email if you're playing at home!",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 25,
			d: 3
		}
	}, {
		text: "It looks like all the furnaces are out...no wonder it's so cold!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-10-29",
			s: 0,
			d: 5
		}
	}, {
		text: "Whoa...what was that about?",
		face: 1,
		audio: {
			tag: "voice-10-30",
			s: 0,
			d: 2
		}
	}, {
		text: "We'd better tell Bok about this...",
		face: 4,
		audio: {
			tag: "voice-10-31",
			s: 0,
			d: 2
		}
	}, {
		text: "What the...this is NOT a shovel! We'd better go tell Bok.",
		face: 5,
		audio: {
			tag: "voice-10-32",
			s: 0,
			d: 5
		}
	}, {
		text: "Wait, those weren't the monsters?",
		face: 1,
		audio: {
			tag: "voice-10-33",
			s: 0,
			d: 3
		}
	}, {
		text: "Hmmm...well, you wouldn't happen to know where we could find some power crystals, would you?",
		face: 4,
		audio: {
			tag: "voice-10-33",
			s: 3,
			d: 7
		}
	}, {
		text: "Ummm...I think that's the REAL monster!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-34",
			s: 0,
			d: 4
		}
	}, {
		text: "I'll bet that's the throne room, but it looks like the entrance is still frozen...",
		face: 1,
		audio: {
			tag: "voice-10-35",
			s: 0,
			d: 5
		}
	}, {
		text: "Look there! It's another power crystal...we can light another furnace!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-35",
			s: 5,
			d: 6
		}
	}, {
		text: "Or maybe not? I guess the wyrm is still around...",
		face: 1,
		audio: {
			tag: "voice-10-35",
			s: 11,
			d: 4
		}
	}, {
		text: "Hey look! The furnace melted some of the ice!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-36",
			s: 0,
			d: 4
		}
	}, {
		text: "You got your second gemstone and opened the second gate! Well done!",
		face: 2,
		anim: 4,
		audio: {}
	}, {
		text: "Next stop, Skywatch!",
		face: 3
	}, {
		text: "Welcome to Lamplight, the most magical town on the island and home of the Academy!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 0,
			d: 6
		}
	}, {
		text: "This is a great little town. I'm sure you'll find yourself right at home.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 6,
			d: 5
		}
	}, {
		text: "Let's go on a quick tour around town, shall we? There's so much to see!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 11,
			d: 5
		}
	}, {
		text: "Here is the Coliseum. Inside you can face the best wizards around, and earn great rewards!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-38",
			s: 0,
			d: 8
		}
	}, {
		text: "But you should probably level up a bit first...some are pretty tricky! Let's keep moving!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-38",
			s: 8,
			d: 7
		}
	}, {
		text: "This is the Shopping District - most of the shops in Lamplight are here.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 0,
			d: 5
		}
	}, {
		text: "Here is the Equipment Store. They sell wands, outfits and hats.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 5,
			d: 4
		}
	}, {
		text: "This is the Stylist Shop, where wizards can change their appearance! Let's continue, shall we?",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 9,
			d: 6
		}
	}, {
		text: "This is the Town Square, the heart of Lamplight!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 0,
			d: 4
		}
	}, {
		text: "Many special events and festivals are hosted here...be sure to check in often!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 4,
			d: 5
		}
	}, {
		text: "All right! Only one more stop to go.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 9,
			d: 4
		}
	}, {
		text: "Down that way is the eastern gate, which leads to the Academy...",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 0,
			d: 4
		}
	}, {
		text: "Unfortunately, it's been closed down ever since the Wardens disappeared... Maybe someday you'll get to see it for yourself!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 4,
			d: 8
		}
	}, {
		text: "Anyways, that's it for the tour! Come back often...the town changes all the time!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 12,
			d: 6
		}
	}, {
		text: "Great job! Be sure to talk to Boardy in Lamplight to get your reward.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-42",
			s: 0,
			d: 4
		}
	}, {
		text: "That monster has the device! We'd better catch it!",
		face: 5,
		anim: 1,
		audio: {
			tag: "voice-10-43",
			s: 0,
			d: 4
		}
	}, {
		text: "HAHA! We've got you now!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-10-43",
			s: 4,
			d: 2
		}
	}, {
		text: "Look, a note! It says that Broccolina is trimming the Bean-o-vator... Let's go find her.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-44",
			s: 0,
			d: 6
		}
	}, {
		text: "What is THAT?!",
		face: 4,
		anim: 1,
		audio: {
			tag: "voice-10-45",
			s: 0,
			d: 2
		}
	}, {
		text: "Uh oh, those vines look too strong for our Vine Pruner. We should tell Benni and Broccolina about this!",
		face: 1
	}, {
		text: "We'd better help him out!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-10-46",
			s: 0,
			d: 2
		}
	}, {
		text: "You got your third gemstone and opened the third gate! Well done!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-47",
			s: 0,
			d: 4
		}
	}, {
		text: "Next stop, Bonfire Spire!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-47",
			s: 4,
			d: 3
		}
	}, {
		text: "Uh, I think that's our cue to leave - fast!",
		face: 4,
		anim: 1,
		audio: {
			tag: "voice-10-50",
			s: 0,
			d: 5
		}
	}, {
		text: "Hey! Where do you think you're going!?",
		face: 5,
		anim: 1,
		audio: {
			tag: "voice-10-51",
			s: 0,
			d: 2
		}
	}, {
		text: "We get tricked a lot, don't we?",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-51",
			s: 2,
			d: 3
		}
	}, {
		text: "Sigh... Here we go again.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-10-51",
			s: 5,
			d: 3
		}
	}, {
		text: "Well, actually, we didn't cook it.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-52",
			s: 0,
			d: 3
		}
	}, {
		text: "Your Majesty, I present to you your new chef! Slurpy!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-48",
			s: 0,
			d: 5
		}
	}, {
		text: "You got your fourth gemstone and opened the fourth gate! Well done!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-49",
			s: 0,
			d: 5
		}
	}, {
		text: "Next stop, Barnacle Cove!",
		face: 3,
		anim: 4
	}, {
		text: "Let's head back, okay?",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-20",
			s: 9,
			d: 2
		}
	}, {
		text: "Oh no! Looks like we'll need to slip by Cebollini to get to the pot.",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 0,
			d: 6
		}
	}, {
		text: "If you step into his circle of vision, he'll catch you and kick you out!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 6,
			d: 6
		}
	}, {
		text: "Hey, look there! There's a cauldron you can use to hide.",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 12,
			d: 5
		}
	}, {
		text: "Press the button above your head to hide!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 17,
			d: 4
		}
	}, {
		text: "Walk around to take off the cauldron.",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 21,
			d: 3
		}
	}, {
		text: "Now, enter your first name and last-name initial!",
		face: 2
	}, {
		text: "Hello?",
		face: 1,
		audio: {
			tag: "voice-10-53",
			s: 0,
			d: 2
		}
	}, {
		text: "Hey, listen!",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-53",
			s: 2,
			d: 2
		}
	}, {
		text: "C'mon, wake up sleepy head! You're going to be late for your first day of classes at the Academy!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-53",
			s: 4,
			d: 6
		}
	}, {
		text: "Whoa! Hold up!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-54",
			s: 0,
			d: 1
		}
	}, {
		text: "I haven't even introduced myself. The name's Noot. I help bring new students to the Academy on their first day of class!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-54",
			s: 1,
			d: 7
		}
	}, {
		text: "Who might you be?",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-10-54",
			s: 8,
			d: 1
		}
	}, {
		text: "Nice to meet you!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-55",
			s: 0,
			d: 1
		}
	}, {
		text: "Let's head over. Don't wanna be late on your first day!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-55",
			s: 1,
			d: 3
		}
	}, {
		text: "Hey look, a monster! Monsters can be found everywhere, but they're pretty tame.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-55",
			s: 4,
			d: 5
		}
	}, {
		text: "Uh...this one seems a bit grumpy. Looks like it wants to battle!",
		face: 5,
		anim: 3,
		audio: {
			tag: "voice-10-55",
			s: 9,
			d: 5
		}
	}, {
		text: "Since you're new at this, I'll shield you from spells for now!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-56",
			s: 0,
			d: 4
		}
	}, {
		text: "Something really DID seem odd about that monster. Let's hurry up and get to the Academy.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-10-56",
			s: 4,
			d: 5
		}
	}, {
		text: "By the way, if you're ever not sure what to do, just follow the magical guide hand I've created!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-56",
			s: 9,
			d: 5
		}
	}, {
		text: "Click on the hand now!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-56",
			s: 14,
			d: 2
		}
	}, {
		text: "Welcome to Lamplight Town! This place is just FULL of interesting people to meet and things to do!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-57",
			s: 0,
			d: 7
		}
	}, {
		text: "Now, before we go further, you'll need to choose your very own pet!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-57",
			s: 7,
			d: 5
		}
	}, {
		text: "Every wizard that studies at the Academy chooses a pet to train with.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-57",
			s: 12,
			d: 5
		}
	}, {
		text: "When you train a pet, it becomes smarter and learns new spells, just like you!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-57",
			s: 17,
			d: 5
		}
	}, {
		text: "Some pets even change to stronger forms if you train them enough!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-57",
			s: 22,
			d: 4
		}
	}, {
		text: "Whoa, what has gotten into these pets?!",
		face: 4,
		anim: 3,
		audio: {
			tag: "voice-10-57",
			s: 26,
			d: 3
		}
	}, {
		text: "Looks like they've settled down, thank goodness! Choose which one you'd like to train!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-57",
			s: 29,
			d: 6
		}
	}, {
		text: "This is the Town Square, the heart of Lamplight Town.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-58",
			s: 0,
			d: 4
		}
	}, {
		text: "Let's keep heading to the Academy. We can come back later, and I'll give you the full tour.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-58",
			s: 4,
			d: 5
		}
	}, {
		text: "Another monster that wants to battle us? We need to scare it away before it causes trouble around here.",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-59",
			s: 0,
			d: 7
		}
	}, {
		text: "Come oooon, we have to get going!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-10-60",
			s: 0,
			d: 3
		}
	}, {
		text: "Whew! We MADE IT! Well, it's time for you to get to class.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-61",
			s: 0,
			d: 5
		}
	}, {
		text: "I have to go help other wizards find their way here, AND find out what's going on with all the monsters nearby, but I'm sure I'll see you around!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-61",
			s: 5,
			d: 9
		}
	}, {
		text: "Do you feel that?",
		face: 5,
		anim: 3,
		audio: {
			tag: "voice-10-61",
			s: 14,
			d: 1
		}
	}, {
		text: "I...can sense something. A presence I've not felt since...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-61",
			s: 15,
			d: 5
		}
	}, {
		text: "What WAS that?! Whoa...I don't feel so good...",
		face: 1,
		anim: 1,
		audio: {
			tag: "voice-10-62",
			s: 0,
			d: 4
		}
	}, {
		text: "AND WHERE DID THE WARDEN KEYSTONES GO?!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-10-62",
			s: 4,
			d: 3
		}
	}, {
		text: "Without the Warden Keystones on their pedestals...",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-62",
			s: 7,
			d: 3
		}
	}, {
		text: "Oh no! It's the Puppet Master! This IS NOT good!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-10-63",
			s: 0,
			d: 5
		}
	}, {
		text: "The name's Noot, and this here is my pal.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-63",
			s: 5,
			d: 3
		}
	}, {
		text: "With the help of the power of the Wardens, we're going to put a stop to the Order's evil plans, once and for all!",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-63",
			s: 8,
			d: 7
		}
	}, {
		text: "I think it's time for us to get outta here...",
		face: 1,
		anim: 3,
		audio: {
			tag: "voice-10-63",
			s: 15,
			d: 3
		}
	}, {
		text: "I have a little secret I was keeping from the Puppet Master: the Warden Keystones can't be destroyed!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 0,
			d: 7
		}
	}, {
		text: "All that blast did was scatter them around the island.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 7,
			d: 3
		}
	}, {
		text: "Once we collect them all, we'll be able to open a path back into the Academy!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 10,
			d: 5
		}
	}, {
		text: "The Puppet Master must be the one who cast the mind spells on the monsters...",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 15,
			d: 5
		}
	}, {
		text: "But thanks to you, the town is safe once again!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 20,
			d: 4
		}
	}, {
		text: "I think you've earned your wizard name. What shall you be known as?",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 24,
			d: 5
		}
	}, {
		text: "It's PERFECT!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-64",
			s: 29,
			d: 2
		}
	}, {
		text: "Let's start the search for the Warden Keystones in Firefly Forest!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 31,
			d: 5
		}
	}, {
		text: "Here, take this map. It'll let you jump to places you've visited.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 36,
			d: 4
		}
	}, {
		text: "One last thing. That shadow blast drained most of my magic, so I can't block spells for you anymore.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 40,
			d: 7
		}
	}, {
		text: "With the Wardens weakened, it's up to us to stop the evil Order of Influence and save the Academy!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-64",
			s: 47,
			d: 7
		}
	}, {
		text: "Okay, follow me!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-18",
			s: 7,
			d: 1.6
		}
	}, {
		text: "Uh oh, the quest you were working on has ended. Let's go talk to Swoopy and get another quest!",
		face: 1
	}, {
		text: "Hello! I'm Noot, pleasure to meet you.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 0,
			d: 2.8
		}
	}, {
		text: "Eve sent us. She said that the local people saw an ancient monster swimming around here.",
		face: 1,
		audio: {
			tag: "voice-25-1",
			s: 3,
			d: 5.5
		}
	}, {
		text: "Do you know anything about that?",
		face: 1,
		audio: {
			tag: "voice-25-1",
			s: 9,
			d: 1.6
		}
	}, {
		text: "Let's search the nearby areas Jelly Jim mentioned.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 11,
			d: 3.1
		}
	}, {
		text: "What IS this stuff? Oh no, I don't think we can go any further. Maybe Eve will know what to do.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 15,
			d: 8
		}
	}, {
		text: "Whoa... what is that tunnel in the sand from?! That does NOT look normal. And it's HUGE!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-25-1",
			s: 32,
			d: 7.3
		}
	}, {
		text: "Let's go back and tell Eve about this right away!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 40,
			d: 2.9
		}
	}, {
		text: "Looks like the door's locked. Let's finish our tasks, then we can try to get it open later.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 44,
			d: 5.4
		}
	}, {
		text: "Let's go take that photo!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 50,
			d: 1.4
		}
	}, {
		text: "The door's locked. Let's let Eve know.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 52,
			d: 2.74
		}
	}, {
		text: "Are you playing from home or from school?",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-10-65",
			s: 0,
			d: 2.54
		}
	}, {
		text: "This wizard will become more powerful than you could possibly imagine!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 0,
			d: 5
		}
	}, {
		text: "Stopping a Titan won't be easy. It will be up to you and all the wizards in the world to bring it down by weakening it in Wizard Battles.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-66",
			s: 5.5,
			d: 8.5
		}
	}, {
		text: "Select the Titan when you want to battle it.",
		face: 4,
		audio: {
			tag: "voice-10-66",
			s: 15,
			d: 3
		}
	}, {
		text: "In Titan battles, you first need to break through the Titan's barrier. Once its barrier breaks, it will lose some hearts.",
		face: 0,
		audio: {
			tag: "voice-10-66",
			s: 19,
			d: 8
		}
	}, {
		text: "Once this is done enough times by you and other wizards, it will be defeated!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-66",
			s: 28,
			d: 5
		}
	}, {
		text: "You aren't alone in this fight. Get help from other wizards!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-66",
			s: 33,
			d: 4
		}
	}],
	flora: [{
		text: "Well hello there! The name's Flora - master wizard of Firefly Forest!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-8-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Complete my trials to learn earth spells. Complete them all to earn the Firefly Gem!",
		face: 3,
		audio: {
			tag: "voice-8-1",
			s: 6,
			d: 6
		}
	}, {
		text: "But first, I have an itty bitty favor to ask...",
		face: 2,
		audio: {
			tag: "voice-8-1",
			s: 12,
			d: 3
		}
	}, {
		text: "Can you go rescue my friend? He's been surrounded by monsters!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-1",
			s: 15,
			d: 5
		}
	}, {
		text: "Quick question - what does every wizard need?",
		face: 2,
		audio: {
			tag: "voice-8-2",
			s: 0,
			d: 4
		}
	}, {
		text: "A wand, silly! I'm fresh out of wands, but I think there's a special one in a chest in the forest!",
		face: 1,
		audio: {
			tag: "voice-8-2",
			s: 4,
			d: 8
		}
	}, {
		text: "Or you can always buy one from the shop!",
		face: 2,
		audio: {
			tag: "voice-8-2",
			s: 12,
			d: 3
		}
	}, {
		text: "Oh! You got one!",
		face: 1,
		audio: {
			tag: "voice-8-2",
			s: 15,
			d: 2
		}
	}, {
		text: "After a few battles, your hearts get low and you need to heal.",
		face: 2,
		audio: {
			tag: "voice-8-3",
			s: 0,
			d: 4
		}
	}, {
		text: "Follow the path and find a HEALSTONE - a magical gem that can heal your team!",
		face: 5,
		audio: {
			tag: "voice-8-3",
			s: 4,
			d: 6
		}
	}, {
		text: "And while you're there, challenge some Saplettes for your next trial!",
		face: 3,
		audio: {
			tag: "voice-8-3",
			s: 10,
			d: 5
		}
	}, {
		text: "To become a true Prodigy, you must learn spells! And the best way to learn new spells is by helping people!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-8-4",
			s: 0,
			d: 7
		}
	}, {
		text: "Firefly Forest has a problem...vandals! Someone's been littering at the crossroads!",
		face: 6,
		audio: {
			tag: "voice-8-4",
			s: 7,
			d: 6
		}
	}, {
		text: "Do me a favor and help clean it up, okay?",
		face: 7,
		audio: {
			tag: "voice-8-4",
			s: 13,
			d: 3
		}
	}, {
		text: "The paper you picked up seems to be part of a note... but it's written in 'monster'.",
		face: 2,
		audio: {
			tag: "voice-8-5",
			s: 0,
			d: 5
		}
	}, {
		text: "Try bringing it to the traveller in the northern woods!",
		face: 0,
		audio: {
			tag: "voice-8-5",
			s: 5,
			d: 3
		}
	}, {
		text: "The note says 'don't tell Flora' \n...HEY! I'M FLORA!",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-8-6",
			s: 0,
			d: 5
		}
	}, {
		text: "So, those Sprikes are up to something secret, huh? Defeat a few until they drop some evidence!",
		face: 6,
		audio: {
			tag: "voice-8-6",
			s: 5,
			d: 8
		}
	}, {
		text: "Hmmm, this is a Mandrake... \nMandrakes are the best spies in the whole forest!",
		face: 3,
		audio: {
			tag: "voice-8-7",
			s: 0,
			d: 6
		}
	}, {
		text: "Collect more for me and bring them in for questioning...maybe they can tell us more!",
		face: 6,
		audio: {
			tag: "voice-8-7",
			s: 6,
			d: 5
		}
	}, {
		text: "Be sure to look around...they may be in more than one place!",
		face: 1,
		audio: {
			tag: "voice-8-7",
			s: 11,
			d: 4
		}
	}, {
		text: "According to the Mandrakes, the TripTrop Trio ordered the Sprikes to steal something from me.",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-8",
			s: 0,
			d: 6
		}
	}, {
		text: "This forest is mischievious! \n...and confusing!",
		face: 7,
		audio: {
			tag: "voice-8-8",
			s: 6,
			d: 4
		}
	}, {
		text: "Track down the TripTrop Trio, defeat them, and bring back what they stole!",
		face: 6,
		audio: {
			tag: "voice-8-8",
			s: 10,
			d: 5
		}
	}, {
		text: "So, they stole my flute? And they BROKE IT?! THE NERVE!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-9",
			s: 0,
			d: 6
		}
	}, {
		text: "This can only mean one thing... \nCan you head into the forest to find my Golem, Gerald?",
		face: 2,
		audio: {
			tag: "voice-8-9",
			s: 6,
			d: 6
		}
	}, {
		text: "WHAT?! That boulder-brain is asleep again?!",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-9",
			s: 12,
			d: 4
		}
	}, {
		text: "Monsters lull Gerald to sleep all the time...I guess he's a bit loud when he walks around.",
		face: 2,
		audio: {
			tag: "voice-8-10",
			s: 0,
			d: 7
		}
	}, {
		text: "We can wake him up, but first we need to fix my broken flute!",
		face: 7,
		audio: {
			tag: "voice-8-10",
			s: 7,
			d: 5
		}
	}, {
		text: "Easy Peasy! Just bring it to the 'magic stump' in the woods!",
		face: 0,
		audio: {
			tag: "voice-8-10",
			s: 12,
			d: 4
		}
	}, {
		text: "WHAT?! It's been stolen again?!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-10",
			s: 16,
			d: 3
		}
	}, {
		text: "That's the last straw! Now I'm REAL MAD, and nobody wants to mess with an angry forest fairy!",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-11",
			s: 0,
			d: 9
		}
	}, {
		text: "Go find that monster and bring back my flute! He could be anywhere!",
		face: 6,
		audio: {
			tag: "voice-8-11",
			s: 9,
			d: 5
		}
	}, {
		text: "Now that we have the flute, it's time for your final challenge!",
		face: 3,
		audio: {
			tag: "voice-8-12",
			s: 0,
			d: 4
		}
	}, {
		text: "Take this to Gerald and wake him up! Careful, though...he can get REAL grumpy!",
		face: 2,
		audio: {
			tag: "voice-8-12",
			s: 4,
			d: 6
		}
	}, {
		text: "Wow! You did it! As promised, here is the Firefly Gem!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-8-12",
			s: 10,
			d: 6
		}
	}, {
		text: "You're ready to head into Shiverchill Mountains, where you'll meet your second master, Bok!",
		face: 5,
		audio: {
			tag: "voice-8-13",
			s: 0,
			d: 6
		}
	}, {
		text: "Just take the gem to the gate and open it!",
		face: 4,
		audio: {
			tag: "voice-8-13",
			s: 6,
			d: 3
		}
	}, {
		text: "Just follow the arrows!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-8-14",
			s: 0,
			d: 2
		}
	}, {
		text: "Well done!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-8-14",
			s: 2,
			d: 2
		}
	}],
	bok: [{
		text: "Hahaha! Bok knew you could do it!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-1-1",
			s: 0,
			d: 5
		}
	}, {
		text: "Slip say it time you learn new spell. Bok agree - you the best!",
		face: 7,
		anim: 2,
		audio: {
			tag: "voice-1-1",
			s: 5,
			d: 8
		}
	}, {
		text: "Hoot hoot!",
		face: 2,
		audio: {
			tag: "voice-1-1",
			s: 13,
			d: 1
		}
	}, {
		text: "Welcome to Bok cave! New wizard seek gem, learn spells? You come to right place!",
		face: 1,
		audio: {
			tag: "voice-1-2",
			s: 0,
			d: 8
		}
	}, {
		text: "Bok teach wizard, but first we have problem...IT FREEZING IN HERE!",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-1-2",
			s: 8,
			d: 8
		}
	}, {
		text: "Need to check on furnaces, but room full of chilly monsters...",
		face: 3,
		audio: {
			tag: "voice-1-2",
			s: 16,
			d: 6
		}
	}, {
		text: "But you wizard! Wizard strong! Head to furnace room...first door on right.",
		face: 4,
		audio: {
			tag: "voice-1-2",
			s: 22,
			d: 7
		}
	}, {
		text: "Furnaces ALL broken? Bok use power crystal to light furnace, but last crystal stolen...",
		face: 8,
		audio: {
			tag: "voice-1-3",
			s: 0,
			d: 8
		}
	}, {
		text: "What?! Bok tell Slip to hide crystal...it not Bok fault it stolen!",
		face: 6,
		audio: {
			tag: "voice-1-3",
			s: 8,
			d: 8
		}
	}, {
		text: "Go to treasure room and find chilly monster that stole Bok crystal!",
		face: 3,
		audio: {
			tag: "voice-1-3",
			s: 16,
			d: 6
		}
	}, {
		text: "Now that wizard have crystal, time to light furnace!",
		face: 0,
		audio: {
			tag: "voice-1-4",
			s: 0,
			d: 5
		}
	}, {
		text: "Go to furnace room and light furnace. Bok counting on wizard!",
		face: 1,
		audio: {
			tag: "voice-1-4",
			s: 5,
			d: 6
		}
	}, {
		text: "Wizard do good, but much of mountain still frozen. Need more crystals, Bok think.",
		face: 5,
		audio: {
			tag: "voice-1-5",
			s: 0,
			d: 9
		}
	}, {
		text: "Crystals rare, but Bok used to find them in caves. Go explore caves, see what can find!",
		face: 0,
		audio: {
			tag: "voice-1-5",
			s: 9,
			d: 9
		}
	}, {
		text: "You find miner? BOK NOT LIKE MINERS ONE BIT!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-1-5",
			s: 18,
			d: 6
		}
	}, {
		text: "Before miners, Bok king of mountain. Then miners come with scary wizard, chase Bok to this cave.",
		face: 8,
		audio: {
			tag: "voice-1-5",
			s: 24,
			d: 10
		}
	}, {
		text: "Slip right...miners good at finding crystals. Okay, Bok help...take key to chest - shovel there.",
		face: 5,
		audio: {
			tag: "voice-1-5",
			s: 34,
			d: 12
		}
	}, {
		text: "Wizard can find chest in mines...but be careful! Shovel prized possession, passed to Bok from dear mother.",
		face: 4,
		audio: {
			tag: "voice-1-6",
			s: 0,
			d: 11
		}
	}, {
		text: "Wizard say shovel is spoon? That mean Bok been using real shovel as spoon for WEEKS!",
		face: 8,
		anim: 2,
		audio: {
			tag: "voice-1-6",
			s: 11,
			d: 8
		}
	}, {
		text: "NO LAUGHING, SLIP!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-1-6",
			s: 19,
			d: 2
		}
	}, {
		text: "Now you have real shovel, go help miner and get crystal for Bok!",
		face: 0,
		audio: {
			tag: "voice-1-7",
			s: 0,
			d: 7
		}
	}, {
		text: "All miner say is that power crystal in mines? BOK ALREADY KNOW THAT!",
		face: 8,
		audio: {
			tag: "voice-1-8",
			s: 0,
			d: 7
		}
	}, {
		text: "Head into mines, and find that crystal!",
		face: 0,
		audio: {
			tag: "voice-1-8",
			s: 7,
			d: 5
		}
	}, {
		text: "Giant ice wyrm? That must be what cause all these cavequakes...",
		face: 5,
		audio: {
			tag: "voice-1-9",
			s: 0,
			d: 6
		}
	}, {
		text: "Well, it sound like you defeat it, so back to plan - head back into mines!",
		face: 1,
		audio: {
			tag: "voice-1-9",
			s: 6,
			d: 7
		}
	}, {
		text: "What? Oh, Slip want you to defeat ghosties in mines first...",
		face: 8,
		audio: {
			tag: "voice-1-9",
			s: 13,
			d: 7
		}
	}, {
		text: "Okay, no more delay! Head to mines, ghosties or not, and bring back power crystal!",
		face: 3,
		audio: {
			tag: "voice-1-10",
			s: 0,
			d: 9
		}
	}, {
		text: "With two furnaces on, Bok throne room should be open, and Bok can be king of mountain again!",
		face: 0,
		audio: {
			tag: "voice-1-11",
			s: 0,
			d: 10
		}
	}, {
		text: "But before I go, check throne room for Bok, make sure it safe.",
		face: 4,
		audio: {
			tag: "voice-1-11",
			s: 10,
			d: 7
		}
	}, {
		text: "Throne room still frozen? And wyrm eat last power crystal? This not good...",
		face: 6,
		audio: {
			tag: "voice-1-11",
			s: 17,
			d: 8
		}
	}, {
		text: "Okay, Bok have plan!",
		face: 0,
		audio: {
			tag: "voice-1-12",
			s: 0,
			d: 3
		}
	}, {
		text: "BOK HAVE GOOD PLANS SOMETIMES! LOTS OF TIMES!",
		face: 3,
		audio: {
			tag: "voice-1-12",
			s: 3,
			d: 5
		}
	}, {
		text: "Monster eat crystals, so wizard go collect lots of crystals!",
		face: 5,
		audio: {
			tag: "voice-1-12",
			s: 8,
			d: 5
		}
	}, {
		text: "Lure monster, defeat, and get crystal! Off you go, hero wizard!",
		face: 1,
		audio: {
			tag: "voice-1-12",
			s: 13,
			d: 8
		}
	}, {
		text: "You have crystals, now it time to face the ice wyrm...good luck!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-1-13",
			s: 0,
			d: 7
		}
	}, {
		text: "Slip wish you luck too!",
		face: 4,
		audio: {
			tag: "voice-1-13",
			s: 7,
			d: 4
		}
	}, {
		text: "For this, wizard deserve the Shiverchill Gem!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-1-14",
			s: 7,
			d: 6
		}
	}, {
		text: "...But, Bok leave in throne room. As final test, go to throne room and pick up reward!",
		face: 5,
		audio: {
			tag: "voice-1-14",
			s: 13,
			d: 9
		}
	}, {
		text: "Well, that all Bok have to teach! Now it time for wizard to face new journey!",
		face: 7,
		anim: 4,
		audio: {
			tag: "voice-1-15",
			s: 0,
			d: 8
		}
	}, {
		text: "Bring gem to gate at top of mountain, open, and find Benni, the next master!",
		face: 5
	}],
	merchant: [{
		text: "Boy, have I got some deals for you!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-11",
			s: 0,
			d: 4
		}
	}, {
		text: "Oh dear...I'm in quite a pickle now!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-11",
			s: 24,
			d: 3
		}
	}, {
		text: "Those monsters almost got away with my loot!!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-11",
			s: 6,
			d: 3
		}
	}, {
		text: "What have we here? A note written by monsters, huh? Let me read it...",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 9,
			d: 5
		}
	}, {
		text: "It says... \n'Big plans happening, don't tell Flora!'",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 19,
			d: 5
		}
	}, {
		text: "Well it looks like it was written by a Sprike - strange little monsters, they are!",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 14,
			d: 5
		}
	}, {
		text: "Well hello there, young one!",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 4,
			d: 2
		}
	}, {
		text: "You there, help! The earthquake trapped me under some rubble!",
		face: 0,
		audio: {
			tag: "voice-11-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Please find something to dig me out before the monster comes back!",
		face: 0,
		audio: {
			tag: "voice-11-1",
			s: 6,
			d: 4
		}
	}, {
		text: "Thank goodness you came before the monster returned!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 0,
			d: 4
		}
	}, {
		text: "Goodness no! I speak of the ice demon lurking in the mountains! Scary stuff, it is!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 4,
			d: 6
		}
	}, {
		text: "I was trying to escape with the other miners, but I got trapped here!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 10,
			d: 4
		}
	}, {
		text: "Power crystals, huh? There might be one or two left in the mines...",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 14,
			d: 5
		}
	}, {
		text: "Thanks for all your hard work completing bounties. Here is your reward!"
	}, {
		text: "Do you want to open the Arena Rewards shop?"
	}, {
		text: "Are you ready to take part in the ARENA? Face the toughest wizards around the world and work your way to the top!"
	}, {
		text: "You cannot take part in the Arena in Offline Mode!"
	}, {
		text: "Do you want to open the Bounty Rewards shop?"
	}, {
		text: "Collect fireflies for me.",
		face: 0
	}, {
		text: "Your next reward is at 5.",
		face: 0
	}, {
		text: "Your next reward is at 10.",
		face: 0
	}, {
		text: "Your next reward is at 25.",
		face: 0
	}, {
		text: "Your next reward is at 50.",
		face: 0
	}, {
		text: "Your next reward is at 75.",
		face: 0
	}, {
		text: "Your next reward is at 99.",
		face: 0
	}, {
		text: "1 more to go!",
		face: 0
	}, {
		text: "Congrats, here is your reward!",
		face: 0
	}, {
		text: "Collect Ice Crystals for me.",
		face: 0
	}, {
		text: "A few of them should appear every day. Explore the forest to find them!",
		face: 0
	}, {
		text: "They are really tricky to catch while they are moving, so wait until they stop to rest.",
		face: 0
	}, {
		text: "A few frozen blocks of ice should appear every day. Explore the mountains to find them!",
		face: 0
	}, {
		text: "Once you have them, take them to any lit furnace to thaw them out.",
		face: 0
	}, {
		text: "If you happen to find any Ice Crystals, bring them to me for rewards.",
		face: 0
	}, {
		text: "Hold on! There is something else you can help me with.",
		face: 0
	}, {
		text: "Would you be able to collect fireflies for me? They appear every day. Explore the forest to find them!",
		face: 0
	}, {
		text: "If you don't mind, there is another task you can help me with.",
		face: 0
	}, {
		text: "That's all that I need. Thanks so much for your help!",
		face: 0
	}, {
		text: "Thank you so very much for taking care of those brutes! I was simply TERRIFIED.",
		face: 1,
		anim: 1,
		audio: {
			tag: "voice-11-3",
			s: 0,
			d: 6
		}
	}, {
		text: "Please take this wizard hat. It will help protect you on your travels!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-11-3",
			s: 6,
			d: 4
		}
	}, {
		text: "South of here, a monster stole a wand from the magic shop! Defeat it, and you may keep the wand as your prize!",
		face: 1,
		audio: {
			tag: "voice-11-3",
			s: 10,
			d: 8
		}
	}],
	winterfest: [{
		text: "Open the present to get your daily gift!",
		audio: {}
	}, {
		text: "You've already gotten your gift for today. Come back tomorrow.",
		audio: {}
	}],
	benni: [{
		text: "You helped me out... Thanks, I guess.",
		face: 7,
		anim: 4,
		audio: {
			tag: "voice-12-1",
			s: 0,
			d: 2
		}
	}, {
		text: "Wow, what a champ!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-12-1",
			s: 2,
			d: 2
		}
	}, {
		text: "We're lookin' at a COMPLETE shutdown here, and it's all because of your STUPID PLANTS!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-2",
			s: 0,
			d: 5.05
		}
	}, {
		text: "At least they're smarter than YOU, bolt-head!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-12-2",
			s: 5,
			d: 3
		}
	}, {
		text: "Um...hello?",
		face: 10,
		anim: 2,
		audio: {
			tag: "voice-12-2",
			s: 8,
			d: 2
		}
	}, {
		text: "Just do your JOB and trim those vines before GRAMPS finds out!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-2",
			s: 10,
			d: 4
		}
	}, {
		text: "I WOULD if I COULD, squirt! The greenhouse is full of monsters again!",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-12-2",
			s: 14,
			d: 6
		}
	}, {
		text: "Let's head to that greenhouse and help them out...Maybe then they'll stop fighting!",
		face: 10,
		anim: 2,
		audio: {
			tag: "voice-12-2",
			s: 20,
			d: 5
		}
	}, {
		text: "Now you can get back to WORK!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-12-3",
			s: 0,
			d: 3
		}
	}, {
		text: "I didn't see you there! The name's Benni, and this is my sister Broccolina!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-4",
			s: 0,
			d: 6
		}
	}, {
		text: "This is SKYWATCH, home of the famous Grand Weather Factory! I take care of the machines that make the weather, and my sister takes care of the plants.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-4",
			s: 6,
			d: 10
		}
	}, {
		text: "Since you're a wizard, we could sure use your help!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-4",
			s: 16,
			d: 3
		}
	}, {
		text: "Head to my place and pick up my Weather O Meter! I need it to take some readings around Skywatch.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-4",
			s: 19,
			d: 6
		}
	}, {
		text: "That monster chewed my Weather O Meter to BITS! Guess we'll have to do this the old-fashioned way!",
		face: 2,
		audio: {
			tag: "voice-12-5",
			s: 0,
			d: 6
		}
	}, {
		text: "I'll have to check the machines manually, but I'll need my sister first.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-12-5",
			s: 6,
			d: 4
		}
	}, {
		text: "Check the greenhouse for me. She's always there murkin' around.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-5",
			s: 10,
			d: 3
		}
	}, {
		text: "Well, now that we have your trimmers, you can fix up the trolley to the rest of Skywatch!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-6",
			s: 0,
			d: 5
		}
	}, {
		text: "But...the monsters...",
		face: 9,
		audio: {
			tag: "voice-12-6",
			s: 5,
			d: 3
		}
	}, {
		text: "Quit being a baby, Broc! Okay wizard, time to help out again! First, trim the vines covering the trolley, then check on the Wind Machine for me, okay?",
		face: 1,
		anim: 1,
		audio: {
			tag: "voice-12-6",
			s: 8,
			d: 9
		}
	}, {
		text: "Oh no! Those nasty clouds have clogged up the machines AGAIN!",
		face: 3,
		audio: {
			tag: "voice-12-7",
			s: 0,
			d: 5
		}
	}, {
		text: "They seem to come back a lot... But don't worry, we just need to upgrade the trimmer...",
		face: 8,
		anim: 2,
		audio: {
			tag: "voice-12-7",
			s: 5,
			d: 5
		}
	}, {
		text: "Hmmm, not a bad idea. The parts are in the factory, but it's locked and gramps has hidden the key again.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-7",
			s: 10,
			d: 6
		}
	}, {
		text: "Look for clues around Skywatch... They'll tell us where to find the key!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-7",
			s: 16,
			d: 4
		}
	}, {
		text: "Ugh! Gramps hid it at the entrance of the factory! I KNEW it would be there!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-12-8",
			s: 0,
			d: 5
		}
	}, {
		text: "He ALWAYS hides it in there...",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-12-8",
			s: 5,
			d: 2
		}
	}, {
		text: "Head to the factory and collect spare parts! The monsters there should have plenty!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-9",
			s: 0,
			d: 5
		}
	}, {
		text: "Voila! You now have the power of the Vinecinerator 2000!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-12-10",
			s: 0,
			d: 4
		}
	}, {
		text: "This should to the trick.",
		face: 8,
		anim: 2,
		audio: {
			tag: "voice-12-10",
			s: 4,
			d: 2
		}
	}, {
		text: "First stop, the Snow Machine! Go teach that cloud a lesson and clear those vines!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-10",
			s: 6,
			d: 6
		}
	}, {
		text: "The Rain Machine is next...",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-12-11",
			s: 0,
			d: 3
		}
	}, {
		text: "Last up, the Wind Machine! You got this, wiz!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-12",
			s: 0,
			d: 3
		}
	}, {
		text: "It's time for you to meet GRAMPS! Tell him about those nasty clouds!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-13",
			s: 0,
			d: 4
		}
	}, {
		text: "He's the Cloudmaster General. He'll know what to do.",
		face: 8,
		anim: 2,
		audio: {
			tag: "voice-12-13",
			s: 4,
			d: 3
		}
	}, {
		text: "He sits around all day in the factory in that stupid massage chair...",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-12-13",
			s: 7,
			d: 6
		}
	}, {
		text: "Uh...you want the key...? Benni...?",
		face: 9,
		audio: {
			tag: "voice-12-14",
			s: 0,
			d: 3
		}
	}, {
		text: "See, we had the key, but, uh...we...uh...broke it.",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-12-14",
			s: 3,
			d: 4
		}
	}, {
		text: "I'm pretty sure the pieces are around here...somewhere...",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-12-14",
			s: 7,
			d: 4
		}
	}, {
		text: "So it seems gramps wants you to head to the Cumulus Room...strange, he ALWAYS sends wizards there...",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-12-15",
			s: 0,
			d: 7
		}
	}, {
		text: "He never lets US go in there...",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-12-15",
			s: 7,
			d: 2
		}
	}, {
		text: "Gramps, what are YOU doing out here?!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-12-16",
			s: 0,
			d: 3
		}
	}, {
		text: "And when was the last time you took a bath...?",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-12-16",
			s: 3,
			d: 3
		}
	}, {
		text: "This wizard here is a TRUE hero! And the hero of Skywatch always gets a deserving reward!",
		face: 15,
		anim: 4,
		audio: {
			tag: "voice-12-16",
			s: 6,
			d: 7
		}
	}, {
		text: "It's time for our goodbyes, friend! Take that gem and head through the Cumulus Room to the gate.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-12-17",
			s: 0,
			d: 5
		}
	}, {
		text: "Things are about to get REAL spicy for you!",
		face: 8,
		anim: 4,
		audio: {
			tag: "voice-12-17",
			s: 5,
			d: 3
		}
	}, {
		text: "Did you just make a JOKE, sis!?",
		face: 4,
		audio: {
			tag: "voice-12-17",
			s: 8,
			d: 3
		}
	}, {
		text: "Wow! Ya did it!",
		face: 15,
		anim: 4,
		audio: {
			tag: "voice-12-17",
			s: 11,
			d: 2
		}
	}, {
		text: "I'd say it's time for you to learn a new spell!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-12-18",
			s: 0,
			d: 3
		}
	}],
	broccolina: [{
		text: "Oh, hi there. Benni wants my help again? Huh. Figures...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-13-1",
			s: 0,
			d: 5
		}
	}, {
		text: "I'll meet you topside.",
		face: 3,
		anim: 2
	}],
	eugene: [{
		text: "You pesky robots! Leave me be!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-14-1",
			s: 0,
			d: 4
		}
	}, {
		text: "My now, a wizard, are ya? Pleasure to meetcha!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-14-2",
			s: 0,
			d: 4
		}
	}, {
		text: "The name is Eugene Gramps, otherwise known as the all-powerful Cloudmaster! Um...",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-14-2",
			s: 4,
			d: 6
		}
	}, {
		text: "Cloudmaster GENERAL!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-14-2",
			s: 10,
			d: 2
		}
	}, {
		text: "So, I bet them clouds have my grandkids runnin' wild, huh?",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-14-2",
			s: 12,
			d: 4
		}
	}, {
		text: "Every time those two scamps get arguin', I send out my clouds. Thing is, they never realize it's me what does it! Hehehehehe!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-14-2",
			s: 16,
			d: 9
		}
	}, {
		text: "Tell Benni to give you the Master Key... It's time for the finale of my little prank!",
		face: 4,
		anim: 1,
		audio: {
			tag: "voice-14-2",
			s: 25,
			d: 6
		}
	}],
	cebollini: [{
		text: "What is this!? Get out of here - I am creating art!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-2",
			s: 0,
			d: 5
		}
	}, {
		text: "Yes, Madame, I live to cook!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-3",
			s: 0,
			d: 3
		}
	}, {
		text: "But Madame... I assure you...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-3",
			s: 3,
			d: 3
		}
	}, {
		text: "WHAT?! FIRED?! ME!? This is an outrage!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-3",
			s: 6,
			d: 5
		}
	}, {
		text: "You have not heard the last of Chef Cebollini Carpaccio!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-3",
			s: 11,
			d: 4
		}
	}, {
		text: "What do you think you are doing?!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-4",
			s: 0,
			d: 3
		}
	}, {
		text: "Bringing a dish to my Queen!? Usurper! Fiend! This is MY job!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-4",
			s: 3,
			d: 7
		}
	}, {
		text: "If I cannot feed the Queen, then SHE WILL NOT EAT!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-4",
			s: 10,
			d: 4
		}
	}, {
		text: "What? How did you get over here? You are slime-less!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 0,
			d: 5
		}
	}, {
		text: "No matter! This dish will never see the light of day! En garde!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 5,
			d: 5
		}
	}, {
		text: "Always start battle with an appetizer!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 10,
			d: 3
		}
	}, {
		text: "Still hungry? Time for the main course!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 13,
			d: 4
		}
	}, {
		text: "There is always room for dessert!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 17,
			d: 3
		}
	}, {
		text: "I must admit, you have not just bested me in battle...but also in the kitchen. Your cooking, it is exquisite!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 20,
			d: 9
		}
	}, {
		text: "That dish of yours... I must have your recipe!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 29,
			d: 4
		}
	}, {
		text: "Then you must bring the chef to the Queen! She will demand such talent in her kitchen!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-5",
			s: 33,
			d: 7
		}
	}, {
		text: "'Tis no joke, Madame. Here is but a taste of talent!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-1",
			s: 0,
			d: 5
		}
	}, {
		text: "Ahem! I think what he is trying to say is that Slurpy wants to become my new apprentice in the Royal Kitchen.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-1",
			s: 5,
			d: 9
		}
	}, {
		text: "Of course, I would need my job back...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-1",
			s: 14,
			d: 3
		}
	}, {
		text: "But of course! Never in my life, Madame!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-18-1",
			s: 17,
			d: 4
		}
	}],
	slime_queen: [{
		text: "OOOOOOOH look at this! It smells divine, Cebollini, as always!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-16-3",
			s: 0,
			d: 7
		}
	}, {
		text: "...",
		face: 1,
		anim: 2
	}, {
		text: "WHAT IS THIS, CEBOLLINI!? RAISINS?",
		face: 5,
		anim: 1,
		audio: {
			tag: "voice-16-3",
			s: 7,
			d: 4
		}
	}, {
		text: "You have broken the ROYAL RULE! NO RAISINS IN THE QUEEN'S DISHES!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-16-3",
			s: 11,
			d: 8
		}
	}, {
		text: "You have left me no choice, Cebollini... You are FIRED!",
		face: 5,
		anim: 1,
		audio: {
			tag: "voice-16-3",
			s: 19,
			d: 7
		}
	}, {
		text: "What? This little slimeling? Is this a joke?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-16-1",
			s: 0,
			d: 5
		}
	}, {
		text: "Cebollini?!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-16-3",
			s: 7.8,
			d: .85
		}
	}, {
		text: "MMMMMMMMM! Why, Cebollini, this is even better than YOUR turnip stew!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-16-1",
			s: 5,
			d: 6
		}
	}, {
		text: "It is decided, then. Slurpy, you will become the new Royal Chef!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-16-1",
			s: 11,
			d: 8
		}
	}, {
		text: "Well, I... haven't eaten in hours and... as long as you don't break the ROYAL RULE again...",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-16-1",
			s: 19,
			d: 10
		}
	}, {
		text: "Guard! Inform this wizard that I will not be addressing their presence!",
		face: 4,
		anim: 1,
		audio: {
			tag: "voice-16-2",
			s: 0,
			d: 5
		}
	}],
	slime_guard: [{
		text: "Let the Royal Dinner commence!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-17-3",
			s: 0,
			d: 3
		}
	}, {
		text: "You want to cook a meal for the Queen? Not a bad idea.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-17-4",
			s: 0,
			d: 4
		}
	}, {
		text: "Her screaming is starting to get on my nerves...",
		face: 0,
		anim: 1,
		audio: {
			tag: "voice-17-4",
			s: 4,
			d: 4
		}
	}, {
		text: "She loves turnips, can't go wrong there.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-17-4",
			s: 8,
			d: 4
		}
	}, {
		text: "I'd give anything for a pair of earplugs...or ears.",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-17-4",
			s: 12,
			d: 5
		}
	}, {
		text: "The Queen will not pay attention to you... I suggest you move along.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-17-2",
			s: 0,
			d: 6
		}
	}],
	slime_worker: [{
		text: "Dear me... This is an unfortunate situation.",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-17-1",
			s: 0,
			d: 4
		}
	}, {
		text: "Oh my, thank you for your help! Here, please take this small token of my appreciation!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-17-1",
			s: 4,
			d: 6
		}
	}],
	slurpy: [{
		text: "Valiant effort, my wizard sidekick!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-15-2",
			s: 0,
			d: 3
		}
	}, {
		text: "I bestow upon thee the gift of fire!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-7",
			s: 0,
			d: 4
		}
	}, {
		text: "Oh, hello there! You're not a slime; what are you doing in a volcano, silly?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Slurpy the Valiant, at your service! I'm on a super important quest, and I could sure use a sidekick!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-15-1",
			s: 6,
			d: 7
		}
	}, {
		text: "Buuuuut we need to get to the bottom of the volcano, and you'll have to drain the lava.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-1",
			s: 13,
			d: 5
		}
	}, {
		text: "Head to the right and find a lever there. All the best quests have levers, right?",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-1",
			s: 18,
			d: 5
		}
	}, {
		text: "That takes care of the first lever. Now find the next one.",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-3",
			s: 0,
			d: 4
		}
	}, {
		text: "GO FORTH, brave wizard, you know what to do!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-3",
			s: 4,
			d: 4
		}
	}, {
		text: "The plot thickens! Slurpy the Brave has found the ULTIMATE INGREDIENT, while you were off levering. All we gotta do is add it to the Chef's food!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-4",
			s: 0,
			d: 9
		}
	}, {
		text: "We're close now, wizard, just one lever left! Head to Outer Slimeburbia and give it a pull!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-4",
			s: 9,
			d: 7
		}
	}, {
		text: "We reach the end of our quest - Slurpy the Gallant and his faithful wizard companion, against all odds, drained the lava to the final level!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-15-5",
			s: 0,
			d: 9
		}
	}, {
		text: "Only one more obstacle in their path...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-5",
			s: 9,
			d: 3
		}
	}, {
		text: "I... uh... forgot I left my ingredient somewhere in Slime Shanty... Help?",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-15-5",
			s: 12,
			d: 6
		}
	}, {
		text: "It's almost time for the Royal Dinner! Take the ingredient to the Royal Kitchen and put it in the Royal Stew.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-6",
			s: 0,
			d: 6
		}
	}, {
		text: "Watch out for the Chef, though. He's kind of a grump...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-6",
			s: 6,
			d: 3
		}
	}, {
		text: "Well, we did it! Now all there is to do is attend the Royal Dinner and take allll the credit!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-8",
			s: 0,
			d: 7
		}
	}, {
		text: "You'll have to go for me, though... Kids aren't allowed there; Dad says the Queen has no table manners...",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-15-8",
			s: 7,
			d: 6
		}
	}, {
		text: "We broke a ROYAL RULE? I didn't know she didn't like raisins... They don't tell kids ANYTHING!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-15-9",
			s: 0,
			d: 6
		}
	}, {
		text: "Oh no! What are we gonna do? Without her dinner, the Queen is gonna be REAL angry!",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-15-9",
			s: 6,
			d: 7
		}
	}, {
		text: "Looks like another quest for Slurpy the Wise and his loyal companion!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-9",
			s: 13,
			d: 4
		}
	}, {
		text: "I got a plan, and it's a good one!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-9",
			s: 17,
			d: 2
		}
	}, {
		text: "Head to the 3 levers and collect my cooking supplies; I always leave them there!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-9",
			s: 19,
			d: 7
		}
	}, {
		text: "I'll bet you didn't know I could cook, huh? Yup, there's more to Slurpy than meets the eye!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-15-10",
			s: 0,
			d: 6
		}
	}, {
		text: "But I need to know what the Queen actually LIKES... I know! Go talk to her guards, Mike and Hank!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-10",
			s: 6,
			d: 6
		}
	}, {
		text: "If they don't know, nobody will!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-10",
			s: 12,
			d: 2
		}
	}, {
		text: "Oh no, not turnips! They're super rare here, and the Royal Collectors are the only ones allowed to pick them.",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-15-11",
			s: 0,
			d: 7
		}
	}, {
		text: "I only need a couple... Maybe you can convince them to give you some?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-11",
			s: 7,
			d: 6
		}
	}, {
		text: "Well, it took lots of effort, but I'd say this quest is nearly complete! Slurpy the Great and his wizard will save the Kingdom with Turnip Stew!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-12",
			s: 0,
			d: 10
		}
	}, {
		text: "Now, all you have to do is bring it to her... Easy as Turnip Pie!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-12",
			s: 10,
			d: 5
		}
	}, {
		text: "This is stupid! Why couldn't the Royal Chef make his OWN food for the Queen?",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-15-13",
			s: 0,
			d: 4
		}
	}, {
		text: "...",
		face: 0,
		anim: 2
	}, {
		text: "Oh, right. Well, I guess it WAS kinda your fault he got fired.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-13",
			s: 4,
			d: 5
		}
	}, {
		text: "But either way, we need to get that dish back! If only you could walk across lava...",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-13",
			s: 9,
			d: 6
		}
	}, {
		text: "Hey! All you have to do is find the Boots of Hotwalk! They're in a chest, but legends say that only a fire monster has the key.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-13",
			s: 15,
			d: 8
		}
	}, {
		text: "So, head out there and defeat the fire monsters!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-13",
			s: 23,
			d: 4
		}
	}, {
		text: "Yup! That's the key alright!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-14",
			s: 0,
			d: 3
		}
	}, {
		text: "Now, the chest should be pretty easy to find. The hard part is the 'Guardian'.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-14",
			s: 3,
			d: 5
		}
	}, {
		text: "That's what we call the guy who guards it. Clever, huh? Don't worry, should be a piece of cake for a wizard!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-14",
			s: 8,
			d: 6
		}
	}, {
		text: "Well, it's time for revenge! Slurpy the Fab and his almost-equally fab wizard friend against the fiendish Chef!",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-15-16",
			s: 0,
			d: 8
		}
	}, {
		text: "Now THAT'S a quest, right?",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-15-16",
			s: 8,
			d: 2
		}
	}, {
		text: "Of course, you'll be going alone. I got more important things to do. Like planning, and stuff.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-16",
			s: 10,
			d: 6
		}
	}, {
		text: "The Chef wants ME to meet the Queen?! Wow... What an honor!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-17",
			s: 0,
			d: 4
		}
	}, {
		text: "I hope he's still not mad about the whole 'getting fired' thing.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-17",
			s: 4,
			d: 4
		}
	}, {
		text: "WHAT!? But I only know how to make one dish...",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-15-17",
			s: 8,
			d: 3
		}
	}, {
		text: "This is way too much pressure!",
		face: 2,
		anim: 1,
		audio: {
			tag: "voice-15-17",
			s: 11,
			d: 2
		}
	}, {
		text: "Maybe if I study as the Chef's apprentice, I can learn more about being a chef before I have a lot of responsibility.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-15-17",
			s: 13,
			d: 7
		}
	}, {
		text: "Thanks for your help!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-17",
			s: 20,
			d: 2
		}
	}, {
		text: "And now that you've proven you're worthy, I can give you this: the Bonfire Gem!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-17",
			s: 22,
			d: 5
		}
	}, {
		text: "Well, I can finally say it for real this time... QUEST COMPLETE!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-15-18",
			s: 0,
			d: 5
		}
	}, {
		text: "We did it, friend! I couldn't have done it without you! Now, it's time for you to move on. There are other quests out there for you to discover!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-15-18",
			s: 5,
			d: 9
		}
	}],
	puppetmaster: [{
		text: "It is finally done. With the Warden Keystones destroyed, no one will EVER be able to enter the Academy and fill their minds with knowledge.",
		face: 0,
		audio: {
			tag: "voice-20-1",
			s: 0,
			d: 10
		}
	}, {
		text: "And without knowledge, they will not be able to resist our mind illusions!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-20-1",
			s: 10,
			d: 5
		}
	}, {
		text: "You seem to know me, but I have no idea who YOU are.",
		face: 0,
		audio: {
			tag: "voice-20-1",
			s: 15,
			d: 5
		}
	}, {
		text: "Bold words. Unfortunately for you, the shadow blast that destroyed the Warden Keystones also drained power from the 6 Wardens themselves.",
		face: 0,
		audio: {
			tag: "voice-20-1",
			s: 20,
			d: 10
		}
	}, {
		text: "Now, nothing stands in our way.",
		face: 2,
		audio: {
			tag: "voice-20-1",
			s: 30,
			d: 3
		}
	}, {
		text: "Are...you...KIDDING ME?! HOW DID WE MISS ONE?!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-20-1",
			s: 33,
			d: 5
		}
	}, {
		text: "WHY CAN'T I GET MY WAY!?!?!",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-20-1",
			s: 38,
			d: 3
		}
	}, {
		text: "COME ON! How is this even possible?! They had no idea we were coming!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-20-1",
			s: 41,
			d: 7
		}
	}, {
		text: "...That sounds like a good idea.",
		face: 1,
		audio: {
			tag: "voice-20-1",
			s: 48,
			d: 2
		}
	}, {
		text: "Now then! Fall back to the Academy. We must make plans for our next steps.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-20-1",
			s: 50,
			d: 6
		}
	}, {
		text: "So, you've gotten quite a lot smarter since our last encounter. No wonder our mind illusions aren't working on you...",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-20-2",
			s: 0,
			d: 8
		}
	}, {
		text: "No matter how strong any one wizard is, they cannot defeat our Titan. This magic has survived for thousands of years, and it won't fail now!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-20-2",
			s: 9,
			d: 11
		}
	}, {
		text: "Good luck! YOU'RE GOING TO NEED IT! Hahahahaha!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-20-2",
			s: 21,
			d: 5
		}
	}, {
		text: "If our mind illusions won't work, we'll just have to put a stop to your efforts the old fashioned way.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-20-2",
			s: 26,
			d: 6
		}
	}, {
		text: "This magic has survived for thousands of years. It won't fail now.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-20-2",
			s: 33,
			d: 6
		}
	}],
	pippet: [{
		text: "6 Wardens? Uh, master, there were only 5 in there...",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-19-1",
			s: 0,
			d: 5
		}
	}, {
		text: "It was a great try though, master, really. Why, no one else in the Order's history has come this close to total victory!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-19-1",
			s: 5,
			d: 8
		}
	}, {
		text: "Hey there, I have an idea. How about we calm down and figure out a new plan! That sound like a good idea?",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-19-1",
			s: 13,
			d: 8
		}
	}, {
		text: "Master says we need to stop you from becoming powerful. I will do as Master commands!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-28-1",
			s: 0,
			d: 6
		}
	}, {
		text: "These mountains seem like a perfect hiding place for a Warden. Don't you think?",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-28-1",
			s: 7,
			d: 4.5
		}
	}, {
		text: "You know where the final Warden is, don't you? Tell me!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-28-1",
			s: 12,
			d: 4
		}
	}, {
		text: "The less you learn, the stronger our mind illusions get. Let's see what you know!",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-28-1",
			s: 17,
			d: 6
		}
	}, {
		text: "The Order of Influence was defeated here long ago. We won't lose again!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-28-1",
			s: 25,
			d: 5
		}
	}, {
		text: "You've beaten me this time, but if you stop learning, our mind illusions will overpower you!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-28-1",
			s: 31,
			d: 7
		}
	}],
	julia_ghoulia: [{
		text: "Why hello again! Looking to purchase some spooky specials?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-21-2",
			s: 0,
			d: 6
		}
	}, {
		text: "Welcome to Pumpkinfest!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-21-1",
			s: 0,
			d: 3
		}
	}, {
		text: "Until October 31st, you can purchase Pumpkinfest items from my shop with candy corn cash.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-21-1",
			s: 3,
			d: 7
		}
	}, {
		text: "Candy corn cash can be earned from wizard battles during the festival.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-21-1",
			s: 10,
			d: 5
		}
	}, {
		text: "You can also get a LOT of candy corn by rescuing pumpkins. If you find a pumpkin in Lamplight Town that isn't lit, click or tap it.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-21-1",
			s: 15,
			d: 11
		}
	}, {
		text: "If you can defeat the monster that has taken it over, you will get a bunch more candy corn!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-21-1",
			s: 26,
			d: 7
		}
	}],
	mama_star: [{
		text: "Why hello again! Did you find the fallen star in town tonight?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-22-1",
			s: 34,
			d: 5
		}
	}, {
		text: "Hi there! You can buy Starlight Festival items from my shop right now, but the only way to buy them is by spending Star Shards.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-1",
			s: 39,
			d: 10
		}
	}, {
		text: "If you come back tonight, you can get Star Shards from wizard battles, and find a fallen star in the town to get even more!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-22-1",
			s: 49,
			d: 9
		}
	}, {
		text: "Why hello there! I'm Mama Star! Welcome to the Starlight Festival!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Until November 30th, you can purchase Starlight Festival items from my shop with Star Shards.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-22-1",
			s: 6,
			d: 7
		}
	}, {
		text: "Star Shards can be earned from wizard battles during the festival.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-22-1",
			s: 13,
			d: 4
		}
	}, {
		text: "You can also get a LOT of Star Shards by finding fallen stars. If you find a fallen star in Lamplight Town, click or tap it.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-22-1",
			s: 17,
			d: 9
		}
	}, {
		text: "If you can defeat the monster that is trying to capture it, you will get a bunch more Star Shards!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-1",
			s: 26,
			d: 7
		}
	}, {
		text: "Why hello there! I'm Mama Star! Welcome to the Starlight Festival!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 0,
			d: 7
		}
	}, {
		text: "You may be wonderin' why Lamplight Town seems to be in twilight?",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 7,
			d: 5
		}
	}, {
		text: "No need to worry darlin', it is all good news! A flight of Epic Dragons are due to arrive in our lands real soon.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 12,
			d: 9
		}
	}, {
		text: "To celebrate their coming I have stocked up on wondrous Dragon themed treasures, treasures that I will sell to you in exchange for Dragon Flies.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 21,
			d: 10
		}
	}, {
		text: "During this festival, you can earn Dragon Flies in wizard battles, or by rescuing fallen stars right here in Lamplight Town.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 31,
			d: 9
		}
	}, {
		text: "Heck, sometimes you can catch em flying wild all over the world.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 40,
			d: 6
		}
	}, {
		text: "Hi there! You can buy Starlight Festival items from my shop right now, but only with Dragon Flies.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 46,
			d: 8
		}
	}, {
		text: "You can get Dragon Flies from wizard battles anywhere in the world. Rescue a fallen star in Lamplight Town to get even more!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 54,
			d: 8
		}
	}, {
		text: "And if you keep your eyes open, you might be able to catch wild ones fluttering about.",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-22-2",
			s: 62,
			d: 5
		}
	}],
	toy: [{
		text: "Welcome to Wandering Wares! We specialize in ancient artifacts for powerful wizards, but I'm not interested in gold!",
		face: 0,
		audio: {
			tag: "voice-23-1",
			s: 0,
			d: 8
		}
	}, {
		text: "If you find old copper coins, I'll gladly trade for them.",
		face: 0,
		audio: {
			tag: "voice-23-1",
			s: 8,
			d: 4
		}
	}, {
		text: "Onto the next area, shall we?",
		face: 0,
		audio: {
			tag: "voice-23-1",
			s: 8,
			d: 4
		}
	}, {
		text: "This is Arctursus, the arctic powerhouse! The air around Arctursus is always cold - the tips of his fur are made from ice that can't melt!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 12.6,
			d: 10.4
		}
	}, {
		text: "Florafox here is guardian of the forests! The bulb on her tail produces a pollen that can heal any plant, no matter how withered it is!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 23.1,
			d: 9
		}
	}, {
		text: "Don't forget Big Hex, master of mech! This mechano-man is so tough, his static electricity won't let his enemies near him!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 32.4,
			d: 9.6
		}
	}, {
		text: "Here's Magmischief, the mischievous magma-loving monster! This sneaky guy loves the heat, but that just makes him cool!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 42,
			d: 8
		}
	}, {
		text: "There's Diveodile, the ocean lord! He can swim faster than a sailboat, and create whirlpools with the smallest flick of his tail!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 50,
			d: 9
		}
	}, {
		text: "Want to try your hand at the Epic Arena? Use your Epic to challenge hordes of enemies and gain awesome rewards!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 59,
			d: 7.3
		}
	}, {
		text: "Well, now that you've met the Epics, you can see their potential! Just imagine how strong they would be on YOUR team!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 67.5,
			d: 8.5
		}
	}, {
		text: "Welcome to the Epics Subspace! This is a world where the Epics live, while resting in their statue forms.",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 0,
			d: 7
		}
	}, {
		text: "It's up to wizards like you to rescue them! When you do, they will join you on your quests!",
		face: 0,
		audio: {
			tag: "voice-23-2",
			s: 7,
			d: 6
		}
	}, {
		text: "Come back soon to challenge the Epic Arena!",
		face: 0
	}, {
		text: "Here you can visit the new Dragons, or the other Epics.",
		face: 0,
		audio: {
			tag: "voice-23-3",
			s: 0,
			d: 5
		}
	}, {
		text: "Chill & Char are inseparable! Their combo of ice and fire make them a great choice for all kinds of enemies!",
		face: 0,
		audio: {
			tag: "voice-23-3",
			s: 22,
			d: 9
		}
	}, {
		text: "Tidus is rarely seen on land! His power surges upward from the deepest depths of the sea!",
		face: 0,
		audio: {
			tag: "voice-23-3",
			s: 31,
			d: 6
		}
	}, {
		text: "Luma is a small but powerful dragon. Her spells are powered by the sun, making her almost unstoppable during the day.",
		face: 0,
		audio: {
			tag: "voice-23-3",
			s: 5,
			d: 9
		}
	}, {
		text: "Here is Eclipse, master of twilight. His giant wings gather energy as he soars through the night sky.",
		face: 0,
		audio: {
			tag: "voice-23-3",
			s: 14,
			d: 8
		}
	}],
	howard_cornelius: [{
		text: "Ice to see you again, wizard. I have lots of cool trinkets on sale!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-24-1",
			s: 21.9,
			d: 5.1
		}
	}, {
		text: "Do you have any Magic Snowflakes for Hanz?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-24-1",
			s: 27,
			d: 2.25
		}
	}, {
		text: "Let me tell you, he won't chill out until he gets some.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-24-1",
			s: 29.25,
			d: 3.5
		}
	}, {
		text: "Ice to meet you young wizard! What a fantastically chilly day it is today!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-24-1",
			s: 0,
			d: 5
		}
	}, {
		text: "Hanz and I have brought a lot of cool items with us. We're super excited to be bringing Winterfest cheer to Lamplight Town!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-24-1",
			s: 5.9,
			d: 8
		}
	}, {
		text: "You got any Magic Snowflakes? Hanz absolutely loves munching on them.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-24-1",
			s: 13.9,
			d: 8
		}
	}],
	"sir-vey": [{
		text: "Good day, wizard! Unfortunately, I don't have any questions right now, but be sure to come back soon, and I might have something new to ask you!",
		anim: 4,
		face: 0
	}, {
		text: "Greetings, wizard! I have a quick question for you. If you answer it, you shall be rewarded for your assistance!",
		anim: 4,
		face: 1
	}],
	"mozza-ella": [{
		text: "This place feels cozy. What do you think?",
		face: 0
	}, {
		text: 'This place is very "you!"',
		face: 0
	}, {
		text: "This house is not too big, or too small. It's just right!",
		face: 0
	}, {
		text: "You won't run out of room in here any time soon!",
		face: 0
	}, {
		text: "This place is so big, you might even get lost in it!",
		face: 0
	}, {
		text: "This would make for a cool clubhouse!",
		face: 0
	}, {
		text: "Wow! What a great place to relax in.",
		face: 0
	}, {
		text: "This place is cool!",
		face: 0
	}, {
		text: "You could really chill out in here.",
		face: 0
	}, {
		text: "This type of house is very popular among wizards who study fire magic.",
		face: 0
	}, {
		text: "I bet you'd feel warm in here even in the middle of Winterfest!",
		face: 0
	}, {
		text: "So, what do you think?",
		face: 1
	}],
	potion: [{
		text: "Hey there, how's it goin'?!",
		face: 1
	}, {
		text: "I'm Scientist Slimerella, great to meetcha!",
		face: 0
	}, {
		text: "I've come to town all the way from Bonfire Spire to sell rare and powerful potions I created using my science skills.",
		face: 1
	}, {
		text: "Here, have a free sample!",
		face: 0
	}, {
		text: "Now let me show you what else I've got!",
		face: 0
	}, {
		text: "Feel free to come back anytime!",
		face: 1
	}, {
		text: "Check out what I got in stock - you'll find some pretty awesome stuff in there!",
		face: 0
	}, {
		text: "Science for the win! Yeah!",
		face: 0
	}],
	swoopy: [{
		text: "The Puppet Master's goons have destroyed our village and taken our wood! Can you help us get it back?",
		face: 1
	}, {
		text: "Complete as many daily quests here as you can before the real adventure begins later this year!",
		face: 0
	}, {
		text: "Take one of the two paths behind me to complete today's quest!",
		face: 1
	}, {
		text: "You completed today's quest. Thanks for getting some of our wood back!",
		face: 0
	}, {
		text: "Don't forget to come back tomorrow!",
		face: 0
	}],
	eve: [{
		text: "You did it! Way to go, kid!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 62,
			d: 3
		}
	}, {
		text: "Hey, you!",
		face: 3,
		audio: {
			tag: "voice-27-1",
			s: 0,
			d: 1.2
		}
	}, {
		text: "The name's Eve, pleasure to meet you! You must be the Prodigy-in-training that everyone's talking about.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 2,
			d: 7
		}
	}, {
		text: "This means that if you pass my test, I'll give you my Warden Keystone, just like the other Guardians on the island.",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 11,
			d: 8.2
		}
	}, {
		text: "You'll be one step closer to stopping the Puppet Master!",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 20,
			d: 4.2
		}
	}, {
		text: "Ever since the Puppet Master returned, the sea people have reported spotting an ancient monster lurking just off the coast.",
		face: 4,
		audio: {
			tag: "voice-27-1",
			s: 25,
			d: 7.5
		}
	}, {
		text: "I want you to find out if this monster is real, and if so, defeat it.",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 34,
			d: 6
		}
	}, {
		text: "But first things first - you'll have to spend some time underwater if you're gonna complete this challenge.",
		face: 4,
		audio: {
			tag: "voice-27-1",
			s: 41,
			d: 5.5
		}
	}, {
		text: "In order to do that, you'll need to locate a Breathing Bubble so you can go underwater.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 47,
			d: 5.5
		}
	}, {
		text: "Just head east, then north. You should find one near the wreckage. Bring it back here and I'll get it working for you.",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 53,
			d: 7.5
		}
	}, {
		text: "Allllllright! Now the adventure can REALLY begin!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 66,
			d: 4
		}
	}, {
		text: "There's an archaeologist around these parts. Goes by the name Jelly Jim.",
		face: 4,
		audio: {
			tag: "voice-27-1",
			s: 71,
			d: 5.5
		}
	}, {
		text: "He spends so much time in the water, there's NO WAY he'd miss a giant monster, if there is one.",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 77,
			d: 7
		}
	}, {
		text: "Go chat with him, and see if he knows anything about it.",
		face: 4,
		audio: {
			tag: "voice-27-1",
			s: 85,
			d: 4.5
		}
	}, {
		text: "We ran into some black goop while trying to search for the monster.",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 24,
			d: 4.2
		}
	}, {
		text: "Without knowing for sure what we're dealing with, we won't know HOW to deal with it.",
		face: 4,
		audio: {
			tag: "voice-27-1",
			s: 90,
			d: 5
		}
	}, {
		text: "Can you grab a sample of the black goop for me to check out?",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 96,
			d: 3.5
		}
	}, {
		text: "I think you can handle this now. The Order of Influence better watch out!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 100,
			d: 5
		}
	}, {
		text: "Yup, that's definitely monster ink. Just as I thought.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 106,
			d: 4.5
		}
	}, {
		text: "You're going to need a Sonic Blaster to get through that stuff.",
		face: 2,
		audio: {
			tag: "voice-27-1",
			s: 111,
			d: 3
		}
	}, {
		text: "Fortunately, any sailor worth their sea salt carried one with them, for situations just like this one.",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 115,
			d: 7
		}
	}, {
		text: "You should be able to find one in the wreckage of the ships!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 123,
			d: 3.2
		}
	}, {
		text: "Caaaaan you just give us yours?",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-25-1",
			s: 29,
			d: 2.5
		}
	}, {
		text: "This is your trial, not mine. Sorry kiddo, you'll just have to find one yourself!",
		face: 1,
		audio: {
			tag: "voice-27-1",
			s: 127,
			d: 5.5
		}
	}, {
		text: "Once you find it, bring it back to me, and I'll make sure it's in working order.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 133,
			d: 4
		}
	}, {
		text: "I know you can do it!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 138,
			d: 2
		}
	}, {
		text: "Allllright! The next task ahead of you is to clear out that ink with the Sonic Blaster. Give it your best shot!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 141,
			d: 7.5
		}
	}, {
		text: "Keep your guard up, kiddo. If the Puppet Master's behind this, who knows what's lurking in that ink...",
		face: 3,
		audio: {
			tag: "voice-27-1",
			s: 150,
			d: 6
		}
	}, {
		text: "Not only am I a pretty good pirate, but I'm also a keen tracker - I could track a falcon on a cloudy day!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 157,
			d: 7.5
		}
	}, {
		text: "It sounds like the ancient creature IS real after all, based on the description of that tunnel.",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 165,
			d: 6
		}
	}, {
		text: "If you bring me back more details about it, I'll be able to figure out exactly what we're going up against!",
		face: 2,
		audio: {
			tag: "voice-27-1",
			s: 172,
			d: 5.5
		}
	}, {
		text: "Talk to Jelly Jim. He'll be able to think of a way to do that.",
		face: 3,
		audio: {
			tag: "voice-27-1",
			s: 178,
			d: 4
		}
	}, {
		text: "Woooowie. According to the tunnel, this monster is HUGE!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 182,
			d: 7
		}
	}, {
		text: "Just to make sure we know as much about this beast as possible before taking it on, see if you can find anything else it may have left behind.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 190,
			d: 7.5
		}
	}, {
		text: "The more we know about it, the better.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 198,
			d: 2.5
		}
	}, {
		text: "Uh oh. It's not just big, but it's got tough skin to boot! These scales are super sturdy.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 201,
			d: 8.5
		}
	}, {
		text: "I had heard stories about the power of the beast my grandpappy battled, but I didn't ACTUALLY believe it was this strong...",
		face: 2,
		audio: {
			tag: "voice-27-1",
			s: 210,
			d: 8
		}
	}, {
		text: "You've gotta toughen yourself up if you're gonna go toe-to-tentacle with a beast like that. Battle strong monsters to make sure you're ready.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 219,
			d: 8.5
		}
	}, {
		text: "Looks like you're tough enough now!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 228,
			d: 2
		}
	}, {
		text: "Now that you're ready, I can tell you where I think the beast is.",
		face: 0,
		audio: {
			tag: "voice-27-1",
			s: 231,
			d: 3.5
		}
	}, {
		text: "The ink, the tunnel, the scales - they were all found around the wreckage of the pirate ship Antilles. The beast MUST be hiding there.",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 235,
			d: 10
		}
	}, {
		text: "It's time to show the Puppet Master's monster who's boss. Good luck.",
		face: 3,
		audio: {
			tag: "voice-27-1",
			s: 246,
			d: 5
		}
	}, {
		text: "Sounds like that door needs a key. Check the ship wreckage, it shouldn't be too far from there.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 253,
			d: 6
		}
	}, {
		text: "This is it, kid. Good luck.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 260,
			d: 2.5
		}
	}, {
		text: "Here's the Shipwreck Gem, you've earned it!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 265,
			d: 3.5
		}
	}, {
		text: "Well kid, best be movin' along. I've got things under control here now.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 269,
			d: 4.5
		}
	}, {
		text: "I heard the Warden Keystones can't be placed on the pedestals yet. I'm not sure why, but don't worry - I'm sure they'll work soon.",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-27-1",
			s: 274,
			d: 7
		}
	}, {
		text: "And the Academy will be free for everyone once again!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-27-1",
			s: 282,
			d: 3
		}
	}],
	jim: [{
		text: "Well hello there! My name's Jelly Jim. What brings you to these parts?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-26-1",
			s: 0,
			d: 7.2
		}
	}, {
		text: "Now that I think about it, I do recall seeing some sort of large, terrible creature floating around. Just the other day in fact.",
		face: 1,
		audio: {
			tag: "voice-26-1",
			s: 8,
			d: 9.2
		}
	}, {
		text: "It looked like it could have been the old sea monster that the evil Order of Influence used here a long time ago against the pirates.",
		face: 0,
		audio: {
			tag: "voice-26-1",
			s: 18,
			d: 9.5
		}
	}, {
		text: "Whatever I saw was close by, no doubt.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-26-1",
			s: 28,
			d: 4
		}
	}, {
		text: "Oh, and one last thing. Here is some gold to help you on your journey. Best of luck!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-26-1",
			s: 33,
			d: 7.2
		}
	}, {
		text: "Why hello again, friend! Grand to see you. What can I help you with?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-26-1",
			s: 41,
			d: 5.7
		}
	}, {
		text: "You want to show Eve something you found down here? Well, an underwater camera would be perfect for that!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-26-1",
			s: 47,
			d: 8.4
		}
	}, {
		text: "Well, I'll be off on other adventures soon. If you see me, could you stop by and say hello? That would be splendid!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-26-1",
			s: 56,
			d: 10.3
		}
	}],
	harvey: [{
		text: "So, you're joining the battle against the Titan, are you?",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-29-1",
			s: 0,
			d: 4
		}
	}, {
		text: "As you battle it, Titan Shards will break off. Bring them to me, and I can remove the Shadow Magic from them. I'll sell you powerful armor in return.",
		face: 1,
		audio: {
			tag: "voice-29-1",
			s: 5,
			d: 10
		}
	}, {
		text: "Battle the Titan to earn Titan Shards.",
		face: 1,
		audio: {
			tag: "voice-29-1",
			s: 16,
			d: 3
		}
	}, {
		text: "Win lots of battles against the Titan to get a BUNCH of Titan Shards, once it's defeated by wizards around the world.",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-29-1",
			s: 20,
			d: 7
		}
	}, {
		text: "Check my sign for more details.",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-29-1",
			s: 28,
			d: 4
		}
	}]
}, Prodigy.Hints = function() {}, Prodigy.Hints.data = {
	none: [{
		text: "Low on hearts? Try switching to one of your pets in battle."
	}, {
		text: "Lost on a quest? Follow the white hand to your next goal!"
	}, {
		text: "When you're low on hearts, find a healstone to heal you and your pets!"
	}, {
		text: "Want to change your team? Open the Pet Menu from the Main Menu."
	}, {
		text: "Your hearts are fully restored when you level up!"
	}, {
		text: "Want a new look? Head to the Stylist in Lamplight Town."
	}, {
		text: "The latest and greatest equipment can be bought at the Item Shop in Lamplight Town."
	}, {
		text: "You can fast-travel to any zone by opening the Map from the Main Menu."
	}, {
		text: "Be sure to return to Prodigy every so often...new content is added all the time!"
	}, {
		text: "Become a World Champion by challenging other wizards in the Arena!"
	}, {
		text: "Earn stars to level up...the strongest wizards are Level 100!"
	}, {
		text: "Want to play with your friends? Make sure you select the same world as they do!"
	}, {
		text: "Check your achievement progress by opening the Awards Menu from the Main Menu."
	}, {
		text: "Complete bounties from the Bounty Board in Lamplight Town to earn awesome rewards!"
	}, {
		text: "Rumor has it that there is a powerful wizard at the top of the Dark Tower..."
	}, {
		text: "Need more gold? Head out and battle monsters!"
	}, {
		text: "Keep your team at its best! Level up your pets alongside your wizard."
	}, {
		text: "Show off your latest rewards and outfits in Lamplight Town!"
	}, {
		text: "Want to see what other wizards are wearing? Just click on them!"
	}, {
		text: "Pets can be caught when their hearts are low, but make sure not to defeat them by accident!"
	}, {
		text: "You learn new spells by leveling up, but can also learn them from completing quests."
	}, {
		text: "Explore each zone thoroughly...there are secrets hidden everywhere!"
	}, {
		text: "Can't beat a boss or another wizard? Level up your team and try again!"
	}, {
		text: "Practice makes perfect! If you get a question wrong, try using a hint for the next one!"
	}, {
		text: "The Academy in Lamplight Town floats in the sky, just out of reach."
	}, {
		text: "Merchants are found all over the island. Some offer new items, others offer quests!"
	}, {
		text: "Want to change your equipment? Open up the Backpack from the Main Menu!"
	}]
}, Prodigy.Hints.prototype = {
	getRandomHint: function(e) {
		return Prodigy.Hints.data[e][Math.floor(Math.random() * Prodigy.Hints.data[e].length)]
	}
}, Prodigy.Hints.prototype.constructor = Prodigy.Hints, Prodigy.EmailDomains = function() {}, Prodigy.EmailDomains.data = {
	domains: ["aol.com", "att.net", "comcast.net", "facebook.com", "gmail.com", "gmx.com", "googlemail.com", "google.com", "hotmail.com", "hotmail.co.uk", "mac.com", "me.com", "mail.com", "msn.com", "live.com", "sbcglobal.net", "verizon.net", "yahoo.com", "yahoo.co.uk", "email.com", "games.com", "gmx.net", "hush.com", "hushmail.com", "icloud.com", "inbox.com", "lavabit.com", "love.com", "outlook.com", "pobox.com", "rocketmail.com", "safe-mail.net", "wow.com", "ygm.com", "ymail.com", "zoho.com", "fastmail.fm", "yandex.com", "bellsouth.net", "charter.net", "comcast.net", "cox.net", "earthlink.net", "juno.com", "btinternet.com", "virginmedia.com", "blueyonder.co.uk", "freeserve.co.uk", "live.co.uk", "ntlworld.com", "o2.co.uk", "orange.net", "sky.com", "talktalk.co.uk", "tiscali.co.uk", "virgin.net", "wanadoo.co.uk", "bt.com", "sina.com", "qq.com", "naver.com", "hanmail.net", "daum.net", "nate.com", "yahoo.co.jp", "yahoo.co.kr", "yahoo.co.id", "yahoo.co.in", "yahoo.com.sg", "yahoo.com.ph", "hotmail.fr", "live.fr", "laposte.net", "yahoo.fr", "wanadoo.fr", "orange.fr", "gmx.fr", "sfr.fr", "neuf.fr", "free.fr", "gmx.de", "hotmail.de", "live.de", "online.de", "t-online.de", "web.de", "yahoo.de", "mail.ru", "rambler.ru", "yandex.ru", "ya.ru", "list.ru", "hotmail.be", "live.be", "skynet.be", "voo.be", "tvcablenet.be", "telenet.be", "hotmail.com.ar", "live.com.ar", "yahoo.com.ar", "fibertel.com.ar", "speedy.com.ar", "arnet.com.ar", "hotmail.com", "gmail.com", "yahoo.com.mx", "live.com.mx", "yahoo.com", "hotmail.es", "live.com", "hotmail.com.mx", "prodigy.net.mx", "msn.com", "bell.ca", "bell.com", "rogers.ca", "rogers.com", "cogeco.ca", "cogeco.com", "hotmail.ca", "live.ca", "yahoo.ca"]
}, Prodigy.EmailDomains.prototype = {
	hasCommonDomain: function(e) {
		var t = e.substring(e.indexOf("@") + 1, e.length);
		return -1 !== Prodigy.EmailDomains.data.domains.indexOf(t)
	},
	isValidEmail: function(e) {
		return Util.isDefined(e) && e.length > 0
	}
}, Prodigy.EmailDomains.prototype.constructor = Prodigy.EmailDomains, Prodigy.DailyLoginBonusRewards = function() {}, Prodigy.DailyLoginBonusRewards.data = {
	rewards: [{
		type: "item",
		ID: 1
	}, {
		type: "item",
		ID: 77
	}, {
		type: "gold",
		N: 200
	}, {
		type: "item",
		ID: 4
	}, {
		type: "currency",
		ID: 5,
		N: 10,
		R: 4,
		M: 1
	}]
}, Prodigy.DailyLoginBonusRewards.prototype = {
	constructor: Prodigy.DailyLoginBonusRewards,
	getRewards: function() {
		return Prodigy.DailyLoginBonusRewards.data.rewards
	},
	getReward: function(e) {
		return this.getRewards()[e]
	},
	getCurrencyRewardAmount: function(e) {
		return Util.isDefined(e.R) ? e.N + Math.floor(Math.random() * e.R) : e.N
	}
}, Prodigy.TwilightWheelPrizes = function(e) {
	this.game = e, this.seed = 0
}, Prodigy.TwilightWheelPrizes.prototype = {
	constructor: Prodigy.TwilightWheelPrizes,
	initPrizes: function(e) {
		this.seed = e;
		var t = [35, 36, 37],
			i = [1, 3, 4, 11, 22],
			a = Items.getItemObject("item", this.game.seededRandom.pick(i, e));
		a.type = "item";
		var s = Items.getItemObject("follow", this.game.seededRandom.pick(t, e));
		s.type = "follow", this.data = {
			prizes: [{
				item: {
					type: "currency",
					ID: 6,
					N: this.getCurrencyRewardAmount(50, 50)
				},
				weight: 30
			}, null, {
				item: {
					type: "currency",
					ID: 6,
					N: this.getCurrencyRewardAmount(50, 50)
				},
				weight: 10
			}, null, {
				item: {
					type: "currency",
					ID: 8,
					N: this.getCurrencyRewardAmount(500, 500)
				},
				weight: 9.999
			}, null, {
				item: a,
				weight: 15
			}, null, {
				item: {
					type: "currency",
					ID: 7,
					N: this.getCurrencyRewardAmount(125, 175)
				},
				weight: 25
			}, {
				item: s,
				weight: .001
			}]
		}, this.setGearPrizes()
	},
	getReward: function(e) {
		var t = this.data.prizes[e].item;
		if ("currency" === t.type && Prodigy.Lodash.inRange(t.ID, 6, 9)) {
			var i = Prodigy.Lodash.cloneDeep(this.data.prizes[e]);
			return i.item.type = "gold", i.item.ID = 1, i
		}
		return this.data.prizes[e]
	},
	setGearPrizes: function() {
		var e = [],
			t = [],
			i = ["outfit", "weapon", "boots", "hat"];
		switch (this.game.seededRandom.shuffleArray(i, this.seed), Math.floor(4 * this.game.seededRandom.frac(this.seed))) {
			case 0:
				e = [0, 0, 1, 3], t = [2.8, 2.8, 2.5, 1.9];
				break;
			case 1:
				e = [0, 0, 2, 2], t = [2.8, 2.8, 2.2, 2.2];
				break;
			case 2:
				e = [0, 1, 1, 2], t = [2.8, 2.5, 2.5, 2.2];
				break;
			case 3:
				e = [1, 1, 1, 1], t = [2.5, 2.5, 2.5, 2.5]
		}
		for (var a = 0, s = [], r = 0, n = null, o = 0; o < this.data.prizes.length; o++)
			if (!Util.isDefined(this.data.prizes[o])) {
				for (n = null; !Util.isDefined(n);) s = Items.getRawItems(i[a], Math.max(0, e[a] - r)), Prodigy.Lodash.remove(s, function(e) {
					return 96 === e.ID
				}), 0 === s.length ? r++ : (n = this.game.seededRandom.pick(s, this.seed), this.data.prizes[o] = {
					item: n,
					weight: t[a]
				}, a++);
				r = 0
			}
	},
	getCurrencyRewardAmount: function(e, t) {
		return e + Prodigy.Lodash.random(0, t, !1)
	}
}, Prodigy.Stores = function(e) {
	this.game = e, this.SHOPS = {
		COMPANION_SHOP: 1,
		ACADEMY_WAND_SHOP: 2,
		ACADEMY_CLOTHING_SHOP: 3,
		POTION_SHOP: 4,
		SKY_HIGH_VALUES: 5,
		HOT_HOT_THREADS: 6,
		FIREFLY_OUTFITTERS: 7,
		SNOWDAY_SALES: 8,
		ARENA_REWARDS: 9,
		BOUNTY_REWARDS: 10,
		HOUSE_ITEMS: 11,
		HOUSES: 12,
		STARLIGHT_FESTIVAL_SHOP: 13,
		PUMPKINFEST_SHOP: 14,
		WINTERFEST_SHOP: 15,
		WANDERING_WARES: 16,
		MACHINE_SHOP: 17,
		PLANKS_TANKS: 18,
		OCEAN_OUTFITTERS: 19,
		STYLIST: 20,
		RECLAMATIONS_AND_RESTORATIONS: 21
	}, Object.freeze(this.SHOPS)
}, Prodigy.extends(Prodigy.Stores, Object, {
	constructor: Prodigy.Stores,
	getStore: function(e) {
		return Util.isDefined(Prodigy.Stores.data[e]) ? Prodigy.Stores.data[e] : (Util.log("Store not found, ID: " + e, Util.ERROR), {})
	},
	getItemByID: function(e, t, i) {
		for (var a = e.pages, s = 0; s < a.length; s++)
			for (var r = a[s].items, n = 0; n < r.length; n++) {
				var o = r[n];
				if (o.type === t && o.ID === i) return o
			}
		return null
	},
	getCost: function(e, t, i) {
		var a = this.getItemByID(e, t, i);
		return Util.isDefined(a) ? a.cost[0] : null
	}
}), Prodigy.MailerSplitTests = function(e) {
	this.game = e, this.splitTestData = {
		test: [1, !0, !1, !1, !0, 4e4, 2, 2]
	}
}, Prodigy.extends(Prodigy.MailerSplitTests, Object, {
	constructor: Prodigy.MailerSplitTests,
	isInSplitTest: function(e) {
		return "" === e ? !0 : Util.isNullOrUndefined(this.splitTestData[e]) ? !1 : this.game.prodigy.player.inTestGroup.apply(this.game.prodigy.player, this.splitTestData[e])
	}
}), Prodigy.MailerMethods = function(e) {
	this.game = e
}, Prodigy.extends(Prodigy.MailerMethods, Object, {
	constructor: Prodigy.MailerMethods,
	runFunction: function(e, t) {
		Util.isNullOrUndefined(this[e]) ? Util.log("Error : function " + e + " not found in MailerMethods") : this[e].apply(this, t)
	},
	doesFunctionExist: function(e) {
		return !Util.isNullOrUndefined(this[e])
	},
	openStore: function(e) {
		this.game.prodigy.open.store(this.game.prodigy.stores.getStore(e))
	}
}), Items = function() {}, Items.parseData = function(e) {
	Items.data = e, Items.itemMap = {}, Items.drops = [];
	var t = {
			outfit: 4e-4,
			weapon: 5e-4,
			hat: .001,
			boots: .001,
			item: .025,
			currency: 1
		},
		i = {
			0: 1,
			1: .75,
			2: .5,
			3: .25,
			4: .1
		};
	for (var a in Items.data)
		if (Items.data.hasOwnProperty(a))
			for (var s = Items.data[a], r = 0; r < s.length; r++) {
				var n = s[r];
				if ("outfit" === a ? (Items.itemMap[a + "-" + n.ID + "-" + n.gender] = n, 2 === n.gender && (Items.itemMap[a + "-" + n.ID] = n)) : Items.itemMap[a + "-" + n.ID] = n, Util.isDefined(n.data.drop) && n.data.drop > 0) {
					var o = 0;
					t.hasOwnProperty(a) && (o = t[a]);
					var h = 1;
					Util.isDefined(n.data.rarity) && i.hasOwnProperty(n.data.rarity) && (h = i[n.data.rarity]);
					var l = o * h * n.data.drop;
					if (l > 0) {
						var d = {
							type: a,
							ID: n.ID,
							R: l
						};
						Items.drops.push(d)
					}
				}
			}
}, Items.getItem = function(e, t) {
	var i = Items.itemMap[e + "-" + t];
	return Util.isDefined(i) ? i : null
}, Items.doesExist = function(e, t) {
	return null !== Items.getItem(e, t)
}, Items.getRandomItem = function(e) {
	var t = Items.data[e];
	return Util.isDefined(t) && t.length > 0 ? t[Math.floor(t.length * Math.random())] : null
}, Items.getItemDrops = function(e) {
	var t = this.drops.slice();
	Util.isDefined(e) && (t = t.concat(e));
	for (var i = [], a = 0; a < t.length; a++) {
		var s = t[a];
		Util.isDefined(s) && Math.random() < s.R && i.push(s)
	}
	return i
}, Items.getItemsWithFilter = function(e, t) {
	return Items.data.hasOwnProperty(e) ? Items.data[e].filter(t) : []
}, Items.getItemData = function(e, t) {
	var i = Items.getItem(e, t);
	return Util.isDefined(i) ? i.data : ("gold" !== e && Util.log("Item Data not found for type: " + e + " ID: " + t, Util.ERROR), null)
}, Items.exist = function(e, t) {
	return Items.doesExist(e, t)
}, Items.getItemMetadata = function(e, t, i) {
	var a = e + "-" + t;
	Util.isDefined(i) && i > 0 && (a += "-" + i);
	var s = Items.itemMap[a];
	return Util.isDefined(s) ? s.metadata : null
}, Items.getItemObject = function(e, t) {
	var i = Items.getItem(e, t);
	return Util.isDefined(i) ? i : null
}, Items.getIconAtlas = function(e) {
	if (!Util.isDefined(e)) return "icons";
	if (Util.isDefined(e.metadata) && Util.isDefined(e.metadata.iconAtlas)) return e.metadata.iconAtlas;
	if (Util.isDefined(e.iconAtlas)) return e.iconAtlas;
	if ("string" != typeof e && Util.isDefined(e.ID) && Util.isDefined(e.type)) {
		var t = null;
		if (Util.isDefined(e.metadata) && Util.isDefined(e.metadata.icon) && "string" != typeof e.metadata.icon) {
			if (t = Items.getItemMetadata(e.metadata.icon.type, e.metadata.icon.ID), Util.isDefined(t) && Util.isDefined(t.iconAtlas)) return t.iconAtlas
		} else {
			if (t = Items.getItemMetadata(e.type, e.ID), Util.isDefined(t) && Util.isDefined(t.iconAtlas)) return t.iconAtlas;
			if (Util.isDefined(t) && Util.isDefined(t.vIcon)) return "icon-" + e.type + "-" + e.ID
		}
	}
	return "icons"
}, Items.getIconFrame = function(e) {
	return "string" != typeof e ? Util.isDefined(e.ID) ? "" + e.ID : null : e
}, Items.getDormItems = function(e) {
	return Items.getItemsWithFilter("dorm", function(t) {
		return Util.isDefined(t.data.category) && t.data.category === e
	})
}, Items.getItems = function(e, t) {
	return Items.getItemsWithFilter(e, function(e) {
		return Util.isDefined(e.data.drop) && e.data.drop > 0 && Util.isDefined(e.data.rarity) && e.data.rarity === t
	})
}, Items.getRawItems = function(e, t) {
	return Util.isDefined(t) ? Items.getItemsWithFilter(e, function(e) {
		return Util.isDefined(e.data.rarity) && e.data.rarity === t
	}) : Items.data.hasOwnProperty(e) ? Items.data[e] : []
}, Items.getCost = function(e, t) {
	var i = Items.getItemData(e, t);
	return Util.isDefined(i) && Util.isDefined(i.cost) ? i.cost[0] : {
		type: "currency",
		ID: 1,
		N: 250
	}
}, Items.getRandomizedDropsFromCreatures = function(e, t, i) {
	var a, s = [],
		r = [];
	if (Util.isDefined(e)) {
		var n;
		for (a = 0; a < e.length; a++) n = e[a], "hat" === n.type || "outfit" === n.type || "weapon" === n.type || "boots" === n.type || "relic" === n.type ? 0 === r.length && r.push(n) : s.push(n)
	}
	if (i) {
		var o = GameConstants.get("GameConstants.Debug.FORCE_DROPS").concat(t.getDrops()),
			h = 4;
		for (a = 0; a < o.length; a++) "hat" === o[a].type || "outfit" === o[a].type || "weapon" === o[a].type || "boots" === o[a].type || "relic" === o[a].type ? 0 === r.length && r.push(o[a]) : 0 !== h && (("item" === o[a].type || "currency" === o[a].type) && h--, s.push(o[a]))
	}
	return r.length > 0 && s.push(r[0]), s
}, Items.getRange = function(e, t, i) {
	for (var a = [], s = t; i >= s; s++) {
		var r = Items.data[e][s];
		Util.isDefined(r) && a.push(r)
	}
	return a
}, Items.getRangeByAmount = function(e, t, i) {
	return Items.getRange(e, t, t + i - 1)
}, Items.getItemCount = function(e) {
	return Util.isDefined(Items.data[e]) ? Items.data[e].length : 0
};
var Monsters = function() {
	function e() {}
	return e
}();
Monsters.getEncounterRate = function(e) {
	var t = Items.getItemData("pet", e);
	return Util.isDefined(t) ? t.R || 1 : 0
}, Monsters.epicArena = {
	125: {
		monsters: [
			[68, 12, 47, 98, 101, 104, 11, 119, 100, 33],
			[101, 119, 98, 47, 68, 33, 100, 12, 11, 104],
			[11, 12, 33, 47, 68, 98, 100, 101, 104, 119]
		],
		rewards: [{
			type: "dorm",
			ID: 125
		}, {
			type: "dorm",
			ID: 124
		}, {
			type: "dorm",
			ID: 126
		}]
	},
	126: {
		monsters: [
			[68, 12, 25, 104, 47, 98, 101, 119, 100, 106],
			[98, 101, 25, 119, 106, 68, 100, 104, 12, 47],
			[12, 25, 47, 68, 98, 100, 101, 104, 106, 119]
		],
		rewards: [{
			type: "dorm",
			ID: 121
		}, {
			type: "dorm",
			ID: 122
		}, {
			type: "dorm",
			ID: 123
		}]
	},
	127: {
		monsters: [
			[6, 15, 110, 19, 22, 35, 42, 44, 57, 74],
			[42, 19, 44, 15, 57, 74, 6, 110, 22, 35],
			[110, 22, 74, 22, 15, 42, 44, 19, 6, 57]
		],
		rewards: [{
			type: "dorm",
			ID: 116
		}, {
			type: "dorm",
			ID: 115
		}, {
			type: "dorm",
			ID: 117
		}]
	},
	128: {
		monsters: [
			[24, 64, 120, 23, 37, 38, 65, 76, 9, 112],
			[65, 120, 64, 112, 76, 9, 24, 37, 38, 23],
			[9, 23, 24, 37, 38, 64, 65, 76, 112, 120]
		],
		rewards: [{
			type: "dorm",
			ID: 119
		}, {
			type: "dorm",
			ID: 118
		}, {
			type: "dorm",
			ID: 120
		}]
	},
	129: {
		monsters: [
			[3, 32, 36, 124, 60, 82, 71, 83, 93, 92],
			[60, 71, 124, 36, 3, 92, 32, 93, 83, 82],
			[32, 3, 92, 71, 93, 83, 124, 82, 60, 36]
		],
		rewards: [{
			type: "dorm",
			ID: 128
		}, {
			type: "dorm",
			ID: 127
		}, {
			type: "dorm",
			ID: 129
		}]
	},
	130: {
		monsters: [
			[116, 107, 117, 51, 17, 88, 82, 14, 19, 22],
			[22, 19, 14, 82, 88, 17, 51, 117, 107, 116],
			[82, 14, 19, 22, 116, 107, 117, 51, 17, 88]
		],
		rewards: [{
			type: "dorm",
			ID: 136
		}, {
			type: "dorm",
			ID: 137
		}, {
			type: "dorm",
			ID: 138
		}]
	},
	131: {
		monsters: [
			[49, 34, 121, 24, 37, 97, 39, 76, 9, 112],
			[112, 9, 76, 39, 97, 37, 24, 121, 34, 49],
			[39, 76, 9, 112, 49, 34, 121, 24, 37, 97]
		],
		rewards: [{
			type: "dorm",
			ID: 139
		}, {
			type: "dorm",
			ID: 140
		}, {
			type: "dorm",
			ID: 141
		}]
	},
	132: {
		monsters: [
			[116, 107, 117, 51, 89, 88, 17, 82, 83, 60],
			[88, 17, 82, 83, 60, 116, 107, 117, 51, 89],
			[82, 17, 88, 89, 51, 117, 107, 116, 60, 83]
		],
		rewards: [{
			type: "dorm",
			ID: 142
		}, {
			type: "dorm",
			ID: 143
		}, {
			type: "dorm",
			ID: 144
		}]
	},
	133: {
		monsters: [
			[12, 25, 47, 68, 98, 101, 104, 106, 119, 100],
			[98, 101, 104, 106, 119, 100, 12, 25, 47, 68],
			[47, 68, 98, 101, 104, 106, 119, 100, 12, 25]
		],
		rewards: [{
			type: "dorm",
			ID: 145
		}, {
			type: "dorm",
			ID: 146
		}, {
			type: "dorm",
			ID: 147
		}]
	}
}, Monsters.process = function() {
	for (var e = 14549017, t = Items.getRawItems("pet"), i = [4, 4, 4, 4, 4, 4, 4, 12, 30, 30], a = '<table class="confluenceTable relative-table" data-resize-percent="100" style="width: 100%;">', s = 0; s < i.length; s++) a += '<col data-resize-percent="' + i[s] + '" style="width: ' + i[s] + '%;">';
	a += '</colgroup><tbody><tr><th class="confluenceTh">ID</th><th class="confluenceTh">Icon</th><th class="confluenceTh">Member</th><th class="confluenceTh">Element</th><th class="confluenceTh">Life</th><th class="confluenceTh">Power</th><th class="confluenceTh">Growth</th><th class="confluenceTh">Name</th><th class="confluenceTh">Description</th><th class="confluenceTh">Information</th></tr>';
	for (var s = 0, s = 0; s < t.length; s++) {
		var r = t[s],
			n = ' class="confluenceTd highlight-blue" data-highlight-colour="blue" ';
		s % 2 === 0 && (n = ' class="confluenceTd" '), s++;
		for (var o = "Attacks: ", h = "", l = 0; l < r.data.curve.length; l++) {
			var d = r.data.curve[l];
			d.a && (o += Prodigy.Attacks.data[d.a - 1].data.name + " (lvl " + d.lvl + "), "), d.e && (h = "Evolves into " + t[d.e].name + " at lvl " + d.lvl)
		}
		a += '<tr><td colspan="1" width="" style="text-align: center;" ' + n + "><strong>" + r.ID + '</strong></td><td colspan="1" width=""  ' + n + '><div class="content-wrapper"><p><img class="confluence-embedded-image confluence-thumbnail confluence-external-resource" width="40" src="https://prodigygame.atlassian.net/wiki/download/thumbnails/' + e + "/" + r.ID + '.png?version=1&amp;modificationDate=1465482321787&amp;api=v2" data-image-src="https://prodigygame.atlassian.net/wiki/download/attachments/' + e + "/" + r.ID + '.png?version=1&amp;modificationDate=1465482321787&amp;api=v2" data-mce-src="https://prodigygame.atlassian.net/wiki/download/attachments/' + e + "/" + r.ID + '.png?version=1&amp;modificationDate=1465482321787&amp;api=v2" border="0"><br data-mce-bogus="1"></p></div></td><td colspan="1" width="" ' + n + ' style="text-align: center;">' + (r.data.member ? "yes" : "no") + '</td><td colspan="1" width="" ' + n + ' style="text-align: center;">' + r.data.element + '</td><td colspan="1" width="" ' + n + ' style="text-align: center;">' + r.data.life + '</td><td colspan="1" width="" ' + n + ' style="text-align: center;">' + r.data.power + '</td><td colspan="1" width="" ' + n + ' style="text-align: center;">' + r.data.growth + '</td><td colspan="1" width="" ' + n + "><strong><span 0>" + r.data.name + '</span></strong></td><td colspan="1" width="" ' + n + "><em>" + r.data.flavorText + '</em></td><td colspan="1" width="" ' + n + '><br data-mce-bogus="1"><em>' + o + "<br/>" + h + "</em></td></tr>"
	}
	a += "</tbody></table>", Util.log(a)
};
var Names = function() {
	function e() {}
	return e
}();
Names.createNameFromIndex = function(e, t, i, a) {
	var s = "male" === e ? Names.BOY_NAMES[t] : Names.GIRL_NAMES[t];
	return s += " " + Names.MIDDLE_NAMES[i], s += Names.LAST_NAMES[a].toLowerCase()
}, Names.generateName = function(e) {
	var t = "";
	t = "male" === e ? Names.BOY_NAMES[Math.floor(Math.random() * (Names.BOY_NAMES.length - 1))] : Names.GIRL_NAMES[Math.floor(Math.random() * (Names.GIRL_NAMES.length - 1))];
	var i = Names.MIDDLE_NAMES[Math.floor(Math.random() * (Names.MIDDLE_NAMES.length - 1))],
		a = Names.LAST_NAMES[Math.floor(Math.random() * (Names.LAST_NAMES.length - 1))].toLowerCase();
	return t + " " + i + a
}, Names.isValidFirstName = function(e) {
	var t = e.split(" ")[0];
	return !(-1 == Names.BOY_NAMES.indexOf(t) && -1 == Names.GIRL_NAMES.indexOf(t))
}, Names.isValidMiddleName = function(e) {
	var t = e.split(" ");
	if (t.length > 1) {
		var i = t[1],
			a = !1;
		if (null !== i)
			for (var s = 0; s < Names.MIDDLE_NAMES.length; s++) - 1 != i.indexOf(Names.MIDDLE_NAMES[s]) && (a = !0)
	}
	return a
}, Names.isValidLastName = function(e) {
	var t = e.split(" ");
	if (t.length > 1)
		for (var i = t[1].toLowerCase(), a = !1, s = 0; s < Names.LAST_NAMES.length; s++) - 1 != i.indexOf(Names.LAST_NAMES[s].toLowerCase()) && (a = !0);
	return a
}, Names.BOY_NAMES = ["Aaron", "Abdullah", "Abraham", "Adam", "Adrian", "Ahmad", "Ahmed", "Aidan", "Aiden", "Alan", "Albert", "Alejandro", "Alex", "Alexander", "Alexis", "Ali", "Alvin", "Andres", "Andrew", "Aneesh", "Angel", "Angelo", "Anthony", "Antonio", "Arthur", "Ashton", "Austin", "Ayden", "Benjamin", "Billy", "Blake", "Bobby", "Bort", "Braden", "Bradley", "Brady", "Brandon", "Brayden", "Brendan", "Brian", "Brody", "Bruce", "Bryan", "Bryce", "Bryson", "Caden", "Caleb", "Cameron", "Carl", "Carlos", "Carson", "Carter", "Cesar", "Charles", "Chase", "Christian", "Christopher", "Cody", "Colby", "Cole", "Colin", "Collin", "Colton", "Conner", "Connor", "Cooper", "Craig", "Cristian", "Dakota", "Dalton", "Damian", "Daniel", "Darien", "David", "Dennis", "Derek", "Devin", "Devon", "Diego", "Dominic", "Donald", "Donovan", "Douglas", "Dylan", "Edgar", "Eduardo", "Edward", "Edwin", "Eli", "Elias", "Elijah", "Emmanuel", "Eric", "Erick", "Erik", "Ethan", "Eugene", "Evan", "Fernando", "Francisco", "Frank", "Gabriel", "Gage", "Garrett", "Gary", "Gavin", "George", "Gerald", "Giovanni", "Grant", "Gregory", "Hammad", "Hamza", "Harold", "Hayden", "Hector", "Henry", "Howard", "Hunter", "Ian", "Ibrahim", "Isaac", "Isaiah", "Ivan", "Jack", "Jackson", "Jacob", "Jaden", "Jake", "Jalen", "James", "Jared", "Jason", "Javier", "Jayden", "Jeffrey", "Jeremiah", "Jeremy", "Jerry", "Jesse", "Jimothy", "Joe", "Joel", "John", "Johnathan", "Johnny", "Jonah", "Jonathan", "Jordan", "Jorge", "Jose", "Joseph", "Joshua", "Josiah", "Juan", "Julian", "Justin", "Kaden", "Kaleb", "Keith", "Kenneth", "Kevin", "Kian", "Kyle", "Landon", "Larry", "Lawrence", "Leonardo", "Levi", "Liam", "Logan", "Louis", "Lucas", "Luis", "Luke", "Malachi", "Malik", "Manuel", "Marco", "Marcus", "Mario", "Mark", "Martin", "Marvin", "Mason", "Matthew", "Max", "Maxwell", "Micah", "Michael", "Miguel", "Muhammad", "Nathan", "Nathaniel", "Nicholas", "Nicolas", "Noah", "Nolan", "Oliver", "Omar", "Oscar", "Owen", "Parker", "Patrick", "Paul", "Peter", "Peyton", "Philip", "Phillip", "Preston", "Ralph", "Raymond", "Ricardo", "Richard", "Riley", "Robert", "Roger", "Rohan", "Ronald", "Rory", "Roy", "Rupy", "Russell", "Ryan", "Samuel", "Scott", "Sean", "Sebastian", "Sergio", "Seth", "Shane", "Shawn", "Solomon", "Spencer", "Stephen", "Steve", "Steven", "Tanner", "Terry", "Thomas", "Timothy", "Travis", "Trenton", "Trevor", "Tristan", "Tyler", "Van", "Victor", "Vincent", "Walter", "Wasee", "Wayne", "Wesley", "William", "Wyatt", "Xavier", "Youssef", "Zachary", "Abel", "Allen", "Amir", "Asher", "August", "Avery", "Axel", "Bart", "Beau", "Ben", "Bennett", "Bentley", "Brantley", "Braxton", "Calvin", "Camden", "Charlie", "Chris", "Corey", "Dan", "Danny", "Dawson", "Dean", "Declan", "Easton", "Elliot", "Elliott", "Emmett", "Enzo", "Everett", "Ezekiel", "Ezra", "Finn", "Geoff", "Grayson", "Greyson", "Harrison", "Hudson", "Jace", "Jameson", "Jasper", "Jax", "Jaxon", "Jaxson", "Jayce", "Jeff", "Jude", "Kai", "Kaiden", "Karter", "Kayden", "King", "Kingston", "Kyrie", "Leo", "Lincoln", "Lorenzo", "Luca", "Lui", "Lukas", "Maddox", "Mateo", "Matt", "Matteo", "Maverick", "Mike", "Miles", "Nelson", "Nick", "Rhett", "Richie", "Robin", "Roman", "Rowan", "Ryder", "Ryker", "Sam", "Sammy", "Santiago", "Sawyer", "Silas", "Theo", "Theodore", "Tom", "Tucker", "Veenay", "Waylon", "Weston", "Xander", "Zane", "Zayden", "Zion", "Francis", "Gene", "Kelsey", "Leslie", "Morgan", "Quinn", "Reese", "Sidney", "Taylor"].sort(), Names.GIRL_NAMES = ["Aaliyah", "Abby", "Abigail", "Addison", "Adriana", "Adrianna", "Alana", "Alexa", "Alexandra", "Alexandria", "Alexia", "Alexis", "Alice", "Alicia", "Allison", "Alondra", "Alyssa", "Amanda", "Amber", "Amelia", "Amy", "Ana", "Andrea", "Angel", "Angela", "Angelica", "Angelina", "Ann", "Anna", "Ariana", "Arianna", "Ashley", "Ashlyn", "Aubrey", "Audrey", "Autumn", "Ava", "Avery", "Bailey", "Barbara", "Betty", "Beverly", "Bianca", "Breanna", "Brenda", "Briana", "Brianna", "Brittany", "Brooke", "Brooklyn", "Caitlin", "Caitlyn", "Camila", "Carol", "Caroline", "Carolyn", "Cassandra", "Cassidy", "Catherine", "Charlotte", "Chelsea", "Cheryl", "Cheyenne", "Chloe", "Christina", "Christine", "Claire", "Courtney", "Crystal", "Cynthia", "Daisy", "Daniela", "Danielle", "Deborah", "Debra", "Delaney", "Denise", "Destiny", "Diana", "Diane", "Donna", "Doris", "Dorothy", "Elizabeth", "Ella", "Ellen", "Ellie", "Emily", "Emma", "Erica", "Erin", "Eva", "Evelyn", "Faith", "Fatima", "Felicia", "Frances", "Gabriela", "Gabriella", "Gabrielle", "Genesis", "Gianna", "Giselle", "Gloria", "Grace", "Gracie", "Hailey", "Haley", "Hannah", "Heather", "Helen", "Hope", "Isabel", "Isabella", "Isabelle", "Jacqueline", "Jada", "Jade", "Jana", "Jane", "Janet", "Janice", "Jasmin", "Jasmine", "Jayla", "Jazmin", "Jean", "Jenna", "Jennifer", "Jessica", "Jillian", "Joan", "Jocelyn", "Jordan", "Jordyn", "Joyce", "Judith", "Judy", "Julia", "Juliana", "Julie", "Kaitlyn", "Karen", "Kate", "Katelyn", "Katherine", "Kathleen", "Kathryn", "Kathy", "Katie", "Kayla", "Kaylee", "Kelly", "Kelsey", "Kendall", "Kennedy", "Kiara", "Kimberly", "Kira", "Kylee", "Kylie", "Laura", "Lauren", "Layla", "Leah", "Leslie", "Liliana", "Lillian", "Lilly", "Lily", "Linda", "Lindsey", "Lisa", "Lori", "Louise", "Lucy", "Lydia", "Mackenzie", "Madeline", "Madelyn", "Madison", "Makayla", "Makenzie", "Margaret", "Maria", "Mariah", "Mariam", "Marie", "Marilyn", "Marissa", "Martha", "Mary", "Maya", "Mckenzie", "Megan", "Melanie", "Melissa", "Mia", "Michelle", "Mikayla", "Mildred", "Miranda", "Molly", "Morgan", "Mya", "Nancy", "Naomi", "Natalia", "Natalie", "Nevaeh", "Nichole", "Nicole", "Nur", "Olivia", "Paige", "Pamela", "Patricia", "Payton", "Peyton", "Rachel", "Reagan", "Rebecca", "Riley", "Rose", "Ruby", "Ruth", "Rylee", "Sabrina", "Sadie", "Salma", "Samantha", "Sandra", "Sara", "Sarah", "Savannah", "Serenity", "Sharon", "Shelby", "Shirley", "Sierra", "Skylar", "Sofia", "Sophia", "Sophie", "Stephanie", "Summer", "Susan", "Sydney", "Tammy", "Taylor", "Teresa", "Theresa", "Tiffany", "Trinity", "Valeria", "Valerie", "Vanessa", "Veronica", "Victoria", "Virginia", "Zoe", "Zoey", "Adaline", "Adalyn", "Adalynn", "Adeline", "Alaina", "Alina", "Aliyah", "Amara", "Amaya", "Anastasia", "Annabelle", "Anne", "Arabella", "Aria", "Ariel", "Arya", "Athena", "Aubree", "Aurora", "Ayla", "Bella", "Brielle", "Cadence", "Callie", "Camilla", "Camryn", "Carly", "Chantelle", "Charlie", "Clara", "Cora", "Delilah", "Eden", "Eleanor", "Elena", "Eliana", "Elise", "Eliza", "Emerson", "Emery", "Emilia", "Eve", "Everly", "Evie", "Finley", "Freya", "Gauri", "Hadley", "Harley", "Harmony", "Harper", "Hazel", "Iris", "Isla", "Ivy", "Jenn", "Josephine", "Josie", "Kaelyn", "Katrina", "Keira", "Khloe", "Kinsley", "Laila", "Leila", "Leilani", "Lila", "London", "Londyn", "Luna", "Lyla", "Maggie", "Makenna", "Marley", "Maryam", "Melody", "Mila", "Nina", "Nora", "Norah", "Nova", "Paisley", "Penelope", "Piper", "Presley", "Princess", "Quinn", "Raelynn", "Reese", "Richelle", "Ryleigh", "Scarlett", "Sienna", "Skyler", "Stella", "Sumira", "Talia", "Teagan", "Thea", "Valentina", "Violet", "Vivian", "Willow", "Zara", "Blake", "Cameron", "Jessie", "Kairi", "Robin", "Robyn", "Sam", "Teri", "Kirsten"].sort(), Names.FIRST_NAMES = [], Names.MIDDLE_NAMES = ["Air", "Animal", "Battle", "Blue", "Bronze", "Clear", "Cloud", "Coin", "Daring", "Dark", "Day", "Diamond", "Divine", "Dragon", "Dream", "Earth", "Fable", "Fairy", "Fall", "Fancy", "Far", "Fire", "Flame", "Fog", "Forge", "Frost", "Fruit", "Garden", "Gear", "Ghost", "Giant", "Glass", "Gold", "Golden", "Good", "Green", "Heavy", "Hero", "Ice", "Illusion", "Iron", "Land", "Leaf", "Legend", "Life", "Lightning", "Maelstrom", "Magic", "Metal", "Monster", "Moon", "Mountain", "Myth", "Near", "Night", "Ocean", "Plant", "Quake", "Rain", "Red", "River", "Ruby", "Silver", "Sleep", "Soft", "Spell", "Spring", "Star", "Storm", "Strong", "Summer", "Swift", "Thunder", "Water", "White", "Wild", "Wind", "Winter", "Wish", "Wonder", "Yellow"], Names.LAST_NAMES = ["Blade", "Boots", "Boy", "Breath", "Brother", "Caller", "Cast", "Caster", "Catcher", "Crafter", "Dancer", "Dreamer", "Drifter", "Ear", "Eyes", "Follower", "Foot", "Friend", "Gem", "Girl", "Giver", "Hand", "Heart", "Helper", "Hunter", "Leader", "Legs", "Lemon", "Light", "Man", "Mask", "Master", "Nose", "Ore", "Pants", "Petal", "Prism", "Ring", "Runner", "Seed", "Shade", "Shadow", "Shard", "Shine", "Shirt", "Singer", "Sister", "Smith", "Song", "Spoon", "Staff", "Steel", "Strider", "Sword", "Tail", "Talon", "Tamer", "Thinker", "Torch", "Vault", "Voice", "Walker", "Wand", "Ward", "Whisper", "Winner", "Woman"], Prodigy.Daily = function(e, t, i, a, s, r) {
	this.game = e, this.player = t, this.stateName = i, this.questId = a, this.defaultValue = s, this.completeValue = r
}, Prodigy.Daily.prototype = {
	isInitialized: function() {
		return Util.isDefined(this.player.state.get(this.stateName))
	},
	init: function() {
		this.player.state.set(this.stateName, {
			questId: this.questId,
			dateId: Util.getDateId(),
			questState: this.defaultValue
		})
	},
	isComplete: function() {
		return this.player.state.get(this.stateName + "-questState") === this.completeValue
	},
	complete: function() {
		this.player.state.set(this.stateName + "-questState", this.completeValue)
	},
	hasDateIdChanged: function() {
		return Util.getDateId() !== this.player.state.get(this.stateName + "-dateId")
	}
}, Prodigy.PippetEncounter = function(e, t) {
	Prodigy.Daily.call(this, e, t, Prodigy.PippetEncounter.data.stateName, Prodigy.PippetEncounter.data.questId, Prodigy.PippetEncounter.data.defaultValue, Prodigy.PippetEncounter.data.completeValue)
}, Prodigy.extends(Prodigy.PippetEncounter, Prodigy.Daily, {
	constructor: Prodigy.PippetEncounter,
	getSpawn: function() {
		var e = (new Date).getDate() + this.game.prodigy.player.getLatestClassIDLegacy();
		return this.game.seededRandom.pick(Prodigy.PippetEncounter.data.spawns, e)
	}
}), Prodigy.PippetEncounter.data = {
	stateName: "world-dailyQuests-0",
	questId: 0,
	defaultValue: 0,
	completeValue: 1,
	completeDialogue: 8,
	bonusStars: 100,
	spawns: [{
		location: "forest-B7",
		dialogue: 3
	}, {
		location: "skywatch-B1",
		dialogue: 5
	}, {
		location: "bonfire_spire-C1",
		dialogue: 6
	}, {
		location: "shipwreck_shore-C12",
		dialogue: 7
	}, {
		location: "shipwreck_shore-C11",
		dialogue: 7
	}]
}, Prodigy.Control.Sprite = function(e, t, i, a, s, r, n, o, h, l) {
	this.forcedWidth = o, this.forcedHeight = h, this.onTextureLoaded = n, this.loadingTween = null, s = s || 0;
	var d = !1;
	e.prodigy.load.isFileLoaded(a) ? (Phaser.Sprite.call(this, e, t, i, a, s), this.checkSpriteDimension(), d = !0, this.resetAnchor(r)) : (Util.isDefined(l) && l ? (Phaser.Sprite.call(this, e, t, i, "core", "icon-loading"), this.anchor.setTo(.5, .5), this.x += 40, this.y += 40, this.loadingTween = this.game.add.tween(this).to({
		angle: 360
	}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1)) : Phaser.Sprite.call(this, e, t, i, "core", "empty"), this.checkSpriteDimension(), e.prodigy.load.assets(a, this.onSourceAssetLoaded.bind(this, e, t, i, a, s, r))), d && this.checkCallback()
}, Prodigy.extends(Prodigy.Control.Sprite, Phaser.Sprite, {
	constructor: Prodigy.Control.Sprite,
	loadNewTexture: function(e, t, i, a) {
		this.loadingTween && (this.loadingTween.stop(), this.loadingTween = null, this.anchor.setTo(0, 0), this.x -= 40, this.y -= 40, this.angle = 0), this.game.prodigy.load.isFileLoaded(e) ? this.onSourceAssetLoaded(this.game, this.x, this.y, e, t, i) : (Util.isDefined(a) && a ? (this.loadTexture("core", "icon-loading"), this.anchor.setTo(.5, .5), this.x += 40, this.y += 40, this.loadingTween = this.game.add.tween(this).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1)) : this.loadTexture("core", "empty"), this.game.prodigy.load.assets(e, this.onSourceAssetLoaded.bind(this, this.game, this.x, this.y, e, t, i)))
	},
	checkSpriteDimension: function() {
		Util.isDefined(this.forcedWidth) && (this.width = this.forcedWidth), Util.isDefined(this.forcedHeight) && (this.height = this.forcedHeight)
	},
	rotateMiddleBased: function(e) {
		this.middleRotatedAngle = e, this.anchor.set(.5, .5), this.angle = this.middleRotatedAngle
	},
	swiftAnchorAndPosition: function(e, t) {
		this.anchor.x = e, this.anchor.y = t, this.x += this.width * e, this.y += this.height * t
	},
	onSourceAssetLoaded: function(e, t, i, a, s, r) {
		this.loadingTween && (this.loadingTween.stop(), this.loadingTween = null, this.anchor.setTo(0, 0), this.x -= 40, this.y -= 40, this.angle = 0), this.key = a, this.game = e, this.components.Animation && (this.animations = new Phaser.AnimationManager(this)), this.components.LoadTexture && null !== this.key && (0 === a.indexOf("icon-") && (s = 0), this.loadTexture(a, s)), this.components.FixedToCamera && (this.cameraOffset = new Phaser.Point(t, i)), Util.isDefined(this.middleRotatedAngle) ? this.rotateMiddleBased(this.middleRotatedAngle) : this.resetAnchor(r), this.checkSpriteDimension(), 16777215 !== this.tint && (this.tintedTexture = PIXI.CanvasTinter.getTintedTexture(this, this.tint)), this.checkCallback()
	},
	checkCallback: function() {
		Util.isDefined(this.onTextureLoaded) && this.onTextureLoaded(this)
	},
	destroy: function() {
        Phaser.Sprite.prototype.destroy.call(this,true,false)
    },
	resetAnchor: function(e) {
		e && (Util.isDefined(e.x) && Util.isDefined(e.y) ? this.anchor.setTo(e.x, e.y) : this.anchor.setTo(.5, 1))
	}
}), Prodigy.Control.AnimatedSprite = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Sprite.call(this, e, t, i, a, s[0], r);
	var h = 0;
	Object.defineProperty(this, "frameNo", {
		get: function() {
			return h
		},
		set: function(e) {
			Util.isDefined(s) && (h = Math.floor(e), this.frameName = s[h], Util.isDefined(n) && (this.scale.x = n[h], this.scale.y = n[h]), Util.isDefined(o) && (this.x = o[h].x, this.y = o[h].y))
		}
	}), this.frameNo = 0
}, Prodigy.extends(Prodigy.Control.AnimatedSprite, Prodigy.Control.Sprite, {
	constructor: Prodigy.Control.AnimatedSprite
}), Prodigy.Control.Indicator = function(e, t, i) {
	Phaser.Image.call(this, e, t, i, "icons", "exclamation")
}, Prodigy.extends(Prodigy.Control.Indicator, Phaser.Image, {
	constructor: Prodigy.Control.Indicator,
	addTween: function() {
		this.game.add.tween(this).to({
			y: this.y - 10
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, -1, !0)
	}
}), Prodigy.Control.ProgressBar = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.barWidth = s - 12, s -= 80, this.add(this.game.prodigy.create.sprite(0, 0, "core", "bar-corner")), this.add(new Phaser.TileSprite(this.game, 40, 0, s, 40, "core", "bar-top")), this.add(this.game.prodigy.create.sprite(40 + s, 0, "core", "bar-corner2")), this.bar = this.add(new Phaser.TileSprite(this.game, 6, 6, 0, 28, "core", "bar-fill")), this.text = this.game.prodigy.create.font(this, 0, 8, "", {
		width: s + 80,
		align: "center",
		size: 16
	})
}, Prodigy.extends(Prodigy.Control.ProgressBar, Prodigy.Control.Element, {
	constructor: Prodigy.Control.ProgressBar,
	setProgress: function(e, t) {
		this.bar.width = Math.floor(e * this.barWidth), this.text.setText(Util.isDefined(t) ? t : "")
	}
}), Prodigy.Control.Button = function(e, t, i, a, s, r, n, o, h, l, d, c) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.isActive = !0, this.isPressed = !1, this.callback = n, this.tag = r, this.sprite = this.game.prodigy.create.sprite(0, 0, s, r, !1, this.onSpriteLoaded.bind(this), d, c), this.add(this.sprite), Util.isDefined(o) && Util.isDefined(h) && (this.animatedSprite = this.game.prodigy.create.sprite(h.x, h.y, s, o[0]), this.animatedSpritePos = h, this.add(this.animatedSprite), this.animTween = new Prodigy.TweenController(e, this.animatedSprite), this.animTween.set("frameName", o, 200, 9999), this.animTween.start()), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.onDown, this), Util.isDefined(l) && l !== !1 || (this.sprite.events.onInputUp.add(this.onUp, this), this.sprite.events.onInputOver.add(this.onOver, this)), this.sprite.events.onInputOut.add(this.onOut, this), GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(r) && (this.game.prodigy.automation.addTrigger({
		ID: "autoclick-" + r,
		context: this,
		callback: function() {
			return {
				x: this.worldPosition.x + .5 * this.sprite.width,
				y: this.worldPosition.y + .5 * this.sprite.height
			}
		}.bind(this)
	}), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this)), this.setSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Control.Button, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Button,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.tag) && (this.game.prodigy.automation.removeAllTriggers(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK, this))
	},
	setSFX: function(e, t) {
		this.sfxPack = e, this.sfxTag = t
	},
	update: function() {
		Util.isDefined(this.animTween) && this.animTween.update()
	},
	changeImage: function(e) {
		this.sprite.frameName = e
	},
	onDown: function() {
		this.isPressed = !0, this.isActive && (this.game.prodigy.audio.playSFX(this.sfxPack, this.sfxTag), Util.isDefined(this.callback) && this.callback(), this.sprite.y = 0, Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y), Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY))
	},
	onUp: function() {
		this.isPressed = !1, this.isActive && this.sprite.input.pointerOver() && (this.sprite.y = -3, Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y - 3), Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY - 3))
	},
	onOver: function() {
		this.isActive && (this.sprite.y = -3, Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y - 3), Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY - 3))
	},
	onOut: function() {
		this.isActive && (this.sprite.y = 0, Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y), Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY))
	},
	addCallback: function(e, t, i) {
		i ? this.sprite.events.onInputDown.addOnce(e, t) : this.sprite.events.onInputDown.add(e, t)
	},
	setActive: function() {
		this.isActive = !0, this.sprite.tint = 16777215
	},
	setInactive: function(e) {
		this.isActive = !1, this.sprite.tint = Util.isDefined(e) ? e : 5789784, this.sprite.y = 0, Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y), Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY)
	},
	select: function() {
		this.sprite.tint = 7447253
	},
	deselect: function() {
		this.isActive = !0, this.sprite.tint = 16777215, this.sprite.y = 0, Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY), Util.isDefined(this.animatedSprite) && (this.animatedSprite.y = this.animatedSpritePos.y)
	},
	isActive: function() {
		return this.isActive
	},
	addOverlay: function(e, t, i, a) {
		Util.isDefined(this.spriteOverlay) && this.spriteOverlay.kill(), this.spriteOverlayX = e, this.spriteOverlayY = t, this.spriteOverlay = this.game.prodigy.create.sprite(e, t, i, a), this.add(this.spriteOverlay)
	},
	onSpriteLoaded: function() {
		Util.isDefined(this.spriteOverlay) && (this.spriteOverlay.y = this.spriteOverlayY, this.spriteOverlay.x = this.spriteOverlayX)
	},
	onDebugAutoClick: function(e) {
		Util.isDefined(this.sprite.frameName) && (Util.isDefined(e) ? e === this.sprite.frameName && this.onDown() : Util.log("Button Tag: " + this.sprite.frameName))
	}
}), Prodigy.Control.HUDButton = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.Control.Button.call(this, e, t, i, a, s, r, n), this.fixedWidth = o, this.fixedHeight = h, this.indicatorImage = null
}, Prodigy.extends(Prodigy.Control.HUDButton, Prodigy.Control.Button, {
	constructor: Prodigy.Control.HUDButton,
	showIndicator: function(e) {
		if (e) {
			if (!Util.isDefined(this.indicatorImage)) {
				this.indicatorImage = new Phaser.Image(this.game, 0, 0, "icons", "exclamation"), this.sprite.addChild(this.indicatorImage);
				var t = 2 * this.indicatorImage.height,
					i = Util.getCenteredXY(this.indicatorImage.width, this.indicatorImage.height + t, this.sprite.x, this.sprite.y, Util.isDefined(this.fixedWidth) ? this.fixedWidth : this.sprite.width, Util.isDefined(this.fixedHeight) ? this.fixedHeight : this.sprite.width);
				this.indicatorImage.x = i.x, this.indicatorImage.y = i.y;
				var a = 400,
					s = a - (new Date).getTime() % a;
				this.game.add.tween(this.indicatorImage).to({
					y: this.indicatorImage.y - 10
				}, a, Phaser.Easing.Quadratic.InOut, !0, s, -1, !0)
			}
		} else Util.isDefined(this.indicatorImage) && (this.indicatorImage.destroy(), this.indicatorImage = null)
	}
}), Prodigy.Control.MicrotransactionButton = function(e, t, i, a) {
	"USA" === e.prodigy.player.location && (Prodigy.Control.HUDButton.call(this, e, t, i, a, "microtransactions", "map-icon-conjurecube", e.prodigy.open.microtransactions.bind(e.prodigy.open), 94, 94), this.create(), this.game.broadcaster.addAppListener(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, this.updateCubesCount.bind(this), this, "ProdigyMicrotransactionButton"), this.game.prodigy.microtransaction.gotNetworkCubes === !1 ? this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.GET_CONJURE_CUBES, "ProdigyMicrotransactionButton") : this.updateCubesCount(this.game.prodigy.microtransaction.totals))
}, Prodigy.extends(Prodigy.Control.MicrotransactionButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.MicrotransactionButton,
	create: function() {
		this.cubeCounterBG = this.game.prodigy.create.sprite(-5, 60, "microtransactions", "orange-circle-left"), this.cubeCounterBG.visible = !0, this.sprite.addChild(this.cubeCounterBG), this.cubeCounter = this.game.prodigy.create.font(this, -6, 7, "", {
			font: "microtransactions",
			width: 46,
			align: "center",
			lineHeight: 46
		}), this.cubeCounterBG.addChild(this.cubeCounter), this.cubeCounterBG.visible = !1, this.toOpenCounterBG = this.game.prodigy.create.sprite(65, 60, "microtransactions", "blue-circle-right"), this.toOpenCounterBG.visible = !0, this.sprite.addChild(this.toOpenCounterBG), this.toOpenCounter = this.game.prodigy.create.font(this, -7, 8, "", {
			font: "microtransactions",
			width: 46,
			align: "center",
			lineHeight: 46
		}), this.toOpenCounterBG.addChild(this.toOpenCounter), this.toOpenCounterBG.visible = !1
	},
	updateCubesCount: function(e) {
		this.cubeCounterBG.visible = !1, this.toOpenCounterBG.visible = !1, Util.isDefined(e) && (1 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb || 1 === this.game.prodigy.player.getMicrotransactionDetails().firstOpenBreadcrumb ? this.showIndicator(!0) : this.showIndicator(!1), Util.isDefined(e.waitingToUnlock) && e.waitingToUnlock > 0 && e.readyToOpen <= 0 ? (this.cubeCounter.setText(Math.min(e.waitingToUnlock, 99).toString()), this.cubeCounterBG.visible = !0) : Util.isDefined(e.readyToOpen) && e.readyToOpen > 0 && (this.toOpenCounter.setText(Math.min(e.readyToOpen, 99).toString()), this.toOpenCounterBG.visible = !0))
	},
	destroy: function(e, t) {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, this, "ProdigyMicrotransactionButton"), Phaser.Group.prototype.destroy.call(this, e, t)
	}
}), Prodigy.Control.MailerButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "mail", e.prodigy.open.mailer.bind(e.prodigy.open)), this.game.broadcaster.addAppListener(Prodigy.Events.Mailer.UPDATE_MAIL_COUNTERS, this.process.bind(this), this, "ProdigyMailerButton");
	var s = e.prodigy.mailNetworkHandler;
	Util.isDefined(s) && Util.isDefined(s.totalMail) && this.process(s.totalMail)
}, Prodigy.extends(Prodigy.Control.MailerButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.MailerButton,
	process: function(e) {
		this.showIndicator(e.totalUnread > 0)
	},
	destroy: function(e, t) {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Mailer.UPDATE_MAIL_COUNTERS, this, "ProdigyMailerButton"), Phaser.Group.prototype.destroy.call(this, e, t)
	}
}), Prodigy.Control.WorldMapButton = function(e, t, i, a) {
	var s = Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING,
		r = Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING,
		n = Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON,
		o = function() {
			this.showIndicator(!(e.prodigy.breadcrumbManager.isBreadcrumbComplete(s, n) && e.prodigy.breadcrumbManager.isBreadcrumbComplete(r, n)))
		}.bind(this),
		h = function() {
			e.prodigy.breadcrumbManager.isBreadcrumbComplete(s, n) && e.prodigy.breadcrumbManager.isBreadcrumbComplete(r, n) || (e.prodigy.breadcrumbManager.completeBreadcrumb(s, n), e.prodigy.breadcrumbManager.completeBreadcrumb(r, n)), o(), e.prodigy.open.map()
		};
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "world-map", h.bind(this)), this.showIndicator(!(e.prodigy.breadcrumbManager.isBreadcrumbComplete(s, n) && e.prodigy.breadcrumbManager.isBreadcrumbComplete(r, n))), e.broadcaster.addAppListener(Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP, o, this, "HUD", !1)
}, Prodigy.extends(Prodigy.Control.WorldMapButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.WorldMapButton,
	destroy: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP, this, "HUD"), Prodigy.Control.HUDButton.prototype.destroy.call(this)
	}
}), Prodigy.Control.BackpackButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "items", e.prodigy.open.backpack.bind(e.prodigy.open))
}, Prodigy.extends(Prodigy.Control.BackpackButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.BackpackButton
}), Prodigy.Control.SpellbookButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "spellbook", e.prodigy.open.character.bind(e.prodigy.open))
}, Prodigy.extends(Prodigy.Control.SpellbookButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.SpellbookButton
}), Prodigy.Control.PetsButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "pets", e.prodigy.open.pets.bind(e.prodigy.open))
}, Prodigy.extends(Prodigy.Control.PetsButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.PetsButton
}), Prodigy.Control.SocialButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "social", e.prodigy.open.social.bind(e.prodigy.open, Prodigy.Menu.Social.LEADERBOARD)), this.process(e.prodigy.mail.getMailCount()), e.prodigy.mail.addUpdateCallback(this.process.bind(this))
}, Prodigy.extends(Prodigy.Control.SocialButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.SocialButton,
	process: function(e) {
		this.showIndicator(e > 0)
	},
	destroy: function() {
		this.game.prodigy.mail.removeUpdateCallback(this.process), Prodigy.Control.HUDButton.prototype.destroy.call(this)
	}
}), Prodigy.Control.ChatButton = function(e, t, i, a) {
	var s = function() {
		e.broadcaster.broadcast(Prodigy.Events.HUD.OPEN_CHAT, "HUD", []), e.prodigy.open.chat(e.broadcaster.broadcast.bind(e.broadcaster, Prodigy.Events.HUD.CLOSE_CHAT, "HUD"))
	};
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "chat", s.bind(this)), this.game.broadcaster.addAppListener(Prodigy.Events.HUD.HIDE_CHAT_NOTIF, this.process.bind(this), this, "chatButton"), this.process()
}, Prodigy.extends(Prodigy.Control.ChatButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.ChatButton,
	process: function() {
		this.showIndicator(!this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON))
	},
	destroy: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.HUD.HIDE_CHAT_NOTIF, this, "chatButton"), Prodigy.Control.HUDButton.prototype.destroy.call(this)
	}
}), Prodigy.Control.MemberIconButton = function(e, t, i, a) {
	var s = function() {
		e.prodigy.network.sendConversionFunnelEvent(Prodigy.FunnelEventIDs.FUNNEL_CLICK_HUD_BUTTON, Prodigy.FunnelEventIDs.STAGE_CLICK_BUTTON);
		var t = {
			conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_CLICK_HUD_BUTTON
		};
		e.prodigy.open.membership(null, null, t)
	};
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "membership", s)
}, Prodigy.extends(Prodigy.Control.MemberIconButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.MemberIconButton
}), Prodigy.Control.SettingsButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "settings", e.prodigy.open.settings.bind(e.prodigy.open));
	var s = this.game.prodigy.player;
	!s.hasValidatedParentEmail() && s.hasCompletedTutorial() && this.showIndicator(!0)
}, Prodigy.extends(Prodigy.Control.SettingsButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.SettingsButton
}), Prodigy.Control.EditHouseButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "edit", function() {
		this.game.broadcaster.broadcast(Prodigy.Events.House.OPEN_EDITOR)
	}.bind(this))
}, Prodigy.extends(Prodigy.Control.EditHouseButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.EditHouseButton
}), Prodigy.Control.LockHouseButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "visiting-locked", this.onLockButtonClick.bind(this)), this.showIndicator(e.prodigy.player.hasCompletedTutorial() && !this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON)), this.setAllowsVisiting(this.getAllowsVisiting())
}, Prodigy.extends(Prodigy.Control.LockHouseButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.LockHouseButton,
	onLockButtonClick: function() {
		this.game.prodigy.player.hasCompletedTutorial() && !this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON) && (this.showIndicator(!1), this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON), this.game.broadcaster.broadcast(Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP, "HUD", []));
		var e = this.getAllowsVisiting();
		if (this.game.prodigy.player.isMember) {
			e = !e;
			var t = e ? Prodigy.House.VISITING_UNLOCKED_TEXT : Prodigy.House.VISITING_LOCKED_TEXT;
			this.game.prodigy.open.message(t, null, null, null)
		} else {
			var i = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_UNLOCK_HOUSE,
				upgradeButtonClick: {
					action: "Click-Member-Upgrade-From-House-Lock-Toggle",
					value: ""
				}
			};
			this.game.prodigy.network.sendConversionFunnelEvent(i.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_UNLOCK), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.VISIT_HOUSE, null, i)
		}
		this.game.prodigy.network.sendAnalytics("Click-House-Lock-Toggle", e ? "Visiting-Enabled" : "Visiting-Disabled"), this.setAllowsVisiting(e)
	},
	getAllowsVisiting: function() {
		return Util.isDefined(this.game.prodigy.player) && this.game.prodigy.player.getAllowsHouseVisitors()
	},
	setAllowsVisiting: function(e) {
		Util.isDefined(this.game.prodigy.player) && (!this.game.prodigy.player.isMember && e && (e = !1, Util.log("House.setAllowsVisiting - player is not a member but is trying to unlock house for visiting.  Defaulting to locked.", Util.INFO)), this.game.prodigy.player.setAllowsHouseVisitors(e)), this.sprite.frameName = e ? "visiting-unlocked" : "visiting-locked"
	}
}), Prodigy.Control.MoveHouseButton = function(e, t, i, a) {
	var s = GameConstants.get("GameConstants.Features.ENABLE_HOUSE_MOVING"),
		r = Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING,
		n = Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_MOVE_BUTTON;
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "move", function() {
		s ? (e.prodigy.breadcrumbManager.completeBreadcrumb(r, n), this.showIndicator(!1), this.game.broadcaster.broadcast(Prodigy.Events.HUD.SET_CLICKED_WORLD_MAP, "HUD", []), e.prodigy.world.getZone("house").openHouseStore()) : this.game.prodigy.open.message("Coming soon!")
	}.bind(this)), this.showIndicator(s && e.prodigy.player.hasCompletedTutorial() && !e.prodigy.breadcrumbManager.isBreadcrumbComplete(r, n))
}, Prodigy.extends(Prodigy.Control.MoveHouseButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.MoveHouseButton
}), Prodigy.Control.FriendsListButton = function(e, t, i, a) {
	Prodigy.Control.HUDButton.call(this, e, t, i, a, "icons-hud", "friendsList", e.prodigy.open.friendsList.bind(e.prodigy.open, null)), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.GET_TOTAL_FRIEND_REQUESTS, this.process.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_RECEIVED, this.process.bind(this), this, "HUD", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this.process.bind(this), this, "HUD", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this.process.bind(this), this, "HUD", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this.process.bind(this), this, "HUD", !1);
	var s = e.prodigy.friendsListNetworkHandler;
	Util.isDefined(s.pendingRequests) ? this.showIndicator(s.pendingRequests > 0) : s.init(this.process.bind(this))
}, Prodigy.extends(Prodigy.Control.FriendsListButton, Prodigy.Control.HUDButton, {
	constructor: Prodigy.Control.FriendsListButton,
	process: function(e) {
		this.showIndicator(e > 0)
	},
	destroy: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.GET_TOTAL_FRIEND_REQUESTS, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_RECEIVED, this, "HUD"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this, "HUD"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this, "HUD"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this, "HUD"), Prodigy.Control.HUDButton.prototype.destroy.call(this)
	}
}), Prodigy.Control.StackButton = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.isActive = !0, this.callback = r, this.contents = this.game.prodigy.create.element(this, 0, 0);
	for (var n = !1, o = 0; o < s.length; o++) {
		var h = s[o];
		if (Util.isDefined(h.tag)) {
			var l = null;
			l = this.top = "object" == typeof h.tag ? this.addIcon(h.tag, h.x, h.y, h.w, h.h) : this.addImage(h.tag, h.x, h.y, h.w, h.h), n || (n = !0, l.inputEnabled = !0, l.events.onInputDown.add(this.onDown, this), l.events.onInputUp.add(this.onUp, this), l.events.onInputOver.add(this.onOver, this), l.events.onInputOut.add(this.onOut, this))
		} else Util.isDefined(h.text) && this.game.prodigy.create.font(this.contents, h.x || 0, h.y || 0, h.text, {
			width: 80,
			align: "center",
			size: Util.isDefined(h.size) ? h.size : 20
		})
	}
	GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.top.frameName) && (this.game.prodigy.automation.addTrigger({
		ID: "autoclick-" + this.top.frameName,
		context: this,
		callback: function() {
			return {
				x: this.worldPosition.x + .5 * this.top.width,
				y: this.worldPosition.y + .5 * this.top.height
			}
		}.bind(this)
	}), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this)), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Control.StackButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.StackButton,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.top.frameName) && (this.game.prodigy.automation.removeAllTriggers(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK, this))
	},
	addImage: function(e, t, i, a, s) {
		var r = this.contents.add(this.game.prodigy.create.sprite(t || 0, i || 0, "icons", e));
		return Util.isDefined(a) && (r.width = a), Util.isDefined(s) && (r.height = s), r
	},
	addIcon: function(e, t, i, a, s) {
		var r = this.contents.add(this.game.prodigy.icon.createFromData(e, t || 0, i || 0));
		return Util.isDefined(a) && (r.width = a), Util.isDefined(s) && (r.height = s), r
	},
	enable: function(e) {
		Util.isDefined(this.top) && (this.top.tint = e ? 16777215 : 2236962), this.isActive = e
	},
	onDown: function() {
		this.isActive && (this.contents.y = 0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function() {
		this.isActive && (this.contents.y = -3)
	},
	onOver: function() {
		this.isActive && (this.contents.y = -3)
	},
	onOut: function() {
		this.isActive && (this.contents.y = 0)
	},
	setActive: function() {
		this.isActive = !0
	},
	setInactive: function() {
		this.isActive = !1, this.contents.y = 0
	},
	select: function() {
		this.y = this.oldY || this.y, this.oldY = this.y, Util.isDefined(this.tween) && this.tween.stop(), this.tween = this.game.add.tween(this).to({
			y: this.y - 10
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)
	},
	deselect: function() {
		this.isActive = !0, Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null), this.y = this.oldY || this.y
	},
	onDebugAutoClick: function(e) {
		Util.isDefined(this.top.frameName) && (Util.isDefined(e) ? e === this.top.frameName && this.onDown() : Util.log("Button Stack Tag: " + this.top.frameName))
	}
}), Prodigy.Control.AdvButton = function(e, t, i, a, s, r, n, o) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), this.isActive = !0, this.data = s, this.callback = r, this.content = this.game.prodigy.create.element(this), this.sprite = this.content.add(this.game.prodigy.create.sprite(0, 0, "core", "btn-core")), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.onDown, this), this.sprite.events.onInputUp.add(this.onUp, this), this.sprite.events.onInputOver.add(this.onOver, this), this.sprite.events.onInputOut.add(this.onOut, this), Util.isDefined(s.icon)) {
		var n = Util.isDefined(s.icon.forcedWidth) ? s.icon.forcedWidth : null,
			o = Util.isDefined(s.icon.forcedHeight) ? s.icon.forcedHeight : null,
			h = function(e) {
				e.x = Math.floor((this.width - e.width) / 2), e.y = Math.floor((this.height - e.height) / 2)
			},
			l = this.content.add(this.game.prodigy.create.sprite(0, 0, s.atlas || Items.getIconAtlas(s.icon), Items.getIconFrame(s.icon), !1, h.bind(this), n, o));
		l.alpha = .4
	}
	if (Util.isDefined(s.top) && this.game.prodigy.create.font(this.content, 5, 8, s.top, {
			size: 16,
			align: "center",
			width: this.sprite.width - 10
		}), Util.isDefined(s.bot) && this.game.prodigy.create.font(this.content, 5, this.sprite.height - 33, s.bot, {
			size: 16,
			align: "center",
			width: this.sprite.width - 10
		}), GameConstants.get("GameConstants.Build.DEBUG")) {
		var d = "",
			c = Util.isDefined(this.data.top) && this.data.top.length > 0,
			p = Util.isDefined(this.data.bot) && this.data.bot.length > 0;
		c && (d += this.data.top, p && (d += "-")), p && (d += this.data.bot), 0 === d.length && Util.isDefined(this.data.icon) && this.data.icon.length > 0 && (d = this.data.icon), d.length > 0 && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-" + d,
			context: this,
			callback: function() {
				return {
					x: this.worldPosition.x + .5 * this.sprite.width,
					y: this.worldPosition.y + .5 * this.sprite.height
				}
			}.bind(this)
		}), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this)
	}
	this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Control.AdvButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.AdvButton,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && (this.game.prodigy.automation.removeAllTriggers(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK, this))
	},
	onDown: function() {
		this.isActive && !this.disabled && (this.content.y = 0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function() {
		this.isActive && !this.disabled && (this.content.y = -3)
	},
	onOver: function() {
		this.isActive && !this.disabled && (this.content.y = -3)
	},
	onOut: function() {
		this.isActive && !this.disabled && (this.content.y = 0)
	},
	disable: function() {
		this.setActive(!1), this.disabled = !0
	},
	enable: function() {
		this.setActive(!0), this.disabled = !1
	},
	setActive: function(e) {
		this.disabled || (this.isActive = e, this.sprite.tint = e ? 16777215 : 5789784, this.content.y = 0)
	},
	onDebugAutoClick: function(e) {
		var t = "",
			i = Util.isDefined(this.data.top) && this.data.top.length > 0,
			a = Util.isDefined(this.data.bot) && this.data.bot.length > 0;
		i && (t += this.data.top, a && (t += "-")), a && (t += this.data.bot), 0 === t.length && Util.isDefined(this.data.icon) && this.data.icon.length > 0 && (t = this.data.icon), t.length > 0 && (t = t.toLowerCase(), Util.isDefined(e) ? e === t && this.onDown() : Util.log("Button Tag: " + t))
	}
}), Prodigy.Control.PanelButton = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.isActive = !0, this.callback = o, this.content = this.game.prodigy.create.element(this), this.btn = this.game.prodigy.create.panel(this.content, 0, 0, s, r, n), this.btn.setClickable(this.onDown.bind(this), this.onUp.bind(this), this.onOver.bind(this), this.onOut.bind(this)), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
		ID: "autoclick-" + n,
		context: this,
		callback: function() {
			return {
				x: this.btn.x + .5 * this.btn.totalWidth,
				y: this.btn.y + .5 * this.btn.totalHeight
			}
		}.bind(this)
	}), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Control.PanelButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.PanelButton,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	onDown: function() {
		this.isActive && (this.content.y = 0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function() {
		this.isActive && (this.content.y = -3)
	},
	onOver: function() {
		this.isActive && (this.content.y = -3)
	},
	onOut: function() {
		this.isActive && (this.content.y = 0)
	},
	setActive: function(e) {
		this.isActive = e, this.content.y = 0
	}
}), Prodigy.Control.Menu = function(e, t, i, a) {
	this.menuID = i, this.style = Util.isDefined(a) ? a : {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-brown"
	}, e.prodigy.open.menuOpen(!this.style.hideMenu), Prodigy.Control.Element.call(this, e, t), this.style.hideOverlay || (this.overlay = this.game.prodigy.create.sprite(0, 0, "core", "overlay-small"), this.overlay.width = this.game.world.width, this.overlay.height = this.game.world.height, this.overlay.alpha = .01, this.overlay.inputEnabled = !0, this.add(this.overlay)), this.isHidden = !1
}, Prodigy.extends(Prodigy.Control.Menu, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Menu,
	hide: function(e) {
		e ? (this.isHidden = !0, this.visible = !1) : this.isHidden && (this.isHidden = !1, this.visible = !0)
	},
	onMenuOpen: function() {},
	setup: function() {
		this.loadComplete()
	},
	loadComplete: function() {
		this.alive && (Util.isDefined(this.spinner) && this.spinner.destroy(), this.menuSetup())
	},
	menuSetup: function() {
		Util.isDefined(this.style.open) && this.style.open(), this.bg = this.game.prodigy.create.element(this, 0, 0), this.style.tile && this.setBackgroundTile("core", this.style.tile, .25, .25, this.style.full), this.fg = this.game.prodigy.create.element(this, 0, 0), this.style.hideContent && (this.game.enableBackground(!1), this.game.enableContent(!1))
	},
	showFrame: function(e, t, i, a) {
		if (this.fg.add(new Phaser.TileSprite(this.game, 0, 0, this.game.world.width, 50, "core", "panel-mid")), this.fg.add(new Phaser.TileSprite(this.game, 0, 50, this.game.world.width, 50, "core", "panel-top2")), this.fg.add(new Phaser.TileSprite(this.game, 0, 620, this.game.world.width, 50, "core", "panel-top")), this.fg.add(new Phaser.TileSprite(this.game, 0, 670, this.game.world.width, 50, "core", "panel-mid")), Util.isDefined(e)) {
			this.fg.add(this.game.prodigy.create.sprite(30, 5, "icons", "icon-base"));
			var s = this.fg.add(this.game.prodigy.create.sprite(30, 5, Items.getIconAtlas(e), Items.getIconFrame(e), !1, null, 80, 80));
			s.x += Math.floor((80 - s.width) / 2), s.y += Math.floor((80 - s.height) / 2)
		}
		if (Util.isDefined(t) && (this.title = this.game.prodigy.create.font(this.fg, 125, 10, t, {
				font: "button",
				size: 36
			})), Util.isDefined(i)) {
			var r = this.game.prodigy.create.element(this.fg, 0, 5);
			this.btns = [];
			for (var n = 0; n < i.length; n++) {
				var o = i[n];
				r.add(this.game.prodigy.create.sprite(90 * n, 0, "icons", "icon-base-active")), this.btns[n] = this.game.prodigy.create.button(r, 90 * n, 0, Items.getIconAtlas(o.icon), Items.getIconFrame(o.icon), this.clickBtn.bind(this, n, this.btns, o.callback, o.title), !0, null, !1, 80, 80), this.btns[n].oldY = this.btns[n].y
			}
			r.x = 1250 - r.width, Util.isDefined(a) && this.btns[a].onDown()
		}
	},
	clickBtn: function(e, t, i, a) {
		if (this.currentBtn !== e) {
			this.currentBtn = e, Util.isDefined(a) && Util.isDefined(this.title) && this.title.setText(a);
			for (var s = 0; s < t.length; s++) this.resetButton(s, t);
			this.game.add.tween(t[e]).to({
				y: t[e].y - 10
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: t[e].y
			}, 500, Phaser.Easing.Quadratic.In).loop().start(), i()
		}
	},
	resetButton: function(e, t) {
		t = Util.getOptionalParameter(t, this.btns), this.game.tweens.removeFrom(t[e], !1), t[e].y = t[e].oldY
	},
	showBtns: function(e, t) {
		if (Util.isDefined(t))
			for (var i = 0, a = t.length - 1; a >= 0; a--) t[a].y = 650, i += t[a].width, t[a].x = 1230 - i, i += 30;
		if (Util.isDefined(e))
			for (var i = 0, a = 0; a < e.length; a++) e[a].y = 650, e[a].x = 50 + i, i += e[a].width + 30
	},
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.setupComplete && this.menuUpdate()
	},
	menuUpdate: function() {
		Util.isDefined(this.bar) && (this.bar.tilePosition.x += this.barSpeedX, this.bar.tilePosition.y += this.barSpeedY)
	},
	close: function() {
		Util.isDefined(this.game) && (this.style.hideContent && (this.game.enableBackground(!0), this.game.enableContent(!0)), this.game.prodigy.open.menuOpen(!0), Util.isDefined(this.style.close) && this.style.close(), this.game.prodigy.open.close(this), this.destroy())
	},
	setBackgroundTile: function(e, t, i, a, s) {
		Util.isDefined(this.bar) && this.bar.destroy(), this.bg.removeAll(!0), this.bar = s ? new Phaser.TileSprite(this.game, 0, 0, this.game.world.width, this.game.world.height, e, t) : new Phaser.TileSprite(this.game, 0, 100, this.game.world.width, this.game.world.height - 200, e, t), this.bar.tilePosition.x = -6, this.bar.tilePosition.y = -20, this.bg.add(this.bar), this.barSpeedX = i || this.barSpeedX, this.barSpeedY = a || this.barSpeedY
	}
}), Prodigy.RenderMenu = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.renderTexture = s, this.game = e, this.background = e.prodigy.create.element(this), this.renderTexture.clear(), this.renderImage = this.add(new Phaser.Image(e, 0, 0, this.renderTexture)), this.renderImage.inputEnabled = !0, this.page = 0
}, Prodigy.extends(Prodigy.RenderMenu, Prodigy.Control.Element, {
	constructor: Prodigy.RenderMenu,
	setActive: function(e) {
		this.visible = e, e && this.process(), this.disableModeSet || this.setMode(this.page || 0)
	},
	addTransparent: function(e) {
		var t = this.background.add(this.game.prodigy.create.sprite(-10, -10, "core", "overlay-small"));
		t.width = 1300, t.height = 740, t.alpha = Util.isDefined(e) ? e : .5
	},
	addBackground: function(e) {
		for (var t = 0; 32 > t; t++)
			for (var i = 0; 18 > i; i++) this.background.add(new Phaser.Image(this.game, 40 * t, 40 * i, "core", e))
	},
	addPanel: function() {},
	createBaseSetup: function(e, t, i, a, s, r, n) {
		this.disableModeSet = r;
		var o = this.game.prodigy.create.element(this, (1280 - 40 * e) / 2, (720 - 40 * t) / 2);
		if (o.setRenderState(!0), this.game.prodigy.create.panel(o, 0, 0, e, t, i), Util.isDefined(s) && s.length > 0) this.game.prodigy.create.panel(o, 40, 40, 6 + 3 * s.length, 2, "banner");
		else if (Util.isDefined(n)) {
			var h = this.game.prodigy.create.panel(o, 40, 40, 18, 2, "banner");
			this.game.prodigy.create.font(h, 200, 15, n, {
				size: 36,
				font: "button"
			})
		}
		if (this.game.prodigy.create.button(this, o.x + 40 * (e - 1), o.y - 10, "icons", "close", this.close.bind(this)), this.buttons = [], Util.isDefined(s) && s.length > 0) {
			Util.isDefined(a) && (o.add(this.game.prodigy.create.sprite(80, -10, "icons", "menu-crest")), this.game.prodigy.create.font(o, 80, 70, a, {
				width: 140,
				align: "center"
			}));
			for (var l = 0; l < s.length; l++) this.buttons.push(this.game.prodigy.create.advButton(this, o.x + 240 + 120 * l, o.y + 30, s[l], this.setMode.bind(this, l)))
		}
		return o
	},
	setMode: function(e) {
		if (Util.isDefined(this.buttons))
			for (var t = 0; t < this.buttons.length; t++) this.buttons[t].setActive(e !== t)
	},
	startLoad: function(e, t) {
		this.game.prodigy.load.assets(e, t)
	},
	process: function() {
		this.renderTexture.clear(), this.background.visible = !0, this.renderTexture.renderXY(this.background, 0, 0, !0), this.background.visible = !1;
		for (var e = 0; e < this.children.length; e++) {
			var t = this.children[e];
			t instanceof Prodigy.Control.Element && (t.tintElement && t.setAllChildren("tint", 10066329), t.renderOnly ? (t.visible = !0, this.renderTexture.renderXY(t, t.x, t.y), t.visible = !1) : t.visible = !0)
		}
	},
	hideActiveElements: function() {
		for (var e = 0; e < this.children.length; e++) {
			var t = this.children[e];
			t !== this.background && t instanceof Prodigy.Control.Element && (t.visible = !1)
		}
	},
	init: function(e) {
		e.add(this), this.process()
	},
	close: function() {
		Util.isDefined(this.game) && Util.isDefined(this.game.prodigy) && (Util.isDefined(this.game.broadcaster) && (this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_UI, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this, this.game)), this.game.prodigy.open.setActiveRenderMenu());
		try {
			Util.isDefined(this.onClose) && this.onClose.apply(this, arguments)
		} catch (e) {}
		Util.isDefined(this.game) && this.game.prodigy.open.close(this), this.destroy()
	},
	create: function() {
		this.game.prodigy.open.setActiveRenderMenu(this), this.process(), this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.STOP_PLAYER)
	}
});
var Attack = function() {
	function e(e, t, i, a, s, r, n, o, h, l, d, c) {
		this.game = e, this.CRITICAL_HIT_THRESHOLD = .15, this.criticalThresholdBonus = 0, this.source = t, this.target = i, this.element = n, this.callback = h, this.atk = o, this.miss = l, this.mods = d, this.underLayer = this.game.prodigy.create.element(a, 0, 0), this.overLayer = this.game.prodigy.create.element(s, 0, 0);
		var p = function() {
			this.setup(), this.game.time.events.add(r + 1e3, this.complete, this), this.delayComplete = !1, this.potionActive = !1, this.shieldTime = 0
		}.bind(this);
		this.game.time.events.add(c || 0, p, this)
	}
	return e.prototype.setup = function(e, t) {
		this.miss ? this.game.time.events.add(e, this.missed, this) : (Util.isDefined(e) && this.game.time.events.add(e, this.damage, this), Util.isDefined(t) && this.game.time.events.add(t, this.heal, this))
	}, e.prototype.calculateDamageDone = function() {
		var e = Util.isDefined(this.mod) ? this.mod : 0,
			t = 1;
		if (e += this.source.source.getDamageBonus(), Util.isDefined(this.mods) && (Util.isDefined(this.mods.dmgMod) && (e += this.mods.dmgMod), Util.isDefined(this.mods.comboBonus) && (t = this.mods.comboBonus)), this.damageDone = this.game.prodigy.attacks.calculateDamage(this.atk, this.source.source, this.target.source, e, t), this.damageDone > 0 && "PVP" !== this.game.state.current && (this.damageDone = Math.round(this.damageDone * (.95 + .1 * Math.random()))), this.criticalThresholdBonus = 0, Util.isDefined(this.source.source.modifiers) && (this.damageDone = Math.round(this.damageDone * this.source.source.modifiers.damage), Util.isDefined(this.source.source.modifiers.potion))) {
			var i = Items.getItemData("item", this.source.source.modifiers.potion);
			"damage" === i.element ? (this.damageDone += i.potency * this.damageDone / 10, this.damageDone = Math.round(this.damageDone)) : "critical" === i.element && (this.criticalThresholdBonus = i.potency > 1 ? 1 : this.CRITICAL_HIT_THRESHOLD)
		}
	}, e.prototype.processStars = function() {
		var e = this.target.source.getStarRewardByDamage(this.damageDone);
		Util.isDefined(this.mods) && (e *= this.mods.starMod), this.source.source.addStars(e, !0)
	}, e.prototype.damage = function() {
		this.calculateDamageDone(), Util.isDefined(this.atk.data.type) && "epic-attack" === this.atk.data.type && (Util.isDefined(this.epic) ? this.game.prodigy.effects.characterImage(this.game.prodigy.create.sprite(this.epic.x, this.epic.y - 50, "battle", "text-epic-attack")) : this.game.prodigy.effects.characterImage(this.game.prodigy.create.sprite(this.source.x, this.source.y - 50, "battle", "text-epic-attack"))), this.potionActive = !1, this.shieldTime = 0;
		var e = 0;
		if (Util.isDefined(this.target.source.modifiers) && Util.isDefined(this.target.source.modifiers.potion)) {
			var t = Items.getItemData("item", this.target.source.modifiers.potion);
			if (Util.isDefined(t.subType) && "elemental" === t.subType && Util.isDefined(this.atk.data.element) && ("all" === t.element || this.atk.data.element === t.element)) {
				this.potionActive = !0, this.shieldTime = 1e3, e = t.potency * this.damageDone / 10, this.damageDone -= Math.round(e);
				var i = this.target.sprites.add(this.game.prodigy.create.sprite(0, -75, "icons", "potion-buff-" + t.element));
				i.anchor.setTo(.5, .5);
				var a = this.game.add.tween(i).to({
						alpha: 0
					}, 1300, Phaser.Easing.Quadratic.Out),
					s = this.game.add.tween(i.scale).to({
						x: 4,
						y: 4
					}, 1300, Phaser.Easing.Quadratic.Out);
				a.start(), s.onComplete.add(function() {
					i.destroy()
				}, i), s.start()
			}
		}
		var r = "",
			n = Math.random() < this.CRITICAL_HIT_THRESHOLD + this.criticalThresholdBonus && "PVP" !== this.game.state.current || "epic-attack" === this.atk.data.type;
		n ? (this.damageDone = Math.round(1.25 * this.damageDone), this.game.prodigy.effects.characterImage(this.game.prodigy.create.sprite(this.target.x, this.source.y + 50, "battle", "text-critical-hit"), 1e3 + this.shieldTime), r = "critical-hit") : r = "normal-hit", this.processStars(), this.lastTargetHp = this.target.source.getCurrentHearts(), this.target.source.changeCurrentHearts(-this.damageDone), this.target.source.getCurrentHearts() <= 0 && this.target.source.modifiers.barrier === !0 ? (this.game.prodigy.effects.characterText("-999", this.target.x, this.source.y, this.shieldTime, {
			size: 1,
			font: "battle",
			mono: 44
		}), n = !0, this.game.prodigy.effects.characterImage(this.game.prodigy.create.sprite(this.target.x, this.source.y + 50, "battle", "text-critical-hit"), 1e3 + this.shieldTime), r = "critical-hit", this.target.retreat()) : this.game.prodigy.effects.characterText("-" + this.damageDone, this.target.x, this.source.y, this.shieldTime, {
			size: 1,
			font: "battle",
			mono: 44
		}), this.target.source.modifiers.barrier === !0 && (Util.isNullOrUndefined(this.target.barrierSprite) || (this.target.source.getCurrentHearts() > 0 ? this.target.doBarrierAnimation() : this.target.doBarrierBreakAnimation())), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, r);
		var o = null;
		n || 0 !== this.target.source.modifiers.ignoreElement || (this.game.prodigy.attacks.isStrong(this.atk.data.element, this.target.source.getElement()) ? o = "Powerful!" : this.game.prodigy.attacks.isWeak(this.atk.data.element, this.target.source.getElement()) && (o = "Weak...")), Util.isDefined(o) && (this.delayComplete = !0, this.game.prodigy.effects.characterText(o, this.target.x, this.source.y + 50, 1e3 + this.shieldTime))
	}, e.prototype.display = function(e, t) {
		if (Util.isDefined(t)) {
			var i = this.game.prodigy.create.font(this.overLayer, e.x, e.y, t, {
				size: 40
			});
			i.x = e.x - i.width >> 1, i.y -= 150;
			var a = this.game.add.tween(i).to({
				y: "-100"
			}, 1300, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 200, Phaser.Easing.Quadratic.Out);
			a.onComplete.add(function() {
				i.destroy()
			}, i), a.start()
		}
	}, e.prototype.missed = function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "miss"), this.game.prodigy.effects.fadeFlyingImage(this.target.x, this.target.y - (this.target.height >> 1), "battle", "text-miss")
	}, e.prototype.heal = function() {
		var e = Util.isDefined(this.damageDone);
		Util.isDefined(this.damageDone) || this.calculateDamageDone();
		var t = Math.floor(.5 * this.damageDone);
		this.target.source.getCurrentHearts() <= 0 && (t = Math.floor(.5 * this.lastTargetHp)), this.source.source.changeCurrentHearts(t), e || (this.damageDone = 0, this.processStars());
		var i = this.game.prodigy.event.create();
		i.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), i.delay(200), i.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), i.delay(200), i.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), i.start(), this.game.prodigy.effects.characterText("+" + t, this.source.x, this.source.y, 0 + this.shieldTime, {
			size: 3,
			font: "battle",
			mono: 44
		})
	}, e.prototype.showOverlay = function(e, t, i, a, s) {
		var r = e;
		this.overLayer.add(r), this.game.add.tween(r.tilePosition).to({
			x: i * t,
			y: a * t
		}, t, Phaser.Easing.Linear.None).delay(s).start(), this.game.add.tween(r).to({
			alpha: 0
		}, 100, Phaser.Easing.Linear.None).delay(s + t - 100).start()
	}, e.prototype.complete = function() {
		this.underLayer.destroy(), this.overLayer.destroy(), this.game.time.events.add(this.delayComplete ? 1e3 + this.shieldTime : 300 + this.shieldTime, this.callback, this)
	}, e
}();
Attack.BX = 2e3, Attack.BY = 1e3, Prodigy.Control.ScrollBar = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.page = 0, this.callback = r, this.height = s, this.maxY = 50 + s - 100, this.minY = 50, this.add(new Phaser.TileSprite(this.game, 0, 25, 50, s - 50, "core", "panel-side")), this.add(new Phaser.TileSprite(this.game, 50, 25, 50, s - 50, "core", "panel-side2")), this.scroll = this.add(this.game.prodigy.create.sprite(0, 50, "core", "btn-mini")), this.up = this.game.prodigy.create.textButton(this, 0, 0, {
		icon: "up",
		size: Prodigy.Control.TextButton.MINI
	}, this.click.bind(this, -1)), this.up.icon.x = 25, this.down = this.game.prodigy.create.textButton(this, 0, s - 50, {
		icon: "down",
		size: Prodigy.Control.TextButton.MINI
	}, this.click.bind(this, 1)), this.down.icon.x = 25
}, Prodigy.extends(Prodigy.Control.ScrollBar, Prodigy.Control.Element, {
	constructor: Prodigy.Control.ScrollBar,
	setPages: function(e, t) {
		this.page = t || 0, this.pages = e, this.diff = (this.height - 100 - 50) / Math.max(1, e - 1), this.click(0)
	},
	click: function(e) {
		this.page = this.page + e, this.page < 0 && (this.page = 0), this.page >= this.pages && (this.page = this.pages - 1), 0 === this.page ? this.up.setInactive() : this.up.setActive(), this.page === this.pages - 1 ? this.down.setInactive() : this.down.setActive(), this.scroll.y = 50 + this.diff * this.page, this.scroll.y < 50 && (this.scroll.y = 50), this.callback(this.page)
	}
}), Prodigy.Control.Slider = function(e, t, i, a, s, r, n) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.len = s - 100, this.isVertical = r, n && this.game.broadcaster.addAppListener(Prodigy.Events.Input.ON_MOUSE_WHEEL, this.onScroll.bind(this), this, "Input", !1), this.bar = this.isVertical ? this.add(new Phaser.TileSprite(this.game, 50, 0, s, 50, "core", "slider")) : this.add(new Phaser.TileSprite(this.game, 0, 0, s, 50, "core", "slider")), this.bar.inputEnabled = !0, this.bar.events.onInputDown.add(this.barClick, this), this.lower = this.isVertical ? this.game.prodigy.create.button(this, 50, 0, "core", "arrow-btn-back", this.btnClick.bind(this, -1)) : this.game.prodigy.create.button(this, 0, 0, "core", "arrow-btn-back", this.btnClick.bind(this, -1, !0)), this.lower.setInactive(), this.higher = this.isVertical ? this.game.prodigy.create.button(this, 50, this.len + 50, "core", "arrow-btn-next", this.btnClick.bind(this, 1)) : this.game.prodigy.create.button(this, this.len + 50, 0, "core", "arrow-btn-next", this.btnClick.bind(this, 1, !0)), this.higher.setInactive(), this.isVertical && (this.bar.angle = 90, this.lower.angle = 90, this.higher.angle = 90);
	var o = this.isVertical ? new Phaser.Rectangle(0, 50, 50, this.len) : new Phaser.Rectangle(50, 0, this.len, 50);
	this.slide = this.isVertical ? this.add(this.game.prodigy.create.sprite(o.x, o.y, "core", "btn-white")) : this.add(this.game.prodigy.create.sprite(o.x, o.y, "core", "btn-white")), this.slide.anchor.setTo(this.isVertical ? 0 : .5, this.isVertical ? .5 : 0), this.slide.visible = !1, this.slide.inputEnabled = !0, this.slide.input.enableDrag(), this.slide.input.boundsRect = o, this.slide.events.onDragStop.add(this.onDragStop, this)
}, Prodigy.extends(Prodigy.Control.Slider, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Slider,
	destroy: function(e, t) {
		Util.isNullOrUndefined(this.game) || this.game.broadcaster.removeAppListener(Prodigy.Events.Input.ON_MOUSE_WHEEL, this, "Input"), Phaser.Group.prototype.destroy.call(this, e, t)
	},
	reset: function(e, t, i, a) {
		this.timeHeld = 0, this.isOver = !1, this.itemsPerPage = t || 1, this.items = e, this.callback = a, this.paging = 0 > i ? this.itemsPerPage : 1, i >= 0 ? (this.page = Math.max(0, i - t), this.pages = Math.max(1, this.items - this.itemsPerPage + 1)) : (this.page = 0, this.pages = Math.max(1, Math.ceil(this.items / this.itemsPerPage))), this.inc = this.pages > 1 ? (this.len - 50) / (this.pages - 1) : this.len - 50, this.slide.visible = this.pages > 1, this.btnClick(0, !0), this.callback(this.page * this.paging)
	},
	onDragStop: function() {
		var e = 0;
		e = this.isVertical ? Math.round((this.slide.y - 50 - 25) / this.inc) : Math.round((this.slide.x - 50 - 25) / this.inc), this.btnClick(e - this.page, !0)
	},
	barClick: function(e, t) {
		var i = 0;
		i = this.isVertical ? Math.round((t.y - this.bar.world.y - 50 - 25) / this.inc) : Math.round((t.x - this.bar.world.x - 50 - 25) / this.inc), this.btnClick(i - this.page, !0)
	},
	process: function() {
		this.callback(this.page * this.paging)
	},
	btnClick: function(e, t) {
		var i = this.page;
		this.page += e, this.page > this.pages - 1 && (this.page = this.pages - 1), this.page < 0 && (this.page = 0), 0 === this.page ? this.lower.setInactive() : this.lower.setActive(), this.page === this.pages - 1 ? this.higher.setInactive() : this.higher.setActive(), this.isVertical ? this.slide.y = 75 + Math.round(this.inc * this.page) : this.slide.x = 75 + Math.round(this.inc * this.page), i !== this.page && this.callback(this.page * this.paging), t || (this.timeHeld = this.game.time.now)
	},
	onScroll: function() {
		(Util.isDefined(this.game) && this.visible && this.isConfined && this.isOver || !this.isConfined) && this.btnClick(-Math.floor(this.game.input.mouse.wheelDelta), !0)
	}
}), Prodigy.Control.BitmapFont = function(e, t, i, a, s, r) {
	Phaser.Group.call(this, e, t), this.x = i, this.y = a, this.sprites = [], r = r || {}, this.boundsWidth = r.width || 1280, this.fontSize = r.size || 20, this.align = r.align, this.font = r.font || "general", this.fontName = "font-" + this.font, this.lineHeight = r.lineHeight, this.monoSpace = r.mono, this.iconOffsetY = r.iconOffsetY || 0, this.icons = [], Util.isDefined(s) && this.setText(s)
}, Prodigy.extends(Prodigy.Control.BitmapFont, Phaser.Group, {
	constructor: Prodigy.Control.BitmapFont,
	setText: function(e) {
		if (Util.isDefined(this.game)) {
			var t = 0,
				i = 0,
				a = 0,
				s = [];
			this.text = e;
			for (var r = 0, n = null, o = 0; o < this.sprites.length; o++) this.sprites[o].kill();
			for (var h = 0; h < e.length; h++) {
				var l = e.charCodeAt(h),
					d = null;
				if (91 !== l) {
					if (93 === l) d = n, n = null;
					else if (Util.isDefined(n)) {
						r++, n += e[h];
						continue
					}
					var o = h - r,
						c = this.monoSpace || 10,
						p = null;
					if (o >= this.sprites.length ? (p = this.game.prodigy.create.sprite(t, i, this.fontName), this.add(p), this.sprites.push(p)) : (p = this.sprites[o], p.revive()), p.x = t, p.y = i, Util.isDefined(d)) {
						var g = d.split(":");
						if (2 === g.length && "single-image" === g[0]) {
							var u = g[1];
							p.key !== u && (this.remove(p), p = this.game.prodigy.icon.createIcon(t, i, u), this.add(p), this.sprites.splice(o, 1, p))
						} else "icons" !== p.key && p.loadTexture("icons"), p.frameName = d;
						p.y += this.iconOffsetY
					} else p.key !== this.fontName && p.loadTexture(this.fontName), 10 !== l && (p.frameName = l + "-" + this.fontSize);
					if (32 === l || h === e.length - 1 || 10 === l) {
						var y = this.lineHeight || this.fontSize + 5;
						if (t >= this.boundsWidth) {
							var m = t;
							t = 0, i += y;
							for (var f = a; o >= f; f++) this.sprites[f].x = t, this.sprites[f].y = i, "icons" === this.sprites[f].key && (this.sprites[f].y += (this.sprites[f].height - this.fontSize) / 2), t += this.monoSpace || this.sprites[f].width;
							s.push(m - t)
						} else 10 === l && (p.kill(), i += y, t = 0);
						a = o + 1, 32 === l && (t += c)
					}
					10 !== l && (t += this.monoSpace || p.width), h === e.length - 1 && s.push(t)
				} else r++, n = ""
			}
			if (this.lines = s.length, Util.isDefined(this.align) && "left" !== this.align)
				for (var b = -1, v = 0, h = -1, o = 0; o < this.sprites.length; o++) {
					var P = this.sprites[o];
					b !== P.y && (b = P.y, h++, Util.isDefined(s[h]) && ("center" === this.align ? v = Math.floor((this.boundsWidth - s[h]) / 2) : "right" === this.align && (v = Math.floor(this.boundsWidth - s[h])))), P.x += v
				}
		}
	},
	setCenterAnchor: function() {
		for (var e = this.width >> 1, t = this.height >> 1, i = 0; i < this.sprites.length; i++) this.sprites[i].x -= e, this.sprites[i].y -= t
	},
	addClickCallback: function(e, t, i) {
		var a = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		a.width = t, a.height = i, a.alpha = 0, a.inputEnabled = !0, a.events.onInputDown.add(e)
	}
}), Prodigy.Control.InputField = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.Control.Element.call(this, e, t);
	var l = l || "";
	this.input = document.createElement("input"), this.input.setAttribute("value", l), this.input.setAttribute("id", i), this.input.setAttribute("class", "game-input"), this.input.setAttribute("autocapitalize", "off"), this.style = h, this.ID = "#" + i;
	var t = document.getElementById("external-ui");
	t.appendChild(this.input), this.canvas = $("#game-container canvas"), this.x = s, this.y = r, this.twidth = n, this.theight = o, this.createEvents()
}, Prodigy.Control.InputField.HEIGHT_SMALL = 30, Prodigy.Control.InputField.HEIGHT_MEDIUM = 45, Prodigy.Control.InputField.WIDTH_MEDIUM = 300, Prodigy.Control.InputField.WIDTH_LARGE = 450, Prodigy.extends(Prodigy.Control.InputField, Prodigy.Control.Element, {
	constructor: Prodigy.Control.InputField,
	createEvents: function() {
		this.allowEvents = !0, $(this.ID).on("focus", null, {
			game: this.game
		}, this.focus.bind(this, !0)), $(this.ID).on("focusout", null, {
			game: this.game
		}, this.focus.bind(this, !1))
	},
	focus: function(e) {
		this.allowEvents && (e ? this.game.input.keyboard.clearCaptures() : this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]))
	},
	setFocus: function(e) {
		e && $(this.ID).focus()
	},
	clearEvents: function(e) {
		this.allowEvents = e
	},
	setAttribute: function(e, t) {
		this.input.setAttribute(e, t)
	},
	getValue: function() {
		return $(this.ID).val()
	},
	setValue: function(e) {
		$(this.ID).val(e)
	},
	hide: function(e) {
		this.visible = !1, $(this.ID).fadeOut(e), Util.isDefined(this.label) && (this.label.alpha = 0), $(this.ID).focusout()
	},
	show: function(e, t) {
		this.visible = !0, Util.isDefined(t) ? setTimeout(this.fadeIn.bind(this, e), t) : this.fadeIn(e)
	},
	fadeIn: function(e) {
		$(this.ID).fadeIn(e), Util.isDefined(this.label) && (this.label.alpha = 1)
	},
	setEnabled: function(e) {
		$(this.ID).attr("disabled", !e)
	},
	destroy: function() {
		$(this.ID).focusout(), $(this.ID).remove(), Prodigy.Control.Element.prototype.destroy.call(this)
	},
	getWidth: function() {
		return $(this.ID).width()
	},
	getHeight: function() {
		return $(this.ID).height()
	},
	setLabel: function(e, t, i, a) {
		var a = a || this.x + 10;
		Util.isDefined(this.label) ? this.label.setText(t) : this.label = this.game.prodigy.create.font(e, a, this.y - 30, t, {
			size: 20
		})
	},
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this);
		var e = this.canvas.height() / this.game.world.height;
		$(this.ID).height(e * this.theight);
		var t = this.canvas.width() / this.game.world.width;
		$(this.ID).width(t * this.twidth);
		var i = e * this.y,
			a = t * this.x + parseInt($("#game-container canvas").css("margin-left")),
			s = e * this.theight / 2;
		$(this.ID).css({
			top: i,
			left: a,
			"font-size": s + "px"
		}), Util.isDefined(this.style) && $(this.ID).css(this.style)
	}
}), Prodigy.Control.InputField.createInputField = function(e, t, i, a, s, r, n, o, h) {
	$("#" + i) && $("#" + i).remove();
	var h = h || "text",
		l = new Prodigy.Control.InputField(e, t, i, a, s, r, n - 15, o);
	return l.setAttribute("type", h), l
}, Prodigy.Control.TextButton = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.callback = r, this.btnGroup = this.game.prodigy.create.element(this, 0, 0), s = s || {};
	var n, o = s.size || Prodigy.Control.TextButton.SMALL;
	switch (o) {
		case Prodigy.Control.TextButton.CONFIRM:
			n = "btn-med-confirm";
			break;
		case Prodigy.Control.TextButton.TALL:
			n = "btn-tall";
			break;
		case Prodigy.Control.TextButton.MED:
			n = "btn-med";
			break;
		case Prodigy.Control.TextButton.MINI:
			n = "btn-mini";
			break;
		case Prodigy.Control.TextButton.LG:
			n = "btn-lg";
			break;
		case Prodigy.Control.TextButton.GRADE:
			n = "btn-grade";
			break;
		default:
			n = "btn-small"
	}
	var h = s.text || "",
		l = 0,
		d = s.textY || 0,
		c = o - 85,
		p = s.atlas || Items.getIconAtlas(s.icon),
		g = s.icon,
		u = Util.isDefined(s.needsMemberIcon) && s.needsMemberIcon;
	if (this.iconSide = s.iconSide, this.bg = this.game.prodigy.create.sprite(0, 0, "core", n), this.btnGroup.add(this.bg), g ? (this.icon = this.btnGroup.add(this.game.prodigy.create.sprite(0, 0, p, g)), this.setIcon(g), l = "right" === s.iconSide ? 10 : this.icon.width + 15, c = this.bg.width - 25 - this.icon.width) : (c = o - 20, l = 10), this.text = this.game.prodigy.create.font(this.btnGroup, l, d, "" + h, {
			size: 36,
			font: "button",
			width: c,
			align: "center"
		}), u) {
		var y = this.game.prodigy.create.sprite(0, 0, "icons", "mail-member");
		y.x = this.bg.width - y.width / 2, y.y = -(y.height / 2), this.btnGroup.add(y)
	}
	if (this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(this.mouseDown, this), this.bg.events.onInputUp.add(this.mouseUp, this), this.bg.events.onInputOver.add(this.mouseOver, this), this.bg.events.onInputOut.add(this.mouseOut, this), GameConstants.get("GameConstants.Build.DEBUG")) {
		var m = null;
		Util.isNullOrUndefined(s.text) ? Util.isNullOrUndefined(s.icon) || (m = s.icon) : (m = s.text, this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this)), Util.isNullOrUndefined(m) || this.game.prodigy.automation.addTrigger({
			ID: "autoclick-" + m,
			context: this,
			callback: function() {
				return {
					x: this.worldPosition.x + .5 * this.bg.width,
					y: this.worldPosition.y + .5 * this.bg.height
				}
			}.bind(this)
		})
	}
	this.isActive = !0, this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.Control.TextButton.TINY = 50, Prodigy.Control.TextButton.MINI = 100, Prodigy.Control.TextButton.SMALL = 200, Prodigy.Control.TextButton.TALL = 100.1, Prodigy.Control.TextButton.MED = 300, Prodigy.Control.TextButton.CONFIRM = 301, Prodigy.Control.TextButton.LG = 350, Prodigy.Control.TextButton.GRADE = 80, Prodigy.extends(Prodigy.Control.TextButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.TextButton,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.text.text) && (this.game.prodigy.automation.removeAllTriggers(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK, this))
	},
	setActive: function() {
		this.isActive = !0, this.bg.tint = 16777215, this.tintActive()
	},
	setInactive: function() {
		this.isActive = !1, this.bg.tint = 5789784, this.icon && (this.icon.tint = 5789784)
	},
	mouseDown: function() {
		this.isActive && (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.callback) && this.callback(), this.btnGroup.y = 0)
	},
	mouseUp: function() {
		this.isActive && (this.btnGroup.y = -3)
	},
	mouseOver: function() {
		this.isActive && (this.btnGroup.y = -3)
	},
	mouseOut: function() {
		this.isActive && (this.btnGroup.y = 0)
	},
	select: function() {
		this.selected = !0, this.bg.tint = 7447253, this.tintSelected()
	},
	deselect: function() {
		this.selected = !1, this.bg.tint = 16777215, this.tintActive()
	},
	tintSelected: function() {
		this.icon && (this.icon.tint = 7447253)
	},
	tintActive: function() {
		this.icon && (this.icon.tint = 16777215)
	},
	setIcon: function(e) {
		this.icon.frameName = Util.isString(e) ? e : null, this.icon.x = "right" === this.iconSide ? this.bg.width - this.icon.width - 10 : 10, this.icon.y = -Math.floor((this.icon.height - 50) / 2), "btn-tall" === this.bg.frameName && (this.icon.x = Math.floor((100 - this.icon.width) / 2), this.icon.y = Math.floor((200 - this.icon.height) / 2))
	},
	setEnabled: function(e) {
		this.isActive = e, this.alpha = this.isActive ? 1 : .5
	},
	setText: function(e) {
		this.text.setText(e)
	},
	onDebugAutoClick: function(e) {
		Util.isDefined(this.text.text) && (Util.isDefined(e) ? e === this.text.text && this.mouseDown() : Util.log("Button Text: " + this.text.text))
	}
}), Prodigy.Control.TextButton.createNextButton = function(e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "next",
		iconSide: "right",
		text: "next"
	}, s)
}, Prodigy.Control.TextButton.createBackButton = function(e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "back",
		text: "back"
	}, s)
}, Prodigy.Control.TextButton.createCloseButton = function(e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "close",
		text: "close"
	}, s)
}, Prodigy.Control.TextButton.createYesButton = function(e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "yes",
		text: "yes"
	}, s)
}, Prodigy.Control.TextButton.createNoButton = function(e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "close",
		text: "no"
	}, s)
}, Prodigy.Control.Panel = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var h = 0,
		l = 0,
		d = null;
	this._imgs = [], this.totalWidth = 0, this.totalHeight = 0, Util.isDefined(o) || (o = {});
	for (var c = 0; s > c; c++) {
		l = 0;
		for (var p = 0; r > p; p++) {
			var g = (n || "panel") + "-";
			g += o.hideLeft || 0 !== c || 0 !== p ? o.hideRight || c !== s - 1 || 0 !== p ? o.hideRight || c !== s - 1 || p !== r - 1 ? o.hideLeft || 0 !== c || p !== r - 1 ? o.hideLeft || 0 !== c ? o.hideRight || c !== s - 1 ? 0 === p ? "top" : p === r - 1 ? "top2" : "mid" : "side2" : "side" : "corner4" : "corner3" : "corner2" : "corner", d = this.add(new Phaser.Image(this.game, h, l, "core", g)), l += d.height, this.totalHeight += d.height, d.inputEnabled = !0, this._imgs.push(d)
		}
		h += d.width, this.totalWidth += d.width
	}
}, Prodigy.extends(Prodigy.Control.Panel, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Panel,
	setClickable: function(e, t, i, a) {
		if (Util.isDefined(e))
			for (var s = 0; s < this._imgs.length; s++) e && this._imgs[s].events.onInputDown.add(e), t && this._imgs[s].events.onInputUp.add(t), i && this._imgs[s].events.onInputOver.add(i), a && this._imgs[s].events.onInputOut.add(a)
	},
	changePanel: function(e) {
		var t = this._imgs[0];
		if (t.frameName != e)
			for (var i = t.frameName.replace("-corner", ""), a = 0; a < this._imgs.length; a++) this._imgs[a].frameName = this._imgs[a].frameName.replace(i, e)
	}
}), Prodigy.Control.FillBar = function(e, t, i, a, s, r, n, o, h, l, d, c, p) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.fillFunction = o, this.dir = n, this.onFill = p, this.setup(s, r, h, l, d, c)
}, Prodigy.extends(Prodigy.Control.FillBar, Prodigy.Control.Element, {
	constructor: Prodigy.Control.FillBar,
	setup: function(e, t, i, a, s, r) {
		this.removeAll(!0), this.back = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-small")), this.bar = this.add(this.game.prodigy.create.sprite(1, t - 1, "core", "overlay-light")), this.bar.anchor.setTo(0, 1), this.back.width = e, this.back.height = t, this.bar.width = e - 2, this.bar.height = t - 2, this.bar.tint = i || 16777215, this.bar.alpha = s, this.icon = this.game.prodigy.create.element(this, -Math.floor((80 - e) / 2), -60), Util.isDefined(a) && ("string" == typeof a ? this.icon.add(this.game.prodigy.create.sprite(0, 0, "icons", a)) : this.icon.add(this.game.prodigy.icon.createFromData(a, 0, 0))), this.label = this.game.prodigy.create.font(this.icon, 0, 20, "", {
			size: 30,
			width: 80,
			align: "center"
		}), this.current = 0, this.target = 0, this.delay = 0, this.currentLevel = 0, r && (this.back.visible = !1), this.setBar()
	},
	setBar: function() {
		for (var e = 0, t = {
				target: 0
			}, i = 1, a = 0, s = !0; s;) {
			if (e = this.fillFunction(i), -1 === e.target) {
				this.current = this.target, a = 1, s = !1;
				break
			}
			if (this.current < e.target) {
				a = (this.current - t.target) / (e.target - t.target), s = !1;
				break
			}
			t = e, i++
		}
		0 === this.dir ? this.bar.width = Math.floor((this.back.width - 2) * a) : this.bar.height = Math.floor((this.back.height - 2) * a), this.label.setText(e.text), Util.isDefined(e.color) && (this.bar.tint = e.color), i > this.currentLevel ? (Util.isDefined(this.onFill) && this.onFill(i), this.game.add.tween(this.icon).to({
			y: -70
		}, 250, Phaser.Easing.Quadratic.Out).to({
			y: -60
		}, 250, Phaser.Easing.Quadratic.In).start()) : i < this.currentLevel && (Util.isDefined(this.onFill) && this.onFill(i), this.game.add.tween(this.icon).to({
			x: this.icon.x - 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x + 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x - 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x
		}, 100, Phaser.Easing.Linear.None).start()), this.currentLevel = i
	},
	setValue: function(e) {
		this.current = this.target = e, this.setBar()
	},
	addValue: function(e, t, i) {
		return this.target += e, this.target < 0 && (this.target = 0), this.speed = t || 1, this.callback = i, this.target
	},
	getValue: function() {
		return this.current
	},
	getLevel: function() {
		return this.currentLevel
	},
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.current !== this.target ? (this.delay--, this.delay <= 0 && (this.delay = this.speed || 1, this.current < this.target ? this.current++ : this.current > this.target && this.current--, this.setBar())) : Util.isDefined(this.callback) && (this.callback(), this.callback = null)
	}
}), Prodigy.Control.CheckBoxButton = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t), this.originalY = a, this.selected = !1, this.answerData = r, this.x = i, this.y = a, this.callback = n, this.container = this.game.prodigy.create.element(this, 0, 0), this.container.add(this.game.prodigy.create.sprite(0, 0, "icons", Util.isDefined(o) ? "survey/survey-box-icon" : "survey/survey-box-square-icon")), this.checkbox = this.game.prodigy.create.sprite(0, 0, "icons", "survey/survey-check-icon"), this.checkbox.alpha = this.selected ? 1 : 0, this.container.add(this.checkbox), this.answer = this.game.prodigy.create.font(this.container, 70, 0, this.answerData.text, {
		width: s - 70,
		align: "left",
		size: 30
	}), this.collision = this.game.prodigy.create.sprite(0, 0, "core", "empty"), this.collision.width = s, this.collision.height = this.answer.height + 40, this.collision.alpha = .5, this.container.add(this.collision), this.collision.inputEnabled = !0, this.collision.input.useHandCursor = !0, this.collision.events.onInputDown.add(this.onMouseDown, this), this.collision.events.onInputUp.add(this.onMouseUp, this), this.collision.events.onInputOver.add(this.onMouseOver, this), this.collision.events.onInputOut.add(this.onMouseOut, this)
}, Prodigy.extends(Prodigy.Control.CheckBoxButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.CheckBoxButton,
	onMouseDown: function() {
		this.y = this.originalY
	},
	onMouseUp: function() {
		this.setSelected(!this.selected), Util.isDefined(this.callback) && this.callback(this)
	},
	onMouseOver: function() {
		this.y = this.originalY - 2
	},
	onMouseOut: function() {
		this.y = this.originalY
	},
	setSelected: function(e) {
		this.selected = e, this.checkbox.alpha = this.selected ? 1 : 0
	}
}), Prodigy.Framework.Core.GameObject = function(e, t, i, a, s) {
	Phaser.Group.call(this, e, t), this.initialized = !1, this.components = [];
	var r;
	for (r = 0; r < i.length; r++) this.addComponent(i[r], !1);
	for (r = 0; r < i.length; r++) i[r].create();
	this.x = Util.getOptionalParameter(a, 0), this.y = Util.getOptionalParameter(s, 0)
}, Prodigy.extends(Prodigy.Framework.Core.GameObject, Phaser.Group, {
	constructor: Prodigy.Framework.Core.GameObject,
	update: function() {
		for (var e = 0; e < this.components.length; e++) {
			var t = this.components[e];
			Util.isDefined(t.update) && t.update()
		}
	},
	addComponent: function(e, t) {
		e.hasUniqueInstance() && this.hasComponent(e.constructor) || (this.components.push(e), e.gameObject = this, Util.getOptionalParameter(t, !0) && e.create())
	},
	findComponent: function(e) {
		for (var t = null, i = 0; i < this.components.length; i++) {
			var a = this.components[i];
			if (a instanceof e) {
				t = a;
				break
			}
		}
		return t
	},
	hasComponent: function(e) {
		return Util.isDefined(this.findComponent(e))
	},
	removeComponent: function(e) {
		for (var t = 0; t < this.components.length; ++t)
			if (this.components[t] === e) {
				this.components.splice(t, 1);
				break
			}
	},
	destroy: function() {
		for (var e = 0; e < this.components.length; ++e) Util.isNullOrUndefined(this.components[e].destroy) || this.components[e].destroy();
		Phaser.Group.prototype.destroy.call(this)
	}
}), Prodigy.Framework.Core.Component = function() {
	this.gameObject = null
}, Prodigy.Framework.Core.Component.prototype = {
	constructor: Prodigy.Framework.Core.Component,
	create: function() {},
	update: null,
	destroy: null,
	hasUniqueInstance: function() {
		return !1
	}
}, Prodigy.Framework.Core.Renderer = function(e, t) {
	Prodigy.Framework.Core.Component.call(this), this.source = e, this.metadata = t, this.resetAfterDrag = !1, this.onLoaded = new Phaser.Signal
}, Prodigy.extends(Prodigy.Framework.Core.Renderer, Prodigy.Framework.Core.Component, {
	constructor: Prodigy.Framework.Core.Renderer,
	create: function() {
		Prodigy.Framework.Core.Component.prototype.create.call(this)
	},
	setAnchor: function() {},
	setScale: function() {},
	getScale: function() {
		return new Phaser.Point(1, 1)
	},
	setAlpha: function() {},
	getWorld: function() {
		return new Phaser.Point
	},
	getWidth: function() {
		return 0
	},
	getHeight: function() {
		return 0
	},
	getEvents: function() {},
	setInputEnabled: function() {},
	enableDragging: function() {},
	disableDragging: function() {},
	getBounds: function() {
		return new Phaser.Rectangle(0, 0, 0, 0)
	},
	resetToOrigin: function() {},
	hasAnimations: function() {
		return !1
	},
	getAnimationLength: function() {
		return 0
	},
	playAnimation: function() {},
	setAsset: function() {},
	getInputHandler: function() {
		return null
	},
	hasUniqueInstance: function() {
		return !0
	}
}), Prodigy.Framework.Core.Renderer.createRenderer = function(e, t) {
	switch (t.type) {
		case "spine":
			return new Prodigy.Framework.Core.SpineRenderer(e, t);
		case "singleImage":
			return new Prodigy.Framework.Core.SpriteRenderer(e, t);
		case "spritesheet":
			return new Prodigy.Framework.Core.SpritesheetRenderer(e, t);
		default:
			return new Prodigy.Framework.Core.SpriteRenderer(e, t)
	}
}, Prodigy.Framework.Core.Renderer.createRendererWithItem = function(e, t, i) {
	var a = null;
	return a = Util.isDefined(i.type) ? e + "-" + t : "icon-" + e + "-" + t, Prodigy.Framework.Core.Renderer.createRenderer(a, i)
}, Prodigy.Framework.Core.SpriteRenderer = function(e, t) {
	Prodigy.Framework.Core.Renderer.call(this, e, t)
}, Prodigy.extends(Prodigy.Framework.Core.SpriteRenderer, Prodigy.Framework.Core.Renderer, {
	constructor: Prodigy.Framework.Core.SpriteRenderer,
	create: function() {
		Prodigy.Framework.Core.Renderer.prototype.create.call(this), this.sprite = this.gameObject.add(this.gameObject.game.add.sprite(0, 0, "", "")), this.updateSource()
	},
	postLoad: function(e, t) {
		t && this.sprite.alive && (this.updateSpriteSource(), this.onLoaded.dispatch())
	},
	setAnchor: function(e, t) {
		this.sprite.anchor.set(e, t)
	},
	setScale: function(e, t) {
		this.sprite.scale.set(e, t)
	},
	getScale: function() {
		return this.sprite.scale
	},
	getWorld: function() {
		return this.sprite.world
	},
	getWidth: function() {
		return this.sprite.width
	},
	getHeight: function() {
		return this.sprite.height
	},
	setAlpha: function(e) {
		this.sprite.alpha = e
	},
	draggingStopped: function() {
		this.resetAfterDrag && (this.gameObject.x += this.sprite.x, this.gameObject.y += this.sprite.y, this.sprite.x = 0, this.sprite.y = 0)
	},
	getEvents: function() {
		return this.sprite.events
	},
	setInputEnabled: function(e) {
		Util.isDefined(this.sprite) && (this.sprite.inputEnabled = !0, Util.getOptionalParameter(e, !0) ? this.sprite.events.onDragStop.add(this.draggingStopped, this, -99) : this.sprite.events.onDragStop.remove(this.draggingStopped, this))
	},
	enableDragging: function(e, t, i, a) {
		this.sprite.inputEnabled && (this.sprite.input.enableDrag(e, t), void 0 !== i && void 0 !== a && this.sprite.input.enableSnap(i, a))
	},
	disableDragging: function() {
		this.sprite.inputEnabled && this.sprite.input.disableDrag()
	},
	getBounds: function() {
		return this.sprite.getBounds()
	},
	resetToOrigin: function() {
		this.sprite.x = 0, this.sprite.y = 0
	},
	setAsset: function(e, t) {
		"singleImage" === t.type && (this.source = e, this.metadata = t, this.updateSource())
	},
	updateSource: function() {
		this.gameObject.game.cache.checkImageKey(this.source) ? (this.updateSpriteSource(), this.onLoaded.dispatch()) : this.gameObject.game.prodigy.load.assets([this.source], this.postLoad.bind(this))
	},
	updateSpriteSource: function() {
		this.sprite.loadTexture(this.source)
	},
	getInputHandler: function() {
		return Util.isDefined(this.sprite) ? this.sprite.input : null
	}
}), Prodigy.Framework.Core.SpritesheetRenderer = function(e, t) {
	Prodigy.Framework.Core.SpriteRenderer.call(this, e, t)
}, Prodigy.extends(Prodigy.Framework.Core.SpritesheetRenderer, Prodigy.Framework.Core.SpriteRenderer, {
	constructor: Prodigy.Framework.Core.SpritesheetRenderer,
	setAsset: function(e, t) {
		if ("spritesheet" === t.type) {
			this.source = e, this.metadata = t, this.sprite.animations.stop();
			for (var i = 0; i < this.sprite.animations._anims.length; ++i) this.sprite.animations._anims[i].destroy();
			this.sprite.animations._anims = {}, this.updateSource()
		}
	},
	updateSpriteSource: function() {
		if (Prodigy.Framework.Core.SpriteRenderer.prototype.updateSpriteSource.call(this), this.hasAnimations())
			for (var e = Object.keys(this.metadata.animations), t = 0; t < e.length; ++t) this.sprite.animations.add(e[t], this.metadata.animations[e[t]].frames, this.metadata.animations[e[t]].frameRate, this.metadata.animations[e[t]].loop)
	},
	hasAnimations: function() {
		return Util.isDefined(this.metadata.animations)
	},
	getAnimationLength: function(e) {
		var t = this.metadata.animations[e];
		return Util.isDefined(t) ? t.frames.length : 0
	},
	playAnimation: function(e, t, i) {
		Util.isDefined(this.metadata.animations[e]) && (null !== this.sprite.animations.getAnimation(e) ? (this.sprite.animations.play(e, this.metadata.animations[e].frameRate, Util.getOptionalParameter(t, !1)), this.sprite.animations.currentAnim.setFrame(Math.floor(Util.getOptionalParameter(i, 0)), !0)) : this.onLoaded.addOnce(this.playAnimation, this, -GameConstants.MAX_SAFE_INTEGER, e, t, i))
	}
}), Prodigy.Framework.Core.SpineRenderer = function(e, t) {
	Prodigy.Framework.Core.Renderer.call(this, e, t), this.spine = null, this.anchor = new Phaser.Point(0, 0), this.spineAnchor = Util.isNullOrUndefined(this.metadata.anchor) ? new Phaser.Point(.5, 0) : new Phaser.Point(Util.getOptionalParameter(this.metadata.anchor.x, .5), Util.getOptionalParameter(this.metadata.anchor.y, 0)), this.inputSprite = null
}, Prodigy.extends(Prodigy.Framework.Core.SpineRenderer, Prodigy.Framework.Core.Renderer, {
	constructor: Prodigy.Framework.Core.SpineRenderer,
	create: function() {
		Prodigy.Framework.Core.Renderer.prototype.create.call(this), this.updateSource()
	},
	postLoad: function(e, t) {
		t && (this.updateSpineSource(), this.onLoaded.dispatch())
	},
	updateSource: function() {
		Util.isNullOrUndefined(this.source) || (this.gameObject.game.cache.checkJSONKey(this.source) && this.gameObject.game.cache.checkImageKey(this.source + ".png") && this.gameObject.game.cache.checkTextKey(this.source + "Atlas") ? (this.updateSpineSource(), this.onLoaded.dispatch()) : this.gameObject.game.prodigy.load.assets([this.source], this.postLoad.bind(this)))
	},
	updateSpineSource: function() {
		if (Util.isNullOrUndefined(this.spine) && !Util.isNullOrUndefined(this.gameObject.game)) {
			this.spine = this.gameObject.game.add.spine(0, 0, this.source, void 0, this.gameObject);
			var e = this.spine.skeleton.findSlot("input_hitbox");
			Util.isNullOrUndefined(e) || (this.inputSprite = e.currentSprite, this.inputSprite.alpha = 0), this.resetToOrigin()
		}
	},
	setAsset: function(e, t) {
		"spine" === t.type && (this.source = e, this.metadata = t, this.spine.destroy(), this.spine = null, this.updateSource())
	},
	setAnchor: function(e, t) {
		var i = this.getAnchorOffset(),
			a = this.getSpineAnchorOffset();
		this.anchor.x = e, this.anchor.y = t, Util.isNullOrUndefined(this.spine) || this.setPosition(this.spine.x + i.x - a.x, this.spine.y + i.y - a.y)
	},
	setScale: function(e, t) {
		if (Util.isNullOrUndefined(this.spine)) this.onLoaded.addOnce(this.setScale, this, 0, e, t);
		else {
			var i = this.getAnchorOffset(),
				a = this.getSpineAnchorOffset();
			this.spine.scale.x = e, this.spine.scale.y = t, Util.isNullOrUndefined(this.spine) || this.setPosition(this.spine.x + i.x - a.x, this.spine.y + i.y - a.y)
		}
	},
	getScale: function() {
		return Util.isNullOrUndefined(this.spine) ? Prodigy.Framework.Core.Renderer.prototype.getScale.call(this) : this.spine.scale
	},
	setAlpha: function(e) {
		if (Util.isNullOrUndefined(this.spine)) this.onLoaded.addOnce(this.setAlpha, this, 0, e);
		else
			for (var t = 0; t < this.spine.skeleton.slots.length; ++t) {
				var i = this.spine.skeleton.slots[t].currentSprite;
				Util.isNullOrUndefined(i) || i === this.inputSprite || (i.alpha = e)
			}
	},
	getWorld: function() {
		var e = new Phaser.Point(this.gameObject.worldPosition.x, this.gameObject.worldPosition.y);
		if (!Util.isNullOrUndefined(this.spine)) {
			var t = this.getSpineAnchorOffset(),
				i = this.getAnchorOffset();
			e.x += this.spine.x - t.x + i.x, e.y += this.spine.y - t.y + i.y
		}
		return Util.isNullOrUndefined(this.inputSprite) || (e.x += this.inputSprite.x, e.y += this.inputSprite.y), e
	},
	getWidth: function() {
		return Util.isNullOrUndefined(this.spine) ? 0 : this.spine.width
	},
	getHeight: function() {
		return Util.isNullOrUndefined(this.spine) ? 0 : this.spine.height
	},
	getEvents: function() {
		return Util.isNullOrUndefined(this.inputSprite) ? null : this.inputSprite.events
	},
	setInputEnabled: function(e) {
		Util.isNullOrUndefined(this.spine) ? this.onLoaded.addOnce(this.setInputEnabled, this, 0, e) : Util.isNullOrUndefined(this.inputSprite) ? Util.log("This spine renderer does not have an input_hitbox bone") : (this.inputSprite.inputEnabled = Util.getOptionalParameter(e, !0), Util.getOptionalParameter(e, !0) ? (this.inputSprite.events.onDragUpdate.add(this.draggingUpdated, this), this.inputSprite.events.onDragStop.add(this.draggingStopped, this, -99)) : (this.inputSprite.events.onDragUpdate.remove(this.draggingUpdated, this), this.inputSprite.events.onDragStop.remove(this.draggingStopped, this)))
	},
	getInputHandler: function() {
		return Util.isNullOrUndefined(this.inputSprite) ? null : this.inputSprite.input
	},
	setPosition: function(e, t) {
		if (Util.isNullOrUndefined(this.spine)) this.onLoaded.addOnce(this.setPosition, this, 0, e, t);
		else {
			var i = this.getAnchorOffset(),
				a = this.getSpineAnchorOffset();
			this.spine.x = e - i.x + a.x, this.spine.y = t - i.y + a.y
		}
	},
	getAnchorOffset: function() {
		return Util.isNullOrUndefined(this.spine) ? new Phaser.Point : new Phaser.Point(this.spine.skeletonData.width * this.anchor.x, this.spine.skeletonData.height * this.anchor.y)
	},
	getSpineAnchorOffset: function() {
		return Util.isNullOrUndefined(this.spine) ? new Phaser.Point : new Phaser.Point(this.spine.skeletonData.width * this.spineAnchor.x, this.spine.skeletonData.height * this.spineAnchor.y)
	},
	resetToOrigin: function() {
		this.setPosition(0, 0)
	},
	enableDragging: function(e, t, i, a) {
		Util.isNullOrUndefined(this.inputSprite) ? Util.log("Tried to enable dragging on a spine renderer without input_hitbox slot") : this.inputSprite.inputEnabled && (this.inputSprite.input.enableDrag(e, t), void 0 !== i && void 0 !== a && this.inputSprite.input.enableSnap(i, a))
	},
	disableDragging: function() {
		Util.isNullOrUndefined(this.inputSprite) ? Util.log("Tried to disable dragging on a spine renderer without input_hitbox slot") : this.inputSprite.inputEnabled && this.inputSprite.input.disableDrag()
	},
	getBounds: function() {
		var e = this.getSpineAnchorOffset();
		return new Phaser.Rectangle(this.gameObject.x + this.spine.x - e.x, this.gameObject.y + this.spine.y - e.y, this.gameObject.width, this.gameObject.height)
	},
	draggingUpdated: function() {
		var e = {
			x: this.inputSprite.x,
			y: this.inputSprite.y
		};
		this.inputSprite.position.setTo(0, 0), this.setPosition(e.x, e.y)
	},
	draggingStopped: function() {
		if (this.resetAfterDrag) {
			var e = this.getSpineAnchorOffset(),
				t = this.getAnchorOffset();
			this.gameObject.x += Math.floor(this.spine.x - e.x + t.x), this.gameObject.y += Math.floor(this.spine.y - e.y + t.y), this.setPosition(0, 0)
		}
	},
	hasAnimations: function() {
		return Util.getOptionalParameter(this.metadata.animated, !1)
	},
	getAnimationLength: function(e) {
		if (Util.isDefined(this.spine)) {
			var t = this.spine.skeletonData.findAnimation(e);
			if (null !== t) return t.duration
		}
		return 0
	},
	playAnimation: function(e, t, i) {
		Util.isNullOrUndefined(this.spine) ? this.onLoaded.addOnce(this.playAnimation, this, -GameConstants.MAX_SAFE_INTEGER, e, t, i) : (this.spine.setAnimationByName(0, e, Util.getOptionalParameter(t, !1)), this.spine.setToSetupPose(), this.spine.state.tracks[0].time = Util.getOptionalParameter(i, 0))
	},
	setSkinByName: function(e) {
		Util.isNullOrUndefined(this.spine) ? this.onLoaded.addOnce(this.setSkinByName, this, 0, e) : this.spine.setSkinByName(e)
	}
}), Prodigy.Framework.Core.ParticleEmitter = function(e, t, i) {
	Prodigy.Framework.Core.Component.call(this), this.emitter = null, this.particleEffectData = e, this.particleAsset = Items.getItem("particleEffect", e.ID), this.renderer = null, this.particleStorm = t, this.timeFactory = i, this.burstTimer = null, this.burstEvent = null, this.sortTargets = []
}, Prodigy.extends(Prodigy.Framework.Core.ParticleEmitter, Prodigy.Framework.Core.Component, {
	create: function() {
		Prodigy.Framework.Core.Component.prototype.create.call(this), this.renderer = this.gameObject.findComponent(Prodigy.Framework.Core.Renderer), this.emitter = this.particleStorm.createEmitter(Phaser.ParticleStorm.SPRITE_BATCH, this.particleAsset.data.force), this.emitter.addToWorld(null === this.gameObject.parent ? void 0 : this.gameObject.parent), Util.isNullOrUndefined(this.particleStorm.getData(String(this.particleEffectData.ID))) && this.particleStorm.addData(String(this.particleEffectData.ID), this.particleAsset.data.particle), Object.defineProperty(this.emitter.renderer.display, "y", {
			get: this.getEmitterY.bind(this)
		}), Util.getOptionalParameter(this.particleEffectData.autoStart, !0) && this.emitParticles();
		var e = this.particleAsset.data.emitter;
		!Util.isNullOrUndefined(e.burstFrequency) && e.repeat > -1 && this.setupBursts()
	},
	setupBursts: function() {
		var e = this.particleAsset.data.emitter,
			t = this.getBurstDelay();
		this.burstTimer = this.timeFactory.create(!0), this.burstEvent = -1 === Util.getOptionalParameter(e.burstRepeat, -1) ? this.burstTimer.loop(t, this.emitBurst, this) : this.burstTimer.repeat(t, e.burstRepeat, this.emitBurst, this), this.burstTimer.start()
	},
	createEmitterConfig: function(e, t) {
		var i = JSON.parse(JSON.stringify(e));
		return Util.isNullOrUndefined(t) || (i.zone = this.createParticleZone(t)), i
	},
	createParticleZone: function(e) {
		return "LINE_ZONE" === e.type ? this.game.particleStorm.createLineZone(e.x1, e.y1, e.x2, e.y2) : null
	},
	update: function() {
		var e = this.emitter.timer.events[0];
		if (!Util.isNullOrUndefined(e)) {
			var t = this.getEmitterPosition();
			e.args[1] = t.x, e.args[2] = t.y, this.emitter.emitterScale = this.renderer.getScale()
		}
	},
	destroy: function() {
		Util.isNullOrUndefined(this.burstTimer) || this.burstTimer.destroy(), this.emitter.paused = !0, this.emitter.parent.removeEmitter(this.emitter), this.emitter.destroy()
	},
	getEmitterPosition: function() {
		var e = this.renderer.getScale();
		return {
			x: this.gameObject.x + this.particleEffectData.x * e.x,
			y: this.gameObject.y + this.particleEffectData.y * e.y
		}
	},
	emitBurst: function() {
		var e = this.particleAsset.data.emitter;
		"number" != typeof e.burstTimer && (this.burstEvent.delay = this.getBurstDelay()), this.emitParticles()
	},
	emitParticles: function() {
		var e = this.getEmitterPosition();
		this.emitter.emit(String(this.particleEffectData.ID), e.x, e.y, this.createEmitterConfig(this.particleAsset.data.emitter, this.particleEffectData.zone))
	},
	getBurstDelay: function() {
		var e = this.particleAsset.data.emitter.burstFrequency;
		return "number" == typeof e ? e : Prodigy.Random.realInRange(e.min, e.max)
	},
	getEmitterY: function() {
		if (Util.getOptionalParameter(this.particleEffectData.inFront, !0)) {
			if (this.sortTargets.length > 0) {
				for (var e = this.sortTargets[0].y, t = 1; t < this.sortTargets.length; ++t) this.sortTargets[t].y > e && (e = this.sortTargets[t].y);
				return e + 1
			}
			return GameConstants.MAX_SAFE_INTEGER
		}
		if (this.sortTargets.length > 0) {
			for (var i = this.sortTargets[0].y, t = 1; t < this.sortTargets.length; ++t) this.sortTargets[t].y < i && (i = this.sortTargets[t].y);
			return i - 1
		}
		return -GameConstants.MAX_SAFE_INTEGER
	}
}), Prodigy.Framework.Behaviour.Follow = function(e, t) {
	Prodigy.Framework.Core.Component.call(this), this.player = e, this.stepsBehind = t, this.isIdling = !1, this.coords = [], this.renderer = null
}, Prodigy.extends(Prodigy.Framework.Behaviour.Follow, Prodigy.Framework.Core.Component, {
	constructor: Prodigy.Framework.Behaviour.Follow,
	create: function() {
		this.renderer = this.gameObject.findComponent(Prodigy.Framework.Core.Renderer), this.renderer.setAnchor(.5, 0)
	},
	update: function() {
		var e = this.coords[this.coords.length - 1],
			t = Math.round(this.player.x),
			i = Math.round(this.player.y);
		if ((0 === this.coords.length || e.x !== this.player.x || e.y !== this.player.y) && this.coords.push({
				x: t,
				y: i
			}), this.coords.length > this.stepsBehind) {
			var a = this.coords[0];
			this.gameObject.position.x < a.x ? this.gameObject.scale.x = 1 : this.gameObject.position.x > a.x && (this.gameObject.scale.x = -1), this.isIdling && (this.renderer.playAnimation("walk", !0), this.isIdling = !1), this.gameObject.position.set(a.x, a.y), this.coords.splice(0, 1)
		} else this.isIdling || (this.renderer.playAnimation("idle", !0), this.isIdling = !0)
	}
}), Prodigy.Framework.Debug.DebugValueRegistry = {
	REGISTERED_RENDERERS: {},
	registerDebugValue: function(e, t) {
		this.REGISTERED_RENDERERS[e] = t
	},
	getRegisteredDebugValue: function(e) {
		return Util.isNullOrUndefined(this.REGISTERED_RENDERERS[e]) ? null : this.REGISTERED_RENDERERS[e]
	}
}, Prodigy.Framework.Debug.DebugLayout = function() {
	Prodigy.Framework.Core.Component.call(this), this.debugRenderers = [], this.layout = [];
	var e = Prodigy.Framework.Debug.DebugLayout.LAYOUT_TYPE.VERTICAL;
	Object.defineProperty(this, "selectedLayout", {
		get: function() {
			return e
		},
		set: function(t) {
			t !== e && (e = t, this.refreshLayout())
		}
	})
}, Prodigy.extends(Prodigy.Framework.Debug.DebugLayout, Prodigy.Framework.Core.Component, {
	constructor: Prodigy.Framework.Debug.DebugLayout,
	addRenderer: function(e) {
		this.debugRenderers.push(e), this.gameObject.addComponent(e), this.layoutRenderer(e)
	},
	insertRenderer: function(e, t) {
		t <= this.debugRenderers.length && (this.debugRenderers.splice(t, 0, e), this.gameObject.addComponent(e)), this.refreshLayout()
	},
	removeRenderer: function(e) {
		for (var t = 0; t < this.debugRenderers.length; ++t)
			if (this.debugRenderers[t] === e) {
				this.removeRendererAt(t);
				break
			} this.refreshLayout()
	},
	findRendererByType: function(e) {
		for (var t = 0; t < this.debugRenderers.length; ++t)
			if (this.debugRenderers[t] instanceof e) return this.debugRenderers[t];
		return null
	},
	removeRendererAt: function(e) {
		var t = this.debugRenderers[e];
		t.onRemovedFromLayout(), this.debugRenderers.splice(e, 1), this.gameObject.removeComponent(t)
	},
	refreshLayout: function() {
		this.layout = [];
		for (var e = 0; e < this.debugRenderers.length; ++e) this.layoutRenderer(this.debugRenderers[e])
	},
	layoutRenderer: function(e) {
		this.findPosition(e), this.layout.push(e)
	},
	findPosition: function(e) {
		var t = new Phaser.Rectangle(0, 0, e.requestedWidth, e.requestedHeight);
		if (this.layout.length > 0) {
			var i = this.layout[this.layout.length - 1];
			this.selectedLayout === Prodigy.Framework.Debug.DebugLayout.LAYOUT_TYPE.HORIZONTAL ? (t.x = i.position.x + i.requestedWidth + 1, t.x + e.requestedWidth > this.gameObject.game.width && (t.x = 0)) : (t.y = i.position.y + i.requestedHeight + 1, t.y + e.requestedHeight > this.gameObject.game.height && (t.y = 0))
		}
		for (var a = new Phaser.Rectangle(0, 0, 0, 0), s = 0; s < this.layout.length; ++s) a.setTo(this.layout[s].position.x, this.layout[s].position.y, this.layout[s].requestedWidth, this.layout[s].requestedHeight), a.intersects(t) && (this.selectedLayout === Prodigy.Framework.Debug.DebugLayout.LAYOUT_TYPE.HORIZONTAL ? t.y = a.bottom + 1 : t.x = a.right + 1);
		e.position.setTo(t.x, t.y), e.onLayout()
	}
}), Prodigy.Framework.Debug.DebugLayout.LAYOUT_TYPE = {
	HORIZONTAL: 0,
	VERTICAL: 1
}, Prodigy.Framework.Debug.DebugValueRenderer = function() {
	Prodigy.Framework.Core.Component.call(this), this.requestedHeight = 0, this.requestedWidth = 0, this.position = new Phaser.Point, this.updateRate = 0, this.elapsed = 0, this.createdUI = !1
}, Prodigy.extends(Prodigy.Framework.Debug.DebugValueRenderer, Prodigy.Framework.Core.Component, {
	constructor: Prodigy.Framework.Debug.DebugValueRenderer,
	update: function() {
		this.elapsed += this.gameObject.game.time.elapsed, this.elapsed >= this.updateRate && (this.elapsed = 0, this.updateUI())
	},
	createUI: function() {
		this.createdUI = !0
	},
	cleanUpUI: function() {
		this.createdUI = !1
	},
	updateUI: function() {},
	onLayout: function() {
		this.createdUI || this.createUI(), this.elapsed = this.updateRate
	},
	onRemovedFromLayout: function() {
		this.createdUI && this.cleanUpUI()
	}
}), Prodigy.Framework.Debug.MousePositionDebugRenderer = function() {
	Prodigy.Framework.Debug.DebugValueRenderer.call(this), this.updateRate = 1e3, this.requestedHeight = 30, this.requestedWidth = 300, this.mousePositionText = null
}, Prodigy.extends(Prodigy.Framework.Debug.MousePositionDebugRenderer, Prodigy.Framework.Debug.DebugValueRenderer, {
	constructor: Prodigy.Framework.Debug.MousePositionDebugRenderer,
	createUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.createUI.call(this), this.mousePositionText = this.gameObject.game.add.text(0, 0, "", {
			font: "14pt Arial",
			fill: "#FFFFFF",
			strokeThickness: 4,
			stroke: "#000000"
		})
	},
	cleanUpUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.cleanUpUI.call(this), this.mousePositionText.destroy(), this.mousePositionText = null
	},
	onLayout: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.onLayout.call(this), this.mousePositionText.position.setTo(this.position.x + 10, this.position.y + 5)
	},
	updateUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.updateUI.call(this), this.mousePositionText.setText("Mouse Position: X = " + this.gameObject.game.input.x + " Y = " + this.gameObject.game.input.y)
	}
}), Prodigy.Framework.Debug.DebugValueRegistry.registerDebugValue("MOUSE_POSITION", Prodigy.Framework.Debug.MousePositionDebugRenderer), Prodigy.Framework.Debug.AverageFPSRenderer = function() {
	Prodigy.Framework.Debug.DebugValueRenderer.call(this), this.frameBufferMaxSize = 240, this.elapsedTimeBuffer = [], this.totalElapsedTime = 0, this.averageFPSText = null, this.requestedHeight = 35, this.requestedWidth = 175, this.updateRate = 500
}, Prodigy.extends(Prodigy.Framework.Debug.AverageFPSRenderer, Prodigy.Framework.Debug.DebugValueRenderer, {
	constructor: Prodigy.Framework.Debug.AverageFPSRenderer,
	createUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.createUI.call(this), this.averageFPSText = this.gameObject.game.add.text(0, 0, "", {
			font: "14pt Arial",
			fill: "#FFFFFF",
			strokeThickness: 4,
			stroke: "#000000"
		})
	},
	cleanUpUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.cleanUpUI.call(this), this.averageFPSText.destroy(), this.averageFPSText = null
	},
	onLayout: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.onLayout.call(this), this.averageFPSText.position.setTo(this.position.x + 10, this.position.y + 5)
	},
	update: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.update.call(this);
		var e = this.gameObject.game.time.elapsed;
		if (this.totalElapsedTime += e, this.elapsedTimeBuffer.push(e), this.elapsedTimeBuffer.length > this.frameBufferMaxSize)
			for (var t = this.elapsedTimeBuffer.splice(0, this.elapsedTimeBuffer.length - this.frameBufferMaxSize), i = 0; i < t.length; ++i) this.totalElapsedTime -= t[i]
	},
	updateUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.updateUI.call(this), this.elapsedTimeBuffer.length > 0 ? this.averageFPSText.setText("Average FPS: " + Math.floor(1e3 / (this.totalElapsedTime / this.elapsedTimeBuffer.length))) : this.averageFPSText.setText("Average FPS: --")
	}
}), Prodigy.Framework.Debug.DebugValueRegistry.registerDebugValue("AVERAGE_FPS", Prodigy.Framework.Debug.AverageFPSRenderer), Prodigy.Framework.Debug.MemoryUsageDebugRenderer = function() {
	Prodigy.Framework.Debug.DebugValueRenderer.call(this), this.GRAPH_HEIGHT = 30, this.memoryUsageElement = null, this.textElement = null, this.graphElement = null, this.requestedHeight = 60, this.requestedWidth = 100, this.updateRate = 1e3, this.lastUsedHeap = 0, this.minBarHeight = 100, this.maxBarHeight = 0, this.redrawMBThreshold = this.GRAPH_HEIGHT, this.sizes = ["Bytes", "KB", "MB", "GB", "TB"]
}, Prodigy.extends(Prodigy.Framework.Debug.MemoryUsageDebugRenderer, Prodigy.Framework.Debug.DebugValueRenderer, {
	constructor: Prodigy.Framework.Debug.MemoryUsageDebugRenderer,
	createUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.createUI.call(this);
		var e = document.createElement("div");
		e.id = "stats", e.style.cssText = "width:80px;height:48px;opacity:0.9;cursor:pointer;overflow:hidden;z-index:10000;will-change:transform;", e.style.position = "fixed", e.style.left = "0px", e.style.top = "0px";
		var t = document.createElement("div");
		for (t.id = "ms", t.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#020;", e.appendChild(t), this.textElement = document.createElement("div"), this.textElement.id = "msText", this.textElement.style.cssText = "color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px", this.textElement.innerHTML = "Memory", t.appendChild(this.textElement), this.graphElement = document.createElement("div"), this.graphElement.id = "msGraph", this.graphElement.style.cssText = "position:relative;width:74px;height:" + this.GRAPH_HEIGHT + "px;background-color:#0f0", t.appendChild(this.graphElement); this.graphElement.children.length < 74;) {
			var i = document.createElement("span");
			i.style.cssText = "width:1px;height:" + this.GRAPH_HEIGHT + "px;float:left;background-color:#131", this.graphElement.appendChild(i)
		}
		this.memoryUsageElement = e, document.body.appendChild(e)
	},
	updateGraph: function(e, t, i) {
		var a = e.appendChild(e.firstChild);
		a.style.height = t + "px", Util.isNullOrUndefined(i) || (a.style.backgroundColor = i)
	},
	redrawGraph: function(e, t, i) {
		[].forEach.call(e.children, function(e) {
			var a = e.style.height.substr(0, e.style.height.length - 2),
				s = this.GRAPH_HEIGHT - (this.GRAPH_HEIGHT - a) / t * i;
			e.style.height = s + "px"
		})
	},
	cleanUpUI: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.cleanUpUI.call(this), document.body.removeChild(this.memoryUsageElement), this.memoryUsageElement = null
	},
	onLayout: function() {
		Prodigy.Framework.Debug.DebugValueRenderer.prototype.onLayout.call(this), this.memoryUsageElement.style.left = this.position.x + 15 + "px", this.memoryUsageElement.style.top = this.position.y + 10 + "px"
	},
	updateUI: function() {
		if (Prodigy.Framework.Debug.DebugValueRenderer.prototype.updateUI.call(this), !Util.isNullOrUndefined(window.performance.memory)) {
			var e = window.performance.memory.usedJSHeapSize - this.lastUsedHeap;
			this.lastUsedHeap = window.performance.memory.usedJSHeapSize;
			var t = 0 > e ? "#830" : "#131",
				i = this.lastUsedHeap;
			this.minBarHeight = Math.min(this.minBarHeight, i), this.maxBarHeight = Math.max(this.maxBarHeight, i), this.textElement.textContent = "Mem: " + this.bytesToSize(i, 2);
			var a = i / 1048576;
			if (a > this.redrawMBThreshold) {
				var s = (a - a % this.GRAPH_HEIGHT) / this.GRAPH_HEIGHT,
					r = this.GRAPH_HEIGHT * (s + 1);
				this.redrawGraph(this.graphElement, this.GRAPH_HEIGHT / this.redrawMBThreshold, this.GRAPH_HEIGHT / r), this.redrawMBThreshold = r
			}
			this.updateGraph(this.graphElement, this.GRAPH_HEIGHT - a * (this.GRAPH_HEIGHT / this.redrawMBThreshold), t)
		}
	},
	bytesToSize: function(e, t) {
		if (0 === e) return "N/A";
		t = Util.getOptionalParameter(t, 0);
		var i = Math.pow(10, t),
			a = Math.floor(Math.log(e) / Math.log(1024));
		return Math.round(e * i / Math.pow(1024, a)) / i + " " + this.sizes[a]
	},
	destroy: function() {
		this.cleanUpUI()
	}
}), Prodigy.Framework.Debug.DebugValueRegistry.registerDebugValue("MEMORY_USAGE", Prodigy.Framework.Debug.MemoryUsageDebugRenderer), Prodigy.Framework.Localization.LocaleController = function(e, t) {
	this.fallbackLanguageData = {}, this.languageData = {}, this.debug = e || !1, this.debugString = "*", this.verbose = t || !1
}, Prodigy.Framework.Localization.LocaleController.prototype = {
	constructor: Prodigy.Framework.Localization.LocaleController,
	setFallbackLanguage: function(e) {
		this.fallbackLanguageData = e
	},
	setLanguage: function(e) {
		this.languageData = e
	},
	getString: function(e) {
		var t = null;
		if (e in this.languageData ? t = this.languageData[e] : e in this.fallbackLanguageData && (Util.log("Localization: " + e + " was not found in the current language. Falling back to the default.", Util.DEV), t = this.fallbackLanguageData[e]), Util.isDefined(t)) {
			var i = t;
			return arguments.length > 1 && (i = this.formatString.apply(this, [i].concat(Array.prototype.slice.call(arguments, 1)))), this.debug && (i = i.replace(/([a-zA-Z0-9])/g, this.debugString)), this.verbose && Util.log("Localization: " + e + " (" + i + ")"), i
		}
		return Util.log("Localization: " + e + " was not found!", Util.DEV), e
	},
	formatString: function(e) {
		var t = e;
		if (arguments.length > 1)
			for (var i = 1; i < arguments.length; ++i) t = t.split("{" + (i - 1) + "}").join(arguments[i]);
		return t
	},
	setDebug: function(e, t) {
		this.debug = e, Util.isDefined(t) && (this.debugString = t)
	},
	setVerbose: function(e) {
		this.verbose = e
	},
	localizedValue: function(e) {
		return new Prodigy.Framework.Localization.LocalizedValue(this, e)
	}
}, Prodigy.Framework.Localization.LocaleController.DATA = {
	SYSTEM_BUTTON_SMALL_SCREEN: "Small Screen",
	SYSTEM_BUTTON_MEDIUM_SCREEN: "Medium Screen",
	SYSTEM_BUTTON_LARGE_SCREEN: "Large Screen",
	SYSTEM_BUTTON_SAVE_CHARACTER: "Save Character",
	SYSTEM_BUTTON_GET_MEMBER: "Toggle Member",
	SYSTEM_BUTTON_GET_EPICS: "Get All Epics!",
	SETTINGS_TITLE: "OPTIONS",
	SETTINGS_SOUND: "Sound",
	SETTINGS_NETWORK: "Network",
	SETTINGS_GRAPHICS: "Graphics",
	SETTINGS_OTHER: "Other",
	SETTINGS_PARENT: "Parent",
	SETTINGS_ACCOUNT: "Account",
	SETTINGS_SOUND_VOLUME: "Sound Volume",
	SETTINGS_MUSIC_VOLUME: "Music Volume",
	SETTINGS_VOICE_VOLUME: "Voice Volume",
	SETTINGS_YOUR_WORLD: "Your world is: {0}",
	SETTINGS_OFFLINE: "You are playing in Offline Mode.",
	SETTINGS_LOGOUT: "Log Out",
	WINTERFEST_TRAVEL_CONFIRM: "Do you want to travel to town and take part in {0}?",
	WINTERFEST_SIGN_MESSAGE: "Every day during Winterfest, one of the Puppet Master's scouts tries to sneak into Lamplight Town, by disguising themselves as a snowman. Find the snowman and defeat the monster inside. If you do, you'll collect a bunch of Magic Snowflakes!",
	WINTERFEST_SIGN_TITLE: "Winterfest Daily Task"
}, Prodigy.Framework.Localization.LocalizedValue = function(e, t) {
	this.localization = e, this.key = t, Object.defineProperty(this, "value", {
		get: function() {
			return this.localization.getString(this.key)
		}
	})
}, Prodigy.Framework.Localization.LocalizedValue.prototype = {
	constructor: Prodigy.Framework.Localization.LocalizedValue,
	getValue: function() {
		this.localization.getString.apply(this, [this.key].concat(arguments))
	}
}, Prodigy.Attack.CatchPet = function(e, t, i, a, s, r, n) {
	Attack.call(this, e, t, i, a, s, 4500, "water", r, n, !1, null)
}, Prodigy.extends(Prodigy.Attack.CatchPet, Attack, {
	constructor: Prodigy.Attack.CatchPet,
	setup: function() {
		Attack.prototype.setup.call(this);
		var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
		this.overLayer.add(e), e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
			x: this.target.x,
			alpha: .75
		}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
			x: this.source.x + 20
		}, 3e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(e).to({
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
			y: this.source.y - 50 - 100
		}, 600, Phaser.Easing.Quadratic.Out).to({
			y: this.source.y
		}, 600, Phaser.Easing.Quadratic.In).to({
			y: this.source.y - 50 - 75
		}, 600, Phaser.Easing.Quadratic.Out).to({
			y: this.source.y
		}, 600, Phaser.Easing.Quadratic.In).to({
			y: this.source.y - 50
		}, 600, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(e.scale).to({
			x: 4,
			y: 4
		}, 1, Phaser.Easing.Quadratic.Out).to({
			x: .25,
			y: .25
		}, 1e3, Phaser.Easing.Quadratic.Out).to({}, 3e3, Phaser.Easing.Linear.None).to({
			x: 0,
			y: 0
		}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
			x: 0,
			y: 0
		}, 1e3, Phaser.Easing.Quadratic.Out).start()
	}
});
var Absorb = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 900, 2600);
			for (var e = this.source.x < this.target.x ? -1 : 1, t = 0; 3 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.overLayer.add(i), i.anchor.setTo(.5, .5), i.alpha = .6, i.scale.x = i.scale.y = 5, this.game.add.tween(i).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).to({}, 900, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
					x: 0,
					y: 0
				}, 500, Phaser.Easing.Linear.None).delay(200 * t).to({}, 400 - 200 * t, Phaser.Easing.Linear.None).to({
					x: 5 + .5 * t,
					y: 5 + .5 * t
				}, 400, Phaser.Easing.Linear.None).start()
			}
			for (var a = 900, t = 0; 10 > t; t++)
				for (var s = Math.PI * Math.random(), r = .75 + .25 * Math.random(), n = Math.floor(200 * Math.cos(s) * r), o = Math.floor(200 * Math.sin(s) * r) * (Math.random() < .5 ? -1 : 1), h = 200 - n * e, l = 1500 - n * e, d = 800 - n * e, c = h + l - d, p = 0; 5 > p; p++) {
					var g = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 0 === p ? "earth-leaf" : "core-circle-small");
					this.overLayer.add(g), g.anchor.setTo(.5, .5), g.scale.x = g.scale.y = Math.pow(.6, p), g.alpha = 0 === p ? 1 : .7;
					var u = Math.max(0, 100 * p);
					n * e >= 0 ? this.game.add.tween(g).to({
						x: this.target.x
					}, 1, Phaser.Easing.Linear.None).delay(u + a).to({
						x: this.source.x
					}, l, Phaser.Easing.Linear.None).start() : this.game.add.tween(g).to({
						x: this.target.x
					}, 1, Phaser.Easing.Linear.None).delay(u + a).to({
						x: this.target.x + n
					}, h, Phaser.Easing.Quadratic.Out).to({
						x: this.source.x
					}, l, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(g).to({
						y: this.target.y
					}, 1, Phaser.Easing.Linear.None).delay(u + a).to({
						y: this.target.y + o
					}, d, Phaser.Easing.Quadratic.Out).to({
						y: this.source.y
					}, c, Phaser.Easing.Quadratic.In).to({
						alpha: 0
					}, 50, Phaser.Easing.Linear.None).start()
				}
		}, e
	}(),
	BatterUp = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2300, "wizard", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			this.underLayer.add(e), e.anchor.setTo(.5, .5), e.alpha = .6, e.scale.x = e.scale.y = 0, this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).to({
				x: 10,
				y: 5
			}, 500, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(t), t.scale.x = t.scale.y = 0, t.alpha = .8, t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-300"
			}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: "+300"
			}, 800, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(i), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1800).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start();
			for (var a = 100, s = (this.target.x - this.source.x) / a, r = (this.target.y - 300 - this.source.y) / a, n = 0; a > n; n++) {
				var o = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", o);
				h.anchor.setTo(.5, .5), h.scale.x = h.scale.y = 0, h.alpha = .8, this.overLayer.add(h);
				var l = Math.floor(1e3 * n / a),
					d = Math.floor(-20 + 40 * Math.random());
				this.game.add.tween(h).to({
					x: Math.floor(this.source.x + n * s),
					y: Math.floor(this.source.y - 50 + n * r + d)
				}, 1, Phaser.Easing.Linear.None).delay(l).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(h.scale).to({
					x: 1,
					y: 1
				}, 500, Phaser.Easing.Linear.None).delay(l).start()
			}
			for (var n = 0; 3 > n; n++) {
				var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(e), e.anchor.setTo(.5, .5), e.alpha = .25, e.scale.x = e.scale.y = 0, this.game.add.tween(e).to({
					x: this.target.x,
					y: this.target.y - 300 - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * n).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * n).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var a = 50, n = 0; a > n; n++) {
				var o = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", o);
				h.anchor.setTo(.5, .5), h.scale.x = h.scale.y = 0, h.alpha = .8, this.overLayer.add(h);
				var c = 200 + Math.floor(200 * Math.random()),
					p = Math.random() * Math.PI * 2,
					s = Math.floor(this.target.x + c * Math.cos(p)),
					r = Math.floor(this.target.y + c * Math.sin(p)),
					g = 300 + Math.floor(300 * Math.random());
				this.game.add.tween(h).to({
					x: Math.floor(this.target.x),
					y: this.target.y - 350
				}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
					x: s,
					y: -350 + r,
					alpha: 0
				}, g, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(h.scale).to({
					x: 1,
					y: 1
				}, g, Phaser.Easing.Linear.None).delay(1e3).start()
			}
		}, e
	}(),
	Blitz = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4300);
			for (var e = this.source.x + (this.target.x - this.source.x) / 2, t = this.source.y - 300, i = 0; 50 > i; i++) {
				var a = Math.floor(3 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 0 === a ? "earth-leaf" : 1 === a ? "earth-mushroom" : "earth-mudball");
				this.overLayer.add(s), s.anchor.setTo(6, 6), s.scale.x = s.scale.y = 0 === a ? 1 : 1 === a ? .75 : .5, s.angle = Math.floor(360 * Math.random());
				var r = 200 + Math.floor(500 * Math.random()),
					n = Math.random() < .5 ? "+" : "-",
					o = 2e3 - Math.floor(2e3 * Math.random()),
					h = this.target.x - 100 + Math.floor(200 * Math.random()),
					l = this.target.y - (25 + Math.floor(25 * Math.random())),
					d = this.target.y + (25 + Math.floor(25 * Math.random()));
				this.game.add.tween(s).to({
					x: e,
					y: t
				}, 1, Phaser.Easing.Linear.None).to({
					angle: n + r
				}, 2e3, Phaser.Easing.Linear.None).to({
					angle: n + r / 2e3 * o
				}, o, Phaser.Easing.Linear.None).to({
					x: this.target.x
				}, 300, Phaser.Easing.Linear.None).to({
					x: h
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(s).to({
					y: t
				}, 1, Phaser.Easing.Linear.None).to({}, 2e3 + o, Phaser.Easing.Linear.None).to({
					y: this.target.y
				}, 300, Phaser.Easing.Linear.None).to({
					y: l
				}, 150, Phaser.Easing.Quadratic.Out).to({
					y: d
				}, 150, Phaser.Easing.Quadratic.In).start(), n = 1 + 3 * Math.random(), this.game.add.tween(s.anchor).to({
					x: n,
					y: n
				}, 2e3, Phaser.Easing.Linear.None).to({}, o, Phaser.Easing.Linear.None).to({
					x: .5,
					y: .5
				}, 300, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Blizzard = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 7e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 5500);
			for (var e = 0; 160 > e; e++) this.addSnow(e, 25 * e, this.source.x < this.target.x)
		}, e.prototype.addSnow = function(e, t, i) {
			var a = e % 10 === 0,
				s = this.game.prodigy.create.sprite(-100, Math.floor(720 * Math.random()), "attacks", a ? "ice-star" : "ice-snow");
			s.x = i ? -s.width : 1280 + s.width, Math.random() < .5 ? this.overLayer.add(s) : this.underLayer.add(s), s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = a ? .2 + .8 * Math.random() : 1;
			var r = i ? 1380 + s.width : -(s.width + 100);
			a ? this.game.add.tween(s).to({
				x: r,
				angle: 500
			}, 1500, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				s.kill()
			}, s) : this.game.add.tween(s).to({
				x: r
			}, 1500, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				s.kill()
			}, s)
		}, e
	}(),
	Bolt = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2500, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2100);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			e.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), e.animations.play("a"), e.anchor.setTo(.5, 1), this.overLayer.add(e);
			var t = this.target.y + 30;
			this.game.add.tween(e).to({
				x: this.target.x,
				y: 0
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: t
			}, 100, Phaser.Easing.Linear.None).to({}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start();
			for (var i = 0; 30 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snow");
				a.anchor.setTo(.5, .5), this.overLayer.add(a);
				var s = Math.floor(100 * Math.random()),
					r = Math.random() < .5 ? -1 : 1;
				this.game.add.tween(a).to({
					x: this.target.x
				}, 1, Phaser.Easing.Linear.None).delay(100 + 60 * i).to({
					x: this.target.x + r * s,
					alpha: 0
				}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(a).to({
					y: t
				}, 1, Phaser.Easing.Linear.None).delay(100 + 60 * i).to({
					y: t - Math.floor(.5 * s)
				}, 250, Phaser.Easing.Quadratic.Out).to({
					y: t
				}, 250, Phaser.Easing.Quadratic.In).start()
			}
		}, e
	}(),
	Charclone = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3e3, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1700);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
			this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 0), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 1), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(e).to({
				height: 600
			}, 500, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start();
			var t = [];
			t.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball")), t.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball")), this.underLayer.add(t[0]), this.overLayer.add(t[1]), t[0].anchor.setTo(2.5, 2.5), t[0].angle = -45, t[1].anchor.setTo(2.5, 2.5), t[1].angle = 135;
			var i = [];
			i.push(this.game.add.tween(t[0])), i.push(this.game.add.tween(t[1])), i.push(this.game.add.tween(t[0]).to({
				y: this.target.y,
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({}, 1500, Phaser.Easing.Linear.None).to({
				y: -200
			}, 1e3, Phaser.Easing.Linear.None)), i.push(this.game.add.tween(t[1]).to({
				y: this.target.y,
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({}, 1500, Phaser.Easing.Linear.None).to({
				y: -200
			}, 1e3, Phaser.Easing.Linear.None));
			for (var a = 400, s = 0; 20 > s; s++) i[0].to({
				angle: -45
			}, 1, Phaser.Easing.Linear.None), i[0].to({
				angle: "+180"
			}, a, Phaser.Easing.Linear.None), i[1].to({
				angle: 135
			}, 1, Phaser.Easing.Linear.None), i[1].to({
				angle: "+180"
			}, a, Phaser.Easing.Linear.None), a > 200 && (a -= 100);
			for (var s = 0; s < i.length; s++) i[s].start()
		}, e
	}(),
	Cloudshot = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2e3, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-shot");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = this.source.x < this.target.x ? .5 : -.5, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	Conjure = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "wizard", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2500);
			var e = ["earth-leaf", "water-bubble", "earth-mushroom", "earth-mudball", "fire-bomb", "ice-snowman-body", "ice-prison"],
				t = Math.floor(Math.random() * e.length);
			Util.isDefined(this.mods) && Util.isDefined(this.mods.seed) && this.mods.seed >= 0 && (t = Math.floor(this.game.seededRandom.frac(this.mods.seed) * e.length)), this.mod = 10 * (-3 + t);
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", e[t]);
			i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = 0, this.overLayer.add(i), this.game.add.tween(i).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				x: this.target.x + 200,
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(i).to({
				y: this.target.y - 350
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y - 50
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: this.target.y - 150
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(i.scale).to({
				x: 1,
				y: 1
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(1e3).start();
			for (var a = 100, s = 0; a > s; s++) {
				var r = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					n = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", r);
				n.anchor.setTo(.5, .5), n.scale.x = n.scale.y = 0, n.alpha = .8, this.overLayer.add(n);
				var o = Math.floor(1500 * s / a),
					h = Math.floor(100 * Math.random()),
					l = Math.random() * Math.PI * 2,
					d = Math.floor(this.target.x + h * Math.cos(l)),
					c = Math.floor(this.target.y + h * Math.sin(l));
				this.game.add.tween(n).to({
					x: d,
					y: c - 350
				}, 1, Phaser.Easing.Linear.None).delay(o).to({
					alpha: 0
				}, 1500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(n.scale).to({
					x: 1.5,
					y: 1.5
				}, 500, Phaser.Easing.Quadratic.Out).delay(o).to({
					x: 0,
					y: 0
				}, 1e3, Phaser.Easing.Quadratic.In).start()
			}
			var p = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			this.underLayer.add(p), p.anchor.setTo(.5, .5), p.alpha = .25, p.scale.x = p.scale.y = 0, this.game.add.tween(p).to({
				x: this.target.x,
				y: this.target.y - 50
			}, 1, Phaser.Easing.Linear.None).delay(2500).to({
				alpha: 0
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(p.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(2500).to({
				x: 10,
				y: 10
			}, 500, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	Dragos = function(e, t, i, a, s, r, n, o, h, l) {
		Attack.call(this, e, t, i, a, s, Util.getOptionalParameter(l, 6e3), "fire", r, n, o, h)
	};
Prodigy.extends(Dragos, Attack, {
	constructor: Dragos,
	setup: function(e, t) {
		Attack.prototype.setup.call(this, Util.getOptionalParameter(e, 5e3)), Util.getOptionalParameter(t, !0) && this.doAttack()
	},
	doAttack: function() {
		this.game.prodigy.effects.shake(0, 5e3, 3, "v"), this.game.prodigy.effects.shake(5e3, 500, 5);
		var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-bomb");
		e.anchor.setTo(.5, 1), e.scale.x = e.scale.y = 5, this.overLayer.add(e), this.game.add.tween(e).to({
			y: 0,
			x: this.target.x
		}, 1, Phaser.Easing.Linear.None).delay(2e3).to({
			y: this.target.y
		}, 3e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 100, Phaser.Easing.Linear.None).start();
		for (var t = 0; 10 > t; t++) {
			var i = this.target.x + 200 - 400 * Math.random(),
				a = this.target.y + 200 - 400 * Math.random(),
				s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .75, this.underLayer.add(s), this.game.add.tween(s).to({
				y: a,
				x: i
			}, 1, Phaser.Easing.Linear.None).delay(500 * t).to({
				alpha: 0
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
				x: 1.4,
				y: .8
			}, 500, Phaser.Easing.Linear.None).delay(500 * t).start();
			var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
			r.anchor.setTo(.5, .5), r.angle = -90, this.game.add.tween(r).to({
				y: a,
				x: i
			}, 1, Phaser.Easing.Linear.None).delay(500 * t).to({
				y: -50
			}, 1500, Phaser.Easing.Quadratic.In).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), a < this.target.y ? this.underLayer.add(r) : this.overLayer.add(r)
		}
		var n = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2");
		this.overLayer.add(n), n.alpha = 0, n.height = 720, n.width = 300, n.anchor.setTo(.5, 1), this.game.add.tween(n).to({
			x: this.target.x,
			y: 720
		}, 1, Phaser.Easing.Linear.None).to({
			alpha: 1,
			width: 500
		}, 5e3, Phaser.Easing.Linear.None).to({
			alpha: 0,
			width: 2e3
		}, 300, Phaser.Easing.Linear.None).start()
	}
});
var EarthSprite = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-spirit-2");
			this.overLayer.add(e), e.anchor.setTo(.5, .5), e.scale.x = this.target.x > this.source.x ? 1 : -1;
			var t = this.target.x > this.source.x ? 1 : -1;
			this.game.add.tween(e).to({
				x: this.target.x - 300 * t
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 300 * t
			}, 2e3, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 400 * t
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e).to({
				y: -100
			}, 1, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y - 200
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({}, 1001, Phaser.Easing.Linear.None).to({
				x: this.target.x + 300 * t
			}, 1e3, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y - 200
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 500, Phaser.Easing.Linear.None).to({
				y: this.target.y - 50
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 250, Phaser.Easing.Quadratic.In).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(i), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3500).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Embers = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4500, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3100);
			for (var e = 0; 5 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", e > 0 ? "fire-ball" : "fire-elemental");
				this.overLayer.add(t), t.anchor.setTo(.5, e > 0 ? .5 : 1), this.game.add.tween(t).to({
					y: this.source.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(300 * e).to({
					y: this.source.y - 200
				}, 500, Phaser.Easing.Quadratic.Out).to({
					y: this.source.y
				}, 500, Phaser.Easing.Quadratic.In).to({
					y: this.source.y - 200
				}, 500, Phaser.Easing.Quadratic.Out).to({
					y: this.source.y
				}, 500, Phaser.Easing.Quadratic.In).start();
				var i = this.game.add.tween(t).to({
					x: this.source.x
				}, 1, Phaser.Easing.Quadratic.Out).delay(300 * e).to({
					x: this.target.x,
					angle: e > 0 ? 2e3 : 0
				}, 2e3, Phaser.Easing.Linear.None);
				e > 0 && i.to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None), 0 === e && (i.to({}, 1100, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None), this.game.add.tween(t.scale).to({
					x: 1.3,
					y: 1.3
				}, 100, Phaser.Easing.Linear.None).delay(2300).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 1.6,
					y: 1.6
				}, 100, Phaser.Easing.Linear.None).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 1.9,
					y: 1.9
				}, 100, Phaser.Easing.Linear.None).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Linear.None).start()), i.start()
			}
		}, e
	}(),
	Fireball = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2e3, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = this.source.x < this.target.x ? 1 : -1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	FireRain = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3500);
			for (var e = 0; 15 > e; e++) {
				var t = this.target.x + 100 - 200 * Math.random(),
					i = this.target.y + 100 - 200 * Math.random(),
					a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
				a.anchor.setTo(.5, .5), a.angle = 90, this.game.add.tween(a).to({
					y: -50,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).to({
					y: i
				}, 600, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).start(), this.game.prodigy.effects.shake(200 * e + 600, 100, 3, "v");
				var s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-cloud");
				this.overLayer.add(s), s.anchor.setTo(.5, .5), this.game.add.tween(s).to({
					y: i,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e + 600).to({
					y: "-200",
					alpha: 0
				}, 300, Phaser.Easing.Quadratic.Out).start(), i < this.target.y ? (this.underLayer.add(a), this.underLayer.add(s)) : (this.overLayer.add(a), this.overLayer.add(s))
			}
		}, e
	}(),
	Fountain = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 6500, "water", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 6e3), this.game.prodigy.effects.shake(0, 1500, 3, "v");
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-whirl");
			this.underLayer.add(e), e.scale.x = e.scale.y = 0, e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				angle: -1e3
			}, 6e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 1.5,
				y: 1.5
			}, 2e3, Phaser.Easing.Linear.None).to({}, 3e3, Phaser.Easing.Linear.None).to({
				x: 0,
				y: 0
			}, 1e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
				x: -1
			}, 500, Phaser.Easing.Linear.None).delay(1e3).to({
				x: 1
			}, 500, Phaser.Easing.Linear.None).to({
				x: -.8
			}, 400, Phaser.Easing.Linear.None).to({
				x: .8
			}, 400, Phaser.Easing.Linear.None).to({
				x: -.6
			}, 300, Phaser.Easing.Linear.None).to({
				x: .6
			}, 300, Phaser.Easing.Linear.None).to({
				x: -.4
			}, 200, Phaser.Easing.Linear.None).to({
				x: .4
			}, 200, Phaser.Easing.Linear.None).to({
				x: -.2
			}, 100, Phaser.Easing.Linear.None).to({
				x: .2
			}, 100, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: 1
			}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
				y: 0
			}, 3e3, Phaser.Easing.Linear.None).delay(1e3).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: 1
			}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: 0
			}, 500, Phaser.Easing.Quadratic.Out).delay(5e3).to({
				y: this.target.y
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(t), t.anchor.setTo(.5, .5), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(6e3).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}();
Geyser = function(e, t, i, a, s, r, n, o, h, l) {
	Attack.call(this, e, t, i, a, s, Util.getOptionalParameter(l, 2e3), "ice", r, n, o, h)
}, Prodigy.extends(Geyser, Attack, {
	constructor: Attack,
	setup: function(e, t) {
		Attack.prototype.setup.call(this, Util.getOptionalParameter(e, 1500)), Util.getOptionalParameter(t, !0) && this.doAttack()
	},
	doAttack: function() {
		this.game.prodigy.effects.shake(0, 1500, 3, "v");
		for (var e = Math.floor(Math.abs(this.target.x - this.source.x) / 80) + 1, t = 1; e > t; t++) {
			ice = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-mud-splash"), ice.anchor.setTo(.5, 1), ice.scale.y = 0, this.overLayer.add(ice);
			var i = this.source.x < this.target.x ? 1 : -1;
			this.game.add.tween(ice).to({
				x: this.source.x + 80 * t * i,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).delay(1500 * t / e).start(), this.game.add.tween(ice.scale).to({
				y: 1
			}, 100, Phaser.Easing.Linear.None).delay(1500 * t / e).to({
				y: 0
			}, 1500, Phaser.Easing.Linear.None).delay(1500 * t / e).start()
		}
		this.game.prodigy.effects.shake(1500, 400, 15);
		var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
		this.overLayer.add(a), a.alpha = .75, a.scale.x = a.scale.y = .5, a.anchor.setTo(.5, 0), this.game.add.tween(a).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 1e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 500, Phaser.Easing.Linear.None).start(), a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(a), a.alpha = .75, a.scale.x = .5, a.anchor.setTo(.5, 1), this.game.add.tween(a).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(a).to({
			height: 600
		}, 251, Phaser.Easing.Linear.None).delay(1500).to({}, 750, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 500, Phaser.Easing.Linear.None).start()
	}
});
var GlacialShield = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3500, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, null, 1500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
			this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 0), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 1), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(e).to({
				height: 600
			}, 500, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start();
			for (var t = Math.PI / 8, i = -Math.PI / 6, a = this.source.x < this.target.x ? 1 : -1, s = 0; 4 > s; s++) {
				var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
				this.overLayer.add(r), r.angle = 15, r.anchor.setTo(.5, .5);
				var n = Math.floor(this.source.x + 250 * a * Math.cos(i + t * s)),
					o = Math.floor(this.source.y + 250 * Math.sin(i + t * s));
				this.game.add.tween(r).to({
					x: n,
					y: -50
				}, 1, Phaser.Easing.Linear.None).delay(300 * s).to({
					y: o
				}, 200, Phaser.Easing.Linear.None).to({}, 2e3 - 300 * s, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 400, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(300 * s + 200, 100, 5, "v")
			}
		}, e
	}(),
	IceCannon = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-blast");
			e.anchor.setTo(.5, .5), e.scale.x = this.source.x < this.target.x ? 1 : -1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			for (var t = Math.floor(Math.abs(this.target.x - this.source.x) / 50) + 1, i = 1; t > i; i++) {
				var a = t - 1 > i ? i % 2 + 1 : 3;
				e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-shard" + a), e.anchor.setTo(.5, 1), e.scale.y = 0, this.overLayer.add(e);
				var s = this.source.x < this.target.x ? 1 : -1;
				this.game.add.tween(e).to({
					x: this.source.x + 50 * i * s,
					y: this.source.y
				}, 1, Phaser.Easing.Linear.None).delay(1500 * i / t).start(), this.game.add.tween(e.scale).to({
					y: 1
				}, 100, Phaser.Easing.Linear.None).delay(1500 * i / t).to({
					y: 0
				}, 1500, Phaser.Easing.Linear.None).delay(1500 * i / t).start()
			}
			var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			r.alpha = .5, r.scale.x = this.source.x < this.target.x ? 1 : -1, r.anchor.setTo(.5, .5), this.overLayer.add(r), this.game.add.tween(r).to({
				x: this.source.x + 5,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 5
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), r.scale.x = 0, r.alpha = .5, r.anchor.setTo(1, .5), this.overLayer.add(r), this.game.add.tween(r).to({
				x: this.source.x + 5 + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 5 + (this.source.x < this.target.x ? -42 : 42)
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 800, Phaser.Easing.Linear.None).start();
			var n = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(n), n.scale.x = n.scale.y = 0, n.alpha = .8, n.anchor.setTo(.5, .8), this.game.add.tween(n).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(n.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1500).start()
		}, e
	}(),
	IcePrison = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 6e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4100);
			for (var e = [], t = 0; 6 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
				this.overLayer.add(i), i.angle = 0, i.anchor.setTo(.5, .75), e.push(i)
			}
			for (var a = 1e3, t = 0; 6 > t; t++) this.game.prodigy.effects.shake(200 * t + a + 100, 100, 5, "v");
			this.game.add.tween(e[5]).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a).to({
				y: this.target.y
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[4].angle = -45, this.game.add.tween(e[4]).to({
				x: this.target.x - 200,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 200).to({
				x: this.target.x - 50,
				y: this.target.y - 40
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 200, Phaser.Easing.Linear.None).to({
				x: this.target.x - 200,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[3].angle = 45, this.game.add.tween(e[3]).to({
				x: this.target.x + 200,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 400).to({
				x: this.target.x + 50,
				y: this.target.y - 40
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 400, Phaser.Easing.Linear.None).to({
				x: this.target.x + 200,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[2].angle = -20, this.game.add.tween(e[2]).to({
				x: this.target.x - 100,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 600).to({
				x: this.target.x - 25,
				y: this.target.y - 100
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 600, Phaser.Easing.Linear.None).to({
				x: this.target.x - 100,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[1].angle = 20, this.game.add.tween(e[1]).to({
				x: this.target.x + 100,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 800).to({
				x: this.target.x + 25,
				y: this.target.y - 100
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 800, Phaser.Easing.Linear.None).to({
				x: this.target.x + 100,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(e[0]).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 1e3).to({
				y: this.target.y - 150
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start();
			for (var t = 0; 50 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-blast");
				this.overLayer.add(i), i.anchor.setTo(.5, .5), i.angle = this.source.x < this.target.x ? 45 : 135;
				var s = this.source.x < this.target.x ? -500 + Math.floor(500 * Math.random()) : 500 - Math.floor(500 * Math.random()),
					r = s + (this.source.x < this.target.x ? 400 : -400);
				this.game.add.tween(i).to({
					x: this.target.x + s,
					y: -50
				}, 1, Phaser.Easing.Linear.None).delay(50 * t).to({
					x: this.target.x + r,
					y: 800
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	IceToMeetYou = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4100);
			for (var e = this.target.x < this.source.x ? -1 : 1, t = this.source.x + (this.target.x - this.source.x) / 2, i = this.source.y - 100, a = 0; 6 > a; a++) {
				var s = 100 + 65 * a,
					r = t + e * Math.floor(s * Math.cos(-Math.PI / 4)),
					n = i + Math.floor(s * Math.sin(-Math.PI / 4)),
					o = t + e * Math.floor(s * Math.cos(0)),
					h = i + Math.floor(s * Math.sin(0));
				l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 5 > a ? "ice-blast" : "ice-prison"), l.anchor.setTo(.5, .5), l.scale.x = l.scale.y = .5, l.alpha = 0, l.angle = 5 > a ? 90 : 0, this.overLayer.add(l), this.game.add.tween(l).to({
					x: t,
					y: i
				}, 1, Phaser.Easing.Linear.None).delay(500).to({
					x: r,
					y: n,
					alpha: 1
				}, 500, Phaser.Easing.Linear.None).to({}, 500 + 50 * a, Phaser.Easing.Linear.None).to({
					x: o,
					y: h
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: r,
					y: n
				}, 300, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: o,
					y: h
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: r,
					y: n
				}, 300, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: o,
					y: h
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).start()
			}
			var l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
			l.anchor.setTo(.5, .5), l.alpha = 0, this.overLayer.add(l);
			for (var d = this.game.add.tween(l).to({
					x: t,
					y: i
				}, 1, Phaser.Easing.Linear.None).to({
					alpha: 1
				}, 500, Phaser.Easing.Linear.None), a = 0; 6 > a; a++) d.to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.In).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.In);
			d.start(), l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-elemental"), l.anchor.setTo(.5, .5), l.alpha = 0, l.scale.y = 1.5, l.scale.x = 1.5 * e, this.overLayer.add(l);
			for (var c = this.game.add.tween(l).to({
					x: t,
					y: i - 100
				}, 1, Phaser.Easing.Linear.None).delay(250).to({
					alpha: 1
				}, 500, Phaser.Easing.Linear.None), a = 0; 6 > a; a++) c.to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.In).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.In);
			c.start();
			var p = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(p), p.scale.x = p.scale.y = 0, p.alpha = .8, p.anchor.setTo(.5, .8), this.game.add.tween(p).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1900).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).to({
				alpha: .8
			}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).to({
				alpha: .8
			}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(p.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1900).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(1900, 100, 5, "v"), this.game.prodigy.effects.shake(3e3, 100, 5, "v"), this.game.prodigy.effects.shake(4100, 100, 5, "v")
		}, e
	}(),
	LeafWind = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 7e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4500);
			for (var e = 0; 100 > e; e++) this.createLeaf(e, 25 * e, this.source.x < this.target.x)
		}, e.prototype.createLeaf = function(e, t, i) {
			var a = this.game.prodigy.create.sprite(i ? -100 : 1380, Math.floor(720 * Math.random()), "attacks", "earth-leaf");
			Math.random() < .5 ? this.overLayer.add(a) : this.underLayer.add(a), a.anchor.setTo(Math.random(), Math.random()), this.game.add.tween(a).to({
				x: i ? 1380 : -100,
				angle: 1e3
			}, 2e3, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				a.kill()
			}, a)
		}, e
	}(),
	MagiShot = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2e3, "wizard", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			for (var e = 100, t = (this.target.x - this.source.x) / e, i = 0; e > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .8, this.overLayer.add(s);
				var r = Math.floor(1e3 * i / e),
					n = Math.floor(-20 + 40 * Math.random());
				this.game.add.tween(s).to({
					x: Math.floor(this.source.x + i * t),
					y: this.source.y - 50 + n
				}, 1, Phaser.Easing.Linear.None).delay(r).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
					x: 1,
					y: 1
				}, 500, Phaser.Easing.Linear.None).delay(r).start()
			}
			for (var i = 0; 3 > i; i++) {
				var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(o), o.anchor.setTo(.5, .5), o.alpha = .25, o.scale.x = o.scale.y = 0, this.game.add.tween(o).to({
					x: this.target.x,
					y: this.target.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * i).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(o.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * i).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var e = 50, i = 0; e > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.alpha = .8, this.overLayer.add(s);
				var h = 200 + Math.floor(200 * Math.random()),
					l = Math.random() * Math.PI * 2,
					t = Math.floor(this.target.x + h * Math.cos(l)),
					n = Math.floor(this.target.y + h * Math.sin(l)),
					d = 300 + Math.floor(300 * Math.random());
				this.game.add.tween(s).to({
					x: Math.floor(this.target.x),
					y: this.target.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
					x: t,
					y: -50 + n,
					alpha: 0
				}, d, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
					x: 1,
					y: 1
				}, d, Phaser.Easing.Linear.None).delay(1e3).start()
			}
		}, e
	}(),
	Mudball = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-mudball");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = .5, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	Powerbeam = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "wizard", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4100);
			for (var e = this.target.x < this.source.x, t = 100, i = 0; t > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .8, this.overLayer.add(s);
				var r = 200 + Math.floor(200 * Math.random()),
					n = Math.random() * Math.PI * 2,
					o = Math.floor(this.source.x + r * Math.cos(n)),
					h = Math.floor(this.source.y + r * Math.sin(n)),
					l = Math.floor(1e3 * i / t);
				this.game.add.tween(s).to({
					x: o,
					y: h - 50
				}, 1, Phaser.Easing.Linear.None).delay(l).to({
					x: this.source.x,
					y: this.source.y - 50
				}, 1e3, Phaser.Easing.Cubic.In).start(), this.game.add.tween(s.scale).to({
					x: 1.5,
					y: 1.5
				}, 400, Phaser.Easing.Quadratic.Out).delay(l).to({
					x: 0,
					y: 0
				}, 600, Phaser.Easing.Quadratic.In).start()
			}
			for (var i = 0; 3 > i; i++) {
				var d = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.overLayer.add(d), d.anchor.setTo(.5, .5), d.alpha = .6, d.scale.x = d.scale.y = 0, this.game.add.tween(d).to({
					x: this.source.x,
					y: this.source.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 200 * i).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(d.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 200 * i).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			var c = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2");
			this.overLayer.add(c), c.alpha = .5, c.anchor.setTo(.5, 1), c.angle = 90, c.height = c.width = 0, this.game.add.tween(c).to({
				x: 0,
				y: this.source.y - 50
			}, 1, Phaser.Easing.Linear.None).delay(2e3).start(), this.game.add.tween(c).to({
				height: 1280,
				width: 300
			}, 100, Phaser.Easing.Linear.None).delay(2e3).to({}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(2e3, 2e3), t = 100;
			for (var i = 0; t > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.alpha = .8, this.overLayer.add(s);
				var h = this.game.rnd.integerInRange(-150, 150),
					l = 2e3 + Math.floor(2e3 * i / t);
				this.game.add.tween(s).to({
					x: e ? 1400 : 0,
					y: this.source.y - 50 + h
				}, 1, Phaser.Easing.Linear.None).delay(l).to({
					x: e ? -100 : 1400
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Pummel = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5500, "wizard", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 5e3);
			for (var e = 0; 9 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(t), t.anchor.setTo(.5, .5), t.alpha = .6, t.scale.x = t.scale.y = 0, this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(500 * e).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(500 * e).to({
					x: 10,
					y: 5
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var e = 0; 20 > e; e++) {
				var i = "core-box-" + Math.floor(6 * Math.random()),
					a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", i);
				a.alpha = .75, a.anchor.setTo(.5, 0), a.height = 0, a.width = 80;
				var s = this.target.x + Math.floor(-200 + 400 * Math.random()),
					r = this.target.y + Math.floor(-200 + 400 * Math.random()),
					n = 1e3 + 200 * e;
				this.game.add.tween(a).to({
					x: s,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(n).to({
					height: r
				}, 100, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 100, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(n + 100, 100);
				var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(o), o.scale.x = o.scale.y = 0, o.alpha = .8, o.anchor.setTo(.5, .8), this.game.add.tween(o).to({
					x: s,
					y: r
				}, 1, Phaser.Easing.Linear.None).delay(n + 100).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(o.scale).to({
					x: 3,
					y: 3
				}, 300, Phaser.Easing.Linear.None).delay(n + 100).start(), r < this.target.y ? (this.underLayer.add(a), this.underLayer.add(o)) : (this.overLayer.add(a), this.overLayer.add(o))
			}
		}, e
	}(),
	RainyDay = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3500, "water", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3e3);
			var e = new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "attacks", "water-rain");
			this.showOverlay(e, 3e3, 5, 5, 0)
		}, e
	}(),
	Razorfire = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3e3, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2250);
			var e = [];
			e.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-bomb")), e.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ring"));
			for (var t = this.source.x < this.target.x ? 1 : -1, i = 0; i < e.length; i++) this.overLayer.add(e[i]), e[i].anchor.setTo(.5, .5), e[i].scale.x = e[i].scale.y = 0, this.game.add.tween(e[i]).to({
				x: this.source.x
			}, 1, Phaser.Easing.Quadratic.Out).to({
				x: this.source.x + (this.target.x - this.source.x) / 2,
				angle: 100 * t
			}, 1e3, Phaser.Easing.Linear.None).to({
				angle: 4e3 * t
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				x: this.target.x,
				angle: 4500 * t
			}, 250, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.target.x - this.source.x) / 2,
				angle: 5e3 * t,
				alpha: 0
			}, 250, Phaser.Easing.Linear.None).start(), this.game.add.tween(e[i]).to({
				y: this.source.y
			}, 1, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y - 200
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e[i].scale).to({
				x: -t,
				y: 1
			}, 1e3, Phaser.Easing.Quadratic.Out).start();
			for (var i = 0; 3 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-cloud");
				this.overLayer.add(a), a.anchor.setTo(.5, .5), this.game.add.tween(a).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(2250 + 80 * i).to({
					y: "-300",
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.Out).start()
			}
			for (var i = 0; 10 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-cloud");
				this.underLayer.add(a), a.anchor.setTo(1 === t ? .75 : .25, .5);
				var s = this.source.x + (this.target.x - this.source.x) / 2;
				this.game.add.tween(a).to({
					x: s,
					y: this.target.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(1e3 + 100 * i).to({
					x: s - 100 * t,
					y: "-100",
					alpha: 0
				}, 250, Phaser.Easing.Quadratic.Out).start()
			}
			var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(r), r.scale.x = r.scale.y = 0, r.alpha = .8, r.anchor.setTo(.5, .8), this.game.add.tween(r).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(2250).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(2250).start()
		}, e
	}();
RoyalRoar = function(e, t, i, a, s, r, n, o, h, l) {
	Attack.call(this, e, t, i, a, s, Util.getOptionalParameter(l, 6500), "wizard", r, n, o, h), this.tintColor = 5577355
}, Prodigy.extends(RoyalRoar, Attack, {
	constructor: RoyalRoar,
	setup: function(e, t) {
		Attack.prototype.setup.call(this, Util.getOptionalParameter(e, 5e3)), Util.getOptionalParameter(t, !0) && this.doAttack()
	},
	doAttack: function() {
		var e = this.source.x,
			t = this.source.y,
			i = this;
		setTimeout(function() {
			i.game.prodigy.audio.playSound("attack-royal-roar")
		}, 400), Util.isDefined(this.epic) && (e = this.epic.x, t = this.epic.y);
		for (var a = Math.floor(e + (this.target.x - e) / 2), s = t - 250, r = 0, n = 0; 12 > n; n++) {
			var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			o.tint = this.tintColor, this.underLayer.add(o), o.anchor.setTo(.5, .5), o.alpha = .25, o.scale.x = o.scale.y = 20, this.game.add.tween(o).to({
				x: a,
				y: s
			}, 1, Phaser.Easing.Linear.None).delay(r).to({}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(o.scale).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).delay(r).start(), r += 500 - 20 * n
		}
		var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body");
		o.tint = this.tintColor, this.overLayer.add(o), o.anchor.setTo(.5, .5), o.alpha = .5, o.scale.x = o.scale.y = 0, this.game.add.tween(o).to({
			x: a,
			y: s
		}, 1, Phaser.Easing.Linear.None).to({}, 5e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(o.scale).to({
			x: 4,
			y: 4
		}, 5e3, Phaser.Easing.Linear.None).to({
			x: 10,
			y: 10
		}, 400, Phaser.Easing.Linear.None).start();
		var h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
		h.tint = this.tintColor, this.underLayer.add(h), h.anchor.setTo(.5, .5), this.game.add.tween(h).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(5400).to({
			y: "-100",
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(this.target).to({
			x: a
		}, 3e3, Phaser.Easing.Quadratic.In).to({}, 2e3, Phaser.Easing.Linear.None).to({
			x: this.target.x
		}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
			y: s + 50
		}, 1e3, Phaser.Easing.Quadratic.In).delay(2e3).to({}, 2e3, Phaser.Easing.Linear.None).to({
			y: this.target.y
		}, 200, Phaser.Easing.Linear.None).to({
			y: "-50"
		}, 250, Phaser.Easing.Quadratic.Out).to({
			y: "+50"
		}, 250, Phaser.Easing.Quadratic.In).start(), this.game.prodigy.effects.shake(0, 5e3, 3, "v"), this.game.prodigy.effects.shake(5e3, 1e3, 15)
	}
});
var Shocksphere = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3500, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2900);
			for (var e = 0; 2 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
				t.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), t.animations.play("a"), t.anchor.setTo(.5, 1), this.overLayer.add(t), t.scale.y = 0 === e ? 1 : -1, this.game.add.tween(t).to({
					x: this.target.x,
					y: 0 === e ? this.target.y - 50 - 82 : this.target.y - 50 + 82
				}, 1, Phaser.Easing.Linear.None).to({
					y: 0 === e ? "-82" : "+82"
				}, 400, Phaser.Easing.Quadratic.In).to({
					y: "-200"
				}, 2e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start()
			}
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
			this.overLayer.add(i);
			var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(a), a.anchor.setTo(.5, .5), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y - 50,
				alpha: .75
			}, 1, Phaser.Easing.Linear.None).to({}, 400, Phaser.Easing.Linear.None).to({
				y: this.target.y - 250
			}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 2,
				y: 2
			}, 400, Phaser.Easing.Quadratic.In).to({}, 2e3, Phaser.Easing.Linear.None).to({
				x: 5,
				y: 5
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-200"
			}, 2e3, Phaser.Easing.Linear.None).delay(401).to({
				y: "+200"
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(a).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(2901).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Snowman = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body");
			e.anchor.setTo(.5, 1), this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-head"), e.anchor.setTo(.5, 1), e.scale.x = this.source.x < this.target.x ? -1 : 1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y - 100
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body"), e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = .25, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: this.target.y - 168,
				angle: this.source.x < this.target.x ? 720 : -720
			}, 3e3, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 2.5,
				y: 2.5
			}, 3e3, Phaser.Easing.Quadratic.Out).to({
				x: 5,
				y: 5
			}, 300, Phaser.Easing.Linear.None).start();
			var t = this.target.scale.x;
			this.game.add.tween(this.target.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				x: t,
				y: 1
			}, 200, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(4500).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(4500).start()
		}, e
	}(),
	StormComing = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4500), this.game.prodigy.effects.shake(1500, 3e3, 3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			e.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30, !0, !1), e.animations.play("a"), this.overLayer.add(e), e.anchor.setTo(.5, 1);
			var t = this.game.add.tween(e).to({
					x: this.target.x,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1500),
				i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8);
			for (var a = this.game.add.tween(i), s = this.game.add.tween(i.scale), r = 0; 25 > r; r++) {
				var n = Math.floor(50 + 1180 * Math.random()),
					o = this.target.y + Math.floor(-50 + 300 * Math.random());
				t.to({
					x: n,
					y: 0
				}, 1, Phaser.Easing.Linear.None), t.to({
					y: o
				}, 99, Phaser.Easing.Linear.None), a.to({
					x: n,
					y: o,
					alpha: 1
				}, 1, Phaser.Easing.Linear.None), a.to({
					alpha: 0
				}, 99, Phaser.Easing.Linear.None), s.to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None), s.to({
					x: 2,
					y: 2
				}, 99, Phaser.Easing.Linear.None)
			}
			t.to({
				x: Attack.BX,
				y: Attack.BY
			}, 1, Phaser.Easing.Linear.None), a.delay(1600).start(), s.delay(1600).start(), t.start();
			for (var h = 320, r = 0; 4 > r; r++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-cloud2");
				this.overLayer.add(i), i.scale.x = i.scale.y = 2.5, i.anchor.setTo(.5, 1), this.game.add.tween(i).to({
					x: 180 + r * h,
					y: 0
				}, 1, Phaser.Easing.Linear.None).to({
					y: 150
				}, 1500, Phaser.Easing.Quadratic.Out).to({}, 3e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start()
			}
			var l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-titan");
			this.overLayer.add(l), l.anchor.setTo(.5, .5), l.alpha = .75, this.game.add.tween(l).to({
				x: 640,
				y: 360
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 3e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(l.scale).to({
				x: 2,
				y: 2
			}, 3e3, Phaser.Easing.Linear.None).delay(1500).to({
				x: 4,
				y: 4
			}, 300, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	TempAttack = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 6e3, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 6e3), this.game.prodigy.effects.shake(4e3, 1500, 3, null), this.manager = this.game.plugins.add(Phaser.ParticleStorm);
			var e = {
				lifespan: 4e3,
				image: "attacks",
				frame: "ice-snow",
				ay: -.08,
				vx: {
					value: {
						min: -2,
						max: 2
					},
					control: [{
						x: 0,
						y: 1
					}, {
						x: 1,
						y: .1
					}]
				},
				vy: {
					value: 0,
					control: [{
						x: 0,
						y: 1
					}, {
						x: 1,
						y: .1
					}]
				}
			};
			this.manager.addData("snow", e), emitter = this.manager.createEmitter(), emitter.createGravityWell(this.target.x, this.target.y, 100), emitter.addToWorld(this.foreground), emitter.emit("snow", this.source.x + 40, this.source.y - 80, {
				repeat: 120,
				frequency: 10,
				total: 50
			})
		}, e
	}(),
	Thunderdome = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 5e3, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 4500);
			for (var e = 0; 2 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(t), t.scale.x = t.scale.y = 0, t.alpha = .5, t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(150 * e).to({}, 4300, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
					x: 3,
					y: 3
				}, 4e3, Phaser.Easing.Linear.None).delay(150 * e).to({
					x: 1.5,
					y: 1.5
				}, 300, Phaser.Easing.Quadratic.Out).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Quadratic.In).start()
			}
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			i.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30, !0, !1), i.animations.play("a"), this.overLayer.add(i), i.anchor.setTo(.5, 1);
			for (var a = this.game.add.tween(i).to({
					x: this.target.x,
					y: 0
				}, 1, Phaser.Easing.Linear.None), e = 0; 30 > e; e++) {
				var s = 100 * e,
					r = 25e-5 * s * 300,
					n = Math.PI * Math.random(),
					o = this.target.x + r * Math.cos(n),
					h = this.target.y + r * Math.sin(n);
				h > this.target.y && (h = this.target.y - (h - this.target.y)), a.to({
					x: o,
					y: 0
				}, 1, Phaser.Easing.Linear.None), a.to({
					y: h
				}, 99, Phaser.Easing.Linear.None)
			}
			a.to({
				x: Attack.BX,
				y: Attack.BY
			}, 1, Phaser.Easing.Linear.None), a.start()
		}, e
	}(),
	Trinity = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3e3, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2e3);
			for (var e = 2 * Math.PI / 3, t = 0; 3 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
				i.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), i.animations.play("a"), i.anchor.setTo(.5, 1);
				var a = this.target.x + Math.floor(300 * Math.cos(-Math.PI / 4 + e * t)),
					s = this.target.y + Math.floor(300 * Math.sin(-Math.PI / 4 + e * t));
				s < this.target.y ? this.underLayer.add(i) : this.overLayer.add(i), this.game.add.tween(i).to({
					x: a,
					y: s
				}, 1, Phaser.Easing.Linear.None).to({
					x: this.target.x,
					y: this.target.y
				}, 2e3, Phaser.Easing.Quadratic.In).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start()
			}
			for (var t = 0; 2 > t; t++) {
				var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(r), r.scale.x = r.scale.y = 0, r.alpha = .5, r.anchor.setTo(.5, .8), this.game.add.tween(r).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 150 * t).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Linear.None).delay(2e3 + 150 * t).start()
			}
		}, e
	}(),
	WaterBlast = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 2e3, "water", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-bubble");
			e.anchor.setTo(.5, .5), this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	WaterBomb = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "water", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3300);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-bubble-big");
			this.overLayer.add(e), e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({
				y: 40
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 1500, Phaser.Easing.Quadratic.In).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: .5,
				y: 2
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.Out).to({
				x: .75,
				y: 1.25
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: .75,
				y: 1.25
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.InOut).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-splash");
			this.overLayer.add(t), t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3e3).start(), this.game.add.tween(t.scale).to({
				x: 2,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({
				y: 2
			}, 300, Phaser.Easing.Quadratic.Out).to({
				y: 0
			}, 300, Phaser.Easing.Quadratic.In).start()
		}, e
	}(),
	WaterBubble = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 4e3, "water", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 3e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
			this.overLayer.add(e);
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(t), t.anchor.setTo(.5, .5), e.anchor.setTo(.5, .5);
			this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y - 50,
				alpha: .75
			}, 1, Phaser.Easing.Linear.None).to({}, 500, Phaser.Easing.Linear.None).to({
				y: this.target.y - 450
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 3,
				y: 3
			}, 400, Phaser.Easing.Quadratic.Out).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 3,
				y: 3
			}, 400, Phaser.Easing.Quadratic.Out).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 5,
				y: 5
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-400"
			}, 1500, Phaser.Easing.Quadratic.Out).delay(501).to({
				y: "+400"
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3001).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Whirlwind = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Attack.call(this, e, t, i, a, s, 3e3, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			Attack.prototype.setup.call(this, 2e3);
			for (var e = 0; 100 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-leaf");
				this.overLayer.add(t);
				var i = 4 + 2 * Math.random();
				t.anchor.setTo(i, i), t.scale.x = t.scale.y = 0, t.angle = Math.floor(360 * Math.random());
				var a = (Math.random() < .5 ? "+" : "-") + (200 + Math.floor(500 * Math.random())),
					s = 400 + Math.floor(200 * Math.random()),
					r = Math.random() * Math.PI * 2,
					n = Math.floor(this.target.x + s * Math.cos(r)),
					o = Math.floor(this.target.y + s * Math.sin(r));
				this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).to({
					angle: a
				}, 2e3, Phaser.Easing.Linear.None).to({
					x: n,
					y: o,
					alpha: 0
				}, 300, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(t.anchor).to({
					x: .5,
					y: .5
				}, 500, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(t.scale).to({
					x: 1,
					y: 1
				}, 250, Phaser.Easing.Linear.None).start()
			}
		}, e
	}();
Zero = function(e, t, i, a, s, r, n, o, h, l) {
	Attack.call(this, e, t, i, a, s, Util.getOptionalParameter(l, 6500), "wizard", r, n, o, h)
}, Prodigy.extends(Zero, Attack, {
	constructor: Zero,
	setup: function(e, t) {
		Attack.prototype.setup.call(this, Util.getOptionalParameter(e, 5e3)), Util.getOptionalParameter(t, !0) && this.doAttack()
	},
	doAttack: function() {
		var e = this.source.x,
			t = this.source.y;
		Util.isDefined(this.epic) && (e = this.epic.x, t = this.epic.y);
		for (var i = Math.floor(e + (this.target.x - e) / 2), a = t - 250, s = 50, r = 0; s > r; r++) {
			var n = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
				o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", n);
			o.anchor.setTo(.5, .5), o.alpha = .8, this.overLayer.add(o);
			var h = Math.floor(4500 * r / s),
				l = Math.floor(-20 + 40 * Math.random());
			this.game.add.tween(o).to({
				x: e,
				y: t - 50 + l
			}, 1, Phaser.Easing.Linear.None).delay(h).to({
				x: i,
				y: a
			}, 500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start()
		}
		for (var h = 0, r = 0; 12 > r; r++) {
			var d = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			this.underLayer.add(d), d.anchor.setTo(.5, .5), d.alpha = .25, d.scale.x = d.scale.y = 20, this.game.add.tween(d).to({
				x: i,
				y: a
			}, 1, Phaser.Easing.Linear.None).delay(h).to({}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(d.scale).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).delay(h).start(), h += 500 - 20 * r
		}
		var d = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body");
		this.overLayer.add(d), d.anchor.setTo(.5, .5), d.alpha = .5, d.scale.x = d.scale.y = 0, this.game.add.tween(d).to({
			x: i,
			y: a
		}, 1, Phaser.Easing.Linear.None).to({}, 5e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(d.scale).to({
			x: 4,
			y: 4
		}, 5e3, Phaser.Easing.Linear.None).to({
			x: 10,
			y: 10
		}, 400, Phaser.Easing.Linear.None).start();
		var c = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
		this.underLayer.add(c), c.anchor.setTo(.5, .5), this.game.add.tween(c).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(5400).to({
			y: "-100",
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(this.target).to({
			x: i
		}, 3e3, Phaser.Easing.Quadratic.In).to({}, 2e3, Phaser.Easing.Linear.None).to({
			x: this.target.x
		}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
			y: a + 50
		}, 1e3, Phaser.Easing.Quadratic.In).delay(2e3).to({}, 2e3, Phaser.Easing.Linear.None).to({
			y: this.target.y
		}, 200, Phaser.Easing.Linear.None).to({
			y: "-50"
		}, 250, Phaser.Easing.Quadratic.Out).to({
			y: "+50"
		}, 250, Phaser.Easing.Quadratic.In).start(), this.game.prodigy.effects.shake(0, 5e3, 3, "v"), this.game.prodigy.effects.shake(5e3, 1e3, 15)
	}
});
var FrigidBlast = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			var l = r.moveIn ? 1e4 : 7e3;
			Attack.call(this, e, t, i, a, s, l, "ice", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			var e = this.game.prodigy.event.create();
			this.atk.moveIn ? (Attack.prototype.setup.call(this, 7500), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
				ID: 127
			}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
				x: 250
			}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(5e3), e.path(this.epic, [{
				x: -200
			}])) : (Attack.prototype.setup.call(this, 5500), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
		}, e.prototype.doAttack = function() {
			this.game.prodigy.audio.playSound("attack-frigid-blast");
			for (var e = 0; 160 > e; e++) this.addSnow(e, 25 * e, this.source.x < this.target.x)
		}, e.prototype.addSnow = function(e, t, i) {
			var a = e % 10 === 0,
				s = this.game.prodigy.create.sprite(-100, Math.floor(720 * Math.random()), "attacks", a ? "ice-star" : "ice-snow");
			s.x = i ? -s.width : 1280 + s.width, Math.random() < .5 ? this.overLayer.add(s) : this.underLayer.add(s), s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = a ? .2 + .8 * Math.random() : 1;
			var r = i ? 1380 + s.width : -(s.width + 100);
			a ? this.game.add.tween(s).to({
				x: r,
				angle: 500
			}, 1500, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				s.kill()
			}, s) : this.game.add.tween(s).to({
				x: r
			}, 1500, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				s.kill()
			}, s)
		}, e
	}(),
	ForestFury = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			var l = r.moveIn ? 1e4 : 7e3;
			Attack.call(this, e, t, i, a, s, l, "earth", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			var e = this.game.prodigy.event.create();
			this.atk.moveIn ? (Attack.prototype.setup.call(this, 7e3), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
				ID: 126
			}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
				x: 250
			}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(5e3), e.path(this.epic, [{
				x: -200
			}])) : (Attack.prototype.setup.call(this, 4500), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
		}, e.prototype.doAttack = function() {
			this.game.prodigy.audio.playSound("attack-forest-fury");
			for (var e = 0; 100 > e; e++) this.createLeaf(e, 25 * e, this.source.x < this.target.x)
		}, e.prototype.createLeaf = function(e, t, i) {
			var a = this.game.prodigy.create.sprite(i ? -100 : 1380, Math.floor(720 * Math.random()), "attacks", "earth-leaf");
			Math.random() < .5 ? this.overLayer.add(a) : this.underLayer.add(a), a.anchor.setTo(Math.random(), Math.random()), this.game.add.tween(a).to({
				x: i ? 1380 : -100,
				angle: 1e3
			}, 2e3, Phaser.Easing.Linear.None, !0, t).onComplete.add(function() {
				a.kill()
			}, a)
		}, e
	}(),
	HotSnow = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			var l = r.moveIn ? 9e3 : 4e3;
			Attack.call(this, e, t, i, a, s, l, "fire", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			var e = this.game.prodigy.event.create();
			this.atk.moveIn ? (Attack.prototype.setup.call(this, 6800), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
				ID: 129
			}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
				x: 250
			}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(5e3), e.path(this.epic, [{
				x: -200
			}])) : (Attack.prototype.setup.call(this, 3500), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
		}, e.prototype.doAttack = function() {
			this.game.prodigy.audio.playSound("attack-hot-snow");
			for (var e = 0; 15 > e; e++) {
				var t = this.target.x + 100 - 200 * Math.random(),
					i = this.target.y + 100 - 200 * Math.random(),
					a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
				a.anchor.setTo(.5, .5), a.angle = 90, this.game.add.tween(a).to({
					y: -50,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).to({
					y: i
				}, 600, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).start(), this.game.prodigy.effects.shake(200 * e + 600, 100, 3, "v");
				var s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-cloud");
				this.overLayer.add(s), s.anchor.setTo(.5, .5), this.game.add.tween(s).to({
					y: i,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e + 600).to({
					y: "-200",
					alpha: 0
				}, 300, Phaser.Easing.Quadratic.Out).start(), i < this.target.y ? (this.underLayer.add(a), this.underLayer.add(s)) : (this.overLayer.add(a), this.overLayer.add(s))
			}
		}, e
	}(),
	StormWrath = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			var l = r.moveIn ? 1e4 : 5e3;
			Attack.call(this, e, t, i, a, s, l, "storm", r, n, o, h)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
			var e = this.game.prodigy.event.create();
			this.atk.moveIn ? (Attack.prototype.setup.call(this, 7500), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
				ID: 125
			}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
				x: 250
			}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(5e3), e.path(this.epic, [{
				x: -200
			}])) : (Attack.prototype.setup.call(this, 4500), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
		}, e.prototype.doAttack = function() {
			this.game.prodigy.audio.playSound("attack-storm-wrath"), this.game.prodigy.effects.shake(1500, 3e3, 3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			e.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30, !0, !1), e.animations.play("a"), this.overLayer.add(e), e.anchor.setTo(.5, 1);
			var t = this.game.add.tween(e).to({
					x: this.target.x,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1500),
				i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8);
			for (var a = this.game.add.tween(i), s = this.game.add.tween(i.scale), r = 0; 25 > r; r++) {
				var n = Math.floor(50 + 1180 * Math.random()),
					o = this.target.y + Math.floor(-50 + 300 * Math.random());
				t.to({
					x: n,
					y: 0
				}, 1, Phaser.Easing.Linear.None), t.to({
					y: o
				}, 99, Phaser.Easing.Linear.None), a.to({
					x: n,
					y: o,
					alpha: 1
				}, 1, Phaser.Easing.Linear.None), a.to({
					alpha: 0
				}, 99, Phaser.Easing.Linear.None), s.to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None), s.to({
					x: 2,
					y: 2
				}, 99, Phaser.Easing.Linear.None)
			}
			t.to({
				x: Attack.BX,
				y: Attack.BY
			}, 1, Phaser.Easing.Linear.None), a.delay(1600).start(), s.delay(1600).start(), t.start();
			for (var h = 320, r = 0; 4 > r; r++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-cloud2");
				this.overLayer.add(i), i.scale.x = i.scale.y = 2.5, i.anchor.setTo(.5, 1), this.game.add.tween(i).to({
					x: 180 + r * h,
					y: 0
				}, 1, Phaser.Easing.Linear.None).to({
					y: 150
				}, 1500, Phaser.Easing.Quadratic.Out).to({}, 3e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start()
			}
			var l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-titan");
			this.overLayer.add(l), l.anchor.setTo(.5, .5), l.alpha = .75, this.game.add.tween(l).to({
				x: 640,
				y: 360
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 3e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(l.scale).to({
				x: 2,
				y: 2
			}, 3e3, Phaser.Easing.Linear.None).delay(1500).to({
				x: 4,
				y: 4
			}, 300, Phaser.Easing.Linear.None).start()
		}, e
	}();
ThermalPrism = function(e, t, i, a, s, r, n, o, h) {
	var l = r.moveIn ? 12e3 : 8500;
	Zero.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(ThermalPrism, Zero, {
	constructor: ThermalPrism,
	setup: function() {
		var e = this.game.prodigy.event.create();
		this.atk.moveIn ? (Zero.prototype.setup.call(this, 8900, !1), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
			ID: 130
		}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
			x: 250
		}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(7500), e.path(this.epic, [{
			x: -200
		}])) : (Zero.prototype.setup.call(this, 6500, !1), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
	}
});
var TidalTwister = function() {
	function e(e, t, i, a, s, r, n, o, h) {
		var l = r.moveIn ? 9500 : 6500;
		Attack.call(this, e, t, i, a, s, l, "water", r, n, o, h)
	}
	return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function() {
		var e = this.game.prodigy.event.create();
		this.atk.moveIn ? (Attack.prototype.setup.call(this, 8800), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
			ID: 128
		}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
			x: 250
		}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(5e3), e.path(this.epic, [{
			x: -200
		}])) : (Attack.prototype.setup.call(this, 6e3), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
	}, e.prototype.doAttack = function() {
		this.game.prodigy.audio.playSound("attack-tidal-twister"), this.game.prodigy.effects.shake(0, 1500, 3, "v");
		var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-whirl");
		this.underLayer.add(e), e.scale.x = e.scale.y = 0, e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).to({
			angle: -1e3
		}, 6e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
			x: 1.5,
			y: 1.5
		}, 2e3, Phaser.Easing.Linear.None).to({}, 3e3, Phaser.Easing.Linear.None).to({
			x: 0,
			y: 0
		}, 1e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
			x: -1
		}, 500, Phaser.Easing.Linear.None).delay(1e3).to({
			x: 1
		}, 500, Phaser.Easing.Linear.None).to({
			x: -.8
		}, 400, Phaser.Easing.Linear.None).to({
			x: .8
		}, 400, Phaser.Easing.Linear.None).to({
			x: -.6
		}, 300, Phaser.Easing.Linear.None).to({
			x: .6
		}, 300, Phaser.Easing.Linear.None).to({
			x: -.4
		}, 200, Phaser.Easing.Linear.None).to({
			x: .4
		}, 200, Phaser.Easing.Linear.None).to({
			x: -.2
		}, 100, Phaser.Easing.Linear.None).to({
			x: .2
		}, 100, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
			x: 1
		}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
			y: 0
		}, 3e3, Phaser.Easing.Linear.None).delay(1e3).to({}, 1e3, Phaser.Easing.Linear.None).to({
			y: 1
		}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
			y: 0
		}, 500, Phaser.Easing.Quadratic.Out).delay(5e3).to({
			y: this.target.y
		}, 500, Phaser.Easing.Quadratic.In).to({
			y: "-50"
		}, 250, Phaser.Easing.Quadratic.Out).to({
			y: "+50"
		}, 250, Phaser.Easing.Quadratic.In).start();
		var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
		this.underLayer.add(t), t.anchor.setTo(.5, .5), this.game.add.tween(t).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(6e3).to({
			y: "-100",
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start()
	}, e
}();
Totality = function(e, t, i, a, s, r, n, o, h) {
	var l = r.moveIn ? 11e3 : 8e3;
	Dragos.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(Totality, Dragos, {
	constructor: Totality,
	setup: function() {
		var e = this.game.prodigy.event.create();
		this.atk.moveIn ? (Dragos.prototype.setup.call(this, 8900, !1), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
			ID: 132
		}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
			x: 250
		}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(7e3), e.path(this.epic, [{
			x: -200
		}])) : (Dragos.prototype.setup.call(this, 6500, !1), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
	}
}), Tsunami = function(e, t, i, a, s, r, n, o, h) {
	var l = r.moveIn ? 7500 : 4e3;
	Geyser.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(Tsunami, Geyser, {
	constructor: Tsunami,
	setup: function() {
		var e = this.game.prodigy.event.create();
		this.atk.moveIn ? (Geyser.prototype.setup.call(this, 5200, !1), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
			ID: 131
		}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
			x: 250
		}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(3400), e.path(this.epic, [{
			x: -200
		}])) : (Geyser.prototype.setup.call(this, 2300, !1), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
	}
}), UmbraBlast = function(e, t, i, a, s, r, n, o, h) {
	var l = r.moveIn ? 12e3 : 8500;
	Zero.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(UmbraBlast, Zero, {
	constructor: UmbraBlast,
	setup: function() {
		var e = this.game.prodigy.event.create();
		this.atk.moveIn ? (Zero.prototype.setup.call(this, 8900, !1), this.epic = new Prodigy.Container.MonsterContainer(this.game, this.overLayer, new Monster({
			ID: 133
		}), 2, -200, 550, !1), this.epic.startLoad(), e.delay(100), e.path(this.epic, [{
			x: 250
		}]), e.function(this.epic.attack.bind(this.epic)), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this)), e.delay(7500), e.path(this.epic, [{
			x: -200
		}])) : (Zero.prototype.setup.call(this, 6500, !1), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), e.delay(1e3), e.function(this.doAttack.bind(this))), e.start()
	}
}), Prodigy.Attack.InkBlot = function(e, t, i, a, s, r, n, o, h) {
	Attack.call(this, e, t, i, a, s, 1750, "water", r, n, o, h)
}, Prodigy.extends(Prodigy.Attack.InkBlot, Attack, {
	constructor: Prodigy.Attack.InkBlot,
	setup: function() {
		Attack.prototype.setup.call(this, 525);
		var e = 20,
			t = this.game.prodigy.event.create();
		t.delay(750);
		for (var i = 0; e > i; i++) t.function(this.createInkTween.bind(this)), t.delay(25);
		t.start()
	},
	createInkTween: function() {
		var e = new Prodigy.Shipwreck_Shore.Features.InkBlotAttack(this.game, this.overLayer, this.source.x - .5 * this.source.width, this.source.y - .5 * this.source.height);
		e.inputEnabled = !1;
		var t = this.game.add.tween(e).to({
			x: this.target.x - .75 * this.target.width + Prodigy.Random.integerInRange(0, .5 * this.target.width),
			y: this.target.y - .75 * this.target.height + Prodigy.Random.integerInRange(0, .5 * this.target.height)
		}, 500, Phaser.Easing.Linear.None).start();
		t.onComplete.add(e.vanish.bind(e))
	}
}), Prodigy.Attack.ShadowShock = function(e, t, i, a, s, r, n, o, h) {
	Attack.call(this, e, t, i, a, s, 2e3, "shadow", r, n, o, h, 1200)
}, Prodigy.extends(Prodigy.Attack.ShadowShock, Attack, {
	constructor: Prodigy.Attack.ShadowShock,
	setup: function() {
		Attack.prototype.setup.call(this, 1e3);
		var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "shadow-mudball");
		e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = .5, this.overLayer.add(e), this.game.add.tween(e).to({
			x: this.source.x,
			y: this.source.y - 100
		}, 1, Phaser.Easing.Linear.None).to({
			x: this.target.x
		}, 1e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 1, Phaser.Easing.Linear.None).start();
		var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
		t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
			x: this.source.x,
			y: this.source.y - 100
		}, 1, Phaser.Easing.Linear.None).to({
			x: this.target.x
		}, 1e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
			x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
			y: this.source.y - 100
		}, 1, Phaser.Easing.Linear.None).to({
			x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
		}, 1e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
			x: this.source.x < this.target.x ? 1 : -1
		}, 500, Phaser.Easing.Linear.None).start();
		var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
		this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
			x: this.target.x,
			y: this.target.y
		}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
			alpha: 0
		}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
			x: 3,
			y: 3
		}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
	}
}), Prodigy.Creature = function(e) {
	this.game = e, this.data = {}, this.appearanceChanged = !1, this.starsToProcess = 0, this.starsRewardBase = 100, this.starsReward = 100, this.starsEarned = 0, this.inPVP = !1, this.pvpHP = 0, this.resetModifiers()
}, Prodigy.Creature.prototype = {
	constructor: Prodigy.Creature,
	getDataAndClear: function() {
		return this.updated = !1, this.data
	},
	getID: function() {
		return 0
	},
	canCatch: function() {
		return !1
	},
	getAttacks: function() {
		return [1]
	},
	isKnockedOut: function() {
		return this.getCurrentHearts() <= 0
	},
	updateModifier: function(e, t) {
		if ("potion" === e) {
			if (this.modifiers.potion = t, null !== t) {
				var i = Items.getItemData("item", t);
				this.game.prodigy.network.sendAnalytics("potion-use-activity", i.name, "Events")
			}
		} else "barrier" === e ? this.modifiers.barrier = t : Util.isDefined(this.modifiers[e]) && (this.modifiers[e] += t, this.modifiers[e] <= 0 && (this.modifiers[e] = .01))
	},
	resetModifiers: function() {
		this.modifiers = {
			maxHearts: 1,
			damage: 1,
			miss: 0,
			ignoreElement: 0,
			potion: null,
			barrier: !1
		}, this.clearUnprocessedLevelEvents()
	},
	getMaxHearts: function(e) {
		return e = e || this.getLevel(), Prodigy.Creature.getHeartsFromCurve(Util.isDefined(this.type) ? this.type : "B", 1, e)
	},
	getCurrentHearts: function() {
		return this.inPVP ? (Util.isDefined(this.pvpHP) || (this.pvpHP = this.getMaxHearts()), this.pvpHP) : Util.isDefined(this.data.hp) ? (this.data.hp > this.getMaxHearts() && (this.data.hp = this.getMaxHearts()), this.data.hp) : this.getMaxHearts()
	},
	changeCurrentHearts: function(e, t) {
		var i = this.getCurrentHearts(),
			a = i + e;
		Util.isDefined(t) || (t = 0), t > a && (a = t), a > this.getMaxHearts() && (a = this.getMaxHearts()), this.inPVP ? this.pvpHP = Math.round(a) : this.data.hp = Math.round(a), this.updated = !0
	},
	processStars: function() {
		this.starsToProcess > 0 ? this.addStars(this.starsToProcess) : this.game.broadcaster.broadcast(Prodigy.Events.Creature.ANIMATION_DONE, this)
	},
	addStars: function(e, t, i, a) {
		if (Util.isDefined(this.isOpponent) && this.isOpponent) return !1;
		e = Math.round(e);
		var s = !1;
		if (Util.isDefined(t)) {
			var r = this.game.prodigy.player;
			return r.hasValidatedParentEmail() && r.hasCompletedTutorial() && (e *= GameConstants.get("GameConstants.Battle.VALID_PARENT_EMAIL_STARS_PERCENTAGE")), this.starsToProcess += e, !1
		}
		this.starsToProcess = 0;
		var n = this.getLevel();
		if (this.game.broadcaster.broadcast(Prodigy.Events.Creature.STARS_ADDED, this, null), n >= 100) return !1;
		if (Util.isDefined(this.data.stars) ? this.data.stars += e : this.data.stars = e, Util.isDefined(i) || (this.starsEarned += e), this.data.level = Prodigy.Creature.levelFromStars(this.data.stars), n !== this.data.level) {
			this.levelEvents = [];
			var o = this.getLevelingCurve(this.data.level);
			if (Util.isDefined(o))
				for (var h = 0; h < o.length; h++) Util.inArray(this.levelEvents, o[h]) || this.levelEvents.push(o[h]);
			if (this.getMaxHearts(n) !== this.getMaxHearts(this.data.level) ? this.levelEvents.push({
					h: 2,
					lvl: this.data.level
				}) : this.game.time.events.add(2500, this.changeCurrentHearts.bind(this, GameConstants.MAX_SAFE_INTEGER), this), "USA" === this.game.prodigy.player.location && this.game.prodigy.player.data === this.data && this.data.level % 5 === 0) {
				var l = this.game.prodigy.microtransaction.getReceivedConjureCubeCount(1);
				l < this.data.level / 5 && this.levelEvents.push({
					g: 1,
					lvl: this.data.level
				})
			}
			this.justLeveled = !0, this.game.broadcaster.broadcast(Prodigy.Events.Creature.LEVEL_UP, this, null), s = !0
		}
		return Util.isDefined(a) && this.clearUnprocessedLevelEvents(), this.updated = !0, s
	},
	getUnprocessedLevelEvents: function() {
		return this.levelEvents
	},
	clearUnprocessedLevelEvents: function() {
		this.levelEvents = []
	},
	hasHeartsEventInQueue: function() {
		if (Util.isDefined(this.levelEvents))
			for (var e = 0; e < this.levelEvents.length; e++)
				if (Util.isDefined(this.levelEvents[e].h)) return !0;
		return !1
	},
	getStars: function() {
		return Util.isDefined(this.data.stars) ? this.data.stars : 0
	},
	getStarsToLevel: function() {
		var e = this.getStars(),
			t = this.getLevel(),
			i = Prodigy.Creature.starsToLevel(t);
		return Math.max(0, i - e)
	},
	getStarRewardByDamage: function(e) {
		var t = this.getMaxHearts(this.getLevel()),
			i = this.getCurrentHearts(),
			a = 0;
		return e >= i ? (e = i, a = Math.floor(this.starsRewardBase * (e / t)), a < this.starsReward && (a = this.starsReward)) : a = Math.floor(this.starsRewardBase * (e / t)), 0 >= a && (a = 1), this.starsReward -= a, a
	},
	getStarReward: function() {
		return 0
	},
	getLevel: function() {
		return Util.isDefined(this.data.level) ? this.data.level : 1
	},
	getLevelingCurve: function() {
		return []
	},
	getElement: function() {
		return "wizard"
	},
	getDamageBonus: function() {
		return 0
	},
	giveBonus: function() {},
	getDrops: function() {
		return []
	}
}, Prodigy.Creature.MAX_HEARTS = 8e3, Prodigy.Creature.HP_BONUS = {
	"A+": 4,
	A: 3,
	"A-": 2,
	"B+": 1,
	B: 0,
	"B-": -1,
	"C+": -2,
	C: -3,
	"C-": -4
}, Prodigy.Creature.enemiesPerLevel = function(e) {
	return Math.max(0, Math.floor(.8 + Math.pow(1.7, .085 * e)))
}, Prodigy.Creature.starsToLevel = function(e) {
	if (1 > e) return 0;
	for (var t = 0, i = 1; e >= i; i++) t += Prodigy.Creature.enemiesPerLevel(i);
	return 100 * t
}, Prodigy.Creature.getLevelPercent = function(e) {
	var t = Prodigy.Creature.levelFromStars(e),
		i = Prodigy.Creature.starsToLevel(t),
		a = Prodigy.Creature.starsToLevel(t - 1);
	return (e - a) / (i - a)
}, Prodigy.Creature.levelFromStars = function(e) {
	for (var t = 1; 100 >= t; t++)
		if (e < Prodigy.Creature.starsToLevel(t)) return t;
	return 100
}, Prodigy.Creature.getHeartsFromCurve = function(e, t, i) {
	var a = Prodigy.Creature.HP_BONUS[e],
		s = Math.floor((20 + a) * i / 100),
		r = Math.floor((20 + a) * (t - 1) / 100);
	return 20 * (s - r)
}, Prodigy.Creature.getAttacksFromCurve = function(e, t, i) {
	for (var a = [], s = 0; s < e.length; s++) {
		var r = e[s];
		r.lvl >= t && r.lvl <= i && Util.isDefined(r.a) && a.push(r.a)
	}
	return a
}, Prodigy.Creature.getAttacksOfType = function(e, t) {
	for (var i = [], a = 0, s = 0; s < e.length; s++) {
		var r = Items.getItemObject("spell", e[s]);
		Util.isDefined(r) && Util.isDefined(r.data) && Util.isDefined(r.data.element) && (a = r.data.element), Util.isDefined(t) && a !== t || i.push(e[s])
	}
	return i
}, Prodigy.Creature.prototype.constructor = Prodigy.Creature, Prodigy.Boss = function(e, t) {
	Prodigy.Creature.call(this, t), this.data.level = e.level, this.source = e
}, Prodigy.extends(Prodigy.Boss, Prodigy.Creature, {
	constructor: Prodigy.Boss,
	getAttacks: function() {
		return this.source.attacks || []
	},
	getMaxHearts: function() {
		return this.source.maxHP
	},
	getName: function() {
		return this.source.name
	},
	getElement: function() {
		return this.source.element
	},
	getID: function() {
		return this.source.ID
	},
	getStarReward: function() {
		return this.source.starBonus ? this.source.starBonus : Prodigy.Creature.prototype.getStarReward.call(this)
	},
	calculateHP: function(e, t) {
		return 4 * (12 + Prodigy.Creature.getHeartsFromCurve("A", 1, Math.min(100, t + 1)))
	}
}), Prodigy.Boss.prototype.constructor = Prodigy.Boss, Prodigy.Achievements = function() {
	this.data = {
		progress: {}
	}
}, Prodigy.Achievements.prototype = {
	constructor: Prodigy.Achievements,
	init: function(e) {
		Util.isEmptyObject(e) || (this.data = e)
	},
	getDataAndClear: function() {
		return this.updated = !1, this.data
	},
	set: function(e, t) {
		this.data[e] = t, this.updated = !0
	},
	get: function(e) {
		return this.data[e]
	},
	increment: function(e, t) {
		var i = this.get(e);
		i ? this.set(e, i + t) : this.set(e, t)
	},
	getProgress: function(e) {
		return Util.isDefined(this.data.progress) && Util.isDefined(this.data.progress[e]) ? this.data.progress[e] || 0 : 0
	},
	complete: function(e) {
		Util.isDefined(this.data.progress) || (this.data.progress = []), Util.isDefined(this.data.progress[e]) ? this.data.progress[e]++ : this.data.progress[e] = 1, this.updated = !0
	}
};
var Appearance = function() {
		function e() {
			var e = Math.random() < .5 ? "female" : "male",
				t = "male" === e ? 16 : 1,
				i = Names.generateName(e);
			this.data = {
				name: i,
				nick: null,
				gender: e,
				hair: {
					style: t + Math.floor(8 * Math.random()),
					color: 1 + Math.floor(16 * Math.random())
				},
				skinColor: Math.floor(1 + 5 * Math.random()),
				eyeColor: Math.floor(1 + 15 * Math.random()),
				face: "male" === e ? 4 : 12
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function() {
			return this.updated = !1, this.data
		}, e.prototype.getName = function() {
			return this.data.nick || this.data.name
		}, e.prototype.getFullName = function() {
			return this.data.name
		}, e.prototype.setName = function(e) {
			this.data.name = e, this.updated = !0
		}, e.prototype.setNickname = function(e) {
			this.data.nick = e, this.updated = !0
		}, e.prototype.getNickname = function() {
			return this.data.nick
		}, e.prototype.processNickname = function(e) {
			var t = this.getFullName(),
				i = t.split(" ")[0];
			return (e.pre || "") + i + (e.post || "")
		}, e.prototype.getGender = function() {
			return this.data.gender
		}, e.prototype.setGender = function(e) {
			("male" === e || "female" === e) && (this.data.gender = e), this.updated = !0
		}, e.prototype.getHair = function() {
			return Util.isDefined(this.data.hair) && this.data.hair.hasOwnProperty("style") !== !1 || (this.data.hair = {
				style: "male" === this.data.gender ? 16 : 1,
				color: 1
			}, Util.isDefined(this.data.hairStyle) && (this.data.hair.style = this.data.hairStyle), Util.isDefined(this.data.hairColor) && (this.data.hair.color = this.data.hairColor), this.updated = !0), this.data.hair
		}, e.prototype.setHair = function(e, t) {
			Util.isDefined(this.data.hair) && this.data.hair.hasOwnProperty("style") || (this.data.hair = {
				style: "male" === this.data.gender ? 16 : 1,
				color: 1
			}, this.updated = !0), Util.isDefined(e) && Items.exist("hair", e) && e !== this.data.hair.style && -1 !== e && (this.data.hair.style = e, this.updated = !0), Util.isDefined(t) && t !== this.data.hair.color && -1 !== t && (this.data.hair.color = t, this.updated = !0)
		}, e.prototype.setFace = function(e) {
			this.data.face !== e && (this.data.face = e, this.updated = !0)
		}, e.prototype.getFace = function() {
			return Util.isDefined(this.data.face) || (this.data.face = "male" === this.data.gender ? 4 : 12), this.data.face
		}, e.prototype.getEyeColor = function() {
			return this.data.eyeColor
		}, e.prototype.setEyeColor = function(e) {
			e >= 1 && 15 >= e && (this.data.eyeColor = e), this.updated = !0
		}, e.prototype.getSkinColor = function() {
			return this.data.skinColor
		}, e.prototype.setSkinColor = function(e) {
			e >= 1 && 5 >= e && (this.data.skinColor = e), this.updated = !0
		}, e.prototype.setAppearance = function(e) {
			Util.isEmptyObject(e) || (e.hasOwnProperty("x") && delete e.x, e.hasOwnProperty("y") && delete e.y, this.data = e)
		}, e
	}(),
	Quests = function() {
		function e() {
			this.data = {}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.setQuests = function(e) {
			this.data = e
		}, e.prototype.getDataAndClear = function() {
			return this.updated = !1, this.data
		}, e.prototype.setZoneState = function(e, t, i) {
			this.setState(e, t, i, "state")
		}, e.prototype.getZoneState = function(e, t) {
			return this.getState(e, t, "state")
		}, e.prototype.setQuestState = function(e, t, i, a) {
			Util.isDefined(this.data[e]) && this.data[e].C === t && this.setState(e, i, a, "queststate")
		}, e.prototype.getQuestState = function(e, t, i) {
			return Util.isDefined(this.data[e]) && this.data[e].C === t ? this.getState(e, i, "queststate") : null
		}, e.prototype.setState = function(e, t, i, a) {
			Util.isDefined(e) && Util.isDefined(t) && (Util.isDefined(this.data[e]) || (this.data[e] = {}), Util.isDefined(this.data[e][a]) || (this.data[e][a] = {}), Util.isDefined(i) ? this.data[e][a][t] = i : delete this.data[e][a][t])
		}, e.prototype.getState = function(e, t, i) {
			return Util.isDefined(e) && Util.isDefined(t) ? Util.isDefined(this.data[e]) && Util.isDefined(this.data[e][i]) ? this.data[e][i][t] : null : null
		}, e.prototype.getZoneVar = function(e, t) {
			return Util.isDefined(this.data[e]) ? this.data[e][t] : null
		}, e.prototype.setZoneVar = function(e, t, i) {
			Util.isDefined(this.data[e]) || (this.data[e] = {}), this.data[e][t] = i
		}, e.prototype.getCurrentQuest = function(e) {
			return Util.isDefined(this.data[e]) && this.data[e].C ? this.data[e].C : 0
		}, e.prototype.getQuestProgress = function(e) {
			return Util.isDefined(this.data[e.ID]) ? (this.data[e.ID].C - 1) / e.quests.length : 0
		}, e.prototype.isQuestComplete = function(e, t, i, a) {
			if (!Util.isDefined(this.data[e]) || !Util.isDefined(a)) return !1;
			if (this.data[e].C < t) return !1;
			if (this.data[e].C > t) return !0;
			var s = !0;
			if (Util.isDefined(a.req))
				for (var r = 0; r < a.req.length; r++) {
					var n = a.req[r];
					"pet" === n.type ? this.getMonsterProgress(e, n.ID) < n.N && (s = !1) : "boss" === n.type || "player" === n.type ? 1 !== this.data[e].B && (s = !1) : i.backpack.hasItem(n.type, n.ID) < n.N && (s = !1)
				}
			return s
		}, e.prototype.isQuestStarted = function(e, t) {
			return Util.isDefined(this.data[e]) ? this.data[e].C == t && Util.isDefined(this.data[e].A) : !1
		}, e.prototype.getMonsterProgress = function(e, t) {
			var i = this.data[e].M;
			if (!Util.isDefined(i)) return 0;
			for (var a = 0; a < i.length; a++)
				if (i[a].ID == t) return i[a].N;
			return 0
		}, e.prototype.getBossProgress = function(e) {
			var t = this.data[e].B;
			return Util.isDefined(t) ? t : 0
		}, e.prototype.clearQuestLine = function(e) {
			delete this.data[e]
		}, e.prototype.startQuestLine = function(e) {
			Util.isDefined(e) && (Util.isDefined(this.data[e]) ? this.data[e].C = 1 : this.data[e] = {
				C: 1
			})
		}, e.prototype.startQuest = function(e, t) {
			Util.isDefined(this.data[e]) && this.data[e].C == t && (this.data[e].A = 1, this.updated = !0)
		}, e.prototype.completeQuest = function(e, t, i, a) {
			if (Util.isDefined(this.data[e]) && this.data[e].C == t) {
				if (Util.isDefined(a.req))
					for (var s = 0; s < a.req.length; s++) {
						var r = a.req[s];
						"pet" !== r.type && i.backpack.consume(r.type, r.ID, r.N)
					}
				delete this.data[e].A, delete this.data[e].M, delete this.data[e].B, delete this.data[e].queststate, this.data[e].C = t + 1, this.updated = !0
			}
		}, e.prototype.defeatMonster = function(t, i, a) {
			if (Util.isDefined(this.data[t])) {
				if (Util.isDefined(i.req))
					for (var s = 0; s < i.req.length; s++) "pet" === i.req[s].type && (this.data[t].M || (this.data[t].M = []), e.hasEntryForMonster(this.data[t].M, i.req[s].ID) || this.data[t].M.push({
						ID: i.req[s].ID,
						N: 0
					}));
				if (Util.isDefined(this.data[t].M))
					for (var s = 0; s < this.data[t].M.length; s++) {
						var r = this.data[t].M[s];
						r.ID == a && r.N++
					}
			}
		}, e.prototype.defeatBoss = function(e) {
			Util.isDefined(this.data[e]) && (this.data[e].B = 1)
		}, e
	}();
Quests.hasEntryForMonster = function(e, t) {
	if (!Util.isDefined(e)) return !1;
	for (var i = 0; i < e.length; i++)
		if (e[i].ID == t) return !0;
	return !1
};
var State = function() {
		function e() {
			this.data = {
				tutorial: {},
				world: {},
				zone: {}
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.setData = function(e) {
			if (this.data = e, Util.isDefined(this.data.zone))
				for (var t in this.data.zone) Util.isDefined(this.data.zone[t].quest) && Util.isDefined(this.data.zone[t].quest.gameID) && (this.data.zone[t].quest.ID = this.data.zone[t].quest.gameID, delete this.data.zone[t].quest.gameID)
		}, e.prototype.getDataAndClear = function() {
			return this.updated = !1, this.data
		}, e.prototype.set = function(e, t) {
			if (Util.isDefined(e)) {
				e = e.split("-");
				for (var i = this.data, a = 0; a < e.length; a++) Util.isDefined(i[e[a]]) || (i[e[a]] = {}), a === e.length - 1 ? i[e[a]] = t : i = i[e[a]];
				this.updated = !0
			}
		}, e.prototype.get = function(e) {
			if (Util.isDefined(e)) {
				e = e.split("-");
				for (var t = this.data, i = 0; i < e.length; i++) {
					if (!Util.isDefined(t[e[i]])) return null;
					t = t[e[i]]
				}
				return t
			}
			return null
		}, e.prototype.getCompletedQuests = function(e) {
			var t = this.get("zone-" + e + "-quest-ID");
			return t - 1 || 0
		}, e.prototype.getZoneVars = function(e, t, i) {
			var a = this.get("zone-" + t),
				t = e.prodigy.world.getZone(t),
				s = 0;
			if (Util.isDefined(a) && Util.isDefined(t.states))
				for (var r = 0; r < t.states.length; r++) {
					var n = t.states[r];
					n.indexOf(i) >= 0 && Util.isDefined(a[r]) && a[r] > 0 && s++
				}
			return s
		}, e
	}(),
	Backpack = function() {
		function e() {
			this.data = {
				hat: [],
				boots: [],
				weapon: [],
				outfit: [],
				item: [],
				fossil: [],
				key: [],
				relic: [],
				currency: [],
				follow: []
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function() {
			return this.updated = !1, this.data
		}, e.prototype.unlockAllItems = function() {
			for (var e in this.data)
				for (var t = this.data[e], i = 0; i < t.length; i++) Util.isDefined(t[i].L) && (delete t[i].L, this.updated = !0)
		}, e.prototype.setItems = function(e) {
			this.data = e, Util.cleanUpGameID(this.data)
		}, e.prototype.getTotalUnique = function() {
			var e = 0;
			for (var t in this.data) e += this.data[t].length;
			return e
		}, e.prototype.setKeyItemData = function(e, t, i) {
			if (!Util.isDefined(this.data.key)) return null;
			for (var a = 0; a < this.data.key.length; a++) this.data.key[a].ID == e && (this.data.key[a][t] = i);
			return this.updated = !0, null
		}, e.prototype.getKeyItemData = function(e, t) {
			if (!Util.isDefined(this.data.key)) return null;
			for (var i = 0; i < this.data.key.length; i++)
				if (this.data.key[i].ID == e) return this.data.key[i][t];
			return null
		}, e.prototype.setItemData = function(e, t, i) {
			if (!Util.isDefined(this.data.item)) return null;
			for (var a = 0; a < this.data.item.length; a++) this.data.item[a].ID == e && (this.data.item[a][t] = i);
			this.updated = !0
		}, e.prototype.getItemData = function(e, t) {
			if (!Util.isDefined(this.data.item)) return null;
			for (var i = 0; i < this.data.item.length; i++)
				if (this.data.item[i].ID == e) return this.data.item[i][t];
			return null
		}, e.prototype.getItem = function(e, t) {
			if (Util.isDefined(this.data.item))
				for (var i = 0; i < this.data.item.length; i++)
					if (this.data.item[i].ID == t) return this.data.item[i]
		}, e.prototype.hasItem = function(e, t) {
			if (!Util.isDefined(e) || !Util.isDefined(this.data) || !Util.isDefined(this.data[e])) return 0;
			for (var i = 0; i < this.data[e].length; i++)
				if (this.data[e][i].ID == t) return this.data[e][i].N || 1;
			return 0
		}, e.prototype.hasItems = function(e) {
			for (var t = 0, i = 0; i < e.length; i++) this.hasItem(e[i].type, e[i].ID) && t++;
			return t
		}, e.prototype.addKeyItem = function(e, t, i) {
			Util.isDefined(this.data.key) || (this.data.key = []);
			for (var a = this.data.key, s = 0; s < a.length; s++) {
				var r = a[s];
				if (r.ID == e && r.lvl < t) return r.lvl = t, this.updated = !0, void 0
			}
			var n = {
				ID: e
			};
			n.lvl = t, Util.isDefined(i) && Util.isDefined(i.seed) && (n.seed = i.seed), a.push(n), this.updated = !0
		}, e.prototype.addBountyNote = function(e, t, i) {
			Util.isDefined(this.data[e]) || (this.data[e] = []);
			var a = this.data[e];
			if (Util.isDefined(a)) {
				var s = {
					ID: t
				};
				s.N = 1, Util.isDefined(i) && (s.seed = i), a.push(s), this.updated = !0
			}
		}, e.prototype.add = function(e, t, i, a) {
			if (Util.isDefined(this.data[e]) || (this.data[e] = []), "key" === e) return this.addKeyItem(t), void 0;
			a = a || 1;
			var s = this.data[e];
			if (Util.isDefined(s)) {
				for (var r = 0; r < s.length; r++) {
					var n = s[r];
					if (n.ID == t) return Util.isDefined(n.N) ? (n.N < 99 || "currency" === e) && (n.N += a) : n.N = 1 + a, n.N > 99 && "currency" !== e && (n.N = 99), this.updated = !0, void 0
				}
				var o = {
					ID: t
				};
				a > 1 && (o.N = a), i && (o.L = 1), s.push(o), this.updated = !0
			}
		}, e.prototype.consume = function(e, t, i) {
			if (Util.isDefined(e)) {
				var a = this.data[e];
				if (Util.isDefined(a))
					for (var s = 0; s < a.length; s++) {
						var r = a[s];
						if (r.ID == t) return Util.isDefined(r.N) ? (r.N -= i || 1, 1 === r.N ? delete r.N : r.N <= 0 && a.splice(s, 1)) : a.splice(s, 1), this.updated = !0, void 0
					}
			}
		}, e.prototype.consumeLegacyBounties = function() {
			this.consume("key", 5, 1), this.consume("key", 6, 1), this.consume("key", 7, 1)
		}, e.prototype.getBackpackItemsByType = function(e) {
			var t = [],
				i = this.data[e];
			if (Util.isDefined(i))
				for (var a = 0; a < i.length; a++) t.push(i[a]);
			return t
		}, e.prototype.getItemCount = function(e) {
			for (var t = 0, i = 0; i < e.length; i++) t += this.getBackpackItemsByType(e[i]).length;
			return t
		}, e.prototype.canCraft = function(e, t) {
			var i = Items.getItemData(e, t);
			if (!Util.isDefined(i.recipe)) return !1;
			for (var a = 0; a < i.recipe.length; a++) {
				var s = i.recipe[a];
				if (this.hasItem(s.type, s.ID) < s.N) return !1
			}
			return !0
		}, e.prototype.craft = function(e, t) {
			if (!this.canCraft(e, t)) return !1;
			for (var i = Items.getItemData(e, t), a = 0; a < i.recipe.length; a++) {
				var s = i.recipe[a];
				this.consume(s.type, s.ID, s.N)
			}
			return this.add(e, t), this.updated = !0, !0
		}, e
	}();
Prodigy.Entity.Equipment = function(e) {
	this.game = e, this.data = {}
}, Prodigy.Entity.Equipment.prototype = {
	constructor: Prodigy.Entity.Equipment,
	setFollow: function(e) {
		Util.isDefined(e) ? this.data.follow = e : delete this.data.follow, this.updated = !0
	},
	getDataAndClear: function() {
		return this.updated = !1, this.data
	},
	getHeartBonuses: function() {
		return this.calculateAffixBonus("hearts")
	},
	getDamageBonuses: function() {
		return this.calculateAffixBonus("damage")
	},
	getAffixes: function() {
		var e = [];
		for (var t in this.data)
			if (Util.isDefined(Items.getItemData(t, this.data[t]))) {
				var i = Items.getItemData(t, this.data[t]).effects;
				Util.isDefined(i) && e.push(i.slice(0, i.length))
			} return e
	},
	calculateAffixBonus: function(e) {
		for (var t = 0, i = null, a = this.getAffixes(), s = 0; s < a.length; s++) i = Items.getItemData("affix", a[s]), i.type === e && (1 === i.opType ? t *= i.value : t += i.value);
		return t
	},
	getEquipment: function(e) {
		if (!Util.isDefined(this.data[e])) return null;
		var t = parseInt(this.data[e]);
		return t > 0 ? t : null
	},
	setEquipment: function(e) {
		Util.isEmptyObject(e) || (this.data = e)
	},
	equip: function(e, t) {
		return Util.isDefined(this.data[t]) && this.data[t] === e ? !1 : (this.data[t] = e, this.updated = !0, !0)
	},
	unEquip: function(e) {
		if (Util.isDefined(this.data[e])) {
			var t = this.data[e];
			return delete this.data[e], this.updated = !0, t
		}
		return !1
	}
};
var Kennel = function() {
		function e(e) {
			this.player = e, this.setPets([])
		}
		return e.prototype.getDataAndClear = function() {
			return this.updated = !1, this.data
		}, e.prototype.setTeam = function(e, t) {
			if (Util.isDefined(t))
				if (t === Number(t)) e.team = t;
				else {
					var i = e.team;
					e.team = t.team, t.team = i, Util.isDefined(e.team) || (t.isPVPTeam = e.isPVPTeam), Util.isDefined(t.team) || (e.isPVPTeam = t.isPVPTeam)
				}
			else delete e.team;
			Util.isDefined(e.team) || (e.isPVPTeam = !1), Util.isDefined(t) && !Util.isDefined(t.team) && (t.isPVPTeam = !1), this.updated = !0
		}, e.prototype.getTeamSource = function() {
			var e = [];
			Util.isDefined(this.player.data.team) || (this.player.data.team = 0), e[this.player.data.team] = this.player;
			for (var t = 0; t < this.data.length; t++) {
				var i = this.data[t];
				Util.isDefined(i.team) && (Util.isDefined(e[i.team]) ? delete i.team : e[i.team] = i)
			}
			return e
		}, e.prototype.getTeam = function() {
			for (var e = this.getTeamSource(), t = 0; t < e.length; t++) {
				var i = e[t];
				i instanceof Player || !Util.isDefined(i) || (e[t] = new Monster(i, this.player.game))
			}
			return e
		}, e.prototype.getAvgTeamLv = function() {
			for (var e = this.getTeamSource(), t = 0, i = 0, a = 0; a < e.length; a++) Util.isDefined(e[a]) ? Util.isDefined(e[a].data) ? Util.isDefined(e[a].data.level) ? t += e[a].data.level : t++ : Util.isDefined(e[a].level) && (t += e[a].level) : i += 1;
			return Math.floor(t / (e.length - i))
		}, e.prototype.getTeamScore = function() {
			for (var e = this.getTeam(), t = 0, i = 0; i < e.length; i++) Util.isDefined(e[i]) && !e[i].isKnockedOut() && (t += e[i].getCurrentHearts(this.player.game));
			return t
		}, e.prototype.findEmptyTeamIndex = function() {
			var e = [0, 1, 2, 3, 4];
			Util.isDefined(this.player.data.team) ? Util.removeFromArray(this.player.data.team, e) : Util.removeFromArray(0, e);
			for (var t = 0; t < this.data.length; t++) {
				var i = this.data[t].team;
				Util.isDefined(i) && Util.removeFromArray(i, e)
			}
			return e[0]
		}, e.prototype.add = function(e, t, i, a, s) {
			if (Util.isDefined(e)) {
				var r = {
					ID: e,
					hp: Util.isDefined(t) ? t : GameConstants.MAX_SAFE_INTEGER,
					stars: Util.isDefined(i) ? i : 0,
					level: Util.isDefined(a) ? a : 1,
					nickname: Util.isDefined(s) ? s : null
				};
				this.data.push(r);
				var n = this.findEmptyTeamIndex();
				Util.isDefined(n) && this.setTeam(r, n), this.updated = !0
			} else Util.log("Malformed pet data.", Util.ERROR)
		}, e.prototype.remove = function(e) {
			for (var t = this.data.length; t--;) this.data[t] === e && this.data.splice(t, 1);
			this.updated = !0
		}, e.prototype.getPets = function(e) {
			for (var t = [], i = 0; i < this.data.length; i++) e && Util.isDefined(this.data[i].team) || (this.data[i].ID = this.data[i].ID || this.data[i].gameID, t.push(this.data[i]));
			return t
		}, e.prototype.setPets = function(e) {
			this.data = e
		}, e.prototype.hasMaxNonMemberPets = function() {
			return this.getPets().length >= 10
		}, e.prototype.getPetsAsMonsters = function() {
			for (var e = [], t = 0; t < this.data.length; t++) e.push(new Monster(this.data[t], this.player.game));
			return e
		}, e.prototype.hasPet = function(e) {
			for (var t = 0; t < this.data.length; t++)
				if (this.data[t].ID == e) return !0;
			return !1
		}, e.prototype.isFull = function() {
			return this.data.length >= 140
		}, e.prototype.getNumPets = function() {
			return this.data.length
		}, e.prototype.setPVPTeam = function(e, t) {
			e.isPVPTeam = t, this.updated = !0
		}, e.prototype.isPVPTeam = function(e) {
			return Util.isDefined(e.isPVPTeam) && e.isPVPTeam
		}, e.prototype.reconcilePVPTeam = function() {
			var e = this.getTeamSource(),
				t = 0,
				i = -1,
				a = 0,
				s = null;
			for (a = 0; a < e.length; a++) s = e[a], Util.isDefined(s) && (s instanceof Player ? i = a : Util.isDefined(s.isPVPTeam) && s.isPVPTeam && t++);
			for (a = e.length - 1; t > GameConstants.get("GameConstants.Battle.MAX_NUM_PETS") && a >= 0; a--) s = e[a], a !== i && Util.isDefined(s) && Util.isDefined(s.isPVPTeam) && s.isPVPTeam && (s.isPVPTeam = !1, t--, this.updated = !0);
			for (a = 0; t < GameConstants.get("GameConstants.Battle.MAX_NUM_PETS") && a < e.length; a++) s = e[a], a === i || !Util.isDefined(s) || Util.isDefined(s.isPVPTeam) && s.isPVPTeam || (s.isPVPTeam = !0, t++, this.updated = !0)
		}, e
	}(),
	Monster = function() {
		function e(e, t) {
			Prodigy.Creature.call(this, t), this.data = e, this.data.ID = e.ID || e.gameID, this.nickname = this.data.nickname, this.drops = this.data.drops, this.attacks = this.data.attacks, delete this.data.R, delete this.data.drops, this.source = Items.getItemData("pet", this.data.ID), this.type = this.source.life
		}
		return e.prototype = Object.create(Prodigy.Creature.prototype), e.prototype.canCatch = function(e) {
			return Util.isDefined(e.bounty) ? !0 : !Util.isDefined(this.nickname)
		}, e.prototype.getAttacks = function(e) {
			if (Util.isDefined(this.attacks)) return this.attacks;
			var t = [];
			if (Util.isDefined(this.data.evolve)) {
				for (var i = 1, a = 0; a < this.data.evolve.length; a++) {
					var s = this.data.evolve[a],
						r = Items.getItemData("pet", s.ID).curve;
					t = t.concat(Prodigy.Creature.getAttacksFromCurve(r, i, s.lvl)), i = s.lvl
				}
				t = t.concat(Prodigy.Creature.getAttacksFromCurve(Items.getItemData("pet", this.getID()).curve, i, this.getLevel()))
			} else t = t.concat(Prodigy.Creature.getAttacksFromCurve(Items.getItemData("pet", this.getID()).curve, 1, this.getLevel()));
			return Prodigy.Creature.getAttacksOfType(Util.removeDuplicates(t), e)
		}, e.prototype.getMaxHearts = function(e) {
			var t = 120;
			if (Util.isDefined(this.data.evolve)) {
				for (var i = 1, a = 0; a < this.data.evolve.length; a++) {
					var s = this.data.evolve[a],
						r = Items.getItemData("pet", s.ID).life;
					t += Prodigy.Creature.getHeartsFromCurve(r, i, s.lvl - 1), i = s.lvl
				}
				t += Prodigy.Creature.getHeartsFromCurve(this.type, i, this.getLevel())
			} else t += Prodigy.Creature.prototype.getMaxHearts.call(this, e);
			return t = Math.round(t * this.modifiers.maxHearts), Math.min(t, Prodigy.Creature.MAX_HEARTS)
		}, e.prototype.evolve = function(e) {
			Util.isDefined(this.data.evolve) || (this.data.evolve = []), this.data.evolve.push({
				ID: this.data.ID,
				lvl: this.getLevel()
			}), this.data.ID = e, this.source = Items.getItemData("pet", this.data.ID)
		}, e.prototype.getID = function() {
			return this.data.ID
		}, e.prototype.getName = function() {
			return this.nickname || this.source.name
		}, e.prototype.getSourceName = function() {
			return this.source.name
		}, e.prototype.getDescription = function() {
			return this.source.flavorText
		}, e.prototype.getLife = function() {
			return this.source.life
		}, e.prototype.getPower = function() {
			return this.source.power
		}, e.prototype.getGrowth = function() {
			return this.source.growth
		}, e.prototype.getElement = function() {
			return this.source.element
		}, e.prototype.generate = function(e, t) {
			e = Math.max(1, e - t), this.data.stars = Prodigy.Creature.starsToLevel(e - 1), this.data.level = e
		}, e.prototype.getLevelingCurve = function(e) {
			Prodigy.Creature.prototype.getLevelingCurve.call(this, e);
			for (var t, i = [], a = [], s = Items.getItemData("pet", this.getID()).curve, r = 0; r < s.length; r++) t = s[r], Util.isDefined(t.e) && t.lvl <= e ? a.push(t) : t.lvl === e && i.push(t);
			return a.concat(i)
		}, e.prototype.getDrops = function() {
			var e = [{
				type: "gold",
				N: 100
			}];
			return e = e.concat(Items.getItemDrops(this.drops))
		}, e
	}();
Prodigy.Entity.House = function() {
	this.data = {
		bg: {
			active: 1,
			own: [1]
		},
		items: {},
		currentHouseTag: "suburbs"
	}
}, Prodigy.extends(Prodigy.Entity.House, Object, {
	getDataAndClear: function() {
		return this.updated = !1, this.data
	},
	setItems: function(e) {
		Util.isDefined(e) && (Util.isDefined(e.items) || (e.items = this.data.items), Util.isDefined(e.bg) || (e.bg = this.data.bg), Util.isDefined(e.currentHouseTag) || (e.currentHouseTag = this.data.currentHouseTag), this.data = e, Util.isDefined(this.data.active) || (this.add(17), this.add(3), this.add(18), this.add(18), this.add(14), this.add(1), this.add(13), this.data.active = [], this.setActive(17, 480, 160, 1, 0, 0, 0, 0), this.setActive(3, 400, 160, 1, 0, 0, 0, 0), this.setActive(18, 440, 100, 1, 0, 0, 0, 0), this.setActive(18, 840, 100, 1, 0, 0, 0, 0), this.setActive(14, 880, 240, 1, 0, 0, 0, 0), this.setActive(1, 880, 140, 1, 0, 0, 0, 0), this.setActive(13, 640, 80, 1, 0, 0, 0, 0)))
	},
	getItems: function() {
		return this.data.items
	},
	getSortedActive: function() {
		var e = [];
		if (!Util.isDefined(this.data.active)) return e;
		for (var t in this.data.items)
			for (var i = 0; i < this.data.active.length; i++) {
				this.data.active[i].ID = this.data.active[i].ID || this.data.active[i].ID;
				var a = this.data.active[i];
				a.ID === parseInt(t) && e.push(a)
			}
		return e.sort(function(e, t) {
			return e.z - t.z
		}), e
	},
	setAllInactive: function() {
		this.data.active = [], this.updated = !0
	},
	add: function(e) {
		var t = this.data.items[e];
		Util.isDefined(t) || (t = this.data.items[e] = {
			N: 0,
			A: []
		}), t.N < 9 && t.N++, this.updated = !0
	},
	setActive: function(e, t, i, a, s, r, n, o) {
		var h = this.data.items[e];
		if (Util.isDefined(h) && h.N > this.getActive(e)) {
			var l = {
				ID: e,
				x: t,
				y: i,
				dx: s,
				dy: r,
				z: a,
				anchorY: n,
				r: o,
				stack: []
			};
			return this.data.active.push(l), this.updated = !0, l
		}
		return null
	},
	updateActive: function(e, t, i, a, s, r, n, o, h) {
		for (var l = 0; l < this.data.active.length; l++) {
			var d = this.data.active[l];
			d === e && (d.ID = t, d.x = i, d.y = a, d.z = s, d.dx = r, d.dy = n, d.anchorY = o, d.r = h)
		}
		this.updated = !0
	},
	setInactive: function(e) {
		Util.removeFromArray(e, this.data.active), this.updated = !0
	},
	getCurrentHouseTag: function() {
		return this.data.currentHouseTag
	},
	setCurrentHouseTag: function(e) {
		this.data.currentHouseTag = e, this.updated = !0
	},
	getBackground: function() {
		return Util.isDefined(this.data.bg.active) ? this.data.bg.active : 1
	},
	addBackground: function(e) {
		this.hasBackground(e) || this.data.bg.own.push(e), this.updated = !0
	},
	hasBackground: function(e) {
		return Util.inArray(this.data.bg.own, e)
	},
	getData: function(e) {
		return this.data.items[e]
	},
	getOwned: function(e) {
		var t = this.getData(e);
		return Util.isDefined(t) && Util.isDefined(t.N) ? t.N : 0
	},
	hasMax: function(e) {
		return this.getOwned(e) >= 9
	},
	getActive: function(e) {
		var t = 0;
		if (Util.isDefined(this.data.active))
			for (var i = 0; i < this.data.active.length; i++) this.data.active[i].ID === e && t++;
		return t
	},
	getActiveData: function(e) {
		return this.data.active[e]
	},
	getItemCount: function() {
		var e = 0;
		for (var t in this.data.items) e++;
		return e
	},
	getActiveCount: function() {
		return Util.isDefined(this.data.active) ? this.data.active.length : 0
	},
	getUnplacedItems: function() {
		var e = [];
		for (var t in this.data.items) {
			var i = this.getActive(parseInt(t));
			i < this.data.items[t].N && e.push({
				ID: parseInt(t),
				N: this.data.items[t].N - i
			})
		}
		return e
	}
});
var Player = function() {
	function e(e) {
		Prodigy.Creature.call(this, e), this.init(null), this.saveEnabled = !1
	}
	e.prototype = Object.create(Prodigy.Creature.prototype), e.prototype.createRandom = function() {
		this.equipment.data.hat = Items.getRandomItem("hat").ID, this.equipment.data.weapon = Items.getRandomItem("weapon").ID, this.equipment.data.outfit = Items.getRandomItem("outfit").ID
	}, e.prototype.getUpdatedData = function(e) {
		var t = {};
		(this.equipment.updated || e) && (t.equipment = this.equipment.getDataAndClear()), (this.tutorial.updated || e) && (t.tutorial = this.tutorial.getDataAndClear()), (this.appearance.updated || e) && (t.appearance = this.appearance.getDataAndClear()), (this.kennel.updated || e) && (t.pets = this.kennel.getDataAndClear()), (this.quests.updated || e) && (t.quests = this.quests.getDataAndClear()), (this.house.updated || e) && (t.house = this.house.getDataAndClear()), (this.updated || e) && (t.data = this.getDataAndClear()), (this.backpack.updated || e) && (t.inventory = this.backpack.getDataAndClear()), (this.state.updated || e) && (t.state = this.state.getDataAndClear()), (this.achievements.updated || e) && (t.achievements = this.achievements.getDataAndClear());
		for (var i in t) t[i] = JSON.stringify(t[i]);
		return t
	}, e.prototype.init = function(e) {
		if (this.isMember = !1, this.backpack = new Backpack, this.backpack.consumeLegacyBounties(), this.equipment = new Prodigy.Entity.Equipment(this.game), this.appearance = new Appearance, this.achievements = new Prodigy.Achievements, this.kennel = new Kennel(this), this.quests = new Quests, this.state = new State, this.house = new Prodigy.Entity.House, this.tutorial = new Tutorial, !Util.isDefined(e)) return this.house.setItems(this.house.data), !1;
		if (Util.isDefined(e.userID) ? this.userID = parseInt(e.userID) : Util.isDefined(e.id) && (this.userID = parseInt(e.id)), Util.isDefined(e.data) && (this.data = Util.getObject(e.data)), Util.isDefined(e.pets) && this.kennel.setPets(Util.getObject(e.pets)), Util.isDefined(e.tutorial) && this.tutorial.setData(Util.getObject(e.tutorial)), Util.isDefined(e.state) && this.state.setData(Util.getObject(e.state)), this.house.setItems(Util.isDefined(e.house) ? Util.getObject(e.house) : this.house.data), Util.isDefined(e.inventory) && (this.backpack.setItems(Util.getObject(e.inventory)), this.backpack.consumeLegacyBounties()), Util.isDefined(e.equipment) && this.equipment.setEquipment(Util.getObject(e.equipment)), Util.isDefined(e.quests) && this.quests.setQuests(Util.getObject(e.quests)), Util.isDefined(e.appearance) && this.appearance.setAppearance(Util.getObject(e.appearance)), Util.isDefined(e.achievements) && this.achievements.init(Util.getObject(e.achievements)), Util.isDefined(e.isMember) && 1 == e.isMember && this.setMembership(), this.parentEmail = Util.isDefined(e.parentEmail) ? e.parentEmail : "", this.lastVisitedDate = Util.isDefined(e.lastVisited) ? new Date(e.lastVisited) : new Date, this.registerDate = Util.isDefined(e.registerDate) ? new Date(e.registerDate) : null, Util.isDefined(this.data.dailyLoginBonus) && (this.data.dailyLoginBonus.session++, this.updated = !0), Util.isDefined(e.classIDs)) {
			this.owners = e.classIDs, this.classIDs = [];
			for (var t = 0; t < e.classIDs.length; t++) this.classIDs.push(e.classIDs[t].id)
		}
		if (this.playerParents = [], this.playerTeachers = [], Util.isDefined(e.ownerIDs))
			for (var i = {}, t = 0; t < e.ownerIDs.length; t++) i = e.ownerIDs[t], "parent" === i.type ? this.playerParents.push(i) : "teacher" === i.type && this.playerTeachers.push(i);
		//this.checkVersion()
	}, e.prototype.checkVersion = function() {
		var e = 9,
			t = this.data.versionID || 0;
		if (1 > t && (Util.isDefined(this.state.data.zone) && Util.isDefined(this.state.data.zone.lamplight) && delete this.state.data.zone.lamplight, Util.isDefined(this.state.data.zone) && Util.isDefined(this.state.data.zone.house) && delete this.state.data.zone.house, this.state.updated = !0), 2 > t && this.kennel.hasPet(125) && this.backpack.add("follow", 125), 3 > t) {
			var i = this.state.get("zone-forest-quest-ID");
			Util.isDefined(i) && i >= 12 && this.state.set("zone-forest-quest", {
				ID: 13
			}), i = this.state.get("zone-shiverchill-quest-ID"), Util.isDefined(i) && i >= 15 && this.state.set("zone-shiverchill-quest", {
				ID: 16
			}), i = this.state.get("zone-skywatch-quest-ID"), Util.isDefined(i) && i >= 13 && this.state.set("zone-skywatch-quest", {
				ID: 14
			}), i = this.state.get("zone-bonfire_spire-quest-ID"), Util.isDefined(i) && i >= 14 && this.state.set("zone-bonfire_spire-quest", {
				ID: 15
			})
		}
		if (4 > t) {
			Util.isDefined(this.data.stars) || (this.data.stars = 0), this.data.stars = 10 * this.data.stars, this.changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER);
			for (var a = this.kennel.getPets(), s = 0; s < a.length; s++) a[s].hp = GameConstants.MAX_SAFE_INTEGER, Util.isDefined(a[s].stars) || (a[s].stars = 0), Util.isDefined(a[s].level) || (a[s].level = 1), a[s].stars = 0 === a[s].stars ? Prodigy.Creature.starsToLevel(a[s].level - 1) : 10 * a[s].stars
		}
		if (6 > t && (this.backpack.hasItem("weapon", 1e3) && this.backpack.consume("weapon", 1e3, 1), 1e3 === this.equipment.getEquipment("weapon") && this.equipment.unEquip("weapon")), 8 > t && Util.isDefined(this.kennel.data))
			for (var r = [], s = 0; s < this.kennel.data.length; s++) {
				var n = this.kennel.data[s];
				if (!Util.isDefined(n.ID) && Util.isDefined(n.name)) {
					var o = 0;
					for (var h in Monsters.data)
						if (Monsters.data.hasOwnProperty(h)) {
							var l = Monsters.data[h];
							if (l.name === n.name) {
								o = l.ID;
								break
							}
						} if (o > 0) {
						for (var d = !0, c = 0; c < r.length; c++)
							if (o === r[c]) {
								this.kennel.data.splice(s, 1), s--, d = !1;
								break
							} d && (r.push(o), this.kennel.data[s] = {
							ID: o,
							stars: 0,
							level: 1
						}), this.kennel.updated = !0
					}
				}
			}
		if (9 > t) {
			var p = this.backpack.hasItem("weapon", 1e3);
			p > 0 && this.backpack.consume("weapon", 1e3, p), 1e3 === this.equipment.getEquipment("weapon") && this.equipment.unEquip("weapon"), p = this.backpack.hasItem("weapon", 96), p > 0 && this.backpack.consume("weapon", 96, p), 96 === this.equipment.getEquipment("weapon") && this.equipment.unEquip("weapon")
		}
		if (10 > t) {
			var g = this.game.prodigy.world.getZone("house");
			g.getState("hasClickedPlayerCardVisit") === !0 && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_VISIT_BUTTON), g.getState("hasClickedWorldMap") === !0 && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON), g.getState("hasClickedLockButton") && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON);
			var u = g.getState("houseMovingBreadcrumbs");
			Util.isDefined(u) && (u >= 0 && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON), u >= 1 && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE), u >= 2 && this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_MOVE_BUTTON))
		}
		e > t && (this.data.versionID = e, this.updated = !0)
	}, e.prototype.hasValidatedParentEmail = function() {
		return !0
	}, e.DEBUG_SPLIT_GROUPS = [], e.prototype.inTestGroup = function(t, i, a, s, r, n, o, h) {
		if (GameConstants.get("GameConstants.Build.DEBUG") && e.DEBUG_SPLIT_GROUPS.length > 0) {
			for (var l = 0; l < e.DEBUG_SPLIT_GROUPS.length; l++)
				if (t === e.DEBUG_SPLIT_GROUPS[l]) return !0;
			return !1
		}
		var d = null,
			c = h;
		return a ? (d = this.getLatestClassID(!0, !0), Util.isNullOrUndefined(c) && (c = GameConstants.get("GameConstants.Features.SplitTests.CLASS_ID_MOD"))) : i && Util.isDefined(this.userID) ? (d = this.userID, Util.isNullOrUndefined(c) && (c = GameConstants.get("GameConstants.Features.SplitTests.USER_ID_MOD"))) : s && Util.isDefined(this.grade) && (d = this.grade, Util.isNullOrUndefined(c) && (c = GameConstants.get("GameConstants.Features.SplitTests.GRADE_MOD"))), Util.isNullOrUndefined(o) && (o = GameConstants.get("GameConstants.Features.SplitTests.GROUP_MOD")), r && Util.isDefined(d) && Util.isDefined(n) && n > 0 && (d = Math.floor(d / n), Util.isNullOrUndefined(c) && (c = o)), Util.isDefined(d) && Util.isDefined(c) && c > 0 && d % c === t
	}, e.prototype.inTestGroupLegacy = function(t, i, a, s, r, n) {
		if (GameConstants.get("GameConstants.Build.DEBUG") && e.DEBUG_SPLIT_GROUPS.length > 0) {
			for (var o = 0; o < e.DEBUG_SPLIT_GROUPS.length; o++)
				if (t === e.DEBUG_SPLIT_GROUPS[o]) return !0;
			return !1
		}
		return i && Util.isDefined(this.userID) && this.userID % GameConstants.get("GameConstants.Features.SplitTests.USER_ID_MOD") === t || a && Util.isDefined(this.classIDs) && this.classIDs.length > 0 && this.classIDs[this.classIDs.length - 1] % GameConstants.get("GameConstants.Features.SplitTests.CLASS_ID_MOD") === t || s && Util.isDefined(this.grade) && this.grade % GameConstants.get("GameConstants.Features.SplitTests.GRADE_MOD") === t || r && Util.isDefined(this.userID) && Util.isDefined(n) && Math.floor(this.userID / n) % 3 === t
	}, e.prototype.setLocation = function(e) {
		1 === e ? this.location = "Other" : e >= 2 && 4 >= e || e >= 8 && 11 >= e ? this.location = "USA" : 5 === e ? this.location = "Australia" : 6 === e && (this.location = "England")
	}, e.prototype.getLatestClassIDLegacy = function() {
		return Util.isDefined(this.classIDs) && this.classIDs.length > 0 ? this.classIDs[this.classIDs.length - 1] : 0
	}, e.prototype.getLatestClassID = function(e, t) {
		e = Util.getOptionalParameter(e, !0) && this.playerTeachers.length > 0, t = Util.getOptionalParameter(t, !0) && this.playerParents.length > 0;
		var i = [],
			a = null,
			s = null,
			r = null;
		t && (i = i.concat(this.playerParents)), e && (i = i.concat(this.playerTeachers));
		for (var n = 0; n < i.length; n++) {
			s = i[n];
			for (var o = 0; o < this.owners.length; o++) a = this.owners[o], s.startDate === a.startDate && (null === r || a.startDate > r.startDate) && (r = a)
		}
		return Util.isDefined(r) ? r.id : 0
	}, e.prototype.inTestGroups = function(e, t, i, a, s, r, n) {
		for (var o = !1, h = 0; h < e.length; h++)
			if (o = this.inTestGroup(e[h], t, i, a, s, r, n)) return !0;
		return !1
	}, e.prototype.castSpell = function(e) {
		Util.isDefined(this.spellStreak) || (this.spellStreak = 0), e ? (this.achievements.increment("qC", 1), this.spellStreak++) : this.spellStreak = 0
	}, e.prototype.setParentEmail = function(e) {
		this.parentEmail = e, this.data.parentEmailReward = Util.isDefined(e) && e.length > 0 ? 1 : 0, this.battleCounter = 0, this.updated = !0
	}, e.prototype.closedEmailPrompt = function() {
		this.data.emailPromptCounter = Util.isDefined(this.data.emailPromptCounter) ? this.data.emailPromptCounter + 1 : 0, this.updated = !0
	}, e.prototype.setSurvey = function(e) {
		this.data.survey = e, this.updated = !0
	}, e.prototype.getSpellStreak = function() {
		return this.spellStreak || 0
	}, e.prototype.getSurvey = function() {
		return this.data.survey || 0
	}, e.prototype.getBountyScore = function() {
		return this.data.bountyScore || 0
	}, e.prototype.addBountyScore = function(e) {
		this.data.bountyScore = this.getBountyScore() + e, this.updated = !0
	}, e.prototype.getMods = function() {
		return this.data.mods || {}
	}, e.prototype.setMod = function(e, t) {
		Util.isDefined(this.data.mods[e]) ? this.data.mods[e] += t : (this.data.mods[e] = t, this.updated = !0)
	}, e.prototype.hasMod = function(e) {
		return !Util.isDefined(this.data.mods[e])
	}, e.prototype.setMembership = function() {
		Util.isDefined(this.data.nm) ? this.data.nm = 2 : (Util.isDefined(this.data.startDate) && this.data.startDate < (new Date).getTime() && (this.data.daysToConvert = ((new Date).getTime() - this.data.startDate) / 864e5), this.data.nm = 1, this.updated = !0), this.isMember = !0, this.backpack.unlockAllItems()
	}, e.prototype.isUnranked = function() {
		return !Util.isDefined(this.data.arenaRank)
	}, e.prototype.getArenaRank = function() {
		return Util.isDefined(this.data.arenaRank) ? this.data.arenaRank : 0
	}, e.prototype.getArenaScore = function() {
		return Util.isDefined(this.data.arenaScore) ? this.data.arenaScore : 0
	}, e.prototype.fx = function(e, t) {
		this[e] = !0;
		var i = {
			action: "emit",
			data: {
				userID: this.userID,
				type: e
			}
		};
		t && (this[e] = i)
	}, e.prototype.heal = function() {
		this.changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER);
		for (var e = this.kennel.getPets(), t = 0; t < e.length; t++) delete e[t].hp;
		this.kennel.updated = !0
	}, e.prototype.healTeam = function(e) {
		this.changeCurrentHearts(e);
		for (var t = this.kennel.getPets(), i = 0; i < t.length; i++) {
			var a = new Monster(t[i], this.game);
			Util.isDefined(t[i].hp) && (t[i].hp + e > a.getMaxHearts() ? delete t[i].hp : t[i].hp = t[i].hp + e)
		}
		this.kennel.updated = !0
	}, e.prototype.healTeamMember = function(e, t, i) {
		for (var a = this.kennel.getPets(), s = 0; s < a.length; s++)
			if (a[s].ID === t) {
				var r = new Monster(a[s], this.game);
				Util.isDefined(a[s].hp) && (a[s].hp = a[s].hp + e > r.getMaxHearts() ? r.getMaxHearts() : a[s].hp + e);
				break
			} this.kennel.updated = !0, Util.isDefined(i) && i()
	}, e.prototype.setZone = function(e) {
		Util.isDefined(e) && e.indexOf("scene") > -1 || (this.data.zone = e, this.updated = !0)
	}, e.prototype.transform = function(e, t) {
		this.transformID = e, Util.isDefined(this.timer) && window.clearInterval(this.timer), this.timer = setInterval(this.transform.bind(this), t)
	}, e.prototype.getAttacks = function(e) {
		var t = this.getAllAttacks();
		return Util.isDefined(this.data.spellbook) ? (this.data.spellbook.length < 6 && (this.data.spellbook = t.splice(0, 6)), t = this.data.spellbook) : (t.length > 6 && (t = t.splice(0, 6)), this.data.spellbook = t), t.length > 6 && (t = t.splice(0, 6)), Util.isDefined(e) ? Prodigy.Creature.getAttacksOfType(t, e) : t
	}, e.prototype.getAllAttacks = function() {
		var t = Prodigy.Creature.getAttacksFromCurve(e.LEVEL_CURVE, 1, this.getLevel());
		if (Util.isDefined(this.data.spells))
			for (var i = 0; i < this.data.spells.length; i++) Util.inArray(t, this.data.spells[i]) || t.push(this.data.spells[i]);
		return t
	}, e.prototype.getNumAttacks = function() {
		return this.getAllAttacks().length
	}, e.prototype.getName = function() {
		return this.appearance.getName()
	}, e.prototype.getMaxHearts = function(e) {
		var t = Math.min(Math.floor(200 + Prodigy.Creature.prototype.getMaxHearts.call(this, e) + this.getHeartBonus()), Prodigy.Creature.MAX_HEARTS);
		return Math.round(t * this.modifiers.maxHearts)
	}, e.prototype.getHeartBonus = function() {
		return this.equipment.getHeartBonuses()
	}, e.prototype.getDamageBonus = function() {
		return this.equipment.getDamageBonuses()
	}, e.prototype.getGold = function(e) {
		var t = 0;
		return Util.isDefined(this.data.gold) && (t = this.data.gold), e && (t = Util.numberToString(t)), t
	}, e.prototype.changeGold = function(e, t) {
		Util.isNullOrUndefined(t) || this.game.prodigy.network.sendItemChangeEvent(t, {
			type: "gold",
			ID: -1,
			N: e
		}), e > 0 ? this.achievements.increment("gE", e) : 0 > e && this.achievements.increment("gS", Math.min(Math.max(this.data.gold, 0), Math.abs(e))), this.data.gold = this.getGold() + e, this.data.gold < 0 && delete this.data.gold, this.data.gold > GameConstants.MAX_SAFE_INTEGER && (this.data.gold = 1e9), this.updated = !0
	}, e.prototype.equip = function(e, t) {
		if ("pet" === t) {
			this.kennel.remove(e)
		}
		return this.equipment.equip(e, t)
	}, e.prototype.unEquip = function(e) {
		var t = this.equipment.unEquip(e);
		return "pet" === e && this.kennel.add(t.ID, t.hp, t.stars, t.level, t.nickname), t
	}, e.prototype.setDefault = function(e) {
		"male" === e ? (this.appearance.setHair(19, Math.floor(5 * Math.random() + 1)), this.appearance.setFace(4)) : (this.appearance.setHair(5, Math.floor(5 * Math.random() + 1)), this.appearance.setFace(12)), this.appearance.setGender(e), this.appearance.setEyeColor(Math.floor(5 * Math.random() + 1)), this.appearance.setSkinColor(Math.floor(5 * Math.random() + 1)), this.equipment.unEquip("hat")
	}, e.prototype.getLevelingCurve = function(t) {
		Prodigy.Creature.prototype.getLevelingCurve.call(this, t);
		for (var i = [], a = 0; a < e.LEVEL_CURVE.length; a++) {
			var s = e.LEVEL_CURVE[a];
			s.lvl === t && i.push(s)
		}
		return i
	}, e.prototype.setDailyDate = function(e) {
		var t = new Date;
		this.data[e].date = {
			d: t.getUTCDate(),
			m: t.getUTCMonth(),
			y: t.getUTCFullYear()
		}, this.updated = !0
	}, e.prototype.dateIsToday = function(e) {
		var t = new Date;
		return e.d == t.getUTCDate() && e.m == t.getUTCMonth() && e.y == t.getUTCFullYear()
	}, e.prototype.canDoDaily = function(e, t) {
		var i = this.data[e],
			a = Util.isDefined(i) ? i.date : null;
		return Util.isDefined(i) ? Util.isDefined(a) && this.dateIsToday(a) || this.resetDaily(e, t) : (this.data[e] = {}, this.resetDaily(e, t)), 0 === this.data[e].isComplete
	}, e.prototype.resetDaily = function(e, t) {
		this.setDailyDate(e), this.data[e].isComplete = 0, Util.isDefined(t) && t()
	}, e.prototype.completeDaily = function(e, t) {
		this.data[e].isComplete = t, this.updated = !0
	}, e.prototype.setSpinDate = function() {
		var e = new Date;
		Util.isDefined(this.data.spinDate) || (this.data.spinDate = {}), this.data.spinDate.d = e.getUTCDate(), this.data.spinDate.m = e.getUTCMonth(), this.data.spinDate.y = e.getUTCFullYear(), this.updated = !0
	}, e.prototype.canSpin = function() {
		if (Util.isDefined(this.data.numSpins) && Util.isDefined(this.data.spinDate.d) && Util.isDefined(this.data.spinDate.m) && Util.isDefined(this.data.spinDate.y)) {
			var e = new Date;
			return (this.data.spinDate.d !== e.getUTCDate() || this.data.spinDate.m !== e.getUTCMonth() || this.data.spinDate.y !== e.getUTCFullYear()) && (this.setSpinDate(), this.data.numSpins = 0), 0 === this.data.numSpins || 1 === this.data.numSpins && this.isMember
		}
		return this.setSpinDate(), this.data.numSpins = 0, !0
	}, e.prototype.spinWheel = function() {
		this.data.numSpins++, this.updated = !0
	}, e.prototype.formatSpinDate = function() {
		Util.isDefined(this.data.spinDate) && Util.isDefined(this.data.spinDate.d) && (this.data.spinDate.dates = [new Date(Date.UTC(this.data.spinDate.y, this.data.spinDate.m, this.data.spinDate.d)).getTime()], delete this.data.spinDate.d, delete this.data.spinDate.m, delete this.data.spinDate.y)
	}, e.prototype.removeOldSpinDates = function(e) {
		if (Util.isDefined(this.data.spinDate) && Util.isDefined(this.data.spinDate.dates))
			for (var t = null, i = 0; i < this.data.spinDate.dates.length; i++) t = this.data.spinDate.dates[i], Util.elapsedTimeInHours(t, (new Date).getTime()) >= e && (this.data.spinDate.dates.splice(i, 1), i++)
	}, e.prototype.remainingSpins = function() {
		var e = Util.isDefined(this.data.spinDate) && Util.isDefined(this.data.spinDate.dates) ? this.data.spinDate.dates.length : 0;
		return (this.isMember ? GameConstants.get("GameConstants.Features.Wheel.MEMBER_SPINS") : GameConstants.get("GameConstants.Features.Wheel.DEFAULT_SPINS")) - e
	}, e.prototype.setSchool = function(e) {
		this.data.school = e, this.updated = !0
	}, e.prototype.getSchool = function() {
		return this.data.school
	}, e.prototype.setColiseum = function(e) {
		this.data.arena = e
	}, e.prototype.getColiseum = function() {
		return Util.isDefined(this.data.arena) ? this.data.arena : 0
	}, e.prototype.getTeamScore = function() {
		return this.kennel.getTeamScore()
	}, e.prototype.getWins = function() {
		return this.data.win || 0
	}, e.prototype.getLosses = function() {
		return this.data.loss || 0
	}, e.prototype.addArenaScore = function(e, t) {
		var i = this.getArenaScore();
		this.data.arenaScore = this.getArenaScore() + e, this.data.arenaScore < 0 && (this.data.arenaScore = 0), this.data.arenaScore > 5e3 && (this.data.arenaScore = 5e3), t ? this.data.win = (this.data.win || 0) + 1 : this.data.loss = (this.data.loss || 0) + 1;
		var a = 500 + Math.max(0, 1e3 * this.getArenaRank()),
			s = a - 1e3 - 200;
		t && a > i && this.getArenaScore() >= a && this.getArenaRank() < 4 ? this.data.arenaRank = this.getArenaRank() + 1 : !t && i >= s && this.getArenaScore() < s && this.getArenaRank() > 0 && (this.data.arenaRank = this.getArenaRank() - 1), this.getArenaScore() >= 100 && this.isUnranked() && (this.data.arenaRank = 0), this.updated = !0
	}, e.prototype.processDeserter = function() {
		return Util.isDefined(this.data.deserter) ? (delete this.data.deserter, this.addArenaScore(-50, !1), this.updated = !0, !0) : !1
	}, e.prototype.getTowerProgress = function() {
		return Util.isDefined(this.data.tower) ? this.data.tower : 0
	}, e.prototype.completeTower = function(e) {
		var t = this.getTowerProgress();
		e > t && (this.data.tower = e), this.updated = !0
	}, e.prototype.isBlockedByDarkTowerMemberGate = function() {
		return !this.isMember && this.getTowerProgress() >= GameConstants.get("GameConstants.Tower.MAX_FREE_MEMBER_FLOOR")
	}, e.prototype.getLeaderboard = function() {
		return Util.isDefined(this.data.lb) ? this.data.lb : 31
	}, e.prototype.setLeaderboard = function(e) {
		this.data.lb = e, this.updated = !0
	}, e.prototype.addSpell = function(e) {
		Util.isDefined(this.data.spells) || (this.data.spells = []), Util.inArray(this.data.spells, e) || (this.data.spells.push(e), Util.isDefined(this.data.spellbook) && !Util.inArray(this.data.spellbook) && this.data.spellbook.length < 6 && this.data.spellbook.push(e)), this.updated = !0
	}, e.prototype.swapSpells = function(e, t) {
		if (Util.isDefined(e) && Util.isDefined(t)) {
			if (!Util.isDefined(this.data.spellbook)) {
				this.data.spellbook = [];
				for (var i = this.getAllAttacks(), a = 0; 6 > a && a < i.length; a++) this.data.spellbook[a] = i[a]
			}
			for (var a = 0; a < this.data.spellbook.length; a++) this.data.spellbook[a] !== e ? this.data.spellbook[a] === t && (this.data.spellbook[a] = e) : this.data.spellbook[a] = t;
			this.updated = !0
		}
	}, e.prototype.hasCompletedTutorial = function() {
		var e = this.state.get("zone-lamplight");
		return Util.isDefined(e) && Util.isDefined(e.quest) && e.quest.ID >= 2 && Util.isDefined(this.backpack) && this.backpack.hasItem("key", 13) > 0
	}, e.prototype.setAllowsHouseVisitors = function(e) {
		this.data.allowsHouseVisitors = e, this.updated = !0
	}, e.prototype.getAllowsHouseVisitors = function() {
		return Util.isDefined(this.data.allowsHouseVisitors) ? this.data.allowsHouseVisitors : !1
	}, e.prototype.updateFirstBoxBreadcrumb = function() {
		Util.isDefined(this.data.microDetails) || this.getMicrotransactionDetails(), this.data.microDetails.firstBoxBreadcrumb += 1, this.updated = !0
	}, e.prototype.updateFirstOpenBreadcrumb = function() {
		Util.isDefined(this.data.microDetails) || this.getMicrotransactionDetails(), this.data.microDetails.firstOpenBreadcrumb += 1, this.updated = !0
	}, e.prototype.getMicrotransactionDetails = function() {
		return Util.isDefined(this.data.microDetails) ? this.data.microDetails : (this.data.microDetails = {
			firstBoxBreadcrumb: 0,
			firstOpenBreadcrumb: 0
		}, this.data.microDetails)
	}, e.prototype.setSettings = function(e) {
		this.data.settings = e, this.updated = !0
	}, e.prototype.setBGMVolume = function(e) {
		this.getSettings().bgmVolume = e, this.updated = !0
	}, e.prototype.setSFXVolume = function(e) {
		this.getSettings().sfxVolume = e, this.updated = !0
	}, e.prototype.setVoiceVolume = function(e) {
		this.getSettings().voiceVolume = e, this.updated = !0
	}, e.prototype.getSettings = function() {
		return Util.isDefined(this.data.settings) || (this.data.settings = {
			bgmVolume: GameConstants.get("GameConstants.Audio.DEFAULT_MUSIC_VOLUME"),
			sfxVolume: GameConstants.get("GameConstants.Audio.DEFAULT_SOUND_VOLUME"),
			voiceVolume: GameConstants.get("GameConstants.Audio.DEFAULT_VOICE_VOLUME")
		}), this.data.settings
	}, e.prototype.isItemOwned = function(e) {
		var t = this.backpack.hasItem(e.type, e.ID);
		if ("dorm" === e.type) t = this.house.getOwned(e.ID) >= 9;
		else if ("dormbg" === e.type) {
			var i = Items.getItemData("dormbg", e.ID);
			t = Util.isDefined(i) && i.tag === this.house.getCurrentHouseTag()
		} else if ("pet" === e.type) t = this.kennel.hasPet(e.ID);
		else if ("item" === e.type) t = t >= 99;
		else if ("gender" === e.type) {
			var a = {
				male: 1,
				female: 2
			};
			t = a[this.appearance.getGender()] === e.ID
		} else "hair" === e.type ? t = this.appearance.getHair().style === e.ID : "eyeColor" === e.type ? t = this.appearance.getEyeColor() === e.ID : "skinColor" === e.type ? t = this.appearance.getSkinColor() === e.ID : "hairColor" === e.type ? t = this.appearance.getHair().color === e.ID : "face" === e.type && (t = this.appearance.getFace() === e.ID);
		return t
	};
	var t = GameConstants.get("GameConstants.LocationSelection.NONE");
	Object.defineProperty(e.prototype, "locationSelectionType", {
		get: function() {
			return t
		},
		set: function(e) {
			t = e
		}
	});
	var i = null,
		a = null;
	return Object.defineProperty(e.prototype, "username", {
		get: function() {
			return i
		},
		set: function(e) {
			i = e
		}
	}), Object.defineProperty(e.prototype, "password", {
		get: function() {
			return a
		},
		set: function(e) {
			a = e
		}
	}), e
}();
Player.LEVEL_CURVE = [{
	lvl: 1,
	a: 31
}, {
	lvl: 5,
	a: 32
}, {
	lvl: 12,
	a: 33
}, {
	lvl: 22,
	a: 34
}, {
	lvl: 38,
	a: 35
}, {
	lvl: 52,
	a: 36
}];
var Tutorial = function() {
	function e() {
		this.setData({
			zones: {},
			menus: {}
		})
	}
	return e.prototype.getDataAndClear = function() {
		return this.updated = !1, this.data
	}, e.prototype.setData = function(e) {
		Util.isDefined(e.zones) || (e.zones = {}), Util.isDefined(e.menus) || (e.menus = {}), this.data = e
	}, e.prototype.getMenuValue = function(e, t) {
		return this.getValue("menus", e, t)
	}, e.prototype.getZoneValue = function(e, t) {
		return this.getValue("zones", e, t)
	}, e.prototype.getValue = function(e, t, i) {
		if (!Util.isDefined(this.data[e][t])) return 0;
		var a = this.data[e][t];
		return i = i || 0, Util.isDefined(a[i]) ? a[i] : 0
	}, e.prototype.setMenuValue = function(e, t, i) {
		return this.setValue("menus", e, t, i)
	}, e.prototype.setZoneValue = function(e, t, i) {
		return this.setValue("zones", e, t, i)
	}, e.prototype.setValue = function(e, t, i, a) {
		Util.isDefined(this.data[e][t]) || (this.data[e][t] = []), i = i || 0, this.data[e][t][i] !== a && (this.data[e][t][i] = a, this.updated = !0)
	}, e
}();
Prodigy.ForestBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.ForestBoss, Prodigy.Boss, {
	constructor: Prodigy.ForestBoss
}), Prodigy.CloudBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.CloudBoss, Prodigy.Boss, {
	constructor: Prodigy.CloudBoss,
	chooseAction: function(e, t, i, a, s, r) {
		t /= 10, i.updateClouds();
		for (var n = {
				fire: 0,
				ice: 0,
				water: 0,
				earth: 0,
				storm: 0,
				astral: 0
			}, o = a.source.getAttacks(), h = 0; h < o.length; h++) n[e.prodigy.attacks.getAttack(o[h]).data.element]++;
		var l = "wizard",
			d = 0;
		for (var c in n) n[c] > d && (l = c, d = o[c]);
		var p = [];
		if ("fire" === l) i.waterMode();
		else if ("ice" === l) {
			var g = Math.random();
			.34 > g ? i.earthMode() : .67 > g ? i.iceMode() : i.waterMode()
		} else if ("earth" === l) {
			var g = Math.random();
			.34 > g ? i.earthMode() : .67 > g ? i.iceMode() : i.stormMode()
		} else if ("storm" === l) i.iceMode();
		else if ("water" === l) Math.random() < .5 ? i.earthMode() : i.stormMode();
		else {
			var g = Math.random();
			.25 > g ? i.earthMode() : .5 > g ? i.iceMode() : .75 > g ? i.waterMode() : i.stormMode()
		}
		if (p = i.attacks, p.length <= 0) return r(), void 0;
		var u = e.prodigy.attacks.getBestAttack(p, a.source, 1 - t);
		if (!Util.isDefined(u)) return r(), void 0;
		if (i.source.getCurrentHearts() / i.source.getMaxHearts() < .25 && Math.random() < t) {
			var y = e.prodigy.attacks.getHealingAttack(p);
			Util.isDefined(y) && (u = y)
		}
		var m = .25 - .25 * t;
		s(i, a, r, u, Math.random() < m)
	}
}), Prodigy.BonfireBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.BonfireBoss, Prodigy.Boss, {
	constructor: Prodigy.BonfireBoss,
	chooseAction: function(e, t, i, a, s, r) {
		t /= 10;
		var n = [];
		if (i.source.getCurrentHearts() / i.source.getMaxHearts() < .67 && "soup" === i.foodMode) {
			var o = e.prodigy.event.create();
			return o.function(i.startEntree.bind(i)), o.function(r.bind(this)), o.start(), void 0
		}
		if (i.source.getCurrentHearts() / i.source.getMaxHearts() < .34 && "burger" === i.foodMode) {
			var o = e.prodigy.event.create();
			return o.function(i.startDessert.bind(i)), o.function(r.bind(this)), o.start(), void 0
		}
		if (n = i.source.source.attacks, n.length <= 0) return r(), void 0;
		var h = e.prodigy.attacks.getBestAttack(n, a.source, 1 - t);
		if (!Util.isDefined(h)) return r(), void 0;
		if (i.source.getCurrentHearts() / i.source.getMaxHearts() < .25 && Math.random() < t) {
			var l = e.prodigy.attacks.getHealingAttack(n);
			Util.isDefined(l) && (h = l)
		}
		var d = .25 - .25 * t;
		s(i, a, r, h, Math.random() < d)
	}
}), Prodigy.OldOne = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.OldOne, Prodigy.Boss, {
	constructor: Prodigy.OldOne,
	chooseAction: function(e, t, i, a, s, r) {
		t /= 10;
		var n = i.source.source.attacks;
		if (n.length <= 0) return r(), void 0;
		var o = GameConstants.get("GameConstants.Battle.ATTACK_OVERRIDE");
		if (0 > o && o < n.length) {
			var h = e.prodigy.attacks.getBestAttack(n, a.source, 1 - t);
			if (!Util.isDefined(h)) return r(), void 0;
			Prodigy.Random.integerInRange(0, 100) < 30 && (h = e.prodigy.attacks.getBestAttack([42], a.source, 1 - t))
		} else h = e.prodigy.attacks.getBestAttack([n[o]], a.source, 1 - t);
		var l = .25 - .25 * t;
		s(i, a, r, h, Math.random() < l)
	}
}), Prodigy.IceWyrmBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.IceWyrmBoss, Prodigy.Boss, {
	constructor: Prodigy.IceWyrmBoss
}), Prodigy.PippetBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.PippetBoss, Prodigy.Boss, {
	constructor: Prodigy.PippetBoss,
	chooseAction: function(e, t, i, a, s, r) {
		t /= 10;
		var n = i.source.source.attacks,
			o = e.prodigy.attacks.getBestAttack(n, a.source, 1 - t);
		if (!Util.isDefined(o)) return r(), void 0;
		var h = .25 - .25 * t;
		s(i, a, r, o, Math.random() < h)
	},
	getDrops: function() {
		var e = [{
			type: "gold",
			N: 100
		}];
		return e = e.concat(Items.getItemDrops())
	}
}), Prodigy.TitanBoss = function(e, t) {
	Prodigy.Boss.call(this, e, t)
}, Prodigy.extends(Prodigy.TitanBoss, Prodigy.Boss, {
	constructor: Prodigy.TitanBoss
}), Prodigy.Menu.Backpack = function(e, t, i) {
	this.player = i, Util.log(i), Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Backpack, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Backpack,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 610, 220), this.createBaseSetup(30, 16, "shine", null, [{
			icon: {
				type: "hat",
				ID: "5",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Hats"
		}, {
			icon: {
				type: "outfit",
				ID: "1",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Outfits",
			metadata: {
				vIcon: 1
			}
		}, {
			icon: {
				type: "weapon",
				ID: "1",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Wands",
			metadata: {
				vIcon: 1
			}
		}, {
			icon: {
				type: "boots",
				ID: "7",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Boots",
			metadata: {
				vIcon: 1
			}
		}, {
			icon: {
				type: "follow",
				ID: "2",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Buddies",
			metadata: {
				vIcon: 1
			}
		}, {
			icon: {
				type: "item",
				ID: "5",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Items",
			metadata: {
				vIcon: 1
			}
		}, {
			icon: {
				type: "item",
				ID: "26",
				metadata: {
					vIcon: 1
				}
			},
			bot: "Currency",
			metadata: {
				vIcon: 1
			}
		}], !0);
		var e = this.game.prodigy.create.element(this, 0, 0);
		e.setRenderState(!0), e.add(new Phaser.TileSprite(this.game, 51, 240, 449, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 51, 280, 449, 300, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 51, 580, 449, 40, "core", "blue-top2")), e.add(new Phaser.TileSprite(this.game, 500, 280, 40, 300, "core", "blue-side2")), e.add(this.game.prodigy.create.sprite(500, 240, "core", "blue-corner2")), e.add(this.game.prodigy.create.sprite(500, 580, "core", "blue-corner3")), e.add(new Phaser.TileSprite(this.game, 631, 240, 598, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 631, 280, 598, 300, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 631, 580, 598, 40, "core", "blue-top2")), e.add(new Phaser.TileSprite(this.game, 591, 280, 40, 300, "core", "blue-side")), e.add(this.game.prodigy.create.sprite(591, 240, "core", "blue-corner")), e.add(this.game.prodigy.create.sprite(591, 580, "core", "blue-corner4")), e.add(this.game.prodigy.create.sprite(110, 63, "core-2", "backpack")), this.game.prodigy.create.panel(e, 100, 270, 10, 8, "white").alpha = .5, Prodigy.RenderMenu.prototype.create.call(this), this.bar = this.game.prodigy.create.slider(this, 1150, 240, 380, !0, !0), this.p = this.game.prodigy.create.player(this, this.player, 2, 300, 515), this.equip = this.game.prodigy.create.element(this, 80, 220), Prodigy.Container.PlayerContainer.overrideSmoothing(!1), this.setMode(0), this.reload()
	},
	setMode: function(e) {
		switch (Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), e) {
			case 1:
				this.itemType = "outfit";
				break;
			case 2:
				this.itemType = "weapon";
				break;
			case 3:
				this.itemType = "boots";
				break;
			case 4:
				this.itemType = "follow";
				break;
			case 5:
				this.itemType = "item";
				break;
			case 6:
				this.itemType = "currency";
				break;
			default:
				this.itemType = "hat"
		}
		this.listItemsOfType()
	},
	clearContents: function() {
		Util.isDefined(this.content) && this.content.removeAll(!0)
	},
	itemSelected: function(e) {
		this.game.prodigy.open.itemInfo({
			ID: e.ID,
			L: e.L,
			type: e.type || this.itemType
		}, this.reload.bind(this), "equip")
	},
	reload: function(e) {
		this.equip.removeAll(!0);
		for (var t = ["hat", "weapon", "outfit", "boots", "follow", "ring"], i = 0; i < t.length; i++) {
			var a = {
					ID: this.player.equipment.getEquipment(t[i]),
					type: t[i]
				},
				s = this.itemSelected.bind(this, a);
			Util.isDefined(a.ID) || (s = this.game.prodigy.open.pouch.bind(this.game.prodigy.open, t[i], this.reload.bind(this))), this.game.prodigy.create.item(this.equip, i % 2 * 340, 40 + 120 * Math.floor(i / 2), a, "icon", "ring" === t[i] ? null : s)
		}
		this.game.input.clearEnterCallback(), this.p.reload(), this.bar.process(), e && this.close()
	},
	scrollItems: function(e) {
		this.page = Util.isDefined(e) ? e : Util.isDefined(this.page) ? this.page : 0, e = this.page, this.clearContents(), this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		for (var t = e; e + 6 > t; t++) {
			var i = t - e;
			t >= this.owned.length ? this.game.prodigy.create.panel(this.content, i % 3 * 180, 220 * Math.floor(i / 3), 4, 5, "empty") : this.game.prodigy.create.item(this.content, i % 3 * 180, 220 * Math.floor(i / 3), {
				ID: this.owned[t].ID || this.owned[t].gameID,
				type: this.itemType,
				L: this.owned[t].L,
				N: this.owned[t].N
			}, "inv", this.itemSelected.bind(this, this.owned[t]))
		}
	},
	listItemsOfType: function() {
		this.owned = this.player.backpack.getBackpackItemsByType(this.itemType), this.bar.reset(this.owned.length - 3, 3, -1, this.scrollItems.bind(this))
	},
	close: function() {
		Prodigy.Container.PlayerContainer.overrideSmoothing(null), this.game.prodigy.user.reload(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.Pouch = function(e, t, i, a, s, r) {
	this.player = i, this.itemType = a, this.onClose = s, this.selected = r, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Pouch, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Pouch,
	create: function() {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 220, 100, 21, 13, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 800, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.content = this.game.prodigy.create.element(this, 260, 180, 19, 6), this.game.prodigy.create.panel(this, 260, 180, 19, 10, "white"), this.game.prodigy.create.font(this, 290, 120, "Choose your " + ("weapon" === this.itemType ? "wand" : "follow" === this.itemType ? "buddy" : this.itemType), {
			font: "button",
			size: 36,
			width: 720,
			align: "center"
		}), Prodigy.RenderMenu.prototype.create.call(this), this.game.input.setEnterCallback(this.searchItems.bind(this)), this.game.input.keyboard.enabled = !0, this.setMode(0)
	},
	setMode: function(e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e), this.listItemsOfType()
	},
	clearContents: function() {
		Util.isDefined(this.content) && this.content.destroy(), Util.isDefined(this.searchNotFound) && !this.isSearch && this.searchNotFound.destroy(), this.content = this.game.prodigy.create.element(this, 100, 180, 21, 6)
	},
	onWear: function() {
		this.searchBar.show(0), this.close()
	},
	switchSpell: function(e) {
		e !== this.selected && this.player.swapSpells(this.selected, e), this.close()
	},
	searchItems: function() {
		var e = this.searchBar.getValue().toUpperCase().trim();
		if ("" === e) this.clearSearch();
		else {
			if (this.isSearch = !0, "spell" === this.itemType) {
				var t = this.player.getAllAttacks();
				this.owned = [];
				for (var i = 0; i < t.length; i++) this.owned.push({
					ID: t[i]
				})
			} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
			for (var a = [], s = "", i = 0; i < this.owned.length; i++) "spell" === this.itemType ? (s = this.game.prodigy.attacks.getAttack(this.owned[i].ID).data.name, s.toUpperCase().indexOf(e) > -1 && a.push(this.game.prodigy.attacks.getAttack(this.owned[i].ID))) : (s = Items.getItemData(this.itemType, this.owned[i].ID).data.name, s.toUpperCase().indexOf(e) > -1 && a.push(Items.getItemData(this.itemType, this.owned[i].ID)));
			for (var r = [], i = 0; i < a.length; i++)
				for (var n = 0; n < this.owned.length; n++) a[i].ID === this.owned[n].ID && r.push(this.owned[n]);
			this.owned = r, this.bar.reset(this.owned.length - 3, 1, -1, this.scrollItems.bind(this)), 0 === this.owned.length && (this.clearContents(), this.searchNotFound = this.game.prodigy.create.font(this.content, 230, 165, "No items containing your search were found", {
				width: 620,
				align: "center"
			}))
		}
	},
	clearSearch: function() {
		this.clearContents(), this.searchBtn.destroy(), this.searchBtn = this.game.prodigy.create.textButton(this, 790, 210, {
			text: "search",
			icon: "inspect",
			size: Prodigy.Control.TextButton.SMALL
		}, this.searchItems.bind(this)), this.searchBar.setValue(""), this.searchBar.setFocus(!0), this.isSearch = !1, this.listItemsOfType()
	},
	scrollItems: function(e) {
		if (this.clearContents(), !this.isSearch && !this.isSort)
			if ("spell" === this.itemType) {
				var t = this.player.getAllAttacks();
				this.owned = [];
				for (var i = 0; i < t.length; i++) this.owned.push({
					ID: t[i]
				})
			} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		for (var a = 0, i = e; e + 4 > i; i++) i < this.owned.length && ("spell" === this.itemType ? this.game.prodigy.create.item(this.content, 190 + 180 * a, 100, {
			ID: this.owned[i].ID,
			type: this.itemType
		}, "inv", this.switchSpell.bind(this, this.owned[i].ID), this.onWear.bind(this)) : this.game.prodigy.create.item(this.content, 190 + 180 * a, 100, {
			ID: this.owned[i].ID,
			type: this.itemType,
			N: this.owned[i].N,
			L: this.owned[i].L
		}, "inv", this.equipItem.bind(this, this.owned[i]))), a++;
		for (var i = Math.min(this.owned.length, 4); 4 > i; i++) this.game.prodigy.create.panel(this.content, 190 + 180 * i, 100, 4, 5, "empty")
	},
	listItemsOfType: function() {
		if (Util.isDefined(this.bar) && this.bar.destroy(), "spell" === this.itemType) {
			var e = this.player.getAllAttacks();
			this.owned = [];
			for (var t = 0; t < e.length; t++) this.owned.push({
				ID: e[t]
			})
		} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		this.bar = this.game.prodigy.create.slider(this, 290, 500, 700, !1, !0), this.bar.reset(this.owned.length - 3, 1, -1, this.scrollItems.bind(this))
	},
	equipItem: function(e) {
		if (e.L) {
			var t = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_EQUIP_CARD_LOCKED_ITEM,
				conversionFunnelMetadata: this.itemType + "-" + e.ID
			};
			this.game.prodigy.network.sendConversionFunnelEvent(t.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_EQUIP_ITEM, t.conversionFunnelMetadata), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM, null, t)
		} else this.player.equip(e.ID, this.itemType) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "whoosh")), this.close()
	},
	close: function() {
		Util.isDefined(this.bar) && this.bar.destroy(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.LevelUp = function(e, t, i, a) {
	this.callback = a, this.stars = i, this.completed = 0, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.LevelUp, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.LevelUp,
	create: function() {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 40, 40, 30, 16, "shine"), this.panel.setRenderState(!0), this.content = this.game.prodigy.create.element(this, 20, 0, 30, 16), Prodigy.RenderMenu.prototype.create.call(this);
		for (var e = this.game.prodigy.player.kennel.getTeam(), t = this.game.prodigy.player.data.team; this.stars.length < e.length;) this.stars.push(0);
		for (var i = 0; 2 >= i; i++)
			if (Util.isDefined(e[2 * i])) 2 * i === t ? this.game.prodigy.create.level(this.content, 100 + 20 * i, 200 * (i + 1) - 120, "player", e[2 * i], this.stars[2 * i], this.finish.bind(this)) : this.game.prodigy.create.level(this.content, 100 + 20 * i, 200 * (i + 1) - 120, "monster", e[2 * i], this.stars[2 * i], this.finish.bind(this));
			else {
				var a = this.game.prodigy.create.level(this.content, 100 + 20 * i, 200 * (i + 1) - 120, "empty");
				this.finish(), a.alpha = .3
			} for (var i = 0; 2 > i; i++)
			if (Util.isDefined(e[2 * i + 1])) 2 * i + 1 === t ? this.game.prodigy.create.level(this.content, 620 + 20 * (i + 1), 200 * (i + 1) - 20, "player", e[2 * i + 1], this.stars[2 * i + 1], this.finish.bind(this)) : this.game.prodigy.create.level(this.content, 620 + 20 * (i + 1), 200 * (i + 1) - 20, "monster", e[2 * i + 1], this.stars[2 * i + 1], this.finish.bind(this));
			else {
				var a = this.game.prodigy.create.level(this.content, 620 + 20 * (i + 1), 200 * (i + 1) - 20, "empty");
				this.finish(), a.alpha = .3
			}
	},
	finish: function() {
		this.completed++, 5 === this.completed && (this.delay = this.game.time.now)
	},
	update: function() {
		Util.isDefined(this.delay) && this.game.time.now - this.delay > 1500 && this.close()
	}
}), Prodigy.Menu.MemberAd = function(e, t, i, a, s) {
	if (Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = a, Prodigy.Menu.MemberAd.callback = this.finishUpgrade.bind(this), this.currentConfigIndex = null, this.analyticEvents = Util.isDefined(s) ? s : {}, Util.isDefined(i))
		for (var r = 0; r < Prodigy.Menu.MemberAd.featureIconConfigs.length; r++)
			if (i === Prodigy.Menu.MemberAd.featureIconConfigs[r]) {
				this.currentConfigIndex = r;
				break
			} Util.isDefined(this.analyticEvents.upgradeButtonClick) && (Util.isDefined(this.analyticEvents.upgradeButtonClick.action) || (Util.log("Prodigy.Menu.MemberAd.ctor - analyticEvents.upgradeButtonClick was provided but action property was missing.  Defaulting to action='upgradeButtonClick'", Util.ERROR), this.analyticEvents.upgradeButtonClick.action = "upgradeButtonClick")), this.analyticEvents.conversionFunnelName = Util.getOptionalParameter(this.analyticEvents.conversionFunnelName, ""), this.analyticEvents.conversionFunnelMetadata = Util.getOptionalParameter(this.analyticEvents.conversionFunnelMetadata, ""), this.membershipParentOpen = !1, this.create();
	try {
		var n = Util.isDefined(this.currentConfigIndex) ? Prodigy.Menu.MemberAd.featureIconConfigs[this.currentConfigIndex].trackingEvent : "unknown";
		this.game.prodigy.network.sendEvent("member-ad", {
			status: "open",
			type: "new",
			feature: n
		})
	} catch (o) {}
}, Prodigy.Menu.MemberAd.DEFAULT = {
	frameName: "icons/iconbox-TEST",
	trackingEvent: "Feature-MemberChests"
}, Prodigy.Menu.MemberAd.MEMBER_CHESTS = {
	frameName: "icons/member-chests",
	trackingEvent: "Feature-MemberChests"
}, Prodigy.Menu.MemberAd.BUDDIES = {
	frameName: "icons/cute-and-cool-buddies",
	trackingEvent: "Feature-Buddies"
}, Prodigy.Menu.MemberAd.HOUSE_ITEMS = {
	frameName: "icons/special-house-furniture",
	trackingEvent: "Feature-HouseItems"
}, Prodigy.Menu.MemberAd.NEW_HOUSE = {
	frameName: "icons/new-house",
	trackingEvent: "Feature-NewHouse"
}, Prodigy.Menu.MemberAd.MORE_GOLD = {
	frameName: "icons/more-gold",
	trackingEvent: "Feature-MoreGold"
}, Prodigy.Menu.MemberAd.MORE_EXP = {
	frameName: "icons/level-faster",
	trackingEvent: "Feature-LevelFaster"
}, Prodigy.Menu.MemberAd.WHEEL_SPIN = {
	frameName: "icons/more-spins",
	trackingEvent: "Feature-MoreSpins"
}, Prodigy.Menu.MemberAd.MEMBER_PETS = {
	frameName: "icons/catch-more-pets",
	trackingEvent: "Feature-MorePets"
}, Prodigy.Menu.MemberAd.CATCH = {
	frameName: "icons/second-catch",
	trackingEvent: "Feature-SecondCatchChance"
}, Prodigy.Menu.MemberAd.BOOSTS = {
	frameName: "icons/minigame-boosts",
	trackingEvent: "Feature-MinigameBoosts"
}, Prodigy.Menu.MemberAd.STYLE = {
	frameName: "icons/cool-new-styles",
	trackingEvent: "Feature-NewStyles"
}, Prodigy.Menu.MemberAd.GET_GOLD = {
	frameName: "icons/2000-gold",
	trackingEvent: "Feature-2000Gold"
}, Prodigy.Menu.MemberAd.TOWER = {
	frameName: "icons/climb-the-dark-tower",
	trackingEvent: "Feature-DarkTower"
}, Prodigy.Menu.MemberAd.VISIT_HOUSE = {
	frameName: "icons/friends-visit-house",
	trackingEvent: "Feature-VisitHouse"
}, Prodigy.Menu.MemberAd.POTIONS = {
	frameName: "icons/potions",
	trackingEvent: "Feature-PowerfulPotions"
}, Prodigy.Menu.MemberAd.DANCE = {
	frameName: "icons/dab-dance",
	trackingEvent: "Feature-Dab"
}, Prodigy.Menu.MemberAd.PREMIUM_ITEM = {
	frameName: "icons/iconbox-TEST",
	trackingEvent: "PremiumItems"
}, Prodigy.Menu.MemberAd.BIGGER_ROSTER = {
	frameName: "icons/iconbox-TEST",
	trackingEvent: "BiggerRoster"
}, Prodigy.Menu.MemberAd.NICKNAME = {
	frameName: "icons/iconbox-TEST",
	trackingEvent: "Nickname"
}, Prodigy.Menu.MemberAd.featureIconConfigs = [Prodigy.Menu.MemberAd.MEMBER_CHESTS, Prodigy.Menu.MemberAd.TOWER, Prodigy.Menu.MemberAd.BUDDIES, Prodigy.Menu.MemberAd.MORE_GOLD, Prodigy.Menu.MemberAd.MORE_EXP, Prodigy.Menu.MemberAd.WHEEL_SPIN, Prodigy.Menu.MemberAd.MEMBER_PETS, Prodigy.Menu.MemberAd.CATCH, Prodigy.Menu.MemberAd.BOOSTS, Prodigy.Menu.MemberAd.STYLE, Prodigy.Menu.MemberAd.GET_GOLD, Prodigy.Menu.MemberAd.VISIT_HOUSE, Prodigy.Menu.MemberAd.HOUSE_ITEMS, Prodigy.Menu.MemberAd.NEW_HOUSE, Prodigy.Menu.MemberAd.POTIONS, Prodigy.Menu.MemberAd.DANCE], Prodigy.Menu.MemberAd.reconcileConfig = function(e) {
	var t = e;
	return e === Prodigy.Menu.MemberAd.DEFAULT ? t = Prodigy.Menu.MemberAd.MEMBER_CHESTS : e === Prodigy.Menu.MemberAd.PREMIUM_ITEM ? t = Prodigy.Menu.MemberAd.MEMBER_CHESTS : e === Prodigy.Menu.MemberAd.BIGGER_ROSTER ? t = Prodigy.Menu.MemberAd.MEMBER_PETS : e === Prodigy.Menu.MemberAd.NICKNAME && (t = Prodigy.Menu.MemberAd.MEMBER_CHESTS), t
}, Prodigy.extends(Prodigy.Menu.MemberAd, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MemberAd,
	create: function() {
		Prodigy.RenderMenu.prototype.create.call(this), this.addTransparent(), this.gearIcons = this.generateGearIcons(5, null), this.startLoad(["popup-member-modular"], this.onAssetsLoaded.bind(this))
	},
	onAssetsLoaded: function() {
		var e = 125,
			t = 125,
			i = 20,
			a = {
				x: 0,
				y: 502
			},
			s = {
				x: 734,
				y: 37
			},
			r = {
				x: 0,
				y: 333
			},
			n = {
				x: 0,
				y: 24
			},
			o = {
				xOffset: 113,
				yOffset: 143,
				width: 542,
				height: 163
			},
			h = this.game.prodigy.create.element(this, 0, 0);
		h.setRenderState(!0);
		var l = this.game.prodigy.create.sprite(0, 0, "popup-member-modular", "popup-box");
		h.add(l);
		var d = Util.getCenteredXY(l.width, l.height, 0, 0, this.width, this.height);
		l.x = d.x, l.y = d.y;
		var c = this.generateFeatureIcons(3, this, this.currentConfigIndex);
		Util.centerItemsWithinContainer(c, {
			x: l.x + o.xOffset,
			y: l.y + o.yOffset,
			width: o.width,
			height: o.height
		}, !1);
		var p = this.game.prodigy.create.button(this, 0, 0, "popup-member-modular", "member-button", this.onMembershipButtonClick.bind(this, "MemberButton"));
		d = Util.getCenteredXY(p.width, p.height, this.x, this.y, this.width, this.height), p.x = d.x + a.x, p.y = l.y + a.y;
		var g = this.game.prodigy.create.button(this, 0, 0, "popup-member-modular", "exit-button", this.close.bind(this));
		g.x = l.x + s.x, g.y = l.y + s.y;
		var u = this.game.prodigy.create.element(this, 0, 0),
			y = this.game.prodigy.create.sprite(0, 0, "popup-member-modular", "gear-box");
		u.add(y), d = Util.getCenteredXY(y.width, y.height, 0, 0, this.width, this.height), y.x = d.x + r.x, y.y = l.y + r.y, y.inputEnabled = !0, y.events.onInputDown.add(this.onMembershipButtonClick.bind(this, "GearPanel")), Util.centerItemsWithinContainer(this.gearIcons, y, !1, n, {
			width: 90,
			height: 90
		}), this.gearIcons.forEach(function(e) {
			this.add(e)
		}, this);
		var m = c.concat(this.gearIcons);
		m.forEach(function(a, s) {
			this.game.add.tween(a).to({
				y: a.y - i
			}, e, Phaser.Easing.Quadratic.InOut, !0, t * s, 0, !0)
		}, this), this.process()
	},
	generateFeatureIcons: function(e, t, i) {
		for (var a = Prodigy.Menu.MemberAd.featureIconConfigs.map(function(e, t) {
				return t
			}), s = [], r = 0; e > r; r++) {
			var n = 0;
			n = 0 === r && Util.isDefined(i) ? i : Prodigy.Random.integerInRange(0, a.length - r);
			var o = a[n],
				h = Prodigy.Menu.MemberAd.featureIconConfigs[o],
				l = this.game.prodigy.create.button(t, 0, 0, "popup-member-modular", h.frameName, this.onMembershipButtonClick.bind(this, h.trackingEvent));
			s.push(l);
			var d = a.length - (r + 1);
			a[n] = a[d], a[d] = o
		}
		if (Util.isDefined(this.analyticEvents.upgradeButtonClick)) {
			var c = this.analyticEvents.upgradeButtonClick;
			this.game.prodigy.network.sendAnalytics(c.action, c.value, c.category)
		}
		return this.process(), s
	},
	generateGearIcons: function(e, t) {
		var i = null,
			a = 0,
			s = 0,
			r = [],
			n = [{
				category: "boots",
				count: 0
			}, {
				category: "hat",
				count: 0
			}, {
				category: "outfit",
				count: 0
			}, {
				category: "weapon",
				count: 0
			}],
			o = [];
		for (a = 0; a < n.length; a++) {
			var h = Items.data[n[a].category];
			for (s = 0; s < h.length; s++) i = h[s], i.category = n[a].category, Util.isDefined(i.data) && Util.isDefined(i.data.member) && 1 === i.data.member && (!Util.isDefined(i.data.memberAd) || i.data.memberAd > 0) && (o.push(i), n[a].count++)
		}
		for (a = 0; e > a; a++) {
			var l = Prodigy.Random.integerInRange(0, o.length - a);
			i = o[l], r.push(this.game.prodigy.create.item(t, 0, 0, {
				ID: i.ID,
				type: i.category
			}, "icon-no-bg"));
			var d = o.length - (a + 1);
			o[l] = o[d], o[d] = i
		}
		return r
	},
	onMembershipButtonClick: function(e) {
		try {
			this.game.prodigy.network.sendEvent("member-ad", {
				status: "convert",
				type: "new",
				feature: e
			})
		} catch (t) {}
		if (this.game.prodigy.network.sendAnalytics("Purchase-Membership-Click", e), this.game.prodigy.network.sendConversionFunnelEvent(this.analyticEvents.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_MEMBERSHIP, this.analyticEvents.conversionFunnelMetadata), Util.isDefined(this.analyticEvents.upgradeButtonClick)) {
			var i = this.analyticEvents.upgradeButtonClick;
			this.game.prodigy.network.sendAnalytics(i.action, i.value, i.category)
		}
		var a = this.game.prodigy.player,
			s = Util.isDefined(a.locationSelectionType) && a.locationSelectionType === GameConstants.get("GameConstants.LocationSelection.SCHOOL");
		this.membershipParentOpen || (this.membershipParentOpen = !0, this.game.prodigy.open.membershipParent(this, !s, null, null, this.analyticEvents))
	},
	finishUpgrade: function(e) {
		if (this.game.prodigy.network.startInactiveTimer(), e) {
			var t = null;
			if (this.game.prodigy.player.setMembership(), Util.isDefined(this.game.prodigy.player.data.reward)) t = this.close.bind(this);
			else {
				this.game.prodigy.player.data.reward = 1;
				var i = this.game.prodigy.open.gotItem([{
					type: "gold",
					N: 2e3
				}], null, !1, "member-ad");
				this.game.prodigy.player.updated = !0, t = function() {
					i.startDialogue(), this.close()
				}.bind(this)
			}
			this.game.prodigy.open.message("Your membership will be applied after the next loading screen, however you may need to log out for the change to take effect.", t, null, "SUCCESS!");
			try {
				this.game.prodigy.network.sendEvent("new-member", {})
			} catch (a) {}
		} else this.game.prodigy.open.message("Your purchase did not go through.")
	}
}), Prodigy.Menu.MemberPrompt = function(e, t, i) {
	this.onClose = i, e.prodigy.player.memberPrompt = !0, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.MemberPrompt, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.RenderMenu,
	create: function() {
		var e = this.game.prodigy.create.element(this, 365, 720);
		if (Prodigy.RenderMenu.prototype.create.call(this), this.game.prodigy.create.panel(e, 0, 0, 11, 8, "panel-light"), this.game.prodigy.player.isMember) {
			try {
				this.game.prodigy.network.sendEvent("new-member", {
					startDate: this.game.prodigy.player.data.startDate || -1,
					daysToConvert: this.game.prodigy.player.data.daysToConvert || -1
				})
			} catch (t) {}
			var i = this.showContent(e, this.game.prodigy.player.isMember, this.game.prodigy.player.data.rewardData);
			this.showReward(e, i.text, i.reward)
		} else {
			var i = this.showContent(e, this.game.prodigy.player.isMember);
			this.game.prodigy.player.data.reward && (delete this.game.prodigy.player.data.reward, this.game.prodigy.player.updated = !0), this.showBonus(e, i.text, i.reward), this.game.prodigy.player.data.rewardData = i.reward, this.game.prodigy.player.updated = !0
		}
		this.game.add.tween(e).to({
			y: 100
		}, 400, Phaser.Easing.Quadratic.Out).to({
			y: 150
		}, 200, Phaser.Easing.Quadratic.In).start(), this.setupComplete = !0
	},
	showContent: function(e, t) {
		var i = this.game.prodigy.create.element(e, 175, 110),
			a = "",
			s = null;
		a = t ? "Here's your reward of 2000 gold!" : "Join now and get 2000 GOLD!", s = {
			type: "gold",
			N: 2e3
		};
		var r = i.add(this.game.prodigy.create.sprite(60, 50, "icon-item-26"));
		return this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), r = i.add(this.game.prodigy.create.sprite(10, 50, "icon-item-26")), this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 50, GameConstants.MAX_SAFE_INTEGER, !0), r = i.add(this.game.prodigy.create.sprite(110, 50, "icon-item-26")), this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 100, GameConstants.MAX_SAFE_INTEGER, !0), r = i.add(this.game.prodigy.create.sprite(30, 30, "icon-item-26")), this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 150, GameConstants.MAX_SAFE_INTEGER, !0), r = i.add(this.game.prodigy.create.sprite(80, 30, "icon-item-26")), this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 200, GameConstants.MAX_SAFE_INTEGER, !0), r = i.add(this.game.prodigy.create.sprite(55, 10, "icon-item-26")), this.game.add.tween(r).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), i.add(this.game.prodigy.create.sprite(0, 100, "core-2", "chest-bot")), {
			text: a,
			reward: s
		}
	},
	showBonus: function(e, t) {
		this.game.prodigy.create.font(e, 0, 15, "Become a Member Today!", {
			size: 30,
			width: 550,
			align: "center"
		}), this.game.prodigy.create.font(e, 0, 70, t, {
			size: 20,
			width: 550,
			align: "center"
		}), Prodigy.Control.TextButton.createCloseButton(this.game, e, 330, 320, this.close.bind(this)), this.game.prodigy.create.textButton(e, 20, 320, {
			icon: "member",
			text: "buy now!",
			size: Prodigy.Control.TextButton.MED
		}, this.submit.bind(this))
	},
	showReward: function(e, t, i) {
		this.game.prodigy.create.font(e, 0, 15, "You Have a Membership!", {
			size: 30,
			width: 550,
			align: "center"
		}), this.game.prodigy.create.font(e, 0, 70, t, {
			size: 20,
			width: 550,
			align: "center"
		}), Prodigy.Control.TextButton.createCloseButton(this.game, e, 175, 320, this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [i], this.giveItem.bind(this), null, "member-prompt"))
	},
	giveItem: function() {
		this.game.prodigy.player.data.reward = 1, this.game.prodigy.player.data.rewardData = null, this.game.prodigy.player.updated = !0, this.close()
	},
	submit: function() {
		this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.GET_GOLD)
	}
}), Prodigy.Menu.MemberPrompt.isRequired = function(e, t) {
	return Util.isDefined(t) && Util.isDefined(t.quest) && t.quest.ID > 1 && !(e.memberPrompt || !e.isMember && Util.isSchoolHours() || e.isMember && e.data.reward) && (e.locationSelectionType !== GameConstants.get("GameConstants.LocationSelection.SCHOOL") || e.isMember && Util.isNullOrUndefined(e.data.reward))
}, Prodigy.Menu.EmailPrompt = function(e, t, i) {
	this.onClose = i, e.prodigy.player.emailPrompt = !0, e.prodigy.player.battleCounter = 0, this.game = e, Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.Menu.EmailPrompt.PROMPT_FREQUENCY = 20, Prodigy.extends(Prodigy.Menu.EmailPrompt, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.EmailPrompt,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.form = this.game.prodigy.create.element(this, 280, 100);
		var e = this.game.prodigy.create.element(this.form, 0, 0);
		this.game.prodigy.create.panel(e, 0, 0, 18, 12, "shine"), e.add(new Phaser.TileSprite(this.game, 11, 189, 698, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 229, 698, 160, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 389, 698, 40, "core", "blue-top2")), this.game.prodigy.create.panel(e, 40, 40, 16, 3, "banner"), this.form.add(this.game.prodigy.create.sprite(100, -30, "core-2", "menu-noot")), this.game.prodigy.create.font(this.form, 320, 58, "Parent Email Link!", {
			size: 30,
			width: 250,
			align: "center",
			lineHeight: 38
		});
		var t = "",
			i = "Oops, that didn't work. Would you like to try a different email address?",
			a = "";
		this.game.prodigy.player.userID % 2 === 0 ? (t = "Enter your parent or guardian's email below to link your account to it, and get 500 gold!", a = {
			type: "item",
			ID: "26",
			metadata: {
				vIcon: 1
			}
		}) : (t = "Enter your parent or guardian's email below to link your account to it, and get 4 apples!", a = {
			type: "item",
			ID: "1",
			metadata: {
				vIcon: 1
			}
		}), this.game.prodigy.create.font(e, 31, 200, t, {
			size: 20,
			width: 658,
			align: "left",
			lineHeight: 38
		}), this.emailField = Prodigy.Control.InputField.createInputField(this.game, this, "emailg", "", 640 - .5 * Prodigy.Control.InputField.WIDTH_MEDIUM, 370, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text2g"), this.emailField.setFocus(!0), this.errorMessage = this.game.prodigy.create.font(e, 31, 320, i, {
			size: 20,
			font: "black",
			width: 658,
			align: "left",
			lineHeight: 38
		}), this.errorMessage.visible = !1, this.game.prodigy.create.button(this.form, 680, -10, "icons", "close", this.doLater.bind(this)), this.game.prodigy.create.textButton(this.form, 51, 400, {
			text: "do later",
			size: Prodigy.Control.TextButton.MED
		}, this.doLater.bind(this)), this.game.prodigy.create.textButton(this.form, 371, 400, {
			text: "submit!",
			size: Prodigy.Control.TextButton.CONFIRM,
			icon: a
		}, this.submit.bind(this)), this.game.input.setEnterCallback(this.submit.bind(this))
	},
	submit: function() {
		var e = this.emailField.getValue();
		Util.isDefined(e) && this.game.prodigy.emailDomains.isValidEmail(e) ? (this.errorMessage.visible = !1, this.game.prodigy.network.setParentEmail(e, this.submitSuccess.bind(this), this.submitFail.bind(this))) : this.errorMessage.visible = !0
	},
	submitSuccess: function() {
		var e = 1 != this.game.prodigy.player.data.parentEmailReward,
			t = function(e) {
				var t = e.prodigy.player.userID % 2 === 0 ? {
					type: "gold",
					N: 500
				} : {
					type: "item",
					ID: 1,
					N: 4
				};
				e.prodigy.open.gotItem([t], this.onClose.bind(this), null, "email-prompt")
			};
		this.game.prodigy.player.setParentEmail(this.emailField.getValue());
		var i = this.game.prodigy.event.create();
		i.function(this.close.bind(this)), i.function(this.game.prodigy.open.message.bind(this.game.prodigy.open, "Great job! Now ask your parent or guardian to check their email for a message from Prodigy!", e ? t.bind(this, this.game) : this.onClose.bind(this), null, "Link Successful")), i.start()
	},
	submitFail: function() {
		var e = this.game.prodigy.event.create();
		e.function(this.close.bind(this)), e.function(this.game.prodigy.open.confirm.bind(this.game.prodigy.open, "Looks like we weren't able to link your account to your parent or guardian's email.\n\nWould you like to retry submitting it?", this.game.prodigy.open.emailPrompt.bind(this.game.prodigy.open, null), this.onClose.bind(this), null, "Oops!")), e.start()
	},
	doLater: function() {
		this.game.prodigy.player.closedEmailPrompt(), this.close(!0)
	},
	close: function(e) {
		this.game.input.clearEnterCallback(), e && Util.isDefined(this.onClose) && this.onClose(), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.EmailPrompt.isRequired = function() {
	return !1
}, Prodigy.Menu.DailyLoginBonus = function(e, t, i) {
	this.onClose = i, e.prodigy.player.dailyLoginBonus = !0, e.prodigy.player.battleCounter = 0, this.game = e, Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.Menu.DailyLoginBonus.PROMPT_FREQUENCY = 20, Prodigy.extends(Prodigy.Menu.DailyLoginBonus, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.DailyLoginBonus,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.form = this.game.prodigy.create.element(this, 80, 100);
		var e = 28,
			t = 40 * e - 22,
			i = this.game.prodigy.create.element(this.form, 0, 0);
		this.game.prodigy.create.panel(i, 0, 0, e, 12, "shine"), i.add(new Phaser.TileSprite(this.game, 11, 189, t, 40, "core", "blue-top")), i.add(new Phaser.TileSprite(this.game, 11, 229, t, 160, "core", "blue-mid")), i.add(new Phaser.TileSprite(this.game, 11, 389, t, 40, "core", "blue-top2")), this.form.add(this.game.prodigy.create.sprite(40, 30, "core-2", "menu-noot"));
		var a = this.game.prodigy.dailyLoginBonusRewards.getRewards(),
			s = this.game.prodigy.dailyLoginBonusRewards.getReward(0);
		"currency" === s.type && this.game.prodigy.dailyLoginBonusRewards.getCurrencyRewardAmount(s);
		var r = a.length,
			n = (t - 22 - 120 * r) / (r + 1);
		this.cards = this.game.prodigy.create.element(i, 0, 240), this.rewardPanels = [];
		for (var o = 0; o < a.length; o++) this.createDailyLoginRewardDisplay(22 + n + o * n + 120 * o, 0, a[o], o);
		var h = new Date,
			l = {
				d: h.getUTCDate(),
				m: h.getUTCMonth(),
				y: h.getUTCFullYear()
			},
			d = this.game.prodigy.player.data.dailyLoginBonus;
		for (d.day >= a.length && (d.day = 0, this.game.prodigy.player.updated = !0), o = 0; o < d.day; o++) this.createCheckmark(this.rewardPanels[o]);
		s = a[d.day], this.animateRewardSequence(this.rewardPanels[d.day], s), d.day++, d.date = l, i.add(new Phaser.Image(this.game, 190, 15, "event-daily_login_bonus", "title_banner_left")), i.add(new Phaser.Image(this.game, 600, 15, "event-daily_login_bonus", "title_banner_right")), this.game.prodigy.create.font(i, 370, 60, "Daily Login\nBonus!", {
			size: 36,
			font: "button",
			lineHeight: 38
		})
	},
	createCheckmark: function(e) {
		var t = (this.game.prodigy.player.data.dailyLoginBonus, e.add(this.game.prodigy.create.sprite(0, 0, "icons", "yes")));
		return t.x = 60, t.y = 60, t.anchor.set(.5, .5), t
	},
	animateRewardSequence: function(e, t) {
		var i = this.createCheckmark(e);
		if (i.alpha = 0, i.scale.x = 2, i.scale.y = 2, "currency" === t.type) {
			var a = this.game.prodigy.dailyLoginBonusRewards.getCurrencyRewardAmount(t);
			1 === t.ID && (t.type = "gold")
		}
		this.game.add.tween(i.scale).to({
			x: 1,
			y: 1
		}, 1500, Phaser.Easing.Sinusoidal.InOut).start();
		var s = this.game.add.tween(i).to({
			alpha: 1
		}, 1500, Phaser.Easing.Sinusoidal.InOut).start();
		s.onComplete.add(this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [{
			type: t.type,
			ID: t.ID,
			N: a || t.N
		}], this.promptUser.bind(this), null, "daily-login-bonus"))
	},
	promptUser: function() {
		this.game.prodigy.network.sendAnalytics(this.game.prodigy.player.userID % 2 == 0 ? "Daily-Login-Bonus-A" : "Daily-Login-Bonus-B", "Complete", "Events"), this.game.prodigy.create.font(this.form, 0, 370, "Come back tomorrow to get the next prize!", {
			size: 30,
			width: 1098,
			align: "center",
			lineHeight: 38
		}), this.game.prodigy.create.textButton(this.form, 399, 410, {
			text: "okay!",
			size: Prodigy.Control.TextButton.CONFIRM
		}, this.close.bind(this, !0))
	},
	createDailyLoginRewardDisplay: function(e, t, i, a) {
		var s = 3,
			r = 3,
			n = this.game.prodigy.create.panel(this.cards, Math.floor(e), t, s, r, "dark");
		this.rewardPanels.push(n), this.game.prodigy.create.font(n, 0, -35, "Day " + (a + 1), {
			size: 20,
			width: 120,
			align: "center",
			lineHeight: 38
		});
		var o = null;
		Util.isDefined(i.M) ? (o = n.add(this.game.prodigy.create.sprite(0, 0, "event-daily_login_bonus", "mystery_present")), o.x = 20 * s - .5 * o.width, o.y = 20 * r - .5 * o.height) : o = "gold" == i.type ? n.add(this.game.prodigy.create.sprite(20, 20, "icon-item-26")) : n.add(this.game.prodigy.icon.createFromData(i, 20, 20))
	},
	close: function(e) {
		this.game.input.clearEnterCallback(), e && Util.isDefined(this.onClose) && this.onClose(), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.DailyLoginBonus.isRequired = function(e, t) {
	if (!Util.isDefined(t.quest)) return !1;
	if (GameConstants.get("GameConstants.Debug.DISABLE_DAILY_BONUS")) return !1;
	if (!e.hasCompletedTutorial()) return !1;
	var i = 1 == t.quest.ID && 1 == t.quest.seq,
		a = e.data.dailyLoginBonus,
		s = new Date,
		r = {
			d: s.getUTCDate(),
			m: s.getUTCMonth(),
			y: s.getUTCFullYear()
		},
		n = !0;
	return Util.isDefined(a) ? e.dateIsToday(a.date) ? e.dailyLoginBonus || 1 != a.session ? n = !1 : Util.log("Is existing player first daily login bonus") : Util.log("New day") : i ? (e.data.dailyLoginBonus = {
		session: 0,
		day: 0,
		date: r
	}, n = !1) : e.data.dailyLoginBonus = {
		session: 1,
		day: 0,
		date: r
	}, Util.log("Daily Login Session:", e.data.dailyLoginBonus), n
}, Prodigy.Menu.Social = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), e.prodigy.mail.getMailCount() > 0 && (i = Prodigy.Menu.Social.BATTLE_REQUESTS), this.create(i)
}, Prodigy.Menu.Social.LEADERBOARD = 0, Prodigy.Menu.Social.ARENA = 1, Prodigy.Menu.Social.ARENA_LEADERBOARD = 2, Prodigy.Menu.Social.BATTLE_REQUESTS = 3, Prodigy.Menu.Social.BOUNTIES = 4, Prodigy.Menu.Social.ACHIEVEMENTS = 5, Prodigy.extends(Prodigy.Menu.Social, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Social,
	create: function(e) {
		this.addTransparent();
		var t = [{
			icon: "leaderboard",
			top: "Class",
			bot: "Leaders"
		}, {
			icon: "challenge",
			top: "My",
			bot: "Arena"
		}, {
			icon: "challenge",
			top: "Arena",
			bot: "Leaders"
		}, {
			icon: "battle-request",
			top: "Battle",
			bot: "Requests",
			hasIndicator: !0
		}, {
			icon: "bounty",
			top: "",
			bot: "Bounties"
		}, {
			icon: "award",
			top: "",
			bot: "Awards"
		}];
		this.createBaseSetup(30, 16, "shine", "AWARDS", t, !0);
		var i = this.game.prodigy.create.element(this, 0, 0);
		i.setRenderState(!0), i.add(new Phaser.TileSprite(this.game, 51, 220, 1178, 40, "core", "blue-top")), i.add(new Phaser.TileSprite(this.game, 51, 260, 1178, 340, "core", "blue-mid")), i.add(new Phaser.TileSprite(this.game, 51, 600, 1178, 40, "core", "blue-top2")), Prodigy.RenderMenu.prototype.create.call(this), this.setMode(e);
		for (var a = 0; a < t.length; a++) {
			var s = t[a];
			if (s.hasIndicator) {
				var r = this.game.prodigy.create.indicator(0, 0),
					n = this.buttons[a].sprite;
				n.addChild(r), this.buttons[a].indicator = r, r.visible = !1;
				var o = Util.getCenteredXY(r.width, 0, n.x, 0, n.width, 0);
				r.x = o.x, r.y = n.y - r.height, r.addTween(), r.visible = this.game.prodigy.mail.getMailCount() > 0
			}
		}
		this.game.prodigy.mail.addUpdateCallback(this.updateMailIndicator.bind(this))
	},
	updateMailIndicator: function(e) {
		for (var t = 0; t < this.buttons.length; t++) {
			var i = this.buttons[t];
			Util.isDefined(i.indicator) && (i.indicator.visible = e > 0)
		}
	},
	setMode: function(e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e), Util.isDefined(this.content) && this.content.destroy();
		var t;
		t = e === Prodigy.Menu.Social.ARENA ? "Arena" : e === Prodigy.Menu.Social.ARENA_LEADERBOARD ? "ArenaLeaderboard" : e === Prodigy.Menu.Social.BATTLE_REQUESTS ? "BattleRequests" : e === Prodigy.Menu.Social.BOUNTIES ? "Bounties" : e === Prodigy.Menu.Social.ACHIEVEMENTS ? "Achievements" : "Leaderboard", this.content = new Prodigy.Container[t](this.game, this, 80, 200), this.page = e
	}
}), Prodigy.Menu.SystemMenu = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.create()
}, Prodigy.extends(Prodigy.Menu.SystemMenu, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.SystemMenu,
	create: function() {
		this.addTransparent();
		var e = [{
				icon: "settings",
				bot: this.game.prodigy.localization.getString("SETTINGS_SOUND")
			}, {
				icon: "settings",
				bot: this.game.prodigy.localization.getString("SETTINGS_GRAPHICS")
			}, {
				icon: "settings",
				bot: this.game.prodigy.localization.getString("SETTINGS_NETWORK")
			}, {
				icon: "settings",
				bot: this.game.prodigy.localization.getString("SETTINGS_OTHER")
			}],
			t = this.game.prodigy.player;
		!t.hasValidatedParentEmail() && t.hasCompletedTutorial() && e.push({
			atlas: "icons-menu",
			icon: "parent-link-hud-badge",
			top: this.game.prodigy.localization.getString("SETTINGS_PARENT"),
			bot: this.game.prodigy.localization.getString("SETTINGS_ACCOUNT"),
			hasIndicator: !0
		}), this.content = this.game.prodigy.create.element(this, 280, 260, 15, 8), this.createBaseSetup(20, 13, "shine", this.game.prodigy.localization.getString("SETTINGS_TITLE"), e), Prodigy.RenderMenu.prototype.create.call(this), this.setMode(0);
		for (var i = 0; i < e.length; i++) {
			var a = e[i];
			if (a.hasIndicator) {
				var s = this.game.prodigy.create.indicator(0, 0),
					r = this.buttons[i].sprite;
				r.addChild(s), this.buttons[i].indicator = s, s.visible = !1;
				var n = Util.getCenteredXY(s.width, 0, r.x, 0, r.width, 0);
				s.x = n.x, s.y = r.y - s.height, s.addTween(), s.visible = !0
			}
		}
		this.game.prodigy.create.advButton(this, 900, 480, {
			icon: "settings",
			bot: this.game.prodigy.localization.getString("SETTINGS_LOGOUT")
		}, this.exitGame.bind(this))
	},
	clearContents: function() {
		Util.isDefined(this.content) && this.content.destroy(), Util.isDefined(this.panel) && this.panel.destroy(), Util.isDefined(this.soundVolumeBar) && (this.soundVolumeBar.destroy(), this.soundVolumeBar = null), Util.isDefined(this.voiceVolumeBar) && (this.voiceVolumeBar.destroy(), this.voiceVolumeBar = null), Util.isDefined(this.bgmVolumeBar) && (this.bgmVolumeBar.destroy(), this.bgmVolumeBar = null), this.panel = this.game.prodigy.create.panel(this, 280, 260, 15, 8, "white"), this.content = this.game.prodigy.create.element(this, 280, 260, 15, 8)
	},
	setMode: function(e) {
		switch (Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), e) {
			case 1:
				this.openGraphics();
				break;
			case 2:
				this.openNetwork();
				break;
			case 3:
				this.openOther();
				break;
			default:
				this.openSound()
		}
	},
	setSound: function(e) {
		switch (e) {
			case 0:
				this.game.prodigy.audio.setSFXVolume(this.soundVolumeBar.page / 100);
				break;
			case 1:
				this.game.prodigy.audio.setBGMVolume(this.bgmVolumeBar.page / 100);
				break;
			case 2:
				this.game.prodigy.audio.setVoiceVolume(this.voiceVolumeBar.page / 100)
		}
	},
	openSound: function() {
		var e = 525,
			t = this.game.prodigy.audio.getSFXVolume(),
			i = this.game.prodigy.audio.getBGMVolume(),
			a = this.game.prodigy.audio.getVoiceVolume();
		this.game.prodigy.create.font(this.content, (600 - e) / 2, 30, this.game.prodigy.localization.getString("SETTINGS_SOUND_VOLUME"), {
			width: e,
			align: "center"
		}), this.soundVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 55, e, !1, !1), this.soundVolumeBar.reset(101, 1, Math.floor(100 * t), this.setSound.bind(this, 0)), this.game.prodigy.create.font(this.content, (600 - e) / 2, 110, this.game.prodigy.localization.getString("SETTINGS_MUSIC_VOLUME"), {
			width: e,
			align: "center"
		}), this.bgmVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 135, e, !1, !1), this.bgmVolumeBar.reset(101, 1, Math.floor(100 * i), this.setSound.bind(this, 1)), this.game.prodigy.create.font(this.content, (600 - e) / 2, 190, this.game.prodigy.localization.getString("SETTINGS_VOICE_VOLUME"), {
			width: e,
			align: "center"
		}), this.voiceVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 215, e, !1, !1), this.voiceVolumeBar.reset(101, 1, Math.floor(100 * a), this.setSound.bind(this, 2)), this.game.prodigy.audio.setSFXVolume(t), this.game.prodigy.audio.setBGMVolume(i), this.game.prodigy.audio.setVoiceVolume(a)
	},
	openGraphics: function() {
		this.game.prodigy.create.textButton(this.content, 150, 50, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_SMALL_SCREEN"),
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionSmall.bind(this)), this.game.prodigy.create.textButton(this.content, 150, 125, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_MEDIUM_SCREEN"),
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionMedium.bind(this)), this.game.prodigy.create.textButton(this.content, 150, 200, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_LARGE_SCREEN"),
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionLarge.bind(this))
	},
	openNetwork: function() {
		var e = Util.isDefined(this.game.prodigy.player.world) ? this.game.prodigy.localization.getString("SETTINGS_YOUR_WORLD", this.game.prodigy.player.world.name) : this.game.prodigy.localization.getString("SETTINGS_OFFLINE");
		this.game.prodigy.create.font(this.content, 0, 50, e, {
			width: 600,
			align: "center"
		}), this.game.prodigy.create.textButton(this.content, 150, 200, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_SAVE_CHARACTER"),
			size: Prodigy.Control.TextButton.MED
		}, this.saveCharacter.bind(this))
	},
	openOther: function() {
		this.game.prodigy.create.textButton(this.content, 150, 50, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_GET_EPICS"),
			size: Prodigy.Control.TextButton.MED
		}, this.unlockEpics.bind(this)), this.game.prodigy.create.textButton(this.content, 150, 125, {
			text: this.game.prodigy.localization.getString("SYSTEM_BUTTON_GET_MEMBER"),
			size: Prodigy.Control.TextButton.MED
		}, this.toggleMember.bind(this))
	},
	toggleMember: function() {
		if (this.game.prodigy.player.isMember == true) {
			this.game.prodigy.player.isMember = false;
			this.game.prodigy.open.messageBoxOkay("You have deactivated Membership.", "OKAY", null, null, "Membership")
		}
		else {
			this.game.prodigy.player.isMember = true;
			this.game.prodigy.open.messageBoxOkay("You have activated Membership!", "OKAY", null, null, "Membership")
		}
	},
	unlockEpics: function() {
		this.addEpic(125);
		this.addEpic(126);
		this.addEpic(127);
		this.addEpic(128);
		this.addEpic(129);
		this.addEpic(130);
		this.addEpic(131);
		this.addEpic(132);
		this.addEpic(133);
		this.game.prodigy.open.messageBoxOkay("Any epics you didn't have before have been added to your team!","OKAY",null,null,"Epics Unlocked!");
	},
	addEpic: function(e) {
		if (!this.game.prodigy.player.kennel.hasPet(e)) {
			this.game.prodigy.player.kennel.add(e, null, Prodigy.Creature.starsToLevel(19), 20)
		}
		if (e > 129) {
			e += 4
		}
		if (!this.game.prodigy.player.backpack.hasItem("follow", e)) {
			this.game.prodigy.player.backpack.add("follow", e)
		}
	},
    downloadForCharacter: function(content, fileName, contentType) {
		var a = document.createElement("a");
		var file = new Blob([content], {
			type: contentType
		});
		a.href = URL.createObjectURL(file);
		a.download = fileName;
		a.click();
		return !0
        },
        saveCharacter: function() {
		var character = {
			appearancedata: this.game.prodigy.player.appearance.data,
			equipmentdata: this.game.prodigy.player.equipment.data,
			kenneldata: this.game.prodigy.player.kennel.data,
			data: this.game.prodigy.player.data,
			questdata: this.game.prodigy.player.quests.data,
			statedata: this.game.prodigy.player.state.data,
			tutorialdata: this.game.prodigy.player.tutorial.data,
			backpackdata: this.game.prodigy.player.backpack.data,
			housedata: this.game.prodigy.player.house.data,
			achievementsdata: this.game.prodigy.player.achievements.data,
			metadata: {
				isMember: this.game.prodigy.player.isMember,
				appearanceChanged: this.game.prodigy.player.appearanceChanged,
				broadcastId: this.game.prodigy.player.broadcastId,
				inPVP: this.game.prodigy.player.inPVP,
				updated: this.game.prodigy.player.updated,
			},
			gameVersion: this.game.prodigy.version
		};
		if (Util.isDefined(this.game.prodigy.player.registerDate)) {
			character.metadata.registerDate = this.game.prodigy.player.registerDate
		};
		this.downloadForCharacter(JSON.stringify(character), this.game.prodigy.player.appearance.data.name + '.json', 'text/plain');
        },
	exitGame: function() {
		this.game.prodigy.network.logout()
	},
	menuUpdate: function() {
		Prodigy.Control.Menu.prototype.menuUpdate.call(this), Util.isDefined(this.soundVolumeBar) && this.game.prodigy.audio.getSFXVolume() !== this.soundVolumeBar.page && this.game.prodigy.audio.setSFXVolume(this.soundVolumeBar.page), Util.isDefined(this.voiceVolumeBar) && this.game.prodigy.audio.getVoiceVolume() !== this.voiceVolumeBar.page && this.game.prodigy.audio.setVoiceVolume(this.voiceVolumeBar.page), Util.isDefined(this.bgmVolumeBar) && this.game.prodigy.audio.getBGMVolume() !== this.bgmVolumeBar.page && this.game.prodigy.audio.setBGMVolume(this.bgmVolumeBar.page)
	}
}), Prodigy.Menu.AchievementUnlock = function(e, t, i, a) {
	this.data = i, this.onClose = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.AchievementUnlock, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.AchievementUnlock,
	create: function() {
		this.addTransparent(), this.game.prodigy.create.panel(this.background, -40, 359, 34, 4, "white").alpha = .8, this.game.prodigy.create.panel(this.background, -40, 240, 34, 3, "blue"), Prodigy.RenderMenu.prototype.create.call(this);
		var e = this.game.prodigy.create.element(this, 640, 270);
		this.game.prodigy.create.font(e, -640, -20, "Achievement Unlocked!", {
			size: 80,
			width: 1280,
			align: "center"
		}), e.scale.x = e.scale.y = 3, e.alpha = 0, this.panel = this.game.prodigy.create.achievement(this, 0, 379), this.panel.alpha = 0, this.game.add.tween(e.scale).to({
			x: 1,
			y: 1
		}, 800, Phaser.Easing.Linear.None).start();
		var t = this.game.add.tween(e).to({
			alpha: 1
		}, 800, Phaser.Easing.Linear.None).start();
		t.onComplete.addOnce(this.processStep1.bind(this, 0))
	},
	processStep1: function(e) {
		if (e >= this.data.length) return this.close(), void 0;
		this.panel.x = 1280, this.panel.alpha = 0, this.panel.setSource(this.data[e]);
		var t = this.game.add.tween(this.panel).to({
			x: 320,
			alpha: 1
		}, 800, Phaser.Easing.Quadratic.Out).start();
		t.onComplete.addOnce(this.processStep2.bind(this, e))
	},
	processStep2: function(e) {
		this.panel.unlockNext(this.processStep3.bind(this, e))
	},
	processStep3: function(e) {
		var t = this.game.add.tween(this.panel).to({
			x: -640,
			alpha: 0
		}, 800, Phaser.Easing.Quadratic.Out).delay(2500).start();
		t.onComplete.addOnce(this.processStep1.bind(this, e + 1))
	}
}), Prodigy.Menu.WorldMap = function(e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.game = e, e.prodigy.network.sendToyEvent("open-map", 4), this.create()
}, Prodigy.extends(Prodigy.Menu.WorldMap, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.WorldMap,
	create: function() {
		Prodigy.RenderMenu.prototype.create.call(this), this.addTransparent(), this.mapPanel = this.game.prodigy.create.panel(this, 180, 60, 23, 15, "shine2"), this.mapPanel.setRenderState(!0), this.map = this.game.prodigy.create.element(this, this.mapPanel.x, this.mapPanel.y), this.game.prodigy.create.button(this.map, 1060 - this.mapPanel.x, 50 - this.mapPanel.y, "icons", "close", this.close.bind(this)), this.startLoad(["map"], this.showContent.bind(this)), this.game.broadcaster.addAppListener(Prodigy.Events.Titan.GOT_TITANS, this.gotTitanCallback.bind(this), this, "Titan"), this.onClose = this.closeWorldMap
	},
	closeWorldMap: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Titan.GOT_TITANS, this, "Titan")
	},
	showContent: function() {
		this.mapPanel.add(this.game.prodigy.create.sprite(20, 20, "map", "map")), this.process();
		for (var e = 0; e < Prodigy.Menu.WorldMap.BTNS.length; e++) {
			var t = Prodigy.Menu.WorldMap.BTNS[e],
				i = !1;
			if (Util.isNullOrUndefined(t.item) || this.game.prodigy.player.backpack.hasItem(t.item.type, t.item.ID) || (i = !0), Util.isNullOrUndefined(t.animatedSprites)) var a = this.game.prodigy.create.button(this.map, 20 + t.x, 20 + t.y, "map", t.map, this.openLocation.bind(this, t, i));
			else var a = this.game.prodigy.create.button(this.map, 20 + t.x, 20 + t.y, "map", t.map, this.openLocation.bind(this, t, i), t.animatedSprites, t.animatedSpritePos);
			if (a.sprite.input.pixelPerfectOver = !0, a.sprite.input.pixelPerfectClick = !0, i && (a.sprite.tint = 5592405), !Util.isNullOrUndefined(t.isNew) && t.isNew(this.game)) {
				var s = this.map.add(this.game.prodigy.create.sprite(t.iconX - this.map.x, t.iconY - this.map.y, "icons", "exclamation"));
				s.inputEnabled = !0, s.events = a.sprite.events, s.anchor.setTo(.5, .5), this.game.add.tween(s).to({
					y: s.y - 10
				}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)
			}
		}
		var r = this.game.prodigy.player;
		if (r.tutorial.getMenuValue(14) < 1) {
			r.tutorial.setMenuValue(14, 0, 1);
			var n = this.game.prodigy.dialogue.create();
			n.setText(18), n.start("noot")
		}
		this.game.prodigy.titansNetworkHandler.getTitans()
	},
	openLocation: function(e, t) {
		t ? this.game.prodigy.open.message(e.lock, null, e.icon, e.name, null, {
			isModal: !1
		}) : Util.isNullOrUndefined(e.tag) ? this.game.prodigy.open.confirm(e.summary + " \n\nDo you want to travel here?", this.goTo.bind(this, e.target, e.clickEventName), null, e.icon, e.name, null, {
			isModal: !1
		}) : this.game.prodigy.open.zoneProgress(e, this.goTo.bind(this, e.target, e.clickEventName), this.goTo.bind(this, "shipwreck_shore-Titan", e.clickEventName))
	},
	goTo: function(e, t) {
		Util.isNullOrUndefined(t) || this.game.broadcaster.broadcast(t, "UI"), "Dorm" === e ? (this.game.state.states[e].player = this.game.prodigy.player, this.game.prodigy.start(e)) : "Portal" === e ? Prodigy.Menu.ToyStore.openWebsite(this.game, "portal-btn") : e.indexOf("-") > 0 ? this.game.prodigy.world.teleport(e) : this.game.prodigy.start(e)
	},
	gotTitanCallback: function(e) {
		if (2 === e.assetID) {
			var t = Prodigy.Menu.WorldMap.BTNS[6],
				i = this.map.add(this.game.prodigy.create.sprite(t.iconX - this.map.x - 40, t.iconY - this.map.y, "ui-titan", "titan-notification"));
			i.inputEnabled = !0, i.events.onInputDown.add(this.openLocation.bind(this, t, !1)), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				y: i.y - 10
			}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)
		}
	}
}), Prodigy.Menu.WorldMap.BTNS = [{
	name: "Firefly Forest",
	zone: "forest",
	tag: "forest",
	x: 170,
	y: 285,
	map: "btn-firefly",
	target: "forest-C8",
	summary: "Help Flora reclaim her forest from pesky monsters, thieves, and a sleeping giant. Learn earth spells and earn the Warden Keystone of Firefly Forest!",
	msg: {
		1: "Save Flora's friend, the merchant, from bullies!",
		2: "Find a wand in Firefly Forest.",
		3: "Continue Flora's trials in the Forest by finding a Healstone and defeating Saplettes.",
		4: "Clean up the mess that vandals created in the Forest!",
		5: "Bring the note you found to the traveler in the woods, so that it can be translated.",
		6: "Get a Mandrake from the sneaky Sprikes!",
		7: "Bring in Mandrakes for questioning. Get to the bottom of the plot against Flora!",
		8: "Find and defeat the TripTrop Trio to get back what they stole from Flora.",
		9: "Find Flora's golem, Gerald.",
		10: "Find the magic tree stump, and using it, repair Flora's flute.",
		11: "Defeat the Neek that stole Flora's flute once again!",
		12: "Wake up Gerald the Golem, and defeat him!"
	},
	iconX: 466,
	iconY: 419,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-forest"))
	}
}, {
	name: "Shiverchill Mountains",
	zone: "shiverchill",
	tag: "shiverchill",
	x: 12,
	y: 76,
	map: "btn-shiverchill",
	target: "shiverchill-A10",
	summary: "Bok needs your help! His mountain is frozen over and only a wizard can help reclaim his throne! Learn ice spells and earn the Warden Keystone of Shiverchill Mountains!",
	msg: {
		1: "Defeat the monsters that have captured the furnace room!",
		2: "Defeat the ice monsters that have stolen the furnace fuel.",
		3: "Light a furnace with the fuel you got back from those icy thieves!",
		4: "Look for more crystals to light the remaining furnaces of Shiverchill.",
		5: "Find the chest that holds Bok's shovel.",
		6: "Save the miner!",
		7: "Find another power crystal in the mines.",
		8: "Hunt down and defeat the spooky Cloakers in the mines.",
		9: "Find the power crystal in the Ruins.",
		10: "Use the fuel you've collected to turn on the next furnace!",
		11: "Check to make sure the Throne Room is safe for Bok!",
		12: "Collect lots of junk crystals so you can lure the evil Ice Worm out!",
		13: "Defeat the Ice Worm to stop the cavequakes, AND get another power crystal!",
		14: "Light the third furnace with the crystal you got from the giant Ice Worm!",
		15: "Collect your reward for your heroic deeds in the Throne Room!"
	},
	iconX: 340,
	iconY: 260,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-shiverchill"))
	}
}, {
	name: "Skywatch",
	zone: "skywatch",
	tag: "skywatch",
	x: 141,
	y: 16,
	map: "btn-skywatch",
	target: "skywatch-A1",
	summary: "Benni and Broccolina are in need of a wizard to help them get Skywatch back under control. Learn storm spells and earn the Warden Keystone of Skywatch!",
	msg: {
		1: "Clear out the monsters in the Greenhouse so Benni can get back to work!",
		2: "Go and collect the Weather O Meter so Benni can take some readings around Skywatch.",
		3: "Find Broccolina for Benni.",
		4: "Clear the trolleys of any vines and inspect the Wind Machine for Benni.",
		5: "Find clues to identify the whereabouts of the Factory Key.",
		6: "Get the Factory Key.",
		7: "Head to the factory and collect spare parts for the Vine Pruner.",
		8: "Defeat the Water Cloud at the Snow Machine!",
		9: "Defeat the Earth Cloud at the Rain Machine!",
		10: "Defeat the Ice Cloud at the Wind Machine!",
		11: "Seek out the Cloudmaster for guidance on how to deal with those pesky Elemental Clouds.",
		12: "Find pieces of the broken key.",
		13: "Head to the Cumulus Room and save Skywatch!"
	},
	iconX: 562,
	iconY: 163,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-skywatch"))
	}
}, {
	name: "Dyno Dig Oasis",
	x: 43,
	y: 347,
	map: "btn-dyno",
	target: "dyno-A0",
	summary: "Professor Scoog is in need of a wizard just like you! Encounter extinct monsters and dig up fossils!",
	iconX: 287,
	iconY: 481,
	isNew: function(e) {
		try {
			return Util.isNullOrUndefined(e.prodigy.player.quests.data[6])
		} catch (t) {
			return !0
		}
	}
}, {
	name: "Epics Subspace",
	x: 670,
	y: 19,
	map: "btn-portal",
	target: "toyzone-B1",
	summary: "A mysterious portal that leads to the realm of the fabled Epics, the most powerful pets in history!",
	iconX: 940,
	iconY: 150,
	animatedSprites: ["tz-1", "tz-2", "tz-3", "tz-4"],
	animatedSpritePos: {
		x: 31,
		y: -16
	},
	isNew: function(e) {
		try {
			return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-toyzone-0"))
		} catch (t) {
			return !0
		}
	}
}, {
	name: "Bonfire Spire",
	zone: "bonfire_spire",
	tag: "bonfire",
	x: 546,
	y: 86,
	map: "btn-bonfire",
	target: "bonfire_spire-B1",
	summary: "Slurpy is in need of a wizard just like you! Help him to learn how to cook, learn fire spells, and earn the Warden Keystone of Bonfire Spire!",
	msg: {
		1: "Help Slurpy out by pulling the first lever to drain lava.",
		2: "Help Slurpy out by pulling the second lever to drain lava.",
		3: "Help Slurpy out by pulling the third lever to drain lava.",
		4: "Find Slurpy's special ingredient.",
		5: "Sneak Slurpy's special ingredient into the Chef's pot.",
		6: "Attend the Royal Dinner in Slurpy's place.",
		7: "Collect Slurpy's cooking supplies.",
		8: "Talk to the Queen's guards, Mike and Hank, to find out the Queen's favorite food.",
		9: "Find turnips for Slurpy's next dish.",
		10: "Deliver Slurpy's new dish to the Queen.",
		11: "Find the key that will unlock the chest holding the magical Boots of Hotwalk!",
		12: "Defeat the guardian of the chest of the Boots of Hotwalk.",
		13: "Use the Boots of Hotwalk to get to the Chef, and defeat him!",
		14: "Help the Chef get his job back."
	},
	iconX: 836,
	iconY: 232,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-bonfire_spire"))
	}
}, {
	name: "Shipwreck Shore",
	zone: "shipwreck_shore",
	tag: "shipwreck",
	x: 717,
	y: 102,
	map: "btn-pirate",
	icon: "zone-water",
	target: "shipwreck_shore-B12",
	summary: "Defeat the Puppet Master's sea beast, a monster from the old war against the Order of Influence, learn water spells, and earn the Warden Keystone of Shipwreck Shore!",
	msg: {
		1: "Find a Breathing Bubble, so you can go underwater!",
		2: "Search for the mysterious undersea monster.",
		3: "Find and collect a sample of ink for Eve.",
		4: "Find a Sonic Blaster to break through the ink.",
		5: "Clear ink out of your path through Shipwreck Shore.",
		6: "Take pictures of the mysterious monster's tunnel for Eve.",
		7: "Collect scales from the boss monster.",
		8: "Train to get tough against underwater monsters.",
		9: "Pursue the underwater boss.",
		10: "Find the key for the Captain's Quarters.",
		11: "Defeat the Old One."
	},
	iconX: 1004,
	iconY: 289,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-shipwreck_shore"))
	}
}, {
	name: "Dark Tower",
	x: 598,
	y: 242,
	map: "btn-tower",
	target: "darktower-A1",
	summary: "The Dark Tower is home to Mira, who has a challenge for wizards like you! Climb to the top and earn a powerful prize!",
	iconX: 886,
	iconY: 483,
	isNew: function(e) {
		return 0 === e.prodigy.player.getTowerProgress()
	}
}, {
	name: "Lamplight Town",
	x: 315,
	y: 395,
	map: "btn-town",
	target: "lamplight-B3",
	summary: "Home of the famous Academy, the town has all sorts of wonderful things for wizards to do!",
	iconX: 641,
	iconY: 558,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-lamplight"))
	}
}, {
	name: "The Academy",
	x: 343,
	y: 134,
	map: "btn-academy",
	target: "lamplight-B1",
	summary: "The Academy floats",
	lock: "The Academy is unreachable...for now!",
	item: {
		type: "key",
		ID: 99
	}
}, {
	name: "Your House",
	x: 200,
	y: 498,
	map: "btn-house",
	target: "house-suburbs",
	summary: "This is your house! Customize it any way you like, and show it off to your friends!",
	clickEventName: Prodigy.Events.House.CLICKED_HOUSE_ICON,
	iconX: 420,
	iconY: 558,
	isNew: function(e) {
		return e.prodigy.player.hasCompletedTutorial() && !(e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE) && e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE))
	}
}, {
	name: "The Lost Island",
	x: 740,
	y: 275,
	map: "btn-activity",
	target: "activity_zone-B3",
	summary: "A mysterious island has appeared, and adorable critters on it need your help! Who knows what adventures await you here?",
	iconX: 1008,
	iconY: 394,
	isNew: function(e) {
		return Util.isNullOrUndefined(e.prodigy.player.state.get("zone-activity_zone"))
	}
}], Prodigy.Menu.Character = function(e, t, i) {
	this.player = i, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Character, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Character,
	create: function() {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 240, 80, 20, 14, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 760, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.panel.add(new Phaser.TileSprite(this.game, 11, 120, 778, 40, "core", "blue-top")), this.panel.add(new Phaser.TileSprite(this.game, 11, 160, 778, 300, "core", "blue-mid")), this.panel.add(new Phaser.TileSprite(this.game, 11, 460, 778, 40, "core", "blue-top2")), this.game.prodigy.create.panel(this.panel, 200, -10, 10, 2, "banner"), this.game.prodigy.create.font(this, 290, 86, "My Spellbook", {
			font: "button",
			size: 36,
			width: 720,
			align: "center"
		}), this.game.prodigy.create.panel(this.panel, 240, 140, 8, 4, "white").alpha = .5, this.game.prodigy.create.font(this.panel, 250, 150, "Here are the spells you will see in battle.\n\nClick on a card to switch a spell.", {
			font: "black",
			width: 300
		}), this.content = this.game.prodigy.create.element(this, 500, 170), Prodigy.RenderMenu.prototype.create.call(this), this.updateSpells()
	},
	updateSpells: function() {
		Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 290, 180);
		for (var e = this.game.prodigy.player.getAttacks(), t = [
				[0, 0],
				[0, 1],
				[1, 1],
				[2, 1],
				[3, 1],
				[3, 0]
			], i = 0; 6 > i; i++) i >= e.length ? this.game.prodigy.create.panel(this.content, 180 * t[i][0], 220 * t[i][1], 4, 5, "empty") : this.game.prodigy.create.item(this.content, 180 * t[i][0], 220 * t[i][1], {
			ID: e[i],
			type: "spell"
		}, "inv", this.spellSelected.bind(this, e[i]))
	},
	spellSelected: function(e) {
		this.game.prodigy.open.pouch("spell", this.updateSpells.bind(this), e)
	}
}), Prodigy.Menu.AccountCreate = function(e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), i = i || {}, this.onClose = a, this.username = i.username, this.password = i.password, this.hasLocation = Util.isDefined(i.curriculumTreeID), this.googleData = Util.isDefined(i.idToken) ? {
		idToken: i.idToken,
		name: i.name,
		email: i.email
	} : null, this.data = {
		firstName: "",
		lastName: "",
		curriculumTreeID: i.curriculumTreeID || 1
	}, this.data.player = new Player(this.game), this.data.player.setDefault("male"), this.data.player.data.new = !0, this.create()
}, Prodigy.extends(Prodigy.Menu.AccountCreate, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.AccountCreate,
	create: function() {
		var e = 18,
			t = 10;
		this.game.broadcaster.addAppListener(Prodigy.Events.AccountCreate.SET_BACKGROUND_PANEL_TILE_DIMENSIONS, this.setBackgroundPanelSize.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.AccountCreate.GET_DEFAULT_BACKGROUND_PANEL_TILE_DIMENSIONS, function() {
			return {
				horizontalTileNum: e,
				verticalTileNum: t
			}
		}, this), this.addTransparent(), this.backgroundContainer = this.game.prodigy.create.element(this.background), this.rightArrowPanel = this.game.prodigy.create.panel(this.backgroundContainer, 0, 0, 4, 6, "shine"), this.leftArrowPanel = this.game.prodigy.create.panel(this.backgroundContainer, 0, 0, 4, 6, "shine"), this.setBackgroundPanelSize(e, t), Prodigy.RenderMenu.prototype.create.call(this), this.content = this.game.prodigy.create.element(this), this.spinner = this.add(this.game.prodigy.create.sprite(640, 300, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.spinner.visible = !1, this.modules = [], Util.isDefined(this.username) || (this.modules.push(new Prodigy.Container.ClassCodePage(this.game, this.content, this.data)), Util.isDefined(this.googleData) || (this.modules.push(new Prodigy.Container.NamePage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.PasswordPage(this.game, this.content, this.data)))), this.hasLocation || this.modules.push(new Prodigy.Container.LocationPage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.GradePage(this.game, this.content, this.data));
		for (var i = 0; i < this.modules.length; i++) {
			var a = this.modules[i - 1],
				s = this.modules[i + 1];
			this.modules[i].init(a ? a.open.bind(a, -1) : this.close.bind(this, !1), s ? s.open.bind(s, 1) : this.processResults.bind(this))
		}
		this.modules[0].open();
		var r = this.game.prodigy.create.panel(this, 5, 40, 5, 1, "blue");
		r.scale.y = -1, r.setClickable(this.game.prodigy.network.openWebsite.bind(this.game.prodigy.network, "www.prodigygame.com/privacy-policy/")), r.alpha = .5;
		var n = this.game.prodigy.create.font(r, 0, 35, "+Privacy Policy", {
			align: "center",
			width: 200
		});
		n.scale.y = -1
	},
	setBackgroundPanelSize: function(e, t) {
		var i = 40,
			a = 11,
			s = a + a;
		Util.isDefined(this.backgroundPanel) && this.backgroundPanel.destroy(), this.backgroundPanel = this.game.prodigy.create.panel(this.backgroundContainer, 0, 60, e, t, "shine"), this.backgroundPanel.x = Util.getCenteredXY(this.backgroundPanel.width, 0, 0, 0, 1280, 0).x, this.backgroundPanel.add(new Phaser.TileSprite(this.game, a, i, this.backgroundPanel.width - s, i, "core", "blue-top")), this.backgroundPanel.add(new Phaser.TileSprite(this.game, a, 2 * i, this.backgroundPanel.width - s, this.backgroundPanel.height - 4 * i, "core", "blue-mid")), this.backgroundPanel.add(new Phaser.TileSprite(this.game, a, this.backgroundPanel.height - 2 * i, this.backgroundPanel.width - s, i, "core", "blue-top2")), this.leftArrowPanel.x = this.backgroundPanel.x - this.leftArrowPanel.width + i, this.leftArrowPanel.y = Util.getCenteredXY(0, this.leftArrowPanel.height, 0, this.backgroundPanel.y, 0, this.backgroundPanel.height).y, this.rightArrowPanel.x = this.backgroundPanel.x + this.backgroundPanel.width - i, this.rightArrowPanel.y = this.leftArrowPanel.y, this.process()
	},
	processResults: function() {
		this.content.removeAll(!0);
		var e = {
			data: JSON.stringify(this.data.player.data),
			equipment: JSON.stringify(this.data.player.equipment.data),
			pets: JSON.stringify(this.data.player.kennel.data),
			inventory: JSON.stringify(this.data.player.backpack.data),
			appearance: JSON.stringify(this.data.player.appearance.data)
		};
		if (this.spinner.visible = !0, Util.isDefined(this.username)) {
			var t = {
				chosenGrade: this.data.grade,
				grade: this.data.grade
			};
			Util.isDefined(this.data.curriculumTreeID) && (t.curriculumTreeID = this.data.curriculumTreeID), this.game.prodigy.network.updateUser(t, this.createCharacter.bind(this, e))
		} else if (e.grade = e.chosenGrade = this.data.grade, e.password = this.data.password, Util.isDefined(this.data.curriculumTreeID) && (e.curriculumTreeID = this.data.curriculumTreeID), e.classCode = this.data.classCode, e.email = this.data.email, e.parentEmail = this.data.parentEmail, Util.isDefined(this.googleData)) {
			e.idToken = this.googleData.idToken, e.email = decodeURIComponent(this.googleData.email);
			var i = decodeURI(this.googleData.name),
				a = i.split("+"),
				s = a[0],
				r = a.length > 1 ? a[a.length - 1] : "";
			this.game.prodigy.network.createPlayerWithGoogle(s, r, e, this.fail.bind(this), this.close.bind(this, !0))
		} else this.game.prodigy.network.createPlayer(this.data.firstName, this.data.lastName, e, this.fail.bind(this), this.complete.bind(this))
	},
	createCharacter: function(e) {
		this.game.prodigy.network.createCharacter(this.game.prodigy.player.userID, e, this.fail.bind(this), this.complete.bind(this))
	},
	fail: function() {
		this.spinner.visible = !1;
		var e = this.game.prodigy.event.create();
		e.yesNoText(52, "noot", this.close.bind(this, !1)), e.function(this.processResults.bind(this)), e.start()
	},
	complete: function(e) {
		this.spinner.visible = !1, this.game.prodigy.create.font(this.content, 240, 190, "username:", {
			size: 36,
			font: "button",
			width: 280,
			align: "right"
		}), this.game.prodigy.create.font(this.content, 240, 270, "password:", {
			size: 36,
			font: "button",
			width: 280,
			align: "right"
		}), this.game.prodigy.create.font(this.content, 560, 190, e.username, {
			size: 40
		}), this.game.prodigy.create.font(this.content, 560, 270, e.password, {
			size: 40
		}), Util.isDefined(this.data.email) && Util.setCookie("prodigyUsername", e.username || "", 5), Util.isDefined(this.username) ? this.close(!0, this.username, this.password) : this.showResults(e)
	},
	showResults: function(e) {
		var t = this.game.prodigy.event.create();
		t.text(51, "noot"), t.function(this.close.bind(this, !0, e.username, e.password)), t.start()
	},
	close: function(e, t, i) {
		this.game.prodigy.network.logout(!0), Prodigy.RenderMenu.prototype.close.call(this, e, t, i)
	},
	destroy: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.AccountCreate.SET_BACKGROUND_PANEL_TILE_DIMENSIONS, this), this.game.broadcaster.removeAppListener(Prodigy.Events.AccountCreate.GET_DEFAULT_BACKGROUND_PANEL_TILE_DIMENSIONS, this), Prodigy.RenderMenu.prototype.destroy.call(this)
	}
}), Prodigy.Menu.Server = function(e, t, i, a, s) {
	Prodigy.Control.Menu.call(this, e, t, 11), this.callback = a, this.servers = i, this.isAutoSelect = Util.getOptionalParameter(s, !1), this.backButton = null, this.playOfflineButton = null, this.setup(), GameConstants.get("GameConstants.Build.DEBUG") && this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Menu.Server, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Server,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.showFrame("map", "CHOOSE YOUR WORLD", []), this.game.prodigy.create.font(this, 125, 60, "Pick the same world as your friends to play together!", {
			size: 20
		}), this.playOfflineButton = this.game.prodigy.create.textButton(this, 930, 20, {
			size: Prodigy.Control.TextButton.MED,
			icon: "next",
			text: "play offline"
		}, this.close.bind(this, !0)), this.backButton = this.game.prodigy.create.textButton(this, 50, 650, {
			icon: "back",
			text: "back"
		}, this.close.bind(this, !1, !0)), this.content = this.game.prodigy.create.element(this, 0, 0), this.showSuggestedServers(this.servers), this.setupComplete = !0
	},
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK, this)
	},
	showSuggestedServers: function(e) {
		if (this.content.removeAll(!0), !Util.isDefined(e)) return this.game.prodigy.create.font(this.content, 0, 320, "Loading world list...", {
			size: 30,
			width: 1280,
			align: "center"
		}), this.game.prodigy.network.getWorldList(this.showSuggestedServers.bind(this), this.showError.bind(this, "Could not load world list. Check your connection and try again.", this.showSuggestedServers.bind(this))), void 0;
		for (var t = this.getSuggested(e), i = 0; i < t.length; i++) {
			var a = t[i];
			Util.isDefined(a) && this.createButton(a, this.content, 140 + i % 3 * 350, 210 + 140 * Math.floor(i / 3), this.showSuggestedServers.bind(this))
		}
		var s = this.content.add(this.game.prodigy.create.sprite(520, 530, "core", "server-icon"));
		if (s.tint = 8111468, this.game.prodigy.create.font(this.content, 560, 540, " = wizards online", {
				size: 20
			}), this.game.prodigy.create.textButton(this.content, 880, 650, {
				size: Prodigy.Control.TextButton.LG,
				text: "more worlds",
				icon: "map"
			}, this.showAllServers.bind(this)), this.isAutoSelect) {
			var r = this.game.prodigy.player.getLatestClassID(!0, !1);
			if (r > 0) {
				var n = this.determineClassWorld(r, this.servers);
				Util.isDefined(n) ? (this.backButton.visible = !1, this.playOfflineButton.visible = !1, this.connect(n, this.onAutoConnectFail.bind(this))) : Util.log("Server.showSuggestedServers - couldn't find a class world for this player.  Going to manual select mode", Util.INFO)
			} else Util.log("Server.showSuggestedServers - couldn't find a teacher-owned class for this player.  Going to manual select mode", Util.INFO);
			this.isAutoSelect = !1
		}
	},
	onAutoConnectFail: function(e) {
		this.isAutoSelect = !1, this.showAllServers(e)
	},
	determineClassWorld: function(e, t) {
		var i = null,
			a = null;
		return t.length > 0 ? (a = t.sort(function(e, t) {
			return e.id.localeCompare(t.id)
		}), i = a[e % a.length]) : Util.log("Server.determineClassWorld - worldData array is empty.  Could not determine class world", Util.INFO), i
	},
	getSuggested: function(e) {
		if (e.length < 6) return e;
		var t = [];
		e = e.sort(function(e, t) {
			return e.full - t.full
		});
		for (var i = 5; i < e.length; i++)
			if (e[i].full > 75 || i === e.length - 1) {
				t = [e[i - 5], e[i - 4], e[i - 3], e[i - 2], e[i - 1], e[i]];
				break
			} return t
	},
	showAllServers: function(e) {
		return this.content.removeAll(!0), this.playOfflineButton.visible = !0, this.backButton.visible = !0, Util.isDefined(e) ? (e = e.sort(function(e, t) {
			return e.name.localeCompare(t.name)
		}), this.serverPage = this.game.prodigy.create.element(this.content, 200, 180), this.scroll = this.game.prodigy.create.scrollBar(this.content, 60, 180, 345, this.setPage.bind(this, e)), this.scroll.setPages(1 + Math.floor((e.length - 1) / 9)), this.game.prodigy.create.textButton(this.content, 880, 650, {
			size: Prodigy.Control.TextButton.LG,
			text: "my worlds",
			icon: "star"
		}, this.showSuggestedServers.bind(this)), void 0) : (this.game.prodigy.create.font(this.content, 0, 320, "Loading world list...", {
			size: 30,
			width: 1280,
			align: "center"
		}), this.game.prodigy.network.getWorldList(this.showAllServers.bind(this), this.showError.bind(this, "Could not load world list. Check your connection and try again.", this.showAllServers.bind(this))), void 0)
	},
	setPage: function(e, t) {
		this.serverPage.removeAll(!0);
		for (var i = 0, a = 9 * t; 9 * t + 9 > a && a < e.length; a++) {
			var s = e[a],
				r = 15 + i % 3 * 350,
				n = 120 * Math.floor(i / 3);
			i++, this.createButton(s, this.serverPage, r, n, this.showAllServers.bind(this))
		}
	},
	createButton: function(e, t, i, a, s) {
		var r = this.game.prodigy.create.element(t, i, a),
			n = r.add(this.game.prodigy.create.sprite(0, 0, "core-2", "store-panel"));
		n.inputEnabled = !0, n.events.onInputDown.add(this.connect.bind(this, e, s), this), Util.isDefined(e.meta) && r.add(this.game.prodigy.icon.createFromData(e.meta, 0, 0)), this.game.prodigy.create.font(r, 85, -2, e.name);
		for (var o = 0 == e.full ? 12364703 : e.full <= 80 ? 8111468 : e.full < 95 ? 15194464 : 14307665, h = 0; 5 > h; h++) {
			var l = r.add(this.game.prodigy.create.sprite(96 + 39 * h, 36, "core", "server-icon"));
			l.tint = e.full >= 20 * h ? o : 12364703
		}
		return r
	},
	getServerIcon: function(e) {
		return Util.convertItemToIcon(e)
	},
	connect: function(e, t) {
		if (!this.isAutoSelect && e.full >= 100) this.showError("The world you selected is full. Please try another.", t);
		else {
			this.content.removeAll(!0);
			var i = "Connecting to ";
			i += Util.isDefined(e.name) ? e.name : "server", this.game.prodigy.create.font(this.content, 0, 320, i + "...", {
				size: 30,
				width: 1280,
				align: "center"
			}), this.game.prodigy.network.joinMultiplayerServer(e, "zone-login", this.connected.bind(this, !0), this.connected.bind(this, !1, t), this.connected.bind(this, !1, t, "This world is full. Please select another world"))
		}
	},
	connected: function(e, t, i) {
		Util.isNullOrUndefined(this) || Util.isNullOrUndefined(this.game) || (this.content.removeAll(!0), e ? this.close(!0) : this.showError(i || "Could not connect to world. Try again, or select another world.", t))
	},
	showError: function(e, t) {
		this.content.removeAll(!0), this.game.prodigy.create.panel(this.content, 240, 260, 16, 4), this.game.prodigy.create.font(this.content, 270, 300, e, {
			size: 30,
			width: 740,
			align: "center"
		}), this.game.prodigy.create.textButton(this.content, 465, 430, {
			size: Prodigy.Control.TextButton.LG,
			text: "back to worlds",
			icon: "back"
		}, t)
	},
	close: function(e, t) {
		Util.isDefined(this.callback) && this.callback(e, t), Prodigy.Control.Menu.prototype.close.call(this)
	},
	onDebugAutoClick: function(e) {
		var t;
		if (Util.isDefined(e))
			for (t = 0; t < this.servers.length; t++) {
				var i = this.servers[t];
				if (e === i.name.toLowerCase()) return this.connect(i), void 0
			} else
				for (t = 0; t < this.servers.length; t++) Util.log("Button tag: " + this.servers[t].name.toLowerCase())
	}
}), Prodigy.ServerSelectMode = function(e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 12, {
		hideMenu: !0,
		hideContent: !0
	}), this.serverList = Util.getOptionalParameter(i, null), this.onServerSelectedCallback = Util.getOptionalParameter(a, null), this.dialogue = null, this.isClosed = !1, this.game.prodigy.load.assets(["ui-home-school-server"], this.setup.bind(this))
}, Prodigy.ServerSelectMode.PANEL_DIMENSIONS = {
	tileNumWidth: 11,
	tileNumHeight: 10
}, Prodigy.extends(Prodigy.ServerSelectMode, Prodigy.Control.Menu, {
	constructor: Prodigy.ServerSelectMode,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.add(this.game.prodigy.create.sprite(0, 0, "bg-battle-forest")), this.game.prodigy.create.panel(this, 240, 640, 20, 3, "shine2"), this.game.prodigy.create.textButton(this, 260, 660, {
			icon: "back",
			text: "back"
		}, this.onBackClick.bind(this));
		var e = 40;
		this.createPanel(e, 220, "ui-home-school-server", "school-image", "school", this.onSchoolClick.bind(this)), this.createPanel(1280 - (40 * Prodigy.ServerSelectMode.PANEL_DIMENSIONS.tileNumWidth + e), 220, "ui-home-school-server", "house-image", "home", this.onHomeClick.bind(this));
		var t = this.game.prodigy.create.player(this, this.game.prodigy.player, 2, 640, 500);
		t.reload(), t.showName(!0), this.createDialogue()
	},
	onMenuOpen: function(e) {
		this.isClosed || this.showDialogue(e)
	},
	createPanel: function(e, t, i, a, s, r) {
		var n = this.game.prodigy.create.panel(this, e, t, Prodigy.ServerSelectMode.PANEL_DIMENSIONS.tileNumWidth, Prodigy.ServerSelectMode.PANEL_DIMENSIONS.tileNumHeight, "shine2"),
			o = 40,
			h = Prodigy.ServerSelectMode.PANEL_DIMENSIONS.tileNumWidth * o - 22,
			l = Prodigy.ServerSelectMode.PANEL_DIMENSIONS.tileNumHeight * o - 3 * o,
			d = 11,
			c = o - 4,
			p = l - 2 * o,
			g = 11;
		n.add(new Phaser.TileSprite(this.game, d, c, h, o, "core", "blue-top")), n.add(new Phaser.TileSprite(this.game, d, c + o, h, p, "core", "blue-mid")), n.add(new Phaser.TileSprite(this.game, d, c + o + p, h, o, "core", "blue-top2"));
		var u = this.game.prodigy.create.button(n, 0, 0, i, a, r),
			y = Util.getCenteredXY(u.width, u.height, d, c, h, l);
		u.x = y.x, u.y = y.y;
		var m = this.game.prodigy.create.button(n, 0, 0, i, s, r),
			f = c + o + p + o;
		return y = Util.getCenteredXY(m.width, m.height, d, f, h, n.height - f - g), m.x = y.x, m.y = y.y, n.highlight(!0, 40, 60), n
	},
	onServerSelected: function(e, t) {
		t !== !0 && (this.onServerSelectedCallback(e, t), this.close())
	},
	onSchoolClick: function() {
		this.game.prodigy.player.locationSelectionType = GameConstants.get("GameConstants.LocationSelection.SCHOOL"), this.game.prodigy.open.server(this.serverList, this.onServerSelected.bind(this), !0)
	},
	onHomeClick: function() {
		this.game.prodigy.player.locationSelectionType = GameConstants.get("GameConstants.LocationSelection.HOME"), this.game.prodigy.open.server(this.serverList, this.onServerSelected.bind(this), !1)
	},
	onBackClick: function() {
		this.onServerSelectedCallback(!1, !0), this.close()
	},
	showDialogue: function(e) {
		this.destroyDialogue(), e && this.createDialogue()
	},
	destroyDialogue: function() {
		Util.isDefined(this.dialogue) && (this.dialogue.close(), this.dialogue = null)
	},
	createDialogue: function() {
		this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(177), this.dialogue.start("noot", !0, null, 0)
	},
	close: function() {
		this.destroyDialogue(), this.isClosed = !0, Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.ToyUnlock = function(e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create(), GameConstants.get("GameConstants.Build.DEBUG") && !Util.isNullOrUndefined(Util.getUrlVariable("toy_id")) ? this.complete({
		success: !0,
		asset_id: parseInt(Util.getUrlVariable("toy_id")),
		asset_type: "pet"
	}) : this.openPrompt()
}, Prodigy.extends(Prodigy.Menu.ToyUnlock, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ToyUnlock,
	create: function() {
		this.background.add(new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "core", "shine2-mid")), Prodigy.RenderMenu.prototype.create.call(this)
	},
	openPrompt: function() {
		try {
			prodigyWeb.page.open("unlock-toy", {
				studentID: this.game.prodigy.player.userID,
				token: this.game.prodigy.network.getKey()
			}, this.complete.bind(this))
		} catch (e) {
			this.complete({
				success: !1
			})
		}
	},
	complete: function(e) {
		Util.isDefined(e) && e.success ? (this.game.prodigy.create.panel(this, -40, 280, 36, 5, "orange"), this.animate(e)) : this.close()
	},
	animate: function(e) {
		this._petData = Items.getItemObject("pet", e.asset_id);
		var t = {
				mech: {
					type: "relic",
					ID: 29
				},
				storm: {
					type: "relic",
					ID: 29
				},
				earth: {
					type: "relic",
					ID: 30
				},
				fire: {
					type: "relic",
					ID: 31
				},
				ice: {
					type: "relic",
					ID: 32
				},
				water: {
					type: "relic",
					ID: 33
				},
				"ice & fire": {
					type: "relic",
					ID: 34
				}
			},
			i = 420,
			a = 640;
		this.gem = this.add(this.game.prodigy.icon.createFromData(t[this._petData.data.element], a, i, null, this.onIconLoaded.bind(this)))
	},
	onIconLoaded: function() {
		var e = this.gem,
			t = 420,
			i = 640;
		e.alpha = 0, e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = 5, this.game.add.tween(e).to({
			alpha: 1
		}, 1e3, Phaser.Easing.Linear.None).delay(300).start();
		var a = this.game.add.tween(e.scale).to({
				x: 1,
				y: 1
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(300),
			s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
		s.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 20, !0, !1), s.animations.play("a"), s.anchor.setTo(.5, 1), this.add(s);
		var r = this.game.add.tween(s).to({
			x: i,
			y: t
		}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 6e3, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 100, Phaser.Easing.Linear.None).start();
		r.onComplete.addOnce(this.showToy.bind(this, e));
		var n = this.add(this.game.prodigy.create.sprite(i, t, "attacks", "core-circle-small"));
		n.anchor.setTo(.5, .5), n.alpha = 1, n.scale.x = n.scale.y = 0;
		var r = this.game.add.tween(n),
			o = this.game.add.tween(n.scale);
		r.to({}, 1500, Phaser.Easing.Linear.None), o.to({}, 1500, Phaser.Easing.Linear.None), a.to({}, 600, Phaser.Easing.Linear.None);
		for (var h = 500, l = 0; 20 > l; l++) 19 === l && (h = 500), o.to({
			x: 0,
			y: 0
		}, 10, Phaser.Easing.Linear.None), o.to({
			x: 19 === l ? 15 : 10,
			y: 19 === l ? 15 : 10
		}, h, Phaser.Easing.Linear.None), r.to({
			alpha: 1
		}, 10, Phaser.Easing.Linear.None), r.to({
			alpha: 0
		}, h, Phaser.Easing.Linear.None), a.to({
			x: 1.4,
			y: 1.4
		}, Math.floor(h / 2), Phaser.Easing.Quadratic.Out), a.to({
			x: 1,
			y: 1
		}, Math.floor(h / 2), Phaser.Easing.Quadratic.In), h -= 25;
		a.start(), r.start(), o.start()
	},
	showToy: function(e) {
		this.game.add.tween(e).to({
			alpha: 0
		}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
			x: 3,
			y: 3
		}, 400, Phaser.Easing.Quadratic.Out).start();
		var t = this.add(this.game.prodigy.create.sprite(e.x, e.y, "small-pet-" + this._petData.ID));
		t.anchor.setTo(.3, .8), t.alpha = 0, t.scale.x = t.scale.y = 0, this.game.add.tween(t.scale).to({
			x: 1,
			y: 1
		}, 400, Phaser.Easing.Quadratic.Out).start();
		var i = this.game.add.tween(t).to({
			alpha: 1
		}, 400, Phaser.Easing.Linear.None).to({}, 500, Phaser.Easing.Linear.None).to({
			x: 180
		}, 1e3, Phaser.Easing.Quadratic.Out).start();
		i.onComplete.addOnce(this.showText.bind(this))
	},
	showText: function() {
		var e = this.game.prodigy.create.element(this, 320, 300);
		this.game.prodigy.create.font(e, 0, 0, this._petData.data.name + " joined you!", {
			size: 80
		}), this.game.prodigy.create.font(e, 0, 100, "Use the Pets Menu to battle with him!", {
			size: 40
		}), e.alpha = 0;
		var t = this.game.add.tween(e).to({
			alpha: 1
		}, 500, Phaser.Easing.Linear.None).to({}, 5e3, Phaser.Easing.Linear.None).start();
		t.onComplete.addOnce(this.tryUpdate.bind(this)), this.game.prodigy.effects.firework(200, 650, null, this, 0), this.game.prodigy.effects.firework(700, 650, null, this, 800), this.game.prodigy.effects.firework(420, 650, null, this, 1250), this.game.prodigy.effects.firework(1080, 650, null, this, 1550), this.game.prodigy.effects.firework(640, 650, null, this, 2e3)
	},
	tryUpdate: function() {
		this.addToy(), this.spinner = this.add(this.game.prodigy.create.sprite(1230, 670, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.game.prodigy.network.setSaveCallback(this.close.bind(this), !0), this.game.prodigy.player.saveEnabled = !0
	},
	addToy: function() {
		this.game.prodigy.player.kennel.add(this._petData.ID, null, Prodigy.Creature.starsToLevel(19), 20);
		var e = this._petData.ID,
			t = this._petData.data;
		Util.isDefined(t.unlockFollow) && (e = t.unlockFollow), this.game.prodigy.player.backpack.add("follow", e), Util.isDefined(this.game.prodigy.player.equipment.data.follow) || this.game.prodigy.player.equipment.setFollow(e)
	}
}), Prodigy.Menu.Chat = function(e, t, i) {
	Prodigy.Control.Element.call(this, e, t), this.onClose = i, this.currentText = "", this.data = this.game.prodigy.chat.getPhrases(), this.emotes = this.game.prodigy.chat.getEmotes(), this.dances = [{
		ID: 1,
		name: "shimmy",
		type: "dance"
	}, {
		ID: 2,
		name: "hammer",
		type: "dance"
	}, {
		ID: 3,
		name: "moonwalk",
		type: "dance"
	}, {
		ID: 4,
		name: "runningMan",
		type: "dance"
	}, {
		ID: 5,
		name: "dab",
		type: "dance",
		member: !0
	}], this.create()
}, Prodigy.extends(Prodigy.Menu.Chat, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.Chat,
	create: function() {
		this.suggestions = [];
		for (var e = 1; 5 >= e; e++) {
			var t = this.game.prodigy.create.panel(this, 420, 630 - 40 * e, 12, 1, "lb");
			t.setClickable(this.selectItem.bind(this, t)), t.text = this.game.prodigy.create.font(t, 10, 5, ""), t.visible = !1, this.suggestions.push(t)
		}
		this.emotesPanel = new Prodigy.Menu.Chat.ChatPanel(this.game, this, 480, 567, this.emotes), this.emotesPanel.visible = !1, this.emotesPanel.onHide = this.determineDanceBreadcrumbState.bind(this), this.add(this.emotesPanel), this.dancesPanel = new Prodigy.Menu.Chat.ChatPanel(this.game, this, 480, 567, this.dances), this.dancesPanel.visible = !1, this.dancesPanel.onHide = this.determineDanceBreadcrumbState.bind(this), this.add(this.dancesPanel);
		var i = this.game.prodigy.create.element(this, 445, 638);
		i.add(this.game.prodigy.create.sprite(0, 0, "core", "HUD-end"));
		for (var a = 30, e = 0; 6 > e; e++) i.add(this.game.prodigy.create.sprite(a, 0, "core", "HUD-mid")), a += 62;
		i.add(this.game.prodigy.create.sprite(a + 30, 0, "core", "HUD-end")).scale.x = -1, i.add(this.game.prodigy.create.sprite(117, 17, "chat-hud", "chatendcap")), a = 157;
		for (var e = 0; 5 > e; e++) i.add(this.game.prodigy.create.sprite(a, 17, "chat-hud", "chatmiddlebar")), a += 40;
		i.add(this.game.prodigy.create.sprite(a + 40, 17, "chat-hud", "chatendcap")).scale.x = -1, this.textField = new Prodigy.Control.InputField(this.game, this, "AC", null, 570, 663, 230, 35, {
			background: "transparent",
			border: "none"
		}), this.textField.input.onkeyup = this.search.bind(this, !0), this.game.prodigy.create.button(i, 10, 17, "chat-hud", "emotebutton", this.toggleEmotes.bind(this)), this.danceButton = this.game.prodigy.create.button(i, 63, 17, "chat-hud", "dancebutton", this.toggleDances.bind(this)), this.game.prodigy.create.button(i, 370, 17, "chat-hud", "chatbutton", this.setChatFocus.bind(this), null, null, !0), this.game.prodigy.create.button(i, 410, -7, "chat-hud", "closebutton", this.close.bind(this)), this.determineDanceBreadcrumbState()
	},
	toggleEmotes: function(e) {
		this.emotesPanel.visible = Util.isDefined(e) ? e : !this.emotesPanel.visible, this.emotesPanel.visible && (this.dancesPanel.visible = !1, this.clearSearch()), this.textField.setFocus(null), this.determineDanceBreadcrumbState()
	},
	toggleDances: function(e) {
		this.dancesPanel.visible = Util.isDefined(e) ? e : !this.dancesPanel.visible, this.dancesPanel.visible && (this.emotesPanel.visible = !1, this.clearSearch()), this.textField.setFocus(null), this.determineDanceBreadcrumbState()
	},
	setChatFocus: function() {
		this.toggleEmotes(!1), this.toggleDances(!1), setTimeout(function() {
			$("#AC").get(0).focus()
		}, 100)
	},
	selectItem: function(e) {
		var t = Util.isDefined(e) ? e.textID : null;
		this.clearSearch(), this.textField.setFocus(null), this.sendChat(t)
	},
	search: function(e) {
		var t = this.textField.getValue();
		e && (this.toggleEmotes(!1), this.toggleDances(!1)), this.results = t.length <= 0 ? [] : t.length < this.currentText.length || this.currentText.length <= 0 ? Prodigy.Menu.Chat.match(t, this.data) : Prodigy.Menu.Chat.match(t, this.results), this.currentText = t;
		for (var i = 0; i < this.suggestions.length; i++) {
			var a = this.suggestions[i];
			i < this.results.length && e ? (a.visible = !0, a.text.setText(this.results[i]), a.textID = this.game.prodigy.chat.getPhraseID(this.results[i])) : a.visible = !1
		}
	},
	sendChat: function(e) {
		Util.isDefined(e) && (this.game.prodigy.player.chatID = e, this.game.prodigy.network.emitMessage({
			action: "chat",
			data: {
				userID: this.game.prodigy.player.userID,
				chatID: e
			}
		}))
	},
	clearSearch: function() {
		this.textField.setValue(""), this.search(!1)
	},
	close: function() {
		Util.isDefined(this.onClose) && this.onClose(), this.destroy()
	},
	determineDanceBreadcrumbState: function() {
		this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON) || this.dancesPanel.visible ? Util.isNullOrUndefined(this.indicatorImage) || (this.indicatorImage.destroy(), this.indicatorImage = null) : Util.isNullOrUndefined(this.indicatorImage) && (this.indicatorImage = new Phaser.Image(this.game, 0, 0, "icons", "exclamation"), this.danceButton.addChild(this.indicatorImage), this.indicatorImage.x += 3, this.indicatorImage.y -= 42, this.game.add.tween(this.indicatorImage).to({
			y: this.indicatorImage.y - 10
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, -1, !0))
	}
}), Prodigy.Menu.Chat.match = function(e, t) {
	var i = new RegExp(e.split("").join("\\w*").replace(/\W/, ""), "i");
	return t.filter(function(e) {
		return e.match(i) ? e : void 0
	})
}, Prodigy.Menu.Chat.ChatPanel = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.buttonData = s, this.currentPage = 0, this.iconsPerPage = 6, this.emoteButtons = [], this.onHide = null, this.create()
}, Prodigy.extends(Prodigy.Menu.Chat.ChatPanel, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.Chat.ChatPanel,
	create: function() {
		this.emotesPanel = this.game.prodigy.create.element(this, 0, 0), this.emotesPanel.add(this.game.prodigy.create.sprite(0, 0, "chat-hud", "tabmenu")), this.nextPage = this.game.prodigy.create.button(this.emotesPanel, 366, 47, "chat-hud", "arrow", this.loadEmotes.bind(this, 1)), this.nextPage.sprite.rotateMiddleBased(0), this.prevPage = this.game.prodigy.create.button(this.emotesPanel, -7, 47, "chat-hud", "arrow", this.loadEmotes.bind(this, -1)), this.prevPage.sprite.rotateMiddleBased(180), this.game.prodigy.create.button(this.emotesPanel, 165, -5, "chat-hud", "closetabarrow1", this.hide.bind(this), null, null, !0), this.loadEmotes(0)
	},
	loadEmotes: function(e) {
		for (var t = 0; t < this.emoteButtons.length; t++) this.emoteButtons[t].destroy();
		this.prevPage.setActive(), this.nextPage.setActive(), 0 === Math.floor(this.buttonData.length / this.iconsPerPage) && (this.prevPage.visible = !1, this.nextPage.visible = !1), this.currentPage += e, this.currentPage <= 0 ? (this.currentPage = 0, this.prevPage.setInactive()) : this.currentPage >= Math.floor(this.buttonData.length / this.iconsPerPage) && (this.currentPage = Math.floor(this.buttonData.length / this.iconsPerPage), this.nextPage.setInactive());
		for (var t = this.currentPage * this.iconsPerPage; t < this.currentPage * this.iconsPerPage + this.iconsPerPage && t < this.buttonData.length; t++) {
			var i = null;
			if ("dance" === this.buttonData[t].type) {
				if (this.buttonData[t].member === !0) {
					if (this.game.prodigy.player.isMember) i = this.game.prodigy.create.button(this.emotesPanel, 45 + t % this.iconsPerPage * 54, 47, "icon-" + this.buttonData[t].type + "-" + this.buttonData[t].ID, null, this.sendEmote.bind(this, this.buttonData[t].name, this.buttonData[t].type), null, null, !1, 48, 50);
					else {
						i = this.game.prodigy.create.button(this.emotesPanel, 45 + t % this.iconsPerPage * 54, 47, "icon-" + this.buttonData[t].type + "-" + this.buttonData[t].ID, null, this.dabMemberPrompt.bind(this), null, null, !1, 48, 50);
						var a = this.setButtonIcon.bind(this, i);
						this.game.prodigy.create.sprite(32, -3, "icon-mini-member-b", null, !1, a)
					}
					this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON) || (this.dabIndicatorImage = new Phaser.Image(this.game, 0, 0, "icons", "exclamation"), i.addChild(this.dabIndicatorImage), this.dabIndicatorImage.x += 3, this.dabIndicatorImage.y -= 42, i.y += 21, this.game.add.tween(this.dabIndicatorImage).to({
						y: this.dabIndicatorImage.y - 10
					}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, -1, !0))
				} else i = this.game.prodigy.create.button(this.emotesPanel, 45 + t % this.iconsPerPage * 54, 47, "icon-" + this.buttonData[t].type + "-" + this.buttonData[t].ID, null, this.sendEmote.bind(this, this.buttonData[t].name, this.buttonData[t].type), null, null, !1, 48, 50);
				i.x -= Math.floor(.5 * i.width), i.y -= Math.floor(.5 * i.height)
			} else i = this.game.prodigy.create.button(this.emotesPanel, 45 + t % this.iconsPerPage * 54, 47, "chat-hud", "backgroundbutton", this.sendEmote.bind(this, this.buttonData[t].ID, this.buttonData[t].type), null, null, !1, 48, 50), i.x -= Math.floor(.5 * i.width), i.y -= Math.floor(.5 * i.height), i.addOverlay(5, 5, "icon-" + this.buttonData[t].type + "-" + this.buttonData[t].ID, null);
			this.emoteButtons.push(i)
		}
	},
	setButtonIcon: function(e, t) {
		e.sprite.addChild(t)
	},
	dabMemberPrompt: function() {
		this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON), this.game.prodigy.network.sendAnalytics("emotes", "dab-usage-non-member", "Events"), this.game.broadcaster.broadcast(Prodigy.Events.HUD.HIDE_CHAT_NOTIF, "chatButton"), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.DANCE)
	},
	sendEmote: function(e, t) {
		if (Util.isDefined(e))
			if ("dance" === t) "dab" === e ? (this.game.prodigy.network.sendAnalytics("emotes", e + "-usage-member", "Events"), null != this.dabIndicatorImage && this.dabIndicatorImage.destroy(), this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON), this.game.broadcaster.broadcast(Prodigy.Events.HUD.HIDE_CHAT_NOTIF, "chatButton")) : this.game.prodigy.network.sendAnalytics("emotes", e + "-usage", "Events"), this.game.prodigy.player.danceID = e, this.game.prodigy.network.emitMessage({
				action: "chat",
				data: {
					userID: this.game.prodigy.player.userID,
					danceID: e
				}
			});
			else {
				var i = Items.getItemObject(t, e);
				this.game.prodigy.network.sendAnalytics("emotes", i.data.name + "-usage", "Events"), this.game.prodigy.player.emoteID = e, this.game.prodigy.network.emitMessage({
					action: "chat",
					data: {
						userID: this.game.prodigy.player.userID,
						emoteID: e
					}
				})
			}
	},
	hide: function() {
		this.visible = !1, null !== this.onHide && this.onHide()
	}
}), Prodigy.Menu.Message = function(e, t) {
	Prodigy.Control.Menu.call(this, e, t, 17, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Message, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Message,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 340, 200), this.game.prodigy.create.panel(this.base, 0, 0, 15, 8, "shine"), this.desc = this.game.prodigy.create.font(this.base, 60, 60, "", {
			font: "black",
			size: 20,
			width: 480
		}), this.title = this.game.prodigy.create.font(this.base, 10, 0, "", {
			size: 36,
			font: "button",
			width: 540
		})
	},
	setText: function(e, t, i) {
		(!Util.isDefined(t) || "pumpkin" !== t && "star-shard-small" !== t && "snowflake-small" !== t) && (t = "star-small"), Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && this.processText(e, (new Date).getTime()), Util.isDefined(i) && this.title.setText("[" + t + "] " + i)
	},
	setOkay: function(e) {
		this.game.prodigy.create.button(this.base, 560, -10, "icons", "close", this.close.bind(this, e))
	},
	setConfirm: function(e, t) {
		Prodigy.Control.TextButton.createYesButton(this.game, this.base, 160, 250, this.close.bind(this, e)), Prodigy.Control.TextButton.createNoButton(this.game, this.base, 380, 250, this.close.bind(this, t))
	},
	close: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), Prodigy.Control.Menu.prototype.close.call(this)
	},
	processText: function(e, t) {
		if (Util.isDefined(this.game))
			if (e.indexOf("XTIMERX") >= 0) {
				var i = (new Date).getTime(),
					a = Util.processTime(i - t);
				this.desc.setText(e.replace("XTIMERX", a)), this.timer = window.setTimeout(this.processText.bind(this, e, t), 500)
			} else this.desc.setText(e)
	}
}), Prodigy.Menu.MessageBox = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.create()
}, Prodigy.extends(Prodigy.Menu.MessageBox, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MessageBox,
	create: function() {
		this.addTransparent(), this.base = this.game.prodigy.create.element(this, 340, 200), this.panel = this.game.prodigy.create.panel(this.base, 0, 0, 15, 8, "shine"), this.desc = this.game.prodigy.create.font(this.base, 60, 60, "", {
			font: "black",
			size: 20,
			width: 480
		}), this.title = this.game.prodigy.create.font(this.base, 10, 0, "", {
			size: 36,
			font: "button",
			width: 540
		}), Prodigy.Control.Menu.prototype.create.call(this)
	},
	setText: function(e, t, i) {
		(!Util.isDefined(t) || "pumpkin" !== t && "star-shard-small" !== t && "snowflake-small" !== t) && (t = "star-small"), Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && this.processText(e, (new Date).getTime()), Util.isDefined(i) && this.title.setText("[" + t + "] " + i)
	},
	setOkay: function(e, t) {
		Util.isDefined(e) || (e = "okay");
		var i = 250,
			a = this.game.prodigy.create.textButton(this.base, 0, i, {
				icon: "",
				text: e
			}, this.close.bind(this, t));
		a.x = Util.getCenteredXY(a.width, 0, 0, 0, this.panel.width, 0).x
	},
	setConfirm: function(e, t) {
		Prodigy.Control.TextButton.createYesButton(this.game, this.base, 160, 250, this.close.bind(this, e)), Prodigy.Control.TextButton.createNoButton(this.game, this.base, 380, 250, this.close.bind(this, t))
	},
	setConfirmGeneric: function(e, t, i) {
		Util.isDefined(e) || (e = {}), Util.isDefined(t) || (t = {});
		var a = 250,
			s = 20,
			r = this.game.prodigy.create.textButton(this.base, 0, 0, {
				icon: e.icon,
				text: e.text,
				needsMemberIcon: Util.isDefined(e.needsMemberIcon) && e.needsMemberIcon
			}, this.close.bind(this, e.callback)),
			n = this.game.prodigy.create.textButton(this.base, 0, 0, {
				icon: "",
				text: t.text
			}, this.close.bind(this, t.callback)),
			o = Util.getCenteredXY(r.width + s + n.width, 0, 0, 0, this.panel.width, 0);
		r.x = o.x, r.y = a, n.x = r.x + r.width + s, n.y = a;
		var h = this.game.prodigy.create.button(this.base, 0, 0, "icons", "close", this.close.bind(this, i));
		h.x = this.base.width - h.width
	},
	close: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), Prodigy.RenderMenu.prototype.close.call(this)
	},
	processText: function(e, t) {
		if (Util.isDefined(this.game))
			if (e.indexOf("XTIMERX") >= 0) {
				var i = (new Date).getTime(),
					a = Util.processTime(i - t);
				this.desc.setText(e.replace("XTIMERX", a)), this.timer = window.setTimeout(this.processText.bind(this, e, t), 500)
			} else this.desc.setText(e)
	}
}), Prodigy.Menu.Rating = function(e, t, i) {
	if (this.callback = i, Prodigy.Control.Menu.call(this, e, t, -1, {
			hideMenu: !0,
			hideContent: !1
		}), Util.isDefined(this.game.prodigy.player.data.rate) && this.game.prodigy.player.data.rate > 3) try {
		webkit.messageHandlers.reviewApp.postMessage(0)
	} catch (a) {
		Util.log(a, Util.ERROR)
	}
	return Util.isDefined(this.game.prodigy.player.data.rate) ? (this.close(), void 0) : (this.setup(), void 0)
}, Prodigy.extends(Prodigy.Menu.Rating, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Rating,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 320, 150);
		var e = this.game.prodigy.create.element(this.base, 0, 0);
		this.game.prodigy.create.panel(e, 0, 0, 16, 10, "shine"), e.add(new Phaser.TileSprite(this.game, 11, 200, 618, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 240, 618, 20, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 260, 618, 40, "core", "blue-top2")), this.game.prodigy.create.panel(e, 40, 40, 14, 3, "banner"), this.base.add(this.game.prodigy.create.sprite(100, -30, "core-2", "menu-noot")), this.game.prodigy.create.font(this.base, 260, 58, "How would you rate Prodigy?", {
			size: 36,
			font: "button",
			width: 300,
			align: "center",
			lineHeight: 38
		}), this.game.prodigy.create.button(this.base, 600, -10, "icons", "close", this.close.bind(this)), this.cBtn = this.game.prodigy.create.textButton(this.base, 220, 320, {
			icon: "yes",
			text: "okay"
		}, this.close.bind(this, !0)), this.cBtn.setInactive();
		for (var t = [], i = 0; 5 > i; i++) {
			var a = this.base.add(this.game.prodigy.create.sprite(140 + 90 * i, 250, "icons", "star"));
			a.anchor.setTo(.5, .5), a.angle = -15, this.game.add.tween(a).to({
				angle: 15
			}, 1500, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), a.tint = 7829367, a.inputEnabled = !0, a.events.onInputDown.add(this.rate.bind(this, t, i)), t.push(a)
		}
	},
	rate: function(e, t) {
		for (var i = 0; i < e.length; i++) {
			var a = e[i];
			a.tint = t >= i ? 16777215 : 7829367
		}
		this.cBtn.setActive(), this.rating = t + 1
	},
	close: function(e) {
		if (e && this.rating > 3) try {
			webkit.messageHandlers.reviewApp.postMessage(0)
		} catch (t) {
			Util.log(t, Util.ERROR)
		}
		e && Util.isDefined(this.rating) && (this.game.prodigy.player.data.rate = this.rating || 0, this.game.prodigy.player.updated = !0), Util.isDefined(this.callback) && this.callback(), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.LeaderPrompt = function(e, t) {
	Prodigy.Control.Menu.call(this, e, t, 17, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.LeaderPrompt, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.LeaderPrompt,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 340, 720);
		for (var e = 0; 6 > e; e++) this.base.add(this.game.prodigy.create.sprite(20 + 50 * e, -40, "core", "panel-light-top"));
		this.base.add(this.game.prodigy.create.sprite(320, -40, "core", "panel-light-corner2")), this.game.prodigy.create.panel(this.base, 0, 0, 12, 6), this.base.add(this.game.prodigy.create.sprite(-20, -50, "icons", "icon-base")), this.icon = this.base.add(this.game.prodigy.create.sprite(-20, -50, "icons", "leaderboard")), this.desc = this.game.prodigy.create.font(this.base, 30, 30, "Loading...", {
			size: 30,
			width: 540
		}), this.title = this.game.prodigy.create.font(this.base, 80, -34, "Hey There!", {
			size: 30,
			width: 540
		}), this.game.add.tween(this.base).to({
			y: 150
		}, 400, Phaser.Easing.Quadratic.Out).to({
			y: 200
		}, 200, Phaser.Easing.Quadratic.In).start(), Prodigy.Control.TextButton.createCloseButton(this.game, this.base, 360, 270, this.close.bind(this)), this.game.prodigy.network.getLeaderboard("data.level", this.game.prodigy.player.classIDs, this.setText.bind(this, !0), this.setText.bind(this, !1))
	},
	setText: function(e, t) {
		if (Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t) || t.length <= 0) return this.desc.setText("You can play prodigy at home!\n\nJust go to prodigygame.com and click PLAY!"), this.game.prodigy.player.loginPrompt = !0, void 0;
			this.desc.setText(Prodigy.Container.Leaderboard.getPlayerMessage(t, this.game.prodigy.player)), this.game.prodigy.create.textButton(this.base, 40, 270, {
				text: "check it out!",
				size: Prodigy.Control.TextButton.MED
			}, this.close.bind(this, this.game.prodigy.open.leaderboard.bind(this.game.prodigy.open, t)))
		}
	},
	close: function(e) {
		Util.isDefined(e) && e(), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.AttackSelect = function(e, t, i, a, s, r, n, o, h, l, d, c, p) {
	this.catchEnabled = Util.isDefined(r) && Util.isDefined(r.catch) ? r.catch : !0, this.mods = r || {
		run: !0,
		potionMode: !0
	}, this.spellCallback = o, this.runCallback = l, this.swapCallback = h, this.catchCallback = d, this.epicAttackCallback = c, this.source = i, this.target = s, this.team = a, this.switchMode = n, this.epicAttackMode = p, this.potionMode = !Util.isDefined(this.mods.potionMode) || this.mods.potionMode === !0, Prodigy.Control.Menu.call(this, e, t, 3, {
		hideMenu: !0,
		hideContent: !1,
		hideOverlay: !0
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.AttackSelect, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.AttackSelect,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = 1.1;
		this.base = this.game.prodigy.create.element(this, 466, 230);
		var t = this.base.add(this.game.prodigy.create.sprite(174, 174, "battle", "gear"));
		t.anchor.setTo(.5, .5), t.scale.x = t.scale.y = e, this.game.add.tween(t).to({
			angle: 360
		}, 36e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER);
		var i = this.game.prodigy.create.sprite(174, 174, "battle", "base");
		i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = e, this.base.add(i), this.title = this.game.prodigy.create.font(this.base, 24, 150, "Attack", {
			size: 36,
			font: "button",
			width: 300,
			align: "center"
		}), this.content = this.game.prodigy.create.element(this.base, 0, 0), this.switchMode ? this.openSwitch() : this.openMain()
	},
	openMain: function() {
		this.openContent("actions");
		var e = [];
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "attack",
			x: -10,
			y: -10
		}], this.openAttacks.bind(this))), this.potionMode === !0 && e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "epicAttack",
			x: -10,
			y: -10
		}], this.openEpicAttacks.bind(this)));
		var t = !1;
		if (this.catchEnabled && this.source instanceof Prodigy.Container.PlayerContainer && this.target.source.canCatch(this.mods)) {
			var i = this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "catch",
				x: -10,
				y: -10
			}], this.openCatch.bind(this));
			e.push(i);
			var a = this.target.source.catchAttempt > 1,
				s = Items.getItemData("pet", this.target.source.getID());
			this.game.prodigy.player.isMember || 1 !== this.target.source.catchAttempt && !s.member || i.addImage("membership", 15, 15);
			var r = this.target.source.getCurrentHearts(this.game) <= 60 && !a;
			t = r, i.enable(r)
		}
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "run",
			x: -10,
			y: -10
		}], this.openRun.bind(this))), e[e.length - 1].enable(this.mods.run), e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "team",
			x: -10,
			y: -10
		}], this.openSwitch.bind(this)));
		var n = e[e.length - 1];
		e[e.length - 1].enable(!this.mods.switchDisabled), this.potionMode === !0 && (e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "potions",
			x: -10,
			y: -10
		}], this.openPotions.bind(this))), e[e.length - 1].enable(this.game.prodigy.player.tutorial.getMenuValue(this.menuID, 2) >= 1)), this.arrangeChoices(e, 6 === e.length ? .5 * -Math.PI : 0);
		var o = this.game.prodigy.player;
		this.dialogue = this.game.prodigy.dialogue.create(), o.tutorial.getMenuValue(this.menuID, 2) < 1 ? (o.tutorial.setMenuValue(this.menuID, 2, 1), this.dialogue.setText(8), this.dialogue.start("noot", !0)) : this.source.source.getCurrentHearts(this.game) < 80 && this.team.length > 1 && o.tutorial.getMenuValue(this.menuID, 0) < 1 ? (o.tutorial.setMenuValue(this.menuID, 0, 1), this.dialogue.setText(9), this.dialogue.setText(10), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [n], !0)
		}), this.dialogue.start("noot")) : t && o.tutorial.getMenuValue(this.menuID, 1) < 1 && o.getGold() >= 500 && !Util.isDefined(this.mods.catchOverrideMessage) && (o.tutorial.setMenuValue(this.menuID, 1, 1), this.dialogue.setText(11), this.dialogue.setText(12), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [i], !0)
		}), this.dialogue.start("noot")), o.tutorial.getMenuValue(this.menuID, 2) < 2 && e[0].highlight(!0)
	},
	openElements: function() {
		this.dialogue.close(!0), this.openContent("elements", this.openMain.bind(this));
		for (var e = ["wizard", "fire", "water", "earth", "ice", "storm"], t = [], i = 0; i < e.length; i++) t.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: e[i]
		}], this.openAttacks.bind(this, e[i]))), t[i].enable(this.source.source.getAttacks(e[i]).length > 0);
		this.arrangeChoices(t)
	},
	openCatch: function(e) {
		if (Util.isDefined(this.mods.catchOverrideMessage)) return this.game.prodigy.open.epicErrorMessage.call(this.game.prodigy.open, this.mods.catchOverrideMessage, {
			showClose: !1
		}), void 0;
		if (this.openContent("capture?"), e) {
			var t = this.source.source.kennel.getPets().length,
				i = Items.getItemData("pet", this.target.source.getID());
			if (i.member && this.game.prodigy.network.sendAnalytics("Catch-Member-Pets", i.name), this.source.source.kennel.isFull()) this.game.prodigy.open.message("You have too many pets! You must release some before you can catch any more...", null, null, "Uh oh!");
			else if (t >= 10 && !this.source.source.isMember) {
				var a = {
					conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_CATCH_MORE_PETS,
					conversionFunnelMetadata: this.target.source.getID() + ""
				};
				this.game.prodigy.network.sendConversionFunnelEvent(a.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CATCH_PET, a.conversionFunnelMetadata), this.game.prodigy.network.sendAnalytics("Catch-More-Pets"), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.BIGGER_ROSTER, null, a)
			} else if (!this.source.source.isMember && i.member) this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MEMBER_PETS);
			else if (this.target.source.catchAttempt > 0 && !this.game.prodigy.player.isMember) {
				var a = {
					conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_CATCH_PET_AGAIN,
					conversionFunnelMetadata: this.target.source.getID() + ""
				};
				this.game.prodigy.network.sendConversionFunnelEvent(a.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_TRY_AGAIN, a.conversionFunnelMetadata), this.game.prodigy.network.sendAnalytics("Catch-Pet-Second-Try"), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.CATCH, null, a)
			} else {
				if (!(this.game.prodigy.player.getGold() < 500)) return this.game.prodigy.player.changeGold(-500, "Catch Pet"), this.game.prodigy.player.isMember && (t >= 10 && this.game.prodigy.network.sendAnalytics("Catch-More-Pets"), this.target.source.catchAttempt > 0 && this.game.prodigy.network.sendAnalytics("Catch-Pet-Second-Try")), this.close(this.catchCallback), void 0;
				this.game.prodigy.open.message("You need [gold]500 to catch this pet. You only have [gold]" + this.game.prodigy.player.getGold() + ".", null, "gold", "Uh oh!")
			}
			this.openMain()
		} else {
			var s = [];
			s.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "pet-yes"
			}], this.openCatch.bind(this, !0))), s.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "close",
				x: 15,
				y: 15
			}], this.openMain.bind(this))), this.arrangeChoices(s)
		}
	},
	openRun: function() {
		this.openContent("escape?");
		var e = [];
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "yes",
			x: 15,
			y: 15
		}], this.close.bind(this, this.runCallback))), e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "close",
			x: 15,
			y: 15
		}], this.openMain.bind(this))), this.arrangeChoices(e)
	},
	openSwitch: function() {
		this.openContent("my team", this.switchMode ? null : this.openMain.bind(this));
		for (var e = [], t = 0; t < this.team.length; t++) {
			var i = this.team[t].source,
				a = i instanceof Monster ? {
					type: "pet",
					ID: i.getID()
				} : "player",
				s = function(e) {
					if (Util.isDefined(this.source.statusEffects)) {
						var t = this.source.statusEffects.findIndex(function(e) {
								return e.constructor === Prodigy.StatusEffects.Ink
							}),
							i = -1 !== t;
						i && this.source.statusEffects.splice(t, 1)
					}
					this.close(this.swapCallback, e)
				}.bind(this, t);
			if (e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
					tag: "icon-base"
				}, {
					tag: a
				}], s)), t < this.team.length / 2) {
				e[t].addAt(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data"), 0), this.game.prodigy.create.font(e[t], 110, 7, "" + i.getCurrentHearts(this.game), {
					width: 70,
					align: "center"
				});
				var r = this.game.prodigy.create.font(e[t], 90, 48, "Lvl. " + i.getLevel(), {
					width: 90,
					align: "center"
				});
				r.scale.set(.8, .8)
			} else {
				var n = e[t].addAt(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data"), 0);
				n.scale.x = -1, this.game.prodigy.create.font(e[t], -97, 7, "" + i.getCurrentHearts(this.game), {
					width: 70,
					align: "center"
				});
				var r = this.game.prodigy.create.font(e[t], -80, 48, "Lvl. " + i.getLevel(), {
					width: 90,
					align: "center"
				});
				r.scale.set(.8, .8)
			}(i === this.source.source || i.isKnockedOut()) && e[t].enable(!1)
		}
		this.arrangeChoices(e)
	},
	openAttacks: function() {
		this.dialogue.close(!0), this.openContent("spells", this.openMain.bind(this));
		var e, t, i = this.source.source.getAttacks(),
			a = {
				1: [0],
				2: [0, 1],
				3: [0, 0, 1],
				4: [0, 0, 1, 1],
				5: [0, 0, 0, 1, 1],
				6: [0, 0, 1, 1, 1, 0]
			},
			s = [];
		if (Util.isDefined(this.source.statusEffects)) {
			e = this.source.statusEffects.findIndex(function(e) {
				return e.constructor === Prodigy.StatusEffects.Ink
			});
			var r = -1 !== e;
			r && (t = this.source.statusEffects[e], t.apply(this))
		}
		for (var n = Math.min(6, i.length), o = 0; n > o; o++) {
			var h = o < i.length ? this.game.prodigy.attacks.getAttack(i[o]) : null;
			Util.isDefined(t) && Util.log(t.blockedSpells, i, o);
			var l = Util.isDefined(t) && -1 !== t.blockedSpells.indexOf(i[o]),
				d = function(i) {
					Util.isDefined(t) && (t.tickDuration(), Util.log(t.getDuration()), t.getDuration() < 1 && this.source.statusEffects.splice(e, 1)), this.close(this.spellCallback, i)
				}.bind(this, h);
			s.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: h.data.element
			}], d));
			var c = null;
			if (0 === a[n][o] ? (c = s[o].add(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data-2")), this.game.prodigy.create.font(s[o], 90, 7, h.data.name)) : (c = s[o].add(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data-2")), c.scale.x = -1, this.game.prodigy.create.font(s[o], -260, 7, h.data.name, {
					width: 250,
					align: "right"
				})), l) {
				var p = new Prodigy.Shipwreck_Shore.Features.Ink(this.game, s[o], 0, 0, 0);
				p.graphic.inputEnabled = !0, p.graphic.events.onInputDown.add(this.game.prodigy.open.messageBoxOkay.bind(this.game.prodigy.open, "Blocked by the Old One's Ink Blot spell! Wait a few turns, or switch team members to remove its effects.", "OK", null, null, "Ink Blocked!", null, null), this)
			}
			s[o].enable(!l), c.inputEnabled = !l, c.events.onInputDown.add(d)
		}
		this.arrangeChoices(s), this.game.prodigy.player.tutorial.getMenuValue(this.menuID, 2) < 2 && s[0].highlight(!0, -100)
	},
	openEpicAttacks: function() {
		this.dialogue.close(!0);
		try {
			this.game.prodigy.network.sendEvent("epicAttacks", {
				action: "mainEpicAttackButtonClicked"
			})
		} catch (e) {}
		if (this.canUseEpicAttack()) {
			this.openContent("epic spell", this.openMain.bind(this));
			for (var t = [38, 39, 37, 40, 41, 44, 45, 46, 47], i = {
					1: [0],
					2: [0, 1],
					3: [0, 0, 1],
					4: [0, 0, 1, 1],
					5: [0, 0, 0, 1, 1],
					6: [0, 0, 1, 1, 1, 0],
					7: [0, 0, 0, 0, 1, 1, 1],
					8: [0, 0, 0, 1, 1, 1, 1, 0],
					9: [0, 0, 0, 0, 0, 1, 1, 1, 1]
				}, a = ["hex", "flora", "arc", "dive", "mag", "chillchar", "tidus", "luma", "eclipse"], s = [125, 126, 127, 128, 129, 130, 131, 132, 133], r = [], n = Math.min(9, t.length), o = 0; n > o; o++) {
				var h = o < t.length ? this.game.prodigy.attacks.getAttack(t[o]) : null;
				r.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
					tag: "icon-base"
				}, {
					tag: "icon-" + a[o]
				}], this.epicCallback.bind(this, s[o], h)));
				var l = null,
					d = this.game.prodigy.player.kennel.hasPet(s[o]) ? "icon-data-5" : "icon-data-4";
				0 === i[n][o] ? (l = r[o].add(this.game.prodigy.create.sprite(60, 0, "icons", d)), this.game.prodigy.create.font(r[o], 90, 7, h.data.name)) : (l = r[o].add(this.game.prodigy.create.sprite(20, 0, "icons", d)), l.scale.x = -1, this.game.prodigy.create.font(r[o], -260, 7, h.data.name, {
					width: 250,
					align: "right"
				})), l.inputEnabled = !0, l.events.onInputDown.add(this.epicCallback.bind(this, s[o], h))
			}
			this.arrangeChoices(r)
		}
	},
	canUseEpicAttack: function() {
		return "PVP" === this.game.state.current ? (this.game.prodigy.open.epicErrorMessage.call(this.game.prodigy.open, "Epic attacks are too powerful for the Wizard Battle Arena!", {
			showClose: !1
		}, this), !1) : this.epicAttackMode !== !0 ? Util.isDefined(this.mods.epicArena) ? (this.game.prodigy.open.epicErrorMessage.call(this.game.prodigy.open, "Oops! You can only use an Epic attack once per challenge set in the Epic Arena!", {
			textX: 13,
			showClose: !1
		}), !1) : (this.game.prodigy.open.epicErrorMessage.call(this.game.prodigy.open, "You can only use one Epic attack per battle!", {
			showClose: !1
		}), !1) : !0
	},
	epicCallback: function(e, t) {
		try {
			this.game.prodigy.network.sendEvent("epicAttacks", {
				action: "attackButtonClicked",
				petName: Items.getItemData("pet", e).name,
				hasEpic: this.game.prodigy.player.kennel.hasPet(e) ? "yes" : "no"
			})
		} catch (i) {}
		for (var a = !1, s = 125; 132 > s; s++) this.game.prodigy.player.kennel.hasPet(s) && (a = !0);
		a && !this.game.prodigy.player.kennel.hasPet(e) && this.game.prodigy.network.sendAnalytics("other-epic-attack", "click-other", "Events"), this.game.prodigy.player.kennel.hasPet(e) ? this.isEpicAlive(e) ? this.close.call(this, this.epicAttackCallback, t) : this.game.prodigy.open.message.call(this.game.prodigy.open, "This Epic pet is not ready for battle right now.", null, null, "epic attacks!") : this.game.prodigy.open.buyToy.call(this.game.prodigy.open, e, !1, "To do this POWERFUL Epic attack, you need this Epic!", "epic attacks!")
	},
	isEpicAlive: function(e) {
		for (var t = null, i = 0; i < this.game.prodigy.player.kennel.data.length; i++)
			if (t = this.game.prodigy.player.kennel.data[i], t.ID === e) return Util.isNullOrUndefined(t.hp) ? !0 : t.hp > 0;
		return !1
	},
	openPotions: function() {
		"PVP" === this.game.state.current ? this.game.prodigy.open.potionPvpPopup.call(this.game.prodigy.open, this) : this.game.prodigy.open.battlePotionSelect.call(this.game.prodigy.open, this)
	},
	openAttacks2: function(e) {
		this.openContent("spells", this.openElements.bind(this));
		for (var t = this.source.source.getAttacks(e), i = [], a = 0; 6 > a; a++) {
			var s = a < t.length ? this.game.prodigy.attacks.getAttack(t[a]) : null,
				r = this.close.bind(this, this.spellCallback, s);
			if (i.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
					tag: "icon-base"
				}, {
					tag: e
				}], r)), a < t.length) {
				var n = null;
				0 === a || 1 === a || 5 === a ? (n = i[a].add(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data-2")), this.game.prodigy.create.font(i[a], 90, 7, s.data.name)) : (n = i[a].add(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data-2")), n.scale.x = -1, this.game.prodigy.create.font(i[a], -260, 7, s.data.name, {
					width: 250,
					align: "right"
				})), n.inputEnabled = !0, n.events.onInputDown.add(r)
			} else i[a].enable(!1)
		}
		this.arrangeChoices(i)
	},
	openContent: function(e, t) {
		this.content.removeAll(!0), this.title.setText(e), Util.isDefined(t) && this.game.prodigy.create.button(this.content, 135, 196, "battle", "back-btn", t)
	},
	arrangeChoices: function(e, t) {
		var i = 165 * 1.1,
			a = 2 === e.length || 6 === e.length || 8 === e.length ? 0 : -Math.PI / 2;
		a += t || 0;
		for (var s = 2 * Math.PI / e.length, r = 174, n = 174, o = 0; o < e.length; o++) e[o].x = Math.floor(r + i * Math.cos(a + s * o)) - 40, e[o].y = Math.floor(n + i * Math.sin(a + s * o)) - 40
	},
	close: function(e, t) {
		if (Util.isDefined(this.popups) && this.popups.length > 0) {
			for (var i = 0; i < this.popups.length; i++) Util.isDefined(this.popups[i]) && this.popups[i].close.call(this.popups[i]);
			this.popups = []
		}
		Util.isDefined(e) && e(t), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Catcher = function(e, t, i, a) {
	this.callback = a, this.target = i, Prodigy.Control.Menu.call(this, e, t, 6, {
		hideMenu: !0,
		hideContent: !1,
		hideOverlay: !0
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Catcher, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Catcher,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 466, 230);
		var e = this.base.add(this.game.prodigy.create.sprite(174, 174, "battle", "gear"));
		e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
			angle: 360
		}, 36e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER), this.base.add(this.game.prodigy.create.sprite(0, 0, "battle", "base")), this.base.add(this.game.prodigy.create.sprite(0, 0, "battle", "catch-overlay")), this.pointer = this.game.prodigy.create.sprite(174, 174, "battle", "pointer"), this.pointer.anchor.setTo(.5, .92), this.pointer.angle = 180, this.base.add(this.pointer);
		var t = Math.floor(600 + 800 * Math.random());
		this.tween = this.game.add.tween(this.pointer).to({
			angle: "+360"
		}, t, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER);
		var i = this.game.prodigy.create.stackButton(this.base, 134, 134, [{
				tag: "icon-base"
			}, {
				tag: "catch",
				x: -10,
				y: -10
			}], this.close.bind(this)),
			a = this.game.prodigy.player;
		if (a.tutorial.getMenuValue(this.menuID, 0) < 1) {
			a.tutorial.setMenuValue(this.menuID, 0, 1);
			var s = this.game.prodigy.dialogue.create();
			s.setText(13), s.setText({
				callback: Util.highlightAll.bind(Util, [i], !0)
			}), s.start("noot")
		}
	},
	close: function() {
		this.callback(this.pointer.angle >= 0 && this.pointer.angle <= 30 || this.pointer.angle >= -30 && this.pointer.angle <= 0), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Card = function(e, t, i, a, s) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.hideFriendsButton = s || !1, this.viewOnly = a, this.player = i, this.exclamationSprite = null, this.stylistBreadcrumbIndicator = null, e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_SENT, this.setupFriendRequestButton.bind(this), this, "Card", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this.setupFriendRequestButton.bind(this), this, "Card", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this.setupFriendRequestButton.bind(this), this, "Card", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this.setupFriendRequestButton.bind(this), this, "Card", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.FRIEND_REMOVED, this.setupFriendRequestButton.bind(this), this, "Card", !1), e.broadcaster.addAppListener(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, this.updateAppearance.bind(this), this, "Card", !1), this.create()
}, Prodigy.extends(Prodigy.Menu.Card, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Card,
	create: function() {
		this.addTransparent(), this.base = this.game.prodigy.create.element(this, 300, 120);
		var e = this.game.prodigy.create.element(this, this.base.x, this.base.y);
		this.game.prodigy.create.panel(e, 0, 0, 17, 2, "card-top"), this.game.prodigy.create.panel(e, 0, 80, 17, 10, "card-bot");
		var t = e.add(this.game.prodigy.create.sprite(6, 360, "core", "overlay-small"));
		t.width = 668, t.height = 80, t.alpha = .1, e.setRenderState(!0), this.p = this.game.prodigy.create.player(this.base, this.player, 2, 110, 320), this.p.reload(), this.playerName = this.game.prodigy.create.font(this.base, 10, 3, (this.player.isMember ? "[membership] " : "") + this.player.appearance.getName(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.font(this.base, 10, 53, "$" + this.player.getLevel(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.button(this.base, 640, -10, "icons", "close", this.close.bind(this)), this.buttons = [], this.player.userID === this.game.prodigy.player.userID ? this.setupPlayer(this.buttons) : this.setupStranger(this.buttons), this.content = this.game.prodigy.create.element(this.base), this.setMode(0, 0), Prodigy.RenderMenu.prototype.create.call(this)
	},
	close: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_SENT, this, "Card"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this, "Card"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this, "Card"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this, "Card"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.FRIEND_REMOVED, this, "Card"), this.game.broadcaster.removeAppListener(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, this, "Card"), Prodigy.RenderMenu.prototype.close.call(this)
	},
	setupPlayer: function(e) {
		var t = 15,
			i = 350,
			a = this.game.prodigy.player.state.get("zone-lamplight");
		if (this.game.prodigy.create.advButton(this.base, t, i, {
				icon: "move",
				top: "Go To",
				bot: "House"
			}, this.toHouse.bind(this)).setActive(!Util.isDefined(a) || !Util.isDefined(a.quest) || a.quest.ID > 1), this.game.prodigy.player.hasCompletedTutorial()) {
			var s = {
					shopkeeperTag: "store-stylist",
					shopkeeperFrame: "stylist-npc-portrait",
					Y: 40,
					scaleX: 1,
					scaleY: 1
				},
				r = this.game.prodigy.create.advButton(this.base, t + 110, i, {
					atlas: "store-stylist",
					icon: "stylist-icon",
					top: "Change",
					bot: "Style"
				}, function() {
					Util.isNullOrUndefined(this.stylistBreadcrumbIndicator) || (this.stylistBreadcrumbIndicator.destroy(), this.stylistBreadcrumbIndicator = null), this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_STYLIST, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_STYLIST_BUTTON), this.game.prodigy.open.stylistStore(this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.STYLIST), null, s, null, null, {
						onCreateEvent: {
							action: "Stylist-Interaction",
							label: "Visit-From-Player-Card"
						}
					})
				}.bind(this));
			this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_STYLIST, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_STYLIST_BUTTON) || (this.stylistBreadcrumbIndicator = this.createBreadcrumbIndicator(this.game, this.base, "icons", "exclamation", r))
		}
		e.push(this.game.prodigy.create.advButton(this.base, t + 220, i, {
			icon: "bag",
			top: "View",
			bot: "Gear"
		}, this.setMode.bind(this, 0, 0))), e.push(this.game.prodigy.create.advButton(this.base, t + 330, i, {
			icon: {
				type: "item",
				ID: 21
			},
			bot: "Gems"
		}, this.setMode.bind(this, 1, 1))), e.push(this.game.prodigy.create.advButton(this.base, t + 440, i, {
			icon: {
				type: "item",
				ID: 75
			},
			top: "Key",
			bot: "Items"
		}, this.setMode.bind(this, 2, 2))), e.push(this.game.prodigy.create.advButton(this.base, t + 550, i, {
			icon: "player",
			top: "View",
			bot: "Stats"
		}, this.setMode.bind(this, 3, 3)))
	},
	setupStranger: function(e) {
		var t = 15,
			i = 350,
			a = this.player.isMember && this.player.getAllowsHouseVisitors(),
			s = this.game.prodigy.create.advButton(this.base, t, i, {
				icon: "move",
				top: "Visit",
				bot: "House"
			}, this.toHouse.bind(this));
		s.setActive(a), a && this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_VISIT_BUTTON) || (this.exclamationSprite = this.createBreadcrumbIndicator(this.game, this.base, "icons", "exclamation", s))), this.game.prodigy.create.advButton(this.base, t + 110, i, {
			icon: "challenge",
			top: "Battle!"
		}, this.challenge.bind(this)).setActive(!this.viewOnly), e.push(this.game.prodigy.create.advButton(this.base, t + 440, i, {
			icon: "bag",
			top: "View",
			bot: "Gear"
		}, this.setMode.bind(this, 0, 0))), e.push(this.game.prodigy.create.advButton(this.base, t + 550, i, {
			icon: "player",
			top: "View",
			bot: "Stats"
		}, this.setMode.bind(this, 3, 1))), this.setupFriendRequestButton(t + 220, i)
	},
	setupFriendRequestButton: function(e, t) {
		if (!Util.isDefined(this.game)) return Util.log("Friend Button failed to render", Util.ERROR), void 0;
		for (var i = "", a = "", s = this.game.prodigy.friendsListNetworkHandler.friendsList, r = -1, n = 0; n < s.length; n++)
			if (this.player.userID === s[n].userID) {
				r = s[n].status;
				break
			} var o = null,
			h = "delete-friend";
		1 === r ? (i = "Remove", a = "Friend", o = Prodigy.Events.FriendsList.REMOVE_FRIEND, this.hideFriendsButton = !1) : 0 === r ? (i = "Cancel", a = "Request", o = Prodigy.Events.FriendsList.CANCEL_REQUEST, this.hideFriendsButton = !1) : (i = "Friend", a = "Request", o = Prodigy.Events.FriendsList.SEND_REQUEST, h = "add-friend");
		var l = function() {
			if (o === Prodigy.Events.FriendsList.REMOVE_FRIEND) {
				var e = Util.isDefined(this.player.appearance.data.nick) && "" !== this.player.appearance.data.nick ? this.player.appearance.data.nick : this.player.appearance.data.name;
				this.game.prodigy.open.confirm("Are you sure you want to remove " + e + " from your friends list?", this.game.broadcaster.broadcast.bind(this.game.broadcaster, o, "Card", [this.player.userID]), null, null, "Removing Friend")
			} else this.game.broadcaster.broadcast(o, "Card", [this.player.userID])
		}.bind(this);
		Util.isDefined(e) && Util.isDefined(t) || (e = this.cmdFriendRequest.x, t = this.cmdFriendRequest.y), Util.isDefined(this.cmdFriendRequest) && this.cmdFriendRequest.destroy(), this.cmdFriendRequest = this.game.prodigy.create.advButton(this.base, e, t, {
			atlas: "icons-menu",
			icon: h,
			top: i,
			bot: a
		}, l, 60, 60), this.cmdFriendRequest.setActive(!this.hideFriendsButton)
	},
	setMode: function(e, t) {
		if (this.page = e, Prodigy.RenderMenu.prototype.setMode.call(this, t), this.content.removeAll(!0), 0 === e)
			for (var i = ["hat", "weapon", "follow", "outfit", "boots", "ring"], a = 0; a < i.length; a++) this.player.userID === this.game.prodigy.player.userID ? this.game.prodigy.create.item(this.content, 260 + a % 3 * 140, 67 + 140 * Math.floor(a / 3), {
				ID: this.player.equipment.getEquipment(i[a]),
				type: i[a]
			}, "icon", this.openPouch.bind(this, i[a])) : this.game.prodigy.create.item(this.content, 260 + a % 3 * 140, 67 + 140 * Math.floor(a / 3), {
				ID: this.player.equipment.getEquipment(i[a]),
				type: i[a]
			}, "icon", this.itemSelected.bind(this, this.player.equipment.getEquipment(i[a]), i[a], "view", 0));
		else if (1 === e || 2 === e) {
			for (var s = this.game.prodigy.player.backpack.getBackpackItemsByType("key"), r = [], n = 1 === e, a = 0; a < s.length; ++a) {
				var o = 1 === Items.getItemMetadata("key", s[a].ID).subType;
				n === o && r.push(s[a])
			}
			for (a = 0; 3 > a; a++) {
				var h = this.content.add(this.game.prodigy.create.sprite(260, 120 + 90 * a, "core", "overlay-small"));
				h.width = 414, h.height = 40, h.alpha = .05;
				for (var l = 0; 4 > l; l++)
					if (4 * a + l < r.length) {
						var d = this.content.add(this.game.prodigy.icon.createIcon(h.x + 20 + 100 * l, h.y - 50, "icon-key-" + r[4 * a + l].ID));
						d.inputEnabled = !0, d.events.onInputDown.add(this.itemSelected.bind(this, r[4 * a + l].ID, "key", "inv", e))
					}
			}
		} else if (3 === e) {
			var c = this.player.getCurrentHearts() + "/" + this.player.getMaxHearts(),
				p = this.game.prodigy.create.panel(this.content, 330, 65, 4, 2, "stat");
			this.game.prodigy.create.font(p, 5, 5, "[mail-heart] Hearts", {
				size: 20
			}), this.game.prodigy.create.font(p, -20, 46, c, {
				font: "black",
				align: "center",
				width: 200
			}), c = this.player.getStars() + "/" + (this.player.getStars() + this.player.getStarsToLevel()), this.player.getLevel() >= 100 && (c = "MAX"), p = this.game.prodigy.create.panel(this.content, 500, 65, 4, 2, "stat"), this.game.prodigy.create.font(p, 5, 5, "[mail-star] Stars", {
				size: 20
			}), this.game.prodigy.create.font(p, -20, 46, c, {
				font: "black",
				align: "center",
				width: 200
			}), p = this.game.prodigy.create.panel(this.content, 330, 155, 4, 2, "stat"), this.game.prodigy.create.font(p, 5, 5, "[mail-gold] Gold", {
				size: 20
			}), this.game.prodigy.create.font(p, 5, 46, "" + this.player.getGold(!0), {
				font: "black",
				align: "right",
				width: 145
			}), p = this.game.prodigy.create.panel(this.content, 500, 155, 4, 2, "stat"), this.game.prodigy.create.font(p, 5, 5, "[mail-tower] Tower", {
				size: 20
			}), this.game.prodigy.create.font(p, 5, 46, "Floor " + this.player.getTowerProgress(), {
				font: "black",
				align: "center",
				width: 145
			}), p = this.game.prodigy.create.panel(this.content, 330, 245, 4, 2, "stat"), this.game.prodigy.create.font(p, 5, 5, "[mail-challenge] Arena", {
				size: 20
			}), this.game.prodigy.create.font(p, 5, 46, "" + this.player.getArenaScore(), {
				font: "black",
				align: "right",
				width: 145
			}), p = this.game.prodigy.create.panel(this.content, 500, 245, 4, 2, "stat"), this.game.prodigy.create.font(p, 5, 5, "[mail-challenge] W / L", {
				size: 20
			}), this.game.prodigy.create.font(p, 5, 46, this.player.getWins() + "/" + this.player.getLosses(), {
				font: "black",
				align: "center",
				width: 145
			})
		}
	},
	toHouse: function() {
		Util.isDefined(this.exclamationSprite) && (this.exclamationSprite.destroy(), this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_VISIT_BUTTON)), this.game.prodigy.loading(!0);
		var e = function(e) {
			var t = Util.isDefined(e) ? e[this.player.userID] : null;
			Util.isDefined(t) && Util.isDefined(t.house) && (this.game.prodigy.loading(!1), this.player.house.setItems(Util.getObject(t.house)), this.game.prodigy.world.teleport("house", null, null, this.player))
		}.bind(this);
		this.game.prodigy.network.getCharData(this.player.userID, ["house"], e, e)
	},
	challenge: function() {
		var e = this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.game, [!0]),
			t = function(e, t, i) {
				Util.isDefined(i) && "Tower" === i ? (e.state.states.Tower.startX = t.x, e.state.states.Tower.startY = t.y, e.prodigy.start("Tower")) : e.prodigy.world.teleport(e.prodigy.player.data.zone, t.x, t.y)
			},
			i = {
				equipment: this.game.prodigy.player.equipment.data,
				appearance: this.game.prodigy.player.appearance.data,
				data: this.game.prodigy.player.data,
				isMember: this.game.prodigy.player.isMember
			};
		this.game.prodigy.network.emitMessage({
			action: "challenge",
			target: this.player.userID,
			time: 6e4,
			data: {
				userID: this.game.prodigy.player.userID,
				player: i
			}
		}), this.game.prodigy.pvp.start(this.game.prodigy.player.userID, this.game.prodigy.player, this.player, t.bind(this, this.game, e, this.game.state.current), !1)
	},
	sendGift: function() {
		this.game.prodigy.open.message("This feature is coming soon!", null, null, "Send Gift")
	},
	updatePlayer: function(e) {
		this.p.reload(), this.game.input.clearEnterCallback(), this.setMode(e, e)
	},
	updateAppearance: function() {
		Util.isNullOrUndefined(this.p) || (this.p.reload(), this.playerName.setText(this.player.appearance.getName()))
	},
	itemSelected: function(e, t, i, a) {
		Util.isDefined(e) && this.game.prodigy.open.itemInfo({
			ID: e,
			type: t
		}, this.updatePlayer.bind(this, a), i)
	},
	openPouch: function(e) {
		"ring" === e || Util.isDefined(this.player.equipment.getEquipment(e)) ? this.itemSelected(this.player.equipment.getEquipment(e), e, "equip", 0) : this.game.prodigy.open.pouch(e, this.updatePlayer.bind(this, 0))
	},
	createBreadcrumbIndicator: function(e, t, i, a, s) {
		var r = e.prodigy.create.sprite(0, 0, i, a);
		t.add(r), s = Util.getOptionalParameter(s, t);
		var n = Util.getCenteredXY(r.width, 0, s.x, s.y, s.width, 0);
		return r.x = n.x, r.y = s.y - r.height, e.add.tween(r).to({
			y: r.y - 10
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, -1, !0), r
	}
}), Prodigy.Menu.ChoosePet = function(e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.callback = a, this.create(i)
}, Prodigy.extends(Prodigy.Menu.ChoosePet, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ChoosePet,
	create: function(e) {
		var t = Items.getItemData("pet", e);
		this.panel = this.game.prodigy.create.panel(this, 400, 200, 12, 9, "shine"), this.panel.add(new Phaser.TileSprite(this.game, 11, 80, 458, 40, "core", "blue-top")), this.panel.add(new Phaser.TileSprite(this.game, 11, 120, 458, 120, "core", "blue-mid")), this.panel.add(new Phaser.TileSprite(this.game, 11, 240, 458, 40, "core", "blue-top2")), this.panel.add(this.game.prodigy.icon.createFromData({
			type: "pet",
			ID: e
		}, 40, 30)), this.game.prodigy.create.font(this.panel, 140, 35, t.name, {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.font(this.panel, 40, 130, t.flavorText, {
			width: 400,
			font: "black"
		}), this.game.prodigy.create.button(this, this.panel.x + 440, this.panel.y - 10, "icons", "close", this.close.bind(this, !1)), this.game.prodigy.create.textButton(this, this.panel.x + 65, this.panel.y + 290, {
			icon: "yes",
			text: "Choose " + t.name,
			size: Prodigy.Control.TextButton.LG
		}, this.takePet.bind(this, e)), Prodigy.RenderMenu.prototype.create.call(this)
	},
	takePet: function(e) {
		this.game.prodigy.open.gotItem([{
			type: "pet",
			ID: e,
			data: {
				ID: e
			}
		}], this.close.bind(this, !0), null, "take-pet")
	},
	close: function(e) {
		e && this.callback(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.ChooseSpell = function(e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !1
	}), this.spells = i, this.callback = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.ChooseSpell, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.ChooseSpell,
	setup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 390, 110), this.game.prodigy.create.panel(this.base, 0, 0, 10, 9, "panel-light");
		for (var e = [
				[20, 50, .2]
			], t = 0; t < e.length; t++) {
			var i = this.base.add(this.game.prodigy.create.sprite(8, e[t][0], "core", "overlay-small"));
			i.width = 484, i.height = e[t][1], i.alpha = e[t][2]
		}
		this.game.prodigy.create.font(this.base, 0, 20, "Choose a Spell", {
			font: "button",
			size: 36,
			align: "center",
			width: 500
		});
		var a = this.game.prodigy.create.element(this.base, 150, 100);
		this.scroll = this.game.prodigy.create.scrollBar(this.base, 30, 100, 280, this.showSpellList.bind(this, a)), this.scroll.setPages(this.spells.length), this.scroll.click(0), this.game.prodigy.create.textButton(this.base, 150, 410, {
			icon: "close",
			text: "cancel"
		}, this.close.bind(this))
	},
	showSpellList: function(e, t) {
		e.removeAll(!0);
		for (var i = t; t + 3 > i && i < this.spells.length; i++) {
			var a = this.spells[i],
				s = e.add(this.game.prodigy.create.sprite(0, 100 * (i - t), "icons", "icon-base")),
				r = e.add(this.game.prodigy.create.sprite(70, 100 * (i - t), "icons", "icon-data-2"));
			s.inputEnabled = r.inputEnabled = !0, s.events.onInputDown.add(this.close.bind(this, a.ID)), r.events.onInputDown.add(this.close.bind(this, a.ID)), this.game.prodigy.create.font(e, r.x + 20, r.y + 7, a.data.name), r = e.add(this.game.prodigy.icon.createFromData(a.data, s.x, s.y))
		}
	},
	close: function(e) {
		this.callback(e), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Startup = function(e, t, i) {
	this.onClose = i, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Startup, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Startup,
	create: function() {
		this.addTransparent(), this.createBaseSetup(16, 14, "shine", null, null, !0);
		var e = this.game.prodigy.create.element(this, 320, 80);
		e.setRenderState(!0), this.game.prodigy.create.panel(e, 40, 40, 14, 2, "banner"), this.game.prodigy.create.panel(e, 40, 160, 14, 9, "blue"), this.game.prodigy.create.font(e, 40, 55, "Welcome to Prodigy!", {
			font: "button",
			size: 36,
			align: "center",
			width: 560
		}), this.content = this.game.prodigy.create.element(this, 360, 240);
		var t = !1;
		this.game.prodigy.player.isMember || Util.isSchoolHours() ? this.game.prodigy.player.isMember && !this.game.prodigy.player.data.reward ? this.createMember(!0) : t = !0 : this.createMember(!1), Prodigy.RenderMenu.prototype.create.call(this), t && this.close()
	},
	createMember: function(e) {
		for (var t = 180, i = 100, a = [
				[60, 50, 0],
				[10, 50, 50],
				[110, 50, 100],
				[30, 30, 150],
				[80, 30, 200],
				[55, 10, 0]
			], s = 0; s < a.length; s++) {
			var r = this.content.add(this.game.prodigy.create.sprite(t + a[s][0], i + a[s][1], "icon-item-26"));
			this.game.add.tween(r).to({
				y: "-5"
			}, 800, Phaser.Easing.Quadratic.InOut, !0, a[s][2], GameConstants.MAX_SAFE_INTEGER, !0)
		}
		this.content.add(this.game.prodigy.create.sprite(t, i + 100, "core-2", "chest-bot"));
		var n = e ? "You Have a Membership!" : "Become a Member Today!",
			o = e ? "Here's your reward of 2000 gold!" : "Join now and get 2000 GOLD!";
		e && (this.game.prodigy.player.data.reward = 1, this.game.prodigy.player.changeGold(2e3, "Membership Reward")), this.game.prodigy.create.font(this.content, 0, 15, n, {
			size: 30,
			width: 560,
			align: "center"
		}), this.game.prodigy.create.font(this.content, 0, 70, o, {
			size: 20,
			width: 560,
			align: "center"
		})
	},
	createPVP: function() {},
	createFirst: function() {}
}), Prodigy.Menu.Store = function(e, t, i, a, s, r, n, o) {
	this.data = i, this.onClose = a, this.shopkeeperData = s, this.onBuy = r, this.analyticEvents = Util.getOptionalParameter(o, {}), this.purchaseConfirmationConfig = n, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Store, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Store,
	create: function(e) {
		this.addTransparent();
		var t = 0;
		Util.isNullOrUndefined(this.analyticEvents.onCreateEvent) || this.game.prodigy.network.sendAnalytics(this.analyticEvents.onCreateEvent.action || "", this.analyticEvents.onCreateEvent.label || "", this.analyticEvents.onCreateEvent.category);
		var i = [];
		if (Util.isDefined(this.data.pages))
			for (var a = 0; a < this.data.pages.length; a++) i.push(this.data.pages[a].btn), Util.isDefined(this.data.pages[a].isDefault) && this.data.pages[a].isDefault === !0 && (t = a);
		else i = null;
		this.createBaseSetup(30, 16, "shine", null, i, !0, this.data.name);
		var s = this.game.prodigy.create.element(this, 0, 0);
		if (s.setRenderState(!0), s.add(new Phaser.TileSprite(this.game, 51, 240, 1178, 40, "core", "blue-top")), s.add(new Phaser.TileSprite(this.game, 51, 280, 1178, 300, "core", "blue-mid")), s.add(new Phaser.TileSprite(this.game, 51, 580, 1178, 40, "core", "blue-top2")), Util.isDefined(this.shopkeeperData)) {
			var r = Util.isDefined(this.shopkeeperData.X) ? this.shopkeeperData.X : 80,
				n = Util.isDefined(this.shopkeeperData.Y) ? this.shopkeeperData.Y : 63,
				o = s.add(this.game.prodigy.create.sprite(r, n, this.shopkeeperData.shopkeeperTag, this.shopkeeperData.shopkeeperFrame));
			o.scale.x = this.shopkeeperData.scaleX, o.scale.y = this.shopkeeperData.scaleY
		} else s.add(this.game.prodigy.create.sprite(80, 63, "core-2", "merchant"));
		this.cards = this.game.prodigy.create.element(this, 430, 220), this.bar = this.game.prodigy.create.slider(this, this.cards.x + 540 + 180, 240, 380, !0, !0);
		var h = this.game.prodigy.create.panel(this, 80, 280, 8, 2, "white");
		this.gold = this.game.prodigy.create.font(h, 0, 10, "", {
			size: 40,
			align: "center",
			width: 320,
			iconOffsetY: 13
		}), this.data.ends && this.initTimer(s, 80, 400, this.data.ends, this.data.isEvent), Prodigy.RenderMenu.prototype.create.call(this), e || this.showContent(), this.setMode(t), this.game.prodigy.network.sendZoneEvent("store-visit", this.data.name)
	},
	showContent: function() {
		if (!this.game.prodigy.player.isMember) {
			var e = function(e, t, i) {
					e.prodigy.open.membership(t), e.prodigy.network.sendAnalytics(i)
				},
				t = Prodigy.Lodash.get(this, "data.pages[0].items[0].cost");
			if (!Util.isDefined(t) || this.costsGold(t))
				if (Math.random() < .5) {
					var i = this.game.prodigy.create.panel(this, 80, 380, 8, 5, "member");
					i.setClickable(e.bind(this, this.game, Prodigy.Menu.MemberAd.GET_GOLD, "getGoldBtn")), this.game.prodigy.create.font(i, 10, 10, "Need gold? Become a member and get", {
						align: "center",
						width: 300
					}), this.game.prodigy.create.font(i, 10, 140, "Click Here!", {
						align: "center",
						width: 300,
						font: "button",
						size: 36
					});
					var a = i.add(this.game.prodigy.create.sprite(7, 70, "core", "overlay-small"));
					a.width = 306, a.height = 60, a.alpha = .2, this.game.prodigy.create.font(i, 0, 80, "[gold] 2000! [gold]", {
						align: "center",
						width: 320,
						font: "button",
						size: 36
					})
				} else {
					var s = Util.isDefined(this.data) && Util.isDefined(this.data.defaultMemberAd) ? this.data.defaultMemberAd : Prodigy.Menu.MemberAd.PREMIUM_ITEM,
						i = this.game.prodigy.create.panel(this, 80, 380, 8, 5, "member");
					i.setClickable(e.bind(this, this.game, s, "getAllItemsBtn")), this.game.prodigy.create.font(i, 10, 10, "Want to unlock all items?", {
						align: "center",
						width: 300
					}), this.game.prodigy.create.font(i, 10, 140, "Click Here!", {
						align: "center",
						width: 300,
						font: "button",
						size: 36
					});
					var a = i.add(this.game.prodigy.create.sprite(7, 75, "core", "overlay-small"));
					a.width = 306, a.height = 50, a.alpha = .2, this.game.prodigy.create.font(i, 0, 60, "[single-image:icon-outfit-32] [single-image:icon-weapon-16] [single-image:icon-hat-45]", {
						align: "center",
						width: 320,
						font: "button",
						size: 36
					})
				}
		}
	},
	setMode: function(e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e);
		var t = [];
		Util.isDefined(this.data.pages) ? (this.currentPage = this.data.pages[e], t = this.data.pages[e].items) : Util.isDefined(this.data.items) && (t = this.data.items);
		var i = this.getSortType(t);
		Util.isNullOrUndefined(i) || (t = t.slice(0), this.sortItems(t, i)), t = this.sortItemsByOwned(t), this.bar.reset(t.length - 4, 4, -1, this.setItems.bind(this, t)), this.refreshPage()
	},
	sortItemsByOwned: function(e) {
		for (var t = [], i = [], a = 0; a < e.length; a++) this.game.prodigy.player.isItemOwned(e[a]) ? i.push(e[a]) : t.push(e[a]);
		return t.concat(i)
	},
	sortItems: function() {},
	getSortType: function() {
		return null
	},
	setItems: function(e, t) {
		this.cards.removeAll(!0);
		for (var i = t; t + 8 > i; i++) {
			var a = e[i],
				s = i - t;
			i >= e.length ? this.game.prodigy.create.panel(this.cards, s % 4 * 180, 220 * Math.floor(s / 4), 4, 5, "empty") : this.game.prodigy.create.item(this.cards, s % 4 * 180, 220 * Math.floor(s / 4), {
				ID: a.ID,
				type: a.type,
				cost: this.getCost(a)
			}, "store", this.clicked.bind(this, a))
		}
		this.updateCurrency(e[0])
	},
	updateCurrency: function(e) {
		if (!Util.isNullOrUndefined(this.gold)) {
			var t = this.getCost(e);
			this.costsGold(t) ? this.gold.setText("[mail-gold] " + this.game.prodigy.player.getGold(!0)) : this.gold.setText("[" + Items.getItemData(t.type, t.ID).icon + "] " + this.game.prodigy.player.backpack.hasItem(t.type, t.ID))
		}
	},
	initDeal: function() {
		var e = this.game.prodigy.create.panel(this, 80, 360, 8, 6, "white");
		e.setRenderState(!0), e.alpha = 0, this.deal = this.game.prodigy.create.element(this, e.x, e.y)
	},
	initTimer: function(e, t, i, a, s) {
		if (s) {
			var r = this.game.prodigy.create.panel(e, t, i, 8, 3, "dark");
			r.setRenderState(!0), this.timer = this.game.prodigy.create.timer(r, 5, 8, !0), this.timer.setMsg("until the shop closes");
			var n = a - (new Date).getTime();
			this.timer.start(n, this.close.bind(this), !0)
		} else {
			var o = this.game.prodigy.create.panel(this, 80, 360, 8, 6, "white");
			o.setRenderState(!0), o.alpha = 0, this.deal = this.game.prodigy.create.element(this, o.x, o.y)
		}
	},
	refreshPage: function() {
		this.bar.process()
	},
	clicked: function(e) {
		var t = this.owned = this.game.prodigy.player.isItemOwned(e),
			i = function() {
				var t = Items.getItem(e.type, e.ID),
					i = !Util.isNullOrUndefined(t) && !Util.isNullOrUndefined(t.data) && 1 === t.data.member;
				i && !this.game.prodigy.player.isMember && this.game.prodigy.network.sendConversionFunnelEvent(Prodigy.FunnelEventIDs.FUNNEL_BUY_MEMBER_ITEM, Prodigy.FunnelEventIDs.STAGE_CLICK_ITEM, e.type + "-" + e.ID)
			}.bind(this);
		t && "dorm" === e.type ? this.game.prodigy.open.message("You already have too many of this item!", null, null, "Uh oh!") : t && "dormbg" === e.type ? this.game.prodigy.open.message("You already own this house!") : !t || "gender" !== e.type && "hair" !== e.type && "eyeColor" !== e.type && "skinColor" !== e.type && "hairColor" !== e.type ? t && "pet" !== e.type ? this.game.prodigy.open.message("You already have this item!", null, null, "Uh oh!") : t ? this.game.prodigy.open.message("You already have this pet!", null, null, "Uh oh!") : "pet" === e.type && this.game.prodigy.player.kennel.isFull() ? this.game.prodigy.open.message("You have too many pets! You must release some in order to buy a new one.", null, null, "Uh oh!") : "dormbg" === e.type ? (i(), this.game.prodigy.open.houseItemInfo(e, this.buy.bind(this, e), "buy")) : (i(), this.game.prodigy.open.itemInfo(e, this.buy.bind(this, e), "buy")) : this.game.prodigy.open.message("You already look like this!", null, null, "Uh oh!")
	},
	buy: function(e, t) {
		if (t) {
			var i = Items.getItemData(e.type, e.ID),
				a = this.getCost(e);
			this.sendAnalyticsForMemberItems(e, i);
			var s = this.game.prodigy.player;
			if (i.member && !s.isMember) {
				var r, n = null;
				"pet" === e.type && s.kennel.hasMaxNonMemberPets() ? r = Prodigy.Menu.MemberAd.BIGGER_ROSTER : (n = {
					conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_BUY_MEMBER_ITEM,
					conversionFunnelMetadata: e.type + "-" + e.ID
				}, r = this.getMemberAdName(e.type)), this.game.prodigy.network.sendConversionFunnelEvent(n.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_BUY, n.conversionFunnelMetadata), this.displayMemberAd(r, n)
			} else this.costsGold(a) || this.canPlayerAffordItem(s, a) ? this.costsGold(a) && !this.canPlayerAffordItemWithGold(s, a) ? s.isMember ? this.displayPlayerNeedsMoreGoldMessage(s, a) : this.displayMemberAd(Prodigy.Menu.MemberAd.MORE_GOLD) : "gender" === e.type ? this.game.prodigy.open.advancedNameChange.call(this.game.prodigy.open, !0, this.purchaseConfirmation.bind(this, e, i, a), !0) : this.purchaseConfirmation(e, i, a) : this.displayYouNeedMoreItemsMessage(s, a)
		}
	},
	sendAnalyticsForMemberItems: function(e, t) {
		Util.isDefined(t.member) && 0 !== t.member && ("pet" === e.type ? this.game.prodigy.network.sendAnalytics("Buy-Member-Pet", t.name) : this.game.prodigy.network.sendAnalytics("Buy-Member-Item", t.name))
	},
	costsGold: function(e) {
		return "currency" === e.type && 1 === e.ID
	},
	canPlayerAffordItem: function(e, t) {
		return e.backpack.hasItem(t.type, t.ID) >= t.N
	},
	canPlayerAffordItemWithGold: function(e, t) {
		return e.getGold() >= t.N
	},
	displayYouNeedMoreItemsMessage: function(e, t) {
		var i = Items.getItemData(t.type, t.ID).icon,
			a = e.backpack.hasItem(t.type, t.ID);
		this.game.prodigy.open.message("You need [" + i + "]" + t.N + " for this item.\n\nYou only have [" + i + "]" + a + ".", null, "gold", "Uh oh!")
	},
	displayPlayerNeedsMoreGoldMessage: function(e, t) {
		this.game.prodigy.open.message("You need [gold]" + t.N + " for this item.\n\nYou only have [gold]" + e.getGold(!0) + ".", null, "gold", "Uh oh!")
	},
	displayMemberAd: function(e, t) {
		this.game.prodigy.open.membership(e, null, t)
	},
	getMemberAdName: function(e) {
		var t = Prodigy.Menu.MemberAd.PREMIUM_ITEM;
		return "follow" === e ? t = Prodigy.Menu.MemberAd.BUDDIES : "hat" === e || "outfit" === e || "weapon" === e || "boots" === e || "gender" === e || "hairColor" === e || "eyeColor" === e || "skinColor" === e || "hair" === e || "face" === e ? t = Prodigy.Menu.MemberAd.STYLE : "dorm" === e ? t = Prodigy.Menu.MemberAd.HOUSE_ITEMS : "dormbg" === e ? t = Prodigy.Menu.MemberAd.NEW_HOUSE : Util.isNullOrUndefined(e) || "potion" !== e ? Util.isNullOrUndefined(this.data) || Util.isNullOrUndefined(this.data.defaultMemberAd) || (t = this.data.defaultMemberAd) : t = Prodigy.Menu.MemberAd.POTIONS, t
	},
	purchaseConfirmation: function(e, t, i) {
		Util.log("PURCHASE CONFIRM");
		var a = function() {
			this.costsGold(i) ? this.game.prodigy.player.changeGold(-i.N) : this.game.prodigy.player.backpack.consume(i.type, i.ID, i.N), Util.isDefined(t.data) && (t = t.data), "pet" === e.type && (t = {
				ID: e.ID
			}), this.game.prodigy.open.gotItem([{
				ID: e.ID,
				type: e.type,
				N: 1,
				data: t
			}], this.refreshPage.bind(this), null, "store"), this.updateCurrency(e);
			var a = 1 === t.member ? "M" : "NM";
			this.game.prodigy.network.sendAnalytics("ShopPurchase-" + this.data.name, e.type + "-" + e.ID + "-" + a), this.game.prodigy.network.sendItemChangeEvent("spend-item", {
				type: i.type,
				ID: i.ID,
				N: -i.N
			}), Util.isNullOrUndefined(this.onBuy) || this.onBuy(e)
		}.bind(this);
		Util.isDefined(this.purchaseConfirmationConfig) ? this.game.prodigy.open.confirm(this.purchaseConfirmationConfig.message, a) : a()
	},
	getCost: function(e) {
		return e.cost[0]
	}
}), Prodigy.Menu.StylistStore = function(e, t, i, a, s, r, n, o) {
	Prodigy.Menu.Store.call(this, e, t, i, a, s, r, n, o)
}, Prodigy.extends(Prodigy.Menu.StylistStore, Prodigy.Menu.Store, {
	constructor: Prodigy.Menu.StylistStore,
	sortItems: function(e, t) {
		"gender" === t && this.sortItemsByGender(e)
	},
	getSortType: function(e) {
		var t = e.length > 0 ? e[0] : null,
			i = null;
		return Util.isNullOrUndefined(t) || "hair" === t.type && (i = "gender"), i
	},
	sortItemsByGender: function(e) {
		var t = "female" === this.game.prodigy.player.appearance.getGender() ? 1 : 2;
		e.sort(function(e, i) {
			var a = Items.getItem(e.type, e.ID),
				s = Items.getItem(i.type, i.ID);
			return a.gender === t ? -1 : s.gender === t ? 1 : Util.isNullOrUndefined(a.gender) || 0 === a.gender ? -1 : Util.isNullOrUndefined(s.gender) || 0 === s.gender ? 1 : 0
		})
	}
}), Prodigy.Menu.ToyStore = function(e, t) {
	e.prodigy.network.sendToyEvent("toy-store", 4);
	var i = e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.WANDERING_WARES);
	Prodigy.Menu.Store.call(this, e, t, i)
}, Prodigy.extends(Prodigy.Menu.ToyStore, Prodigy.Menu.Store, {
	constructor: Prodigy.Menu.ToyStore,
	create: function() {
		this.addTransparent(), this.createBaseSetup(29, 16, "shine2");
		var e = this.game.prodigy.create.element(this, 20, 0);
		e.setRenderState(!0), e.add(new Phaser.TileSprite(this.game, 51, 100, 1138, 40, "core", "orange-top")), e.add(new Phaser.TileSprite(this.game, 51, 140, 1138, 40, "core", "orange-mid")), e.add(new Phaser.TileSprite(this.game, 51, 180, 1138, 40, "core", "orange-top2"));
		var t = this.game.prodigy.create.panel(e, 760, 240, 10, 9, "orange");
		t.add(new Phaser.TileSprite(this.game, 0, 30, 400, 60, "core", "overlay-small")).alpha = .15, Prodigy.RenderMenu.prototype.create.call(this), this.content = this.game.prodigy.create.element(this, 60, 240), this.startLoad(["popup-toyStore"], this.showContent.bind(this, e))
	},
	showContent: function(e) {
		e.add(this.game.prodigy.create.sprite(55, 74, "popup-toyStore", "logo")), this.data.pages = Prodigy.Lodash.shuffle(this.data.pages);
		for (var t = 0; t < this.data.pages.length; t++) {
			var i = this.game.prodigy.create.advButton(this, 283 + 102 * t, 110, this.data.pages[t].btn, this.setMode.bind(this, t));
			this.buttons.push(i)
		}
		this.process(), this._loaded = !0, this.setMode(0)
	},
	setMode: function(e) {
		if (this._loaded) {
			Prodigy.RenderMenu.prototype.setMode.call(this, e), this.page = e, this.content.removeAll(!0), Util.isDefined(this._petImage) && this.game.tweens.removeFrom(this._petImage);
			var t = this.data.pages[e];
			this.game.prodigy.create.font(this.content, 750, 45, "[mail-leaf] ", {
				size: 40
			}), this.game.prodigy.create.font(this.content, 770, 32, " " + this.game.prodigy.player.backpack.hasItem("currency", 3), {
				size: 40
			});
			for (var i = 0; i < t.items.length; i++) {
				var a = t.items[i];
				this.game.prodigy.create.item(this.content, i % 2 * 180 + 750, 130, {
					ID: a.ID,
					type: a.type,
					cost: this.getCost(a)
				}, "store", this.clicked.bind(this, a))
			}
			var s = Items.getItemData("pet", t.ID);
			this.game.prodigy.create.font(this.content, 420, 40, s.name + "", {
				size: 36,
				font: "button"
			}), this.content.add(this.game.prodigy.create.sprite(350, 29, "icons", "icon-bar-" + s.element));
			var r = [25 / 35, 1],
				n = [{
					x: 50,
					y: 70
				}, {
					x: 60,
					y: 20
				}];
			this._petImage = this.content.add(this.game.prodigy.create.animatedSprite(60, 20, "popup-toyStore", [t.ID + "_1", t.ID + ""], !1, r, n)), this.f1 = this.game.add.tween(this._petImage).to({
				alpha: 1
			}, 2800, Phaser.Easing.Quadratic.In), this.f2 = this.game.add.tween(this._petImage).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.In), this.f3 = this.game.add.tween(this._petImage).to({
				frameNo: 1
			}, 1, Phaser.Easing.Quadratic.In), this.f4 = this.game.add.tween(this._petImage).to({
				alpha: 1
			}, 1e3, Phaser.Easing.Quadratic.In), this.f5 = this.game.add.tween(this._petImage).to({
				alpha: 1
			}, 2800, Phaser.Easing.Quadratic.In), this.f6 = this.game.add.tween(this._petImage).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.In), this.f7 = this.game.add.tween(this._petImage).to({
				frameNo: 0
			}, 1, Phaser.Easing.Quadratic.In), this.f8 = this.game.add.tween(this._petImage).to({
				alpha: 1
			}, 1e3, Phaser.Easing.Quadratic.In), this.f1.chain(this.f2), this.f2.chain(this.f3), this.f3.chain(this.f4), this.f4.chain(this.f5), this.f5.chain(this.f6), this.f6.chain(this.f7), this.f7.chain(this.f8), this.f8.chain(this.f1), this.f1.start(), this.game.prodigy.create.font(this.content, 309, 100, "When you get an Epic, you get a REAL TOY, AND a POWERFUL level 20 pet to join your team!\n\nAsk your parents to help you get them on your team today! ", {
				size: 16,
				width: 370
			});
			var o = this.game.prodigy.create.panelButton(this.content, 180, 290, 9, 2, "button", this.openWebsite.bind(this, "buy toy now!", void 0, t.ID));
			o.content.add(this.game.prodigy.icon.createFromData({
				type: "pet",
				ID: t.ID
			}, 10, -10)), this.game.prodigy.create.font(o.content, 100, 15, "buy toy now!", {
				width: 250,
				size: 36,
				font: "button",
				align: "center"
			})
		}
	},
	openWebsite: function(e, t) {
		Prodigy.Menu.ToyStore.openWebsite(this.game, e.replace(/\s/g, "-").replace("!", ""), t, this.data.pages[this.page].ID)
	},
	close: function() {
		Util.isDefined(this._petImage) && this.game.tweens.removeFrom(this._petImage), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.ToyStore.openWebsite = function(e, t, i, a) {
	if (Device.iPadMini() || Device.isTablet() || 1 == Util.getUrlVariable("iosApp")) e.prodigy.open.message("Unfortunately, you cannot purchase toys from a mobile device at this time. \n\nPlease log into the game from the website on a computer to do so. We apologize for the inconvenience.");
	else try {
		e.prodigy.network.sendToyEvent(t, 5, a);
		var s = e.prodigy.player,
			r = Util.isDefined(s.classIDs) && s.classIDs.length > 0 ? s.classIDs[s.classIDs.length - 1] % 4 : 4,
			n = "www.prodigygame.com/toys/#",
			o = "";
		switch (Util.getOptionalParameter(a, -1)) {
			case 125:
				o = "/toys/big-hex";
				break;
			case 126:
				o = "/toys/florafox";
				break;
			case 127:
				o = "/toys/arctursus";
				break;
			case 128:
				o = "/toys/diveodile";
				break;
			case 129:
				o = "/toys/magmischief";
				break;
			case 130:
				o = "/toys/chillnchar";
				break;
			case 131:
				o = "/toys/tidus";
				break;
			case 132:
				o = "/toys/luma";
				break;
			case 133:
				o = "/toys/eclipse";
				break;
			default:
				o = ""
		}
		i === !0 ? e.prodigy.network.openWebsite(n + o + "?id=" + e.prodigy.player.userID + "&epoch=" + (new Date).valueOf() + "&version=" + t + "&token=" + e.prodigy.network.api.uniqueKey + "&uTest=" + s.userID % 10 + "&cTest=" + r + "&vid=1#toys") : e.prodigy.network.openWebsite(n + o + "?id=" + e.prodigy.player.userID + "&epoch=" + (new Date).valueOf() + "&version=" + t + "&token=" + e.prodigy.network.api.uniqueKey + "&uTest=" + s.userID % 10 + "&cTest=" + r)
	} catch (h) {
		Util.log(h)
	}
}, Prodigy.Menu.RankStore = function(e, t, i, a, s) {
	this.mode = a, Prodigy.Menu.Store.call(this, e, t, i, s)
}, Prodigy.extends(Prodigy.Menu.RankStore, Prodigy.Menu.Store, {
	constructor: Prodigy.Menu.RankStore,
	create: function() {
		Prodigy.Menu.Store.prototype.create.call(this, !0)
	},
	refreshPage: function() {
		Prodigy.Menu.Store.prototype.refreshPage.call(this), Util.isDefined(this.deal) || (this.deal = this.game.prodigy.create.element(this, 80, 360), this.game.prodigy.create.panel(this.deal, 0, 0, 8, 6, "white").alpha = .5, this.dc = this.game.prodigy.create.element(this.deal, 0, 0)), this.dc.removeAll(!0), this.game.prodigy.create.font(this.dc, 0, 5, this.currentPage.top, {
			width: 320,
			align: "center",
			font: "button",
			size: 36
		});
		var e = this.currentPage.icon;
		Util.isDefined(e) || (e = this.currentPage.btn.icon.ID);
		var t = this.dc.add(this.game.prodigy.create.sprite(160, 50, "icons", e));
		t.anchor.setTo(.5, 0), this.currentPage.rank > this.data.callback() + 1 && this.game.prodigy.create.font(this.dc, 0, 175, "You have not reached this rank yet!", {
			width: 320,
			align: "center",
			size: 20
		})
	},
	clicked: function(e) {
		if (this.currentPage.rank > this.data.callback() + 1) {
			if ("bounty" === this.mode) this.game.prodigy.open.message("You need to reach " + this.currentPage.rank + " Bounty Points to unlock this item!");
			else if ("arena" === this.mode) {
				var t = "this";
				switch (this.currentPage.rank) {
					case 2:
						t = "Silver";
						break;
					case 3:
						t = "Gold";
						break;
					case 4:
						t = "Platinum";
						break;
					case 5:
						t = "Diamond"
				}
				this.game.prodigy.open.message("You need to reach " + t + " rank to unlock this item!")
			}
		} else Prodigy.Menu.Store.prototype.clicked.call(this, e)
	}
}), Prodigy.Menu.GotItem = function(e, t, i, a, s, r) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.items = this.splitItems(i), this.itemsLeft = i.length, this.gold = 0, this.game = e, this.index = -1, this.onClose = a, this.shouldStartDialogueOnCreate = Util.isDefined(s) ? s : !0, this.eventType = r, this.create(), Util.log("GotItem------------------------------------")
}, Prodigy.extends(Prodigy.Menu.GotItem, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.GotItem,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 0, 0, 32, 18), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18), Prodigy.RenderMenu.prototype.create.call(this), this.dialogue = this.game.prodigy.dialogue.create(), this.getDialogue(), this.shouldStartDialogueOnCreate && this.dialogue.start("noot")
	},
	startDialogue: function() {
		Util.isDefined(this.dialogue) ? this.dialogue.start("noot") : Util.log("GotItem.startDialogue - dialogue was null.  Cannot start", Util.ERROR)
	},
	getItems: function(e, t) {
		for (var i = 0; e > i; i++) Util.log(this.items[i + t].type + " " + (i + t)), this.revealItem((1280 - (160 * e + 20 * (e - 1))) / 2 + 180 * i, this.items[i + t], 400 * i), this.bagItem(this.items[i + t]), this.itemsLeft--, Util.log(this.itemsLeft + " remaining")
	},
	splitItems: function(e) {
		for (var t = [], i = 0, a = 0; a < e.length; a++)
			if ("gold" === e[a].type) i += e[a].N;
			else if ("spell" === e[a].type) var s = e[a];
		else t.push(e[a]);
		if (i && t.unshift({
				type: "gold",
				N: i
			}), Util.isDefined(s) && t.unshift(s), this.game.prodigy.microtransaction.debugOpen === !0) {
			var r = JSON.stringify(t);
			Util.log("<Drops>" + r + "</Drops>", Util.INFO)
		} else Util.log(t, Util.INFO);
		return t
	},
	getDialogue: function() {
		if (1 === this.items.length) this.getSingleDialogue(this.items[0], 0), this.dialogue.setText({
			callback: this.close.bind(this)
		});
		else {
			var e = this.items[this.items.length - 1],
				t = !1,
				i = !1;
			("hat" === e.type || "outfit" === e.type || "weapon" === e.type || "boots" === e.type || "follow" === e.type) && (t = !0), "spell" === this.items[0].type && (i = !0), t ? (this.items.length > 2 ? this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length - 1, 0),
				face: 2,
				anim: 1
			}) : this.getSingleDialogue(this.items[0], 0), this.dialogue.setText({
				callback: this.getSingleDialogue.bind(this, e, this.items.length - 1)
			})) : i ? (this.items.length > 2 ? this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length - 1, 1),
				face: 2,
				anim: 1
			}) : this.getSingleDialogue(e, this.items.length - 1), this.dialogue.setText({
				callback: this.getSingleDialogue.bind(this, this.items[0], 0)
			})) : (this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length, 0),
				face: 2,
				anim: 1
			}), this.dialogue.setText({
				callback: this.close.bind(this)
			}))
		}
	},
	getSingleDialogue: function(e, t) {
		if (this.clearItems(), "pet" === e.type) this.dialogue.setText({
			text: "You got a new pet!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("dorm" === e.type) this.dialogue.setText({
			text: "You got furniture for your house!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("dormbg" === e.type) this.dialogue.setText({
			text: "You've moved to a new house! I'll clean up all your furniture for you.",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("bounty" === e.type) this.dialogue.setText({
			text: "You earned bounty points!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("gold" === e.type) this.dialogue.setText({
			text: "You got gold!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("spell" === e.type) this.dialogue.setText({
			text: "You learned a new spell!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		}), this.items.length > 1 && this.dialogue.setText({
			callback: this.close.bind(this)
		});
		else if ("hat" === e.type || "outfit" === e.type || "weapon" === e.type || "boots" === e.type || "follow" === e.type) {
			var i = "Wow! A new " + e.type + ". Would you like to put it on?";
			"boots" === e.type && (i = "Wow! A new pair of " + e.type + ". Would you like to put it on?"), "follow" === e.type && (i = "Wow! A new buddy! Would you like them to follow you?"), this.dialogue.setText({
				text: i,
				element: this.getItems(1, t),
				yes: this.wearItem.bind(this, e),
				no: this.close.bind(this),
				face: 3,
				anim: 4
			})
		} else "giftBox" === e.type ? this.dialogue.setText({
			text: "You got a Conjure Cube!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		}) : "gender" === e.type || "hair" === e.type || "eyeColor" === e.type || "skinColor" === e.type || "hairColor" === e.type || "face" === e.type ? this.dialogue.setText({
			text: "You got a new look!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		}) : this.dialogue.setText({
			text: "You got an item!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		})
	},
	revealItem: function(e, t, i) {
		if ("gender" === t.type || "hair" === t.type || "eyeColor" === t.type || "skinColor" === t.type || "hairColor" === t.type || "face" === t.type) this.game.prodigy.create.item(this.content, e, 150, t, "StylistCard");
		else {
			this.game.prodigy.create.item(this.content, e, 150, t, "card");
			var a = this.game.prodigy.create.panel(this.overlay, e, 150, 4, 5, "orange");
			a.alpha = 1, this.game.add.tween(a).to({
				alpha: 0
			}, 200, Phaser.Easing.Linear.None, !0, 500 + i)
		}
		this.shootStars(500 + i, e + 80)
	},
	clearItems: function() {
		Util.isDefined(this.content) && (this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0, 32, 18)), Util.isDefined(this.overlay) && (this.overlay.destroy(), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18))
	},
	skip: function() {
		Util.isDefined(this.overlay) && this.overlay.destroy(), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18)
	},
	bagItem: function(e) {
		if (this.game.prodigy.network.sendItemChangeEvent(this.eventType || "got-item", {
				type: e.type,
				ID: e.ID || -1,
				N: e.N || 1
			}), "gold" === e.type) this.game.prodigy.player.changeGold(e.N);
		else if ("pet" === e.type) this.game.prodigy.player.kennel.add(e.ID, e.data.hp, e.data.stars, e.data.level, e.data.nickname);
		else if ("spell" === e.type) this.game.prodigy.player.addSpell(e.ID);
		else if ("dorm" === e.type) this.game.prodigy.player.house.add(e.ID);
		else if ("dormbg" === e.type) this.game.prodigy.player.house.setCurrentHouseTag(e.data.tag);
		else if ("key" === e.type) this.game.prodigy.player.backpack.addKeyItem(e.ID, e.lvl, e.data);
		else if ("giftBox" === e.type) this.game.prodigy.network.sendAnalytics("Conjure-Cubes-Earned-for-Free", "Earned-at-Level-" + this.game.prodigy.player.data.level);
		else if ("item" === e.type) {
			var t = Items.getItemData(e.type, e.ID),
				i = Util.isDefined(e.type) && "potion" === e.type;
			i ? this.game.prodigy.player.backpack.add("item", e.ID, !t.member || !this.game.prodigy.player.isMember && t.member, e.N || 1) : Util.isDefined(e.data.seed) ? this.game.prodigy.player.backpack.addBountyNote(e.type, e.ID, e.data.seed) : this.game.prodigy.player.backpack.add("item", e.ID, !1, e.N || 1)
		} else if ("currency" === e.type) {
			var a = Items.getItemData(e.type, e.ID).member && !this.game.prodigy.player.isMember;
			this.game.prodigy.player.backpack.add(e.type, e.ID, a, e.N)
		} else if ("hair" === e.type) {
			var s = this.game.prodigy.player.appearance.getHair();
			this.game.prodigy.player.appearance.setHair(e.ID, s.color), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", [])
		} else if ("gender" === e.type) this.game.prodigy.player.appearance.setGender(1 === e.ID ? "male" : "female"), this.game.prodigy.player.appearance.setFace(1 === e.ID ? 4 : 12), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", []);
		else if ("eyeColor" === e.type) this.game.prodigy.player.appearance.setEyeColor(e.ID), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", []);
		else if ("skinColor" === e.type) this.game.prodigy.player.appearance.setSkinColor(e.ID), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", []);
		else if ("hairColor" === e.type) {
			var s = this.game.prodigy.player.appearance.getHair();
			this.game.prodigy.player.appearance.setHair(s.style, e.ID), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", [])
		} else if ("face" === e.type) this.game.prodigy.player.appearance.setFace(e.ID), this.game.prodigy.player.appearanceChanged = !0, this.game.broadcaster.broadcast(Prodigy.Event.PlayerContainer.PLAYER_APPEARANCE_UPDATED, "Card", []);
		else if ("bounty" !== e.type) {
			var a = (Items.getItemData(e.type, e.ID).member === !0 || 1 === Items.getItemData(e.type, e.ID).member) && !this.game.prodigy.player.isMember;
			Util.isDefined(e.isGift) && e.isGift && (a = !1), Util.isDefined(e.data.seed) ? this.game.prodigy.player.backpack.addBountyNote(e.type, e.ID, e.data.seed) : this.game.prodigy.player.backpack.add(e.type, e.ID, a, e.N)
		}
	},
	wearItem: function(e) {
		var t = Items.getItemData(e.type, e.ID);
		if (!this.game.prodigy.player.isMember && t.member && Util.isNullOrUndefined(e.isGift)) {
			var i = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_EQUIP_NEW_LOCKED_ITEM,
				conversionFunnelMetadata: e.type + "-" + e.ID
			};
			this.game.prodigy.network.sendConversionFunnelEvent(i.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_EQUIP_ITEM, i.conversionFunnelMetadata), this.game.prodigy.network.sendAnalytics("Equip-Member-Item", t.name), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM, this.close.bind(this), i)
		} else this.game.prodigy.player.equip(e.ID, e.type), this.game.prodigy.player.appearanceChanged = !0, this.close()
	},
	shootStars: function(e, t) {
		this.stars = this.game.prodigy.create.element(this.overlay);
		for (var i = 0; 5 > i; i++) {
			var a = t - 100 + 50 * i,
				s = this.game.world.centerY - 100 - 150;
			0 === i || 4 === i ? s += 120 : (1 === i || 3 === i) && (s += 50);
			var r = this.game.prodigy.create.sprite(t, this.game.world.centerY - 100, "icons", "star");
			this.stars.add(r), r.anchor.setTo(.5, .5), r.alpha = 0, this.game.add.tween(r).to({
				alpha: .5
			}, 1, Phaser.Easing.Linear.None).delay(e).to({
				x: a,
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(r).to({
				y: s
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(e).start()
		}
	}
}), Prodigy.Menu.Stylist = function(e, t, i) {
	this.panels = [], this.player = i, Prodigy.Control.Menu.call(this, e, t, 21, {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-white"
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Stylist, Prodigy.Control.Menu, {
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.scroll = this.game.prodigy.create.scrollBar(this, 60, 180, 345, this.setPage.bind(this)), this.playerCopy = new Player(this.game), this.data = new Prodigy.Container.UserEquipment(this.game, this, 872, 200, this.playerCopy, !0), this.content = this.game.prodigy.create.element(this, 0, 0), this.buyText = this.game.prodigy.create.font(this.data, 0, 250, "Click to buy this look!", {
			size: 20,
			width: 348,
			align: "center"
		}), this.buyBtn = this.game.prodigy.create.textButton(this.data, 74, 290, {
			text: "250",
			textY: 5,
			icon: {
				needsMemberIcon: this.player.isMember,
				atlas: "icons",
				type: "item",
				ID: "26",
				metadata: {
					vIcon: 1
				}
			}
		}), this.gold = this.game.prodigy.create.font(this, 50, 655, "[gold] " + this.game.prodigy.player.getGold(!0), {
			size: 40,
			iconOffsetY: 10
		}), this.buyBtn.visible = !1, this.buyText.visible = !1;
		var e = [{
			icon: "hair-2",
			callback: this.setStyles.bind(this),
			title: "CHOOSE HAIR STYLE"
		}, {
			icon: {
				type: "item",
				ID: "46",
				metadata: {
					vIcon: 1
				}
			},
			callback: this.setColors.bind(this),
			title: "CHOOSE HAIR COLOR"
		}, {
			icon: "eyes-2",
			callback: this.setEyes.bind(this),
			title: "CHOOSE EYE COLOR"
		}];
		this.showFrame("player", "STYLIST", e, 0);
		var t = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [t]), this.setupComplete = !0
	},
	resetPlayer: function() {
		var e = this.player.appearance.getHair();
		this.playerCopy.appearance.setGender(this.player.appearance.getGender()), this.playerCopy.appearance.setHair(e.style, e.color), this.playerCopy.appearance.setEyeColor(this.player.appearance.getEyeColor()), this.playerCopy.appearance.setSkinColor(this.player.appearance.getSkinColor()), this.playerCopy.appearance.setFace(this.player.appearance.getFace()), this.playerCopy.equipment.setEquipment({
			outfit: this.player.equipment.getEquipment("outfit"),
			hat: this.player.equipment.getEquipment("hat"),
			weapon: this.player.equipment.getEquipment("weapon")
		}), this.playerCopy.appearanceChanged = !0, this.buyBtn.visible = !1, this.buyText.visible = !1, this.data.user.reload()
	},
	setPage: function(e) {
		this.content.removeAll(!0);
		for (var t = 0; 6 > t; t++) {
			var i = 6 * e + t;
			i < this.current.length && this.showItem(this.content, this.current[i], 190 + 330 * Math.floor(t / 3), 180 + t % 3 * 120)
		}
	},
	showItem: function(e, t, i, a) {
		var s = !1,
			r = t.cost,
			n = this.game.prodigy.create.element(e, i, a),
			o = n.add(this.game.prodigy.create.sprite(0, 0, "core-2", "store-panel"));
		o.inputEnabled = !0, o.events.onInputDown.add(this.changeAppearance.bind(this, t), this);
		var h = n.add(this.game.prodigy.create.sprite(15, 15, "icons", t.icon));
		"empty" === t.icon && (h.tint = t.tint), this.game.prodigy.create.font(n, 80, -2, t.name), s ? this.game.prodigy.create.font(n, 70, 44, "OWNED", {
			size: 30,
			align: "center",
			width: 180
		}) : (this.game.prodigy.create.font(n, 70, 44, "" + (r.N <= 0 ? "FREE" : r.N), {
			size: 30,
			align: "right",
			width: 140
		}), this.costsGold(r) && n.add(this.game.prodigy.icon.gold(238, 60)), t.member && n.add(this.game.prodigy.create.sprite(90, 35, "icons", "membership")))
	},
	setStyles: function() {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e, t = "male" === this.playerCopy.appearance.getGender() ? [16, 17, 18, 19, 20, 21, 22, 23, 37, 40, 41, 42] : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 38, 39, 43, 44], i = 0; i < t.length; i++) {
			e = Items.getItemObject("hair", t[i]);
			var a = {
				type: "hair",
				ID: e.ID,
				icon: e.metadata.icon,
				cost: Items.getCost("hair", e.ID),
				member: 1 === e.data.member,
				name: e.data.name
			};
			this.current.push(a)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	setColors: function() {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e = Items.getRawItems("hairColor"), t = 0; t < e.length; t++) {
			var i = {
				type: "hairColor",
				ID: e[t].ID,
				icon: "empty",
				cost: Items.getCost("hairColor", e[t].ID),
				member: e[t].data.member,
				name: "Hair Color",
				tint: Util.rgb2hex(e[t].data.colors[2][0], e[t].data.colors[2][1], e[t].data.colors[2][2])
			};
			this.current.push(i)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	setEyes: function() {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e = Items.getRawItems("eyeColor"), t = 0; t < e.length; t++) {
			var i = {
				type: "eyeColor",
				ID: e[t].ID,
				icon: "empty",
				cost: Items.getCost("eyeColor", e[t].ID),
				member: e[t].data.member,
				name: e[t].data.name,
				tint: Util.rgbArrayToHex(e[t].data.colors[0])
			};
			this.current.push(i)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	changeAppearance: function(e) {
		this.locked = e.member && !this.game.prodigy.player.isMember, "eyeColor" === e.type ? this.playerCopy.appearance.setEyeColor(e.ID) : "hairColor" === e.type ? this.playerCopy.appearance.setHair(-1, e.ID) : "hair" === e.type && this.playerCopy.appearance.setHair(e.ID, -1), this.locked ? this.buyBtn.setIcon("membership") : this.buyBtn.setIcon("item/26"), this.buyBtn.callback = this.buy.bind(this, e), this.buyBtn.setText(e.cost.N.toString()), this.buyBtn.visible = !0, this.buyText.visible = !0, this.data.user.reload()
	},
	buy: function(e) {
		this.locked && this.game.prodigy.network.sendAnalytics("Buy-Member-Style");
		var t = Items.getItemData(e.type, e.ID),
			i = e.cost,
			a = this.player;
		!a.isMember && t.member ? this.displayMemberAd(Prodigy.Menu.MemberAd.STYLE) : this.costsGold(i) || this.canPlayerAffordItem(a, i) ? this.costsGold(i) && !this.canPlayerAffordItemWithGold(a, i) ? a.isMember ? this.displayPlayerNeedsMoreGoldMessage(a, i) : this.displayMemberAd(Prodigy.Menu.MemberAd.MORE_GOLD) : this.purchaseConfirmation(e) : this.displayYouNeedMoreItemsMessage(a, i)
	},
	costsGold: function(e) {
		return "currency" === e.type && 1 === e.ID
	},
	canPlayerAffordItem: function(e, t) {
		return e.backpack.hasItem(t.type, t.ID) >= t.N
	},
	canPlayerAffordItemWithGold: function(e, t) {
		return e.getGold() >= t.N
	},
	displayYouNeedMoreItemsMessage: function(e, t) {
		var i = Items.getItemData(t.type, t.ID).icon,
			a = e.backpack.hasItem(t.type, t.ID),
			s = "You need [" + String(i) + "]" + String(t.N) + " for this item.\n\nYou only have [" + String(i) + "]" + String(a) + ".";
		this.game.prodigy.open.message(s, null, "gold", "Uh oh!")
	},
	displayPlayerNeedsMoreGoldMessage: function(e, t) {
		var i = "You need [gold]" + String(t.N) + " to style your wizard.\n\nYou only have [gold]" + String(e.getGold(!0) + ".");
		this.game.prodigy.open.message(i, null, "gold", "Uh oh!")
	},
	displayMemberAd: function(e) {
		this.game.prodigy.open.membership(e)
	},
	purchaseConfirmation: function(e) {
		var t = e.cost,
			i = Items.getItemData(t.type, t.ID),
			a = String(t.N + " " + i.name),
			s = String("Are you sure you want to style your wizard for " + a + "? \nThis will change your wizard's appearance.");
		this.game.prodigy.open.confirm(s, this.completePurchase.bind(this, e, t))
	},
	completePurchase: function(e, t) {
		this.costsGold(t) ? this.game.prodigy.player.changeGold(-t.N, "Stylist") : this.game.prodigy.player.backpack.consume(t.type, t.ID, t.N);
		var i = this.playerCopy.appearance.getHair();
		this.player.appearance.setHair(i.style, i.color), this.player.appearance.setEyeColor(this.playerCopy.appearance.getEyeColor()), this.player.appearanceChanged = !0, this.close()
	}
}), Prodigy.Menu.Coliseum = function(e, t, i) {
	this.player = i, Prodigy.Control.Menu.call(this, e, t, 8), this.setup()
}, Prodigy.extends(Prodigy.Menu.Coliseum, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Coliseum,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.index = 0, this.add(this.game.prodigy.create.sprite(120, 140, "core-2", "char-container")), this.game.prodigy.create.panel(this, 560, 140, 12, 6), this.game.prodigy.create.panel(this, 860, 480, 6, 2), this.opponentName = this.game.prodigy.create.font(this, 610, 150, "", {
			size: 40
		}), this.opponentTitle = this.game.prodigy.create.font(this, 610, 180, "", {
			width: 500,
			align: "right"
		}), this.description = this.game.prodigy.create.font(this, 590, 230, "", {
			size: 20,
			width: 540
		}), this.game.prodigy.create.font(this, 880, 490, "Reward", {
			size: 30
		}), this.itemIcon = this.game.prodigy.icon.createWithQuantity(this, 1020, 470, "icon-item-26", 1), this.defeat = this.game.prodigy.create.sprite(270, 460, "icons", "yes"), this.add(this.defeat), this.scrollRightButton = this.game.prodigy.create.button(this, 374, 430, "icons", "next", this.shift.bind(this, 1)), this.scrollLeftButton = this.game.prodigy.create.button(this, 164, 430, "icons", "back", this.shift.bind(this, -1)), this.challengeButton = this.game.prodigy.create.textButton(this, 710, 410, {
			text: "challenge!",
			icon: {
				type: "weapon",
				ID: 4
			},
			size: Prodigy.Control.TextButton.MED
		}, this.challenge.bind(this)), this.showFrame("leaderboard", "THE ARENA", []);
		var e = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [e]), this.index = Math.min(this.game.prodigy.player.getColiseum(), Prodigy.Menu.Coliseum.data.length - 1), this.shift(0), this.setupComplete = !0
	},
	shift: function(e) {
		this.index += e, this.scrollLeftButton.setActive(), this.scrollRightButton.setActive(), this.index <= 0 && (this.index = 0, this.scrollLeftButton.setInactive()), this.index >= Prodigy.Menu.Coliseum.data.length - 1 && (this.index = Prodigy.Menu.Coliseum.data.length - 1, this.scrollRightButton.setInactive()), this.changeOpponent()
	},
	changeOpponent: function() {
		this.data = Prodigy.Menu.Coliseum.data[this.index], this.opponent = new Player(this.game), this.opponent.init(this.data.opponent), Util.isDefined(this.petV) && this.petV.destroy(), this.data.pets.length > 0 && (this.petV = this.game.prodigy.create.monster(this, new Monster(this.data.pets[0], this.game), 2, 250, 390), this.petV.reload()), Util.isDefined(this.playerV) && this.playerV.destroy(), this.playerV = this.game.prodigy.create.player(this, this.opponent, 2, 350, 390), this.data.pets.length <= 0 && (this.playerV.x -= 55), this.playerV.reload();
		var e = this.data.drops[0];
		if ("gold" === e.type ? this.itemIcon.setValue("icon-item-26", null, e.N) : this.itemIcon.setValue(this.game.prodigy.icon.iconKey(e), null, 1), this.index > Math.floor(this.player.getLevel() / 5) || this.index > this.game.prodigy.player.getColiseum()) {
			var t = "";
			this.index > Math.floor(this.player.getLevel() / 5) && (t = "You must be at least level " + 5 * this.index), this.index > this.game.prodigy.player.getColiseum() && (t += (t.length > 0 ? " and you " : "You ") + "must defeat the previous " + (1 == this.index ? "wizard" : "wizards")), t += " to challenge " + this.opponent.getName() + ".", this.locked = !0, this.challengeButton.visible = !0, this.challengeButton.setInactive(), this.defeat.visible = !1
		} else this.index < this.game.prodigy.player.getColiseum() ? (t = this.data.description, this.locked = !0, this.challengeButton.visible = !1, this.challengeButton.setInactive(), this.defeat.visible = !0) : (this.locked = !1, t = this.data.description, this.challengeButton.visible = !0, this.challengeButton.setActive(), this.defeat.visible = !1);
		this.opponentName.setText(this.opponent.getName()), this.opponentTitle.setText("- " + this.data.title + " -"), this.description.setText(t)
	},
	challenge: function() {
		if (!this.locked) {
			var e = this.game.prodigy.dialogue.create();
			e.setText({
				face: 0,
				text: "Do you want to challenge " + this.opponent.getName() + "?",
				audio: Arena.AUDIO[0],
				yes: this.startBattle.bind(this, this.index, !0)
			}), e.start("clankboot")
		}
	},
	startBattle: function(e, t) {
		if (t) {
			var i = function(e, t) {
				Util.isDefined(t) && t > e.prodigy.player.getColiseum() && e.prodigy.player.setColiseum(t), e.prodigy.start("Arena")
			};
			delete Prodigy.Menu.Coliseum.data[e].opponent.data.hp;
			var a = Prodigy.Menu.Coliseum.data[e].pets;
			if (Util.isDefined(a))
				for (var s = 0; s < a.length; s++) delete a[s].hp;
			var r = {
				screen: "bg-battle-arena",
				opponent: [Prodigy.Menu.Coliseum.data[e].opponent],
				drops: Prodigy.Menu.Coliseum.data[e].drops,
				"catch": !1,
				pets: a,
				difficulty: 6,
				dropsDisabled: !0
			};
			this.game.prodigy.battle.start(r, i.bind(this, this.game), i.bind(this, this.game, e + 1), null, "Arena")
		}
	}
}), Prodigy.Menu.Coliseum.data = [{
	opponent: {
		data: {
			level: 5
		},
		appearance: {
			name: "Gina",
			gender: "female",
			hair: {
				style: 5,
				color: 3
			},
			skinColor: 3,
			eyeColor: 5
		},
		equipment: {
			weapon: 1
		}
	},
	title: "The New Girl",
	description: "Gina arrived at the Academy a few weeks ago. She doesn't know many spells, but she can't wait to test them out on new challengers.",
	pets: [],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 10
		},
		appearance: {
			name: "Cameron",
			gender: "male",
			hair: {
				style: 19,
				color: 6
			},
			skinColor: 5,
			eyeColor: 4
		},
		equipment: {
			outfit: 4,
			weapon: 12
		}
	},
	title: "The Copycat",
	description: "When Cameron first came to the Academy, he challenged Crios and was beaten by his powerful fire spells. Now, Cameron has chosen fire as his new element.",
	pets: [{
		ID: 94,
		level: 10
	}],
	drops: [{
		ID: 12,
		type: "hat"
	}]
}, {
	opponent: {
		data: {
			level: 15
		},
		appearance: {
			name: "Mila",
			gender: "female",
			hair: {
				style: 14,
				color: 1
			},
			skinColor: 4,
			eyeColor: 1
		},
		equipment: {
			hat: 4,
			outfit: 2,
			weapon: 2
		}
	},
	title: "The Veteran Wizard",
	description: "Mila didn't get her outfit from the Academy... in fact, she came here dressed like this. She's been casting spells for years, and uses all of them to defeat challengers.",
	pets: [{
		ID: 1,
		level: 15
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 20
		},
		appearance: {
			name: "Benjamyn",
			gender: "male",
			hair: {
				style: 16,
				color: 4
			},
			skinColor: 3,
			eyeColor: 8
		},
		equipment: {
			outfit: 17,
			weapon: 36
		}
	},
	title: "The Nameless",
	description: "There are plenty of Bens at the Academy, but only one Benjamyn. Most students say his name is REALLY spelled 'Benjamin' and think he just changed it to be different. Interesting fact: It's really spelled Binjumun.",
	pets: [{
		ID: 16,
		level: 20
	}],
	drops: [{
		type: "boots",
		ID: 26
	}]
}, {
	opponent: {
		data: {
			level: 25
		},
		appearance: {
			name: "Fuchsia",
			gender: "female",
			hair: {
				style: 15,
				color: 12
			},
			skinColor: 1,
			eyeColor: 10
		},
		equipment: {
			outfit: 20,
			weapon: 3
		}
	},
	title: "The Sweetheart",
	description: "Pink is Fuchsia's favorite color, which is obvious to anyone who sees her. She doesn't know many spells, mostly because she spends too much time with her pet Peppermint.",
	pets: [{
		ID: 35,
		level: 25
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 30
		},
		appearance: {
			name: "Bannard",
			gender: "male",
			hair: {
				style: 19,
				color: 2
			},
			skinColor: 1,
			eyeColor: 7
		},
		equipment: {
			hat: 5,
			outfit: 30,
			weapon: 61
		}
	},
	title: "The Loudmouth",
	description: "Most students avoid Bannard, but not because he's too tough. In fact, he's a pretty normal student, except for the fact that he talks really loud... in fact, students can hear him coming from a mile away.",
	pets: [{
		ID: 19,
		level: 30
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 35
		},
		appearance: {
			name: "Leena",
			gender: "female",
			hair: {
				style: 1,
				color: 3
			},
			skinColor: 2,
			eyeColor: 7
		},
		equipment: {
			outfit: 31,
			weapon: 52
		}
	},
	title: "The Metalhead",
	description: "Leena was raised in a small mining town in the mountains of the northern regions. Her appreciation of the rare rocks and ores that come from the planet have earned her her nickname, but it isn't earth spells that she's been practicing...",
	pets: [{
		ID: 88,
		level: 35
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 40
		},
		appearance: {
			name: "Finneas",
			gender: "male",
			hair: {
				style: 17,
				color: 16
			},
			skinColor: 4,
			eyeColor: 2
		},
		equipment: {
			hat: 16,
			outfit: 16,
			weapon: 38
		}
	},
	title: "The Adventurer",
	description: "Finn has a wild thirst for adventure, travel, and new challenges. He is a gifted student, but many teachers wish he would spend more time in the classroom and less out exploring the wilderness.",
	pets: [{
		ID: 29,
		level: 40
	}, {
		ID: 14,
		level: 40
	}],
	drops: [{
		type: "hat",
		ID: 36
	}]
}, {
	opponent: {
		data: {
			level: 45
		},
		appearance: {
			name: "Djinna",
			gender: "female",
			hair: {
				style: 7,
				color: 11
			},
			skinColor: 5,
			eyeColor: 15
		},
		equipment: {
			outfit: 1,
			weapon: 7
		}
	},
	title: "The Enigma",
	description: "One of the stranger students at the Academy, Djinna comes and goes as she pleases, often disappearing for days at a time. There is a rumor going around that she's not a student at all, but a spirit who watches over the Academy.",
	pets: [{
		ID: 99,
		level: 45
	}, {
		ID: 101,
		level: 45
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 50
		},
		appearance: {
			name: "Jess",
			gender: "male",
			hair: {
				style: 21,
				color: 8
			},
			skinColor: 1,
			eyeColor: 1
		},
		equipment: {
			outfit: 29,
			weapon: 15
		}
	},
	title: "The Forest Sprite",
	description: "Jess loves nature and everything about it. His respect for nature is second only to his twin sister, who taught him all she knows. He will accept any challenge to prove himself worthy of her teachings.",
	pets: [{
		ID: 59,
		level: 50
	}, {
		ID: 52,
		level: 50
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 55
		},
		appearance: {
			name: "Flora",
			gender: "female",
			hair: {
				style: 11,
				color: 7
			},
			skinColor: 1,
			eyeColor: 2
		},
		equipment: {
			outfit: 3,
			weapon: 8
		}
	},
	title: "The Forest Guardian",
	description: "The forests of the Academy are full of life, and Flora loves being a part of it. She spends her time in the forest, using earth spells to rejuvenate the plant life. Every once in a while, she'll return to the Academy, looking for new challengers.",
	pets: [{
		ID: 60,
		level: 55
	}, {
		ID: 53,
		level: 55
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 60
		},
		appearance: {
			name: "Nick",
			gender: "male",
			hair: {
				style: 23,
				color: 5
			},
			skinColor: 2,
			eyeColor: 2
		},
		equipment: {
			hat: 24,
			outfit: 25,
			weapon: 25
		}
	},
	title: "The Caroler",
	description: "A lot of students at the Academy like the holiday season, but no one loves it as much as Nick. Nick sings festive carols all year long, even in the middle of July.",
	pets: [{
		ID: 27,
		level: 60
	}, {
		ID: 28,
		level: 60
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 65
		},
		appearance: {
			name: "Lillian",
			gender: "female",
			hair: {
				style: 13,
				color: 5
			},
			skinColor: 1,
			eyeColor: 8
		},
		equipment: {
			outfit: 1,
			weapon: 2
		}
	},
	title: "The Pet Enthusiast",
	description: "Lillian knows everything there is to know about pets, from their favorite activity to their favorite flavor of yogurt. She hopes to one day befriend every kind of pet and earn the title of 'Pet Master'.",
	pets: [{
		ID: 25,
		level: 65
	}, {
		ID: 26,
		level: 65
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 70
		},
		appearance: {
			name: "Korathius",
			gender: "male",
			hair: {
				style: 16,
				color: 5
			},
			skinColor: 1,
			eyeColor: 7
		},
		equipment: {
			hat: 32,
			outfit: 31,
			weapon: 59
		}
	},
	title: "The Beastmaster",
	description: "It is not real fur that Korathius wears, though his outfit correctly symbolizes his power and respect for all beasts. He never enters combat without a pet, though he instead refers to them as his 'brothers'.",
	pets: [{
		ID: 20,
		level: 70
	}, {
		ID: 21,
		level: 70
	}, {
		ID: 22,
		level: 70
	}],
	drops: [{
		type: "outfit",
		ID: 32
	}]
}, {
	opponent: {
		data: {
			level: 75
		},
		appearance: {
			name: "Jen",
			gender: "female",
			hair: {
				style: 14,
				color: 16
			},
			skinColor: 4,
			eyeColor: 10
		},
		equipment: {
			outfit: 35,
			weapon: 53
		}
	},
	title: "The Timed Traveller",
	description: "Many students dream of travelling the world, and Jen is no different. What separates her from the other students is that she's actually done it, in only 79 days!",
	pets: [{
		ID: 55,
		level: 75
	}, {
		ID: 58,
		level: 75
	}, {
		ID: 82,
		level: 75
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 80
		},
		appearance: {
			name: "George",
			gender: "male",
			hair: {
				style: 23,
				color: 6
			},
			skinColor: 2,
			eyeColor: 2
		},
		equipment: {
			hat: 9,
			outfit: 2,
			weapon: 10
		}
	},
	title: "The Curious One",
	description: "George has a blooming curiosity for anything and everything. He loves playing with gadgets and gizmos, and often tries to invent his own... with varying degrees of success.",
	pets: [{
		ID: 63,
		level: 80
	}, {
		ID: 72,
		level: 80
	}, {
		ID: 89,
		level: 80
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 85
		},
		appearance: {
			name: "Aurora",
			gender: "female",
			hair: {
				style: 1,
				color: 14
			},
			skinColor: 1,
			eyeColor: 13
		},
		equipment: {
			hat: 10,
			outfit: 6,
			weapon: 20
		}
	},
	title: "The Ice Queen",
	description: "Students come to the Academy by many means, but Aurora's tale takes the cake. She arrived at the Academy floating on an iceberg, telling of her long journey across the sea. True or not, there is truth in her power over the spells of ice.",
	pets: [{
		ID: 40,
		level: 85
	}, {
		ID: 45,
		level: 85
	}, {
		ID: 50,
		level: 85
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 90
		},
		appearance: {
			name: "Ziang",
			gender: "male",
			hair: {
				style: 19,
				color: 11
			},
			skinColor: 2,
			eyeColor: 6
		},
		equipment: {
			hat: 31,
			outfit: 7,
			weapon: 58
		}
	},
	title: "The Emerald Knight",
	description: "One night, Ziang disappeared into the mountains alone. For days, students could hear the sounds of battle, and a green glow filled the sky. He returned wearing a mysterious emerald armor, which he claims he took from a Dragon.",
	pets: [{
		ID: 92,
		level: 90
	}, {
		ID: 93,
		level: 90
	}, {
		ID: 91,
		level: 90
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 95
		},
		appearance: {
			name: "Nova",
			gender: "female",
			hair: {
				style: 3,
				color: 2
			},
			skinColor: 1,
			eyeColor: 1
		},
		equipment: {
			hat: 8,
			outfit: 5,
			weapon: 23
		}
	},
	title: "The Well Rounded",
	description: "Few students stand out the way Nova does. She is friendly, smart and generally fun to be around. She practices hard, and helps others when they ask. She'll accept your challenge, of course, and she'll even shake your hand when she beats you.",
	pets: [{
		ID: 41,
		level: 95
	}, {
		ID: 3,
		level: 95
	}, {
		ID: 86,
		level: 95
	}, {
		ID: 42,
		level: 95
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: {
			level: 100
		},
		appearance: {
			name: "Crios",
			gender: "male",
			hair: {
				style: 17,
				color: 6
			},
			skinColor: 2,
			eyeColor: 10
		},
		equipment: {
			outfit: 8,
			weapon: 22
		}
	},
	title: "The Prodigy",
	description: "Crios is by far the most gifted student the Academy has ever seen. He has never lost a duel, and at least 20 students a year leave because of him. And now he challenges you.",
	pets: [{
		ID: 94,
		level: 100
	}, {
		ID: 95,
		level: 100
	}, {
		ID: 96,
		level: 100
	}, {
		ID: 97,
		level: 100
	}],
	drops: [{
		type: "weapon",
		ID: 62
	}]
}], Prodigy.Menu.Nicknamer = function(e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 18, {
		hideMenu: !0,
		hideContent: !1,
		hideClose: !0
	}), this.names = i, this.user = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.Nicknamer, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Nicknamer,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = this.game.prodigy.create.panel(this, 390, 80, 10, 10);
		e.add(this.game.prodigy.create.sprite(-15, -15, "icon-item-12")), this.game.prodigy.create.font(e, 80, 15, "Change my name to...", {
			align: "left",
			size: 30
		});
		for (var t = 0; t < this.names.length + 1; t++) {
			var i = this.game.prodigy.player.appearance.getFullName(),
				a = i.split(" ")[0],
				s = null,
				r = "",
				n = !1,
				o = !1,
				h = !1;
			t >= this.names.length ? r = "Change back to original" : (s = r = (this.names[t].pre || "") + a + (this.names[t].post || ""), h = Util.isDefined(this.names[t].member), n = o = h && !this.game.prodigy.player.isMember, n || (n = this.isLocked(this.names[t])));
			var l = this.game.prodigy.create.element(e, 30, 80 + 60 * t),
				d = this.game.prodigy.create.sprite(0, 0, "core", "overlay-small");
			d.inputEnabled = !0, d.events.onInputDown.add(this.setCurrent.bind(this, s, n, this.names[t], 80 + 60 * t - 5, h)), d.width = 440, d.alpha = n ? .5 : .2, n || l.add(d), this.game.prodigy.create.font(l, 60, 8, r, {
				align: "left",
				size: 20
			}), n && l.add(d), o && l.add(this.game.prodigy.create.sprite(-5, -5, "icons", "membership"))
		}
		this.selected = e.add(this.game.prodigy.create.sprite(25, -5, "icons", "yes")), this.selected.visible = !1, this.quit = this.game.prodigy.create.textButton(e, 40, 470, {
			icon: "close",
			text: "cancel"
		}, this.close.bind(this)), this.apply = this.game.prodigy.create.textButton(e, 260, 470, {
			icon: "next",
			text: "apply"
		}, this.apply.bind(this)), this.apply.setInactive()
	},
	isLocked: function(e) {
		if (!Util.isDefined(e.req)) return !1;
		for (var t = 0; t < e.req.length; t++) {
			var i = e.req[t];
			if ("pet" === i.rtype && !this.game.prodigy.player.kennel.hasPet(i.ID)) return !0;
			if ("item" === i.rtype && !this.game.prodigy.player.backpack.hasItem(i.type, i.ID)) return !0;
			if ("quest" === i.rtype && this.game.prodigy.world.getZone(i.zone).getCurrentQuestID > i.Q) return !0
		}
		return !1
	},
	setCurrent: function(e, t, i, a, s) {
		return s && this.game.prodigy.network.sendAnalytics("Set-Nickname", i.pre || i.post), s && t ? (this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.NICKNAME), void 0) : (t && Util.isDefined(i) ? this.game.prodigy.open.message(i.fail, null, null, "Uh oh!") : (this.selected.visible = !0, this.selected.y = a, this.current = e, this.apply.setActive()), void 0)
	},
	apply: function() {
		this.game.prodigy.player.appearance.setNickname(this.current), this.user.showName(!0);
		var e = this.game.prodigy.player;
		this.game.prodigy.network.emitMessage({
			action: "change",
			data: {
				userID: e.userID,
				appearance: e.appearance.data
			}
		}), this.close()
	}
}), Prodigy.Menu.NameChange = function(e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.content = this.game.prodigy.create.element(this), this.onClose = a, this.changeNickName = !1, this.names = [], this.selectNamesList(), i ? this.create() : this.createAdvanced(), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Menu.NameChange, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.NameChange,
	create: function() {
		var e = this.game.prodigy.create.element(this.background, 320, 150),
			t = this.game.prodigy.create.element(e, 0, 0);
		this.game.prodigy.create.panel(t, 0, 0, 16, 10, "shine"), t.add(new Phaser.TileSprite(this.game, 11, 80, 618, 40, "core", "blue-top")), t.add(new Phaser.TileSprite(this.game, 11, 120, 618, 200, "core", "blue-mid")), t.add(new Phaser.TileSprite(this.game, 11, 320, 618, 40, "core", "blue-top2"));
		var i = this.game.prodigy.create.panel(t, 40, -20, 14, 2, "banner");
		Prodigy.RenderMenu.prototype.create.call(this), this.nameText = this.game.prodigy.create.font(this, e.x + i.x, e.y + i.y + 15, "Name Your Wizard", {
			width: i.width,
			align: "center",
			size: 36,
			font: "button"
		}), this.bar = this.game.prodigy.create.slider(this, e.x + 30, e.y + 80 + 20, 240, !0, !0), this.closeBtn = this.game.prodigy.create.textButton(this, 490, e.y + 400 - 25, {
			text: "I'm Done!",
			icon: "yes",
			size: Prodigy.Control.TextButton.MED
		}, this.close.bind(this)), this.closeBtn.setInactive(), this.content = this.game.prodigy.create.element(this, this.bar.x + 70, this.bar.y);
		var a = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (a = function(e) {
			return {
				x: e.worldPosition.x + .5 * e.totalWidth,
				y: e.worldPosition.y + .5 * e.totalHeight
			}
		}), this.btns = [];
		for (var s = 0; 12 > s; s++) {
			var r = this.game.prodigy.create.panel(this.content, s % 2 * 260, 40 * Math.floor(s / 2), 6, 1, "lb");
			r._text = this.game.prodigy.create.font(r, 0, 5, "", {
				width: 240,
				align: "center",
				size: 20
			}), r.setClickable(this.setName.bind(this, r), null, this.onNameOver.bind(this, r), this.onNameOut.bind(this, r)), this.btns.push(r), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
				ID: "autoclick-name-" + s,
				context: this,
				callback: a.bind(this, r)
			})
		}
		this.bar.reset(Math.ceil(this.names.length / 12), 1, 0, this.setPage.bind(this))
	},
	selectNamesList: function() {
		var e = this.game.prodigy.player.appearance.getGender();
		this.names = "male" === e ? Names.BOY_NAMES : Names.GIRL_NAMES
	},
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	setPage: function(e) {
		this.setName(null), Util.isDefined(this.selectedBtn) && this.selectedBtn.changePanel("lb"), this.selectedBtn = null;
		for (var t = 0; 12 > t; t++) {
			var i = this.btns[t];
			12 * e + t >= this.names.length ? i.visible = !1 : (i._text.setText(this.names[12 * e + t]), i.visible = !0)
		}
	},
	setName: function(e) {
		Util.isDefined(e) ? (this.onNameDown(e), this.game.prodigy.player.appearance.setName(this.getFullName(e._text.text)), this.changeNickName && this.setNickName(e._text.text), this.nameText.setText(e._text.text), this.closeBtn.setActive()) : (this.nameText.setText("Name Your Wizard"), this.closeBtn.setInactive())
	},
	getFullName: function(e) {
		return e
	},
	setNickName: function() {},
	createAdvanced: function() {
		var e = this.game.prodigy.create.element(this.background, 320, 150),
			t = this.game.prodigy.create.element(e, 0, 0);
		this.game.prodigy.create.panel(t, 0, 0, 16, 10, "shine"), t.add(new Phaser.TileSprite(this.game, 11, 80, 618, 40, "core", "blue-top")), t.add(new Phaser.TileSprite(this.game, 11, 120, 618, 200, "core", "blue-mid")), t.add(new Phaser.TileSprite(this.game, 11, 320, 618, 40, "core", "blue-top2"));
		var i = this.game.prodigy.create.panel(t, 40, -20, 14, 2, "banner");
		Prodigy.RenderMenu.prototype.create.call(this);
		var a = this.game.prodigy.player.appearance.getFullName().split(" ")[0];
		this.nameText = this.game.prodigy.create.font(this, e.x + i.x, e.y + i.y + 18, "Choose your Title", {
			width: i.width,
			align: "center",
			size: 30
		}), this.closeBtn = this.game.prodigy.create.textButton(this, 490, e.y + 400 - 25, {
			text: "I'm Done!",
			icon: "yes",
			size: Prodigy.Control.TextButton.MED
		}, this.close.bind(this)), this.closeBtn.setInactive(), this.content = this.game.prodigy.create.element(this, e.x + 120, e.y + 80 + 20);
		var s = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (s = function(e) {
			return {
				x: e.worldPosition.x + .5 * e.totalWidth,
				y: e.worldPosition.y + .5 * e.totalHeight
			}
		}), this.btns = [];
		for (var r = 0; 6 > r; r++) {
			var n = this.game.prodigy.create.panel(this.content, 0, 40 * r, 12, 1, "lb");
			n._text = this.game.prodigy.create.font(n, 0, 5, "", {
				width: 480,
				align: "center",
				size: 20
			}), n.setClickable(this.setLongName.bind(this, n), null, this.onNameOver.bind(this, n), this.onNameOut.bind(this, n)), this.btns.push(n), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
				ID: "autoclick-name-" + r,
				context: this,
				callback: s.bind(this, n)
			})
		}
		this.rand = this.game.prodigy.create.button(this, e.x + 30, e.y + 80 + 20, "icons", "dice", this.randomNames.bind(this, a)), this.randomNames(a)
	},
	randomNames: function(e) {
		this.setName(null), Util.isDefined(this.selectedBtn) && this.selectedBtn.changePanel("lb"), this.selectedBtn = null;
		for (var t = [], i = 0, a = 0; 6 > a; a++)
			do {
				var s = Phaser.ArrayUtils.getRandomItem(Names.MIDDLE_NAMES),
					r = Phaser.ArrayUtils.getRandomItem(Names.LAST_NAMES).toLowerCase(),
					n = s + r,
					o = this.btns[a];
				o._text.setText(e + " " + n), t.indexOf(n) < 0 && (t.push(n), ++i)
			} while (i === a)
	},
	setLongName: function(e) {
		this.onNameDown(e), this.game.prodigy.player.appearance.setName(e._text.text), this.nameText.setText(e._text.text), this.closeBtn.setActive()
	},
	onNameDown: function(e) {
		Util.isDefined(this.selectedBtn) && this.selectedBtn.changePanel("lb"), this.selectedBtn = e;
		for (var t, i = 0; i < this.btns.length; i++) t = this.btns[i], t === e && t.changePanel("lb-green")
	},
	onNameOver: function(e) {
		e.changePanel("lb-green")
	},
	onNameOut: function(e) {
		e !== this.selectedBtn && e.changePanel("lb")
	}
}), Prodigy.Menu.AdvancedNameChange = function(e, t, i, a, s) {
	this.reverseGender = s, this.playerFullName = "", this.playerNickName = "", this.playerFirstName = "", this.playerLastName = "", this.curatedFirstName = "", this.nameCorrupted = !1, Prodigy.Menu.NameChange.call(this, e, t, i, a), this.processPlayerName(), this.changeNickName = !0
}, Prodigy.extends(Prodigy.Menu.AdvancedNameChange, Prodigy.Menu.NameChange, {
	constructor: Prodigy.Menu.AdvancedNameChange,
	create: function() {
		Prodigy.Menu.NameChange.prototype.create.call(this), this.game.prodigy.create.button(this, 930, 140, "icons", "close", this.closeMenuWithoutSettingName.bind(this))
	},
	closeMenuWithoutSettingName: function() {
		this.onClose = null, this.game.prodigy.player.appearance.setName(this.playerFullName), this.game.prodigy.player.appearance.setNickname(this.playerNickName), this.close()
	},
	getFullName: function(e) {
		return e + " " + this.playerLastName
	},
	selectNamesList: function() {
		var e = this.game.prodigy.player.appearance.getGender();
		this.names = !Util.isNullOrUndefined(this.reverseGender) && this.reverseGender ? "male" === e ? Names.GIRL_NAMES : Names.BOY_NAMES : "male" === e ? Names.BOY_NAMES : Names.GIRL_NAMES
	},
	setNickName: function(e) {
		Util.isNullOrUndefined(this.playerNickName) || (this.playerNickName.indexOf("Dancemaster") > -1 ? this.game.prodigy.player.appearance.setNickname("Dancemaster " + e) : this.playerNickName.indexOf("Captain") > -1 ? this.game.prodigy.player.appearance.setNickname("Captain " + e) : this.nameCorrupted ? this.game.prodigy.player.appearance.setNickname(null) : this.game.prodigy.player.appearance.setNickname(this.playerNickName.replace(this.curatedFirstName, e)))
	},
	processPlayerName: function() {
		this.playerFullName = this.game.prodigy.player.appearance.getFullName(), this.playerNickName = this.game.prodigy.player.appearance.getNickname();
		var e = this.playerFullName.split(" ");
		this.playerFirstName = e[0], e.length > 1 && (this.playerLastName = e[1]);
		for (var t = this.game.prodigy.player.appearance.getGender(), i = "male" === t ? Names.BOY_NAMES : Names.GIRL_NAMES, a = [], s = 0; s < i.length; s++) this.playerFirstName.indexOf(i[s]) > -1 && a.push(i[s]);
		0 === a.length ? this.nameCorrupted = !0 : (a.sort(function(e, t) {
			return e.length - t.length
		}), this.curatedFirstName = a[a.length - 1])
	}
}), Prodigy.Menu.BoostSelect = function(e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 4, {
		hideMenu: !0,
		hideContent: !1,
		hideClose: !0
	}), this.boosts = i, this.callback = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.BoostSelect, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.BoostSelect,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = this.game.prodigy.create.panel(this, 390, 160, 10, 6);
		e.add(this.game.prodigy.create.sprite(-15, -15, "icons", "member")), this.game.prodigy.create.font(e, 80, 15, "Choose Your Boost!", {
			align: "left",
			size: 30
		});
		for (var t = 0; t < this.boosts.length; t++) {
			var i = this.boosts[t];
			if (i) {
				var a = this.game.prodigy.create.element(e, 60 + 150 * t, 80 + t % 2 * 50),
					s = a.add(this.game.prodigy.create.sprite(0, 0, "icons", "icon-base"));
				s.inputEnabled = !0, s.events.onInputDown.add(this.setCurrent.bind(this, t, a.x, a.y));
				var r = this.game.prodigy.create.sprite(0, 0, Items.getIconAtlas(i.icon), Items.getIconFrame(i.icon));
				r.x += Math.floor((80 - r.width) / 2), r.y += Math.floor((80 - r.height) / 2), a.add(r), this.game.prodigy.create.font(e, a.x - 110, a.y + 90, this.boosts[t].d, {
					width: 300,
					align: "center",
					size: 20
				})
			}
		}
		this.selected = e.add(this.game.prodigy.create.sprite(25, -5, "icons", "yes")), this.selected.visible = !1, this.quit = this.game.prodigy.create.textButton(e, 40, 270, {
			icon: "close",
			text: "none"
		}, this.apply.bind(this, !0)), this.apply = this.game.prodigy.create.textButton(e, 260, 270, {
			icon: "next",
			text: "apply"
		}, this.apply.bind(this)), this.apply.setInactive()
	},
	setCurrent: function(e, t, i) {
		this.selected.visible = !0, this.selected.x = t - 10, this.selected.y = i - 10, this.currentBoost = e, this.apply.setActive()
	},
	apply: function(e) {
		if (e || this.game.prodigy.network.sendAnalytics("Use-Boost", this.currentBoost), !e && !this.game.prodigy.player.isMember) {
			var t = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_USE_BOOST,
				conversionFunnelMetadata: this.boosts[this.currentBoost].d
			};
			return this.game.prodigy.network.sendConversionFunnelEvent(t.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_BOOST, t.conversionFunnelMetadata), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.BOOSTS, null, t), void 0
		}
		e ? this.callback() : this.callback(this.currentBoost), this.close()
	}
}), Prodigy.Menu.ItemInfo = function(e, t, i, a, s) {
	this.item = i, this.player = e.prodigy.player, this.mode = s || "view", this.onClose = a, this.callback = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.ItemInfo, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ItemInfo,
	create: function() {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 260, 140, 19, 11, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 720, this.panel.y - 10, "icons", "close", this.close.bind(this));
		var e = this.game.prodigy.create.item(this, 300, 180, {
				ID: this.item.ID,
				type: this.item.type
			}, "info"),
			t = Items.getItemData(this.item.type, this.item.ID);
		if ("view" === this.mode);
		else if ("buy" === this.mode) this.createBuyModeUI(e, t);
		else if ("equip" === this.mode) {
			var i = "";
			this.item.L && !this.game.prodigy.player.isMember && (i = "[membership] "), "hat" === this.item.type || "weapon" === this.item.type || "outfit" === this.item.type || "boots" === this.item.type || "follow" === this.item.type || "back" === this.item.type ? this.player.equipment.getEquipment(this.item.type) === this.item.ID ? (i = "follow" === this.item.type ? "hide" : "remove", this.game.prodigy.create.textButton(this, 320, 435, {
				text: i,
				size: Prodigy.Control.TextButton.SMALL
			}, this.unequipItem.bind(this))) : (i += "follow" === this.item.type ? "show" : "wear", this.game.prodigy.create.textButton(this, 320, 435, {
				text: i,
				size: Prodigy.Control.TextButton.SMALL
			}, this.equipItem.bind(this))) : t.effect && "potion" !== this.item.type && this.game.prodigy.create.textButton(this, 320, 435, {
				text: "use",
				icon: "up",
				size: Prodigy.Control.TextButton.SMALL
			}, this.use.bind(this))
		} else if ("potion" === this.mode) {
			var i = "";
			this.item.L && !this.game.prodigy.player.isMember && (i = "[membership] "), i += "use", this.game.prodigy.create.textButton(this, 320, 435, {
				text: i,
				size: Prodigy.Control.TextButton.SMALL
			}, this.usePotion.bind(this))
		}
		Prodigy.RenderMenu.prototype.create.call(this)
	},
	createBuyModeUI: function(e, t) {
		var i = 320,
			a = 435,
			s = "Buy",
			r = "[mail-gold] ",
			n = this.item.cost[0];
		("currency" !== n.type || 1 !== n.ID) && (r = "[" + Items.getItemData(n.type, n.ID).icon + "] "), this.game.prodigy.create.font(this, i, 385, r + n.N, {
			align: "center",
			width: 200,
			size: 30,
			iconOffsetY: 6
		}), t.member && !this.game.prodigy.player.isMember && (s = "[membership] " + s), this.game.prodigy.create.textButton(this, i, a, {
			text: s,
			size: Prodigy.Control.TextButton.SMALL
		}, this.buy.bind(this))
	},
	use: function() {
		var e = Items.getItemData(this.item.type, this.item.ID),
			t = !1;
		e.effect.hp ? (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.game.prodigy.player.healTeam(e.effect.hp)) : e.effect.fx && (this.game.prodigy.player.fx(e.effect.fx, !0), t = !0), this.player.backpack.consume(this.item.type, this.item.ID), this.close(t)
	},
	usePotion: function() {
		this.data = Items.getItemData(this.item.type, this.item.ID), this.battle = this.game.state.states.Battle, this.current = this.battle.combatManager.teams[0].current, this.target = this.battle.teams[0].current.source, Util.isDefined(this.item.L) && this.item.L && !this.game.prodigy.player.isMember ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.POTIONS) : Util.isDefined(this.current.potionIcon) ? this.game.prodigy.open.confirmPotionUse.call(this.game.prodigy.open, this, this.current) : this.confirmPotionUse.call(this)
	},
	confirmPotionUse: function() {
		this.onClose = this.callback(!0), Util.isDefined(this.current.potionIcon) && this.current.potionIcon.destroy.call(this.current.potionIcon), Util.isDefined(this.current.potencyIcon) && this.current.potencyIcon.destroy.call(this.current.potencyIcon), this.target.updateModifier.call(this.target, "potion", this.item.ID);
		var e = this.game.prodigy.event.create();
		e.explode(160, 300, 160, 320, 1, !1, !0), e.function(this.addPotionIcon.bind(this, this.data, this.game, this.battle)), e.function(this.battle.combatManager.opponentTurn.bind(this.battle.combatManager)), e.start(), this.player.backpack.consume(this.item.type, this.item.ID), this.close()
	},
	addPotionIcon: function(e, t, i) {
		var a = i.combatManager.teams[0].current;
		a.potionIcon = a.sprites.add(t.prodigy.create.sprite(-20, 0, "icons", "potion-buff-" + e.element)), 2 === e.potency && (a.potencyIcon = a.sprites.add(t.prodigy.create.sprite(30, 10, "icons", "bonus-arrow")))
	},
	buy: function() {
		this.close(!0)
	},
	equipItem: function() {
		if (this.item.L) {
			var e = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_EQUIP_BACKPACK_LOCKED_ITEM,
				conversionFunnelMetadata: this.item.type + "-" + this.item.ID
			};
			this.game.prodigy.network.sendConversionFunnelEvent(e.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_EQUIP_ITEM, e.conversionFunnelMetadata), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM, null, e)
		} else this.player.equip(this.item.ID, this.item.type) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "whoosh")), this.close()
	},
	unequipItem: function() {
		this.player.unEquip(this.item.type) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop")), this.close()
	},
	throwItem: function() {
		("hat" === this.item.type || "outfit" === this.item.type || "weapon" === this.item.type || "boots" === this.item.type || "relics" === this.item.type) && this.player.equipment.getEquipment(this.item.type) === this.item.ID && this.unequipItem(), this.player.backpack.consume(this.item.type, this.item.ID), this.close()
	}
}), Prodigy.Menu.HouseItemInfo = function(e, t, i, a, s) {
	Prodigy.Menu.ItemInfo.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.Menu.HouseItemInfo, Prodigy.Menu.ItemInfo, {
	constructor: Prodigy.Menu.HouseItemInfo,
	createBuyModeUI: function(e, t) {
		Prodigy.Menu.ItemInfo.prototype.createBuyModeUI.call(this, e, t);
		var i = this.game.prodigy.create.textButton(this, 0, 0, {
			text: "Visit",
			size: Prodigy.Control.TextButton.SMALL
		}, this.previewHouse.bind(this, t.tag));
		i.y = 435;
		var a = e.width / 3;
		i.x = Util.getCenteredXY(i.width, 0, e.x + a, 0, 2 * a, 0).x
	},
	previewHouse: function(e) {
		this.game.prodigy.world.getZone("house").gotoPreview(e)
	}
}), Prodigy.Menu.Pets = function(e, t, i, a) {
	this.callback = i, this.mode = a || Prodigy.Menu.Pets.TEAM, Prodigy.Control.Menu.call(this, e, t, 23), this.setup(), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.Menu.Pets.TEAM = 0, Prodigy.Menu.Pets.ALL = 1, Prodigy.Menu.Pets.PVP_TEAM = 2, Prodigy.extends(Prodigy.Menu.Pets, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Pets,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = [{
			icon: "team",
			callback: this.switchTeam.bind(this, Prodigy.Menu.Pets.TEAM),
			title: "MY PET TEAM"
		}, {
			icon: "team-pvp",
			callback: this.switchTeam.bind(this, Prodigy.Menu.Pets.PVP_TEAM),
			title: "MY PET TEAM"
		}, {
			icon: {
				type: "item",
				ID: 62
			},
			callback: this.allPets.bind(this),
			title: "PRODIGY BESTIARY"
		}];
		this.showFrame("pet", "", e, 0), e = [this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this))], this.showBtns([], e), this.setupComplete = !0, this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.STOP_PLAYER)
	},
	close: function(e) {
		Util.isDefined(this.callback) && this.callback(e), Prodigy.Control.Menu.prototype.close.call(this)
	},
	createList: function() {
		var e = this.game.prodigy.create.element(this.content, 660, 170);
		this.game.prodigy.create.panel(e, 0, 0, 10, 8), this.game.prodigy.create.font(e, 10, -25, "Prodigy Pets I Own", {
			size: 20
		}), this.icons = [];
		var t = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (t = function(e) {
			return {
				x: this.icons[e].worldPosition.x + .5 * this.icons[e].width,
				y: this.icons[e].worldPosition.y + .5 * this.icons[e].height
			}
		}.bind(this));
		for (var i = 0; 20 > i; i++) this.icons.push(e.add(this.game.prodigy.create.sprite(30 + i % 5 * 90, 25 + 90 * Math.floor(i / 5), "icons", "icon-base"))), this.icons[i].inputEnabled = !0, this.icons[i].events.onInputDown.add(this.showInfo.bind(this, this.icons[i], null)), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-bestiary-" + i,
			context: this,
			callback: t.bind(this, i)
		});
		this.scrollUp = this.game.prodigy.create.button(e, -20, 135, "icons", "next", this.scrollList.bind(this, -1)), this.scrollUp.sprite.angle = -90, this.scrollDown = this.game.prodigy.create.button(e, 30, 265, "icons", "next", this.scrollList.bind(this, 1)), this.scrollDown.sprite.angle = 90
	},
	createBoxes: function() {
		this.box = this.game.prodigy.create.element(this.content, 120, 170), this.game.prodigy.create.panel(this.box, 0, 0, 10, 8);
		var e = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (e = function(e) {
			return {
				x: this.icons[e].worldPosition.x + .5 * this.icons[e].width,
				y: this.icons[e].worldPosition.y + .5 * this.icons[e].height
			}
		}.bind(this)), this.icons = [];
		for (var t = 0; 20 > t; t++) this.icons.push(this.box.add(this.game.prodigy.create.sprite(30 + t % 5 * 90, 25 + 90 * Math.floor(t / 5), "icons", "icon-base"))), this.icons[t].inputEnabled = !0, this.icons[t].events.onInputDown.add(this.selectIcon.bind(this, this.icons[t], null)), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-teamless-" + t,
			context: this,
			callback: e.bind(this, t)
		});
		this.btns = [];
		for (var t = 0; 7 > t; t++) {
			var i = 7 - t;
			this.btns.unshift(this.game.prodigy.create.stackButton(this.box, 440 - 55 * t, -40, [{
				tag: "empty"
			}, {
				text: i + "",
				y: 8,
				x: -15
			}], this.openBox.bind(this, i - 1)))
		}
		var a = function(e, t) {
				e.inspect = !e.inspect, t.tint = e.inspect ? 4473924 : 16777215, Util.isDefined(e.preview) && (e.preview.destroy(), e.preview = null)
			},
			s = this.box.add(this.game.prodigy.create.sprite(10, -40, "icons", "inspect"));
		s.inputEnabled = !0, s.events.onInputDown.add(a.bind(this, this, s)), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-inspect",
			context: this,
			callback: function() {
				return {
					x: s.worldPosition.x + .5 * s.width,
					y: s.worldPosition.y + .5 * s.height
				}
			}
		})
	},
	createTeam: function() {
		this.panel = this.game.prodigy.create.element(this.content, 660, 170), this.panelBaseActiveSprites = [], this.game.prodigy.create.panel(this.panel, 0, 0, 10, 3), this.game.prodigy.create.font(this.panel, 10, -25, "My Team", {
			size: 20
		}), this.teamIcons = [];
		var e = null,
			t = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (t = function(e) {
			return {
				x: this.ticons[e].worldPosition.x + .5 * this.ticons[e].width,
				y: this.ticons[e].worldPosition.y + .5 * this.ticons[e].height
			}
		}.bind(this));
		for (var i = 0; 5 > i; i++) {
			e = this.game.prodigy.create.sprite(30 + 90 * i, i % 2 * 20 + 25, "icons", "icon-base-active"), this.panel.add(e), this.panelBaseActiveSprites.push(e);
			var a = this.game.prodigy.create.sprite(0, 0, "icons", "icon-base"),
				s = this.game.prodigy.create.element(this.panel, 30 + 90 * i, i % 2 * 20 + 25);
			s.add(a), this.teamIcons.push(a), this.teamIcons[i].inputEnabled = !0, this.teamIcons[i].events.onInputDown.add(this.selectIcon.bind(this, this.teamIcons[i], i)), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
				ID: "autoclick-team-" + i,
				context: this,
				callback: t.bind(this, i)
			})
		}
	},
	switchTeam: function(e) {
		Util.isDefined(e) || (e = Prodigy.Menu.Pets.TEAM), this.mode = e, GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this), Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0), this.inspect = !1, this.createBoxes(), this.createTeam(), this.openBox(0), this.refreshTeam();
		var t = this.game.prodigy.player;
		if (t.tutorial.getMenuValue(this.menuID, 0) < 1 && t.kennel.getPets().length > 0) {
			t.tutorial.setMenuValue(this.menuID, 0, 1);
			var i = this.game.prodigy.dialogue.create();
			i.setText(19), i.setText({
				callback: Util.highlightAll.bind(Util, [this.box], !0)
			}), i.setText(20), i.setText({
				callback: Util.highlightAll.bind(Util, [this.box], !1)
			}), i.setText({
				callback: Util.highlightAll.bind(Util, [this.panel], !0)
			}), i.setText(21), i.setText({
				callback: Util.highlightAll.bind(Util, [this.panel], !1)
			}), i.start("noot")
		}
	},
	allPets: function() {
		this.mode = Prodigy.Menu.Pets.ALL, GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this), Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0), this.fullIndex = 0, this.createList(), this.scrollList(0)
	},
	onFirstIconClick: function(e) {
		if (Util.isDefined(e.srcData)) {
			var t = !0;
			this.mode !== Prodigy.Menu.Pets.PVP_TEAM ? this.tween = this.game.add.tween(e).to({
				y: e.y - 10
			}, 500, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0) : Util.isDefined(e.tagSprite) && this.game.prodigy.player.kennel.isPVPTeam(e.srcData) ? this.tween = this.game.add.tween(e.tagSprite).to({
				y: e.tagSprite.y - 10
			}, 500, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0) : t = !1, t && (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), this.current = e, e.oldY = e.y)
		}
	},
	onEmptySlotClick: function(e, t) {
		return this.mode === Prodigy.Menu.Pets.PVP_TEAM ? (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop"), void 0) : (this.current.srcData instanceof Player ? Util.isDefined(t) ? (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.current.srcData.data.team = t, this.current.srcData.updated = !0) : this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop") : (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.game.prodigy.player.kennel.setTeam(this.current.srcData, t)), void 0)
	},
	onOccupiedSlotClick: function(e, t) {
		this.mode === Prodigy.Menu.Pets.PVP_TEAM ? e.srcData instanceof Player || Util.isDefined(e.srcData.isPVPTeam) && e.srcData.isPVPTeam ? this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop") : (Util.isDefined(e.srcData.team) || this.game.prodigy.player.kennel.setTeam(this.current.srcData, e.srcData), this.game.prodigy.player.kennel.setPVPTeam(this.current.srcData, !1), this.game.prodigy.player.kennel.setPVPTeam(e.srcData, !0), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart")) : this.current.srcData instanceof Player ? Util.isDefined(t) ? (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.game.prodigy.player.kennel.setTeam(e.srcData, this.current.srcData.data.team), this.current.srcData.data.team = t, this.current.srcData.updated = !0) : this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop") : e.srcData instanceof Player ? Util.isDefined(this.current.srcData.team) ? (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), e.srcData.data.team = this.current.srcData.team, e.srcData.updated = !0, this.game.prodigy.player.kennel.setTeam(this.current.srcData, t)) : this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop") : (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.game.prodigy.player.kennel.setTeam(this.current.srcData, e.srcData))
	},
	selectIcon: function(e, t) {
		if (this.inspect) {
			if (Util.isDefined(e.srcData)) {
				if (Util.isDefined(this.preview) && this.preview.destroy(), e.srcData instanceof Player) return;
				this.preview = new Prodigy.Container.Hearts(this.game, this.content, 660, 350, new Monster(e.srcData, this.game)), e.srcData.ID < 125 && this.game.prodigy.create.textButton(this.preview, 150, 130, {
					size: Prodigy.Control.TextButton.MED,
					text: "Set Free",
					icon: "close"
				}, this.openLeavePetConfirmation.bind(this, e.srcData))
			}
		} else Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null, this.current.y = this.current.oldY, Util.isDefined(this.current.tagSprite) && this.resetTagSpritePosition(this.current)), Util.isDefined(this.current) ? (e !== this.current ? Util.isDefined(e.srcData) ? this.onOccupiedSlotClick(e, t) : this.onEmptySlotClick(e, t) : this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop"), this.current = null, this.openBox(this.currentBox), this.refreshTeam()) : this.onFirstIconClick(e)
	},
	scrollList: function(e) {
		var t = Math.ceil((Items.getItemCount("pet") - this.icons.length) / 5);
		this.fullIndex = Phaser.Math.clamp(this.fullIndex + e, 0, t), this.fullIndex <= 0 ? this.scrollUp.setInactive() : this.scrollUp.setActive(), this.fullIndex >= t ? this.scrollDown.setInactive() : this.scrollDown.setActive();
		for (var i = Items.getRangeByAmount("pet", 5 * this.fullIndex, 20), a = 0; a < this.icons.length; a++) {
			var s = i[a],
				r = this.icons[a];
			r.alpha = 1, a >= i.length || !Util.isDefined(s) || !this.game.prodigy.player.kennel.hasPet(s.ID) ? (r.loadNewTexture("icons", "mystery"), a >= i.length && (r.alpha = 0), r.srcData = null) : (r.loadNewTexture(Items.getIconAtlas(s), null, null, !0), r.srcData = s)
		}
	},
	openBox: function(e) {
		Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null), Util.isDefined(this.current) && (this.current.y = this.current.oldY, this.current = null);
		for (var t = 0; t < this.btns.length; t++) e === t ? this.btns[t].select() : this.btns[t].deselect();
		this.currentBox = e;
		for (var i = this.game.prodigy.player.kennel.getPets(this.mode !== Prodigy.Menu.Pets.ALL), a = 20 * e, t = 0; t < this.icons.length; t++) {
			var s = this.icons[t];
			if (t + a >= i.length) s.alpha = 0, s.loadNewTexture("icons", "icon-base"), s.srcData = null;
			else {
				var r = i[t + a];
				s.alpha = 1, s.loadNewTexture(Items.getIconAtlas({
					type: "pet",
					ID: r.ID
				}), null, null, !0), s.srcData = r
			}
		}
	},
	showInfo: function(e) {
		if (0 != e.alpha) {
			Util.isDefined(this.preview) && this.preview.destroy();
			var t = Util.isDefined(e.srcData) ? Items.getItemData("pet", e.srcData.ID) : null;
			if (this.preview = this.game.prodigy.create.element(this.content, 120, 170), this.game.prodigy.create.panel(this.preview, 0, 0, 10, 2), this.game.prodigy.create.panel(this.preview, 0, 150, 10, 5), this.game.prodigy.create.font(this.preview, 100, -25, Util.isDefined(t) ? t.name : "???", {
					size: 20
				}), this.game.prodigy.create.font(this.preview, 10, 125, "Description", {
					size: 20
				}), this.game.prodigy.create.font(this.preview, 30, 180, Util.isDefined(t) ? t.flavorText : "- you do not have this pet -", {
					size: 20,
					width: 440
				}), Util.isDefined(t) ? this.preview.add(this.game.prodigy.icon.createFromData({
					type: "pet",
					ID: e.srcData.ID
				}, 0, -25)) : this.preview.add(this.game.prodigy.create.sprite(0, -25, "icons", "mystery")), Util.isDefined(t)) {
				for (var i = t.element.split(" "), a = 0; a < i.length; ++a) i[a] = Util.capitalize(i[a]);
				this.game.prodigy.create.font(this.preview, 90, 15, "TYPE: " + i.join(" "), {
					size: 20
				}), this.game.prodigy.create.font(this.preview, 90, 60, "LIFE: " + t.life, {
					size: 20
				}), this.game.prodigy.create.font(this.preview, 310, 15, "POWER: " + t.power, {
					size: 20
				}), this.game.prodigy.create.font(this.preview, 310, 60, "GROWTH: " + t.growth, {
					size: 20
				})
			}
		}
	},
	refreshTeam: function() {
		this.game.prodigy.player.kennel.reconcilePVPTeam();
		for (var e = this.game.prodigy.player.kennel.getTeam(), t = 0; t < this.teamIcons.length; t++) {
			var i = e[t],
				a = this.teamIcons[t];
			a.srcData = null, Util.isDefined(i) ? i instanceof Player ? (a.loadNewTexture("icons", "player"), a.srcData = i) : i instanceof Monster && (a.loadNewTexture(Items.getIconAtlas({
				type: "pet",
				ID: i.getID()
			}), null, null, !0), a.srcData = i.data) : a.loadNewTexture("icons", "icon-base")
		}
		this.updatePVPTeamTags()
	},
	updatePVPTeamTags: function() {
		for (var e = null, t = !1, i = 0; i < this.teamIcons.length; i++) e = this.teamIcons[i], t = Util.isDefined(e.srcData) && (e.srcData instanceof Player || Util.isDefined(e.srcData.isPVPTeam) && e.srcData.isPVPTeam), t ? (this.panelBaseActiveSprites[i].frameName = "icon-base-pvp", this.addTeamTagToIcon(e)) : (this.panelBaseActiveSprites[i].frameName = "icon-base-active", this.removeTeamTagFromIcon(e))
	},
	addTeamTagToIcon: function(e) {
		Util.isDefined(e.tagSprite) || (e.tagSprite = this.game.prodigy.create.sprite(0, 0, "icons", "icon-base-pvp-indicator"), e.parent.addChild(e.tagSprite), this.resetTagSpritePosition(e))
	},
	removeTeamTagFromIcon: function(e) {
		Util.isDefined(e.tagSprite) && (e.tagSprite.destroy(), delete e.tagSprite)
	},
	resetTagSpritePosition: function(e) {
		Util.isDefined(e.tagSprite) && (e.tagSprite.x = (e.width - e.tagSprite.width) / 2, e.tagSprite.y = e.height - .2 * e.tagSprite.height)
	},
	openLeavePetConfirmation: function(e) {
		this.game.prodigy.open.confirm("Are you sure you want to leave your pet? You will lose them forever.", this.releasePet.bind(this, e))
	},
	releasePet: function(e) {
		this.game.prodigy.player.kennel.remove(e), Util.isDefined(this.preview) && this.preview.destroy(), this.openBox(this.currentBox), this.refreshTeam()
	},
	setPVPTeam: function(e, t) {
		this.game.prodigy.player.kennel.setPVPTeam(e, t)
	}
}), Prodigy.Menu.Survey = function(e, t, i) {
	Prodigy.Control.Element.call(this, e, t, 0, 0), this.surveyData = i, this.answers = [], this.create()
}, Prodigy.extends(Prodigy.Menu.Survey, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.Survey,
	create: function() {
		switch (this.rearOverlay = this.add(this.game.prodigy.create.sprite(-5, -5, "core", "overlay-small")), this.rearOverlay.width = 1290, this.rearOverlay.height = 730, this.rearOverlay.alpha = .5, this.rearOverlay.inputEnabled = !0, this.game.add.tween(this.rearOverlay).from({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None, !0), this.container = this.game.prodigy.create.element(this, 40, 40), this.container.setRenderState(!0), this.game.prodigy.create.panel(this.container, 0, 0, 30, 16, "shine"), this.doneButton = 5 != this.surveyData.type ? this.game.prodigy.create.textButton(this.container, .5 * this.container.width - 150, this.container.height - 70, {
				icon: "yes",
				text: "Done!",
				size: Prodigy.Control.TextButton.MED
			}, this.onClose.bind(this)) : this.game.prodigy.create.textButton(this.container, .5 * this.container.width - 150, this.container.height - 70, {
				icon: "yes",
				text: "Next",
				size: Prodigy.Control.TextButton.MED
			}, this.setupImagePool.bind(this)), this.surveyData.type) {
			case 1:
				this.setupCheckBox();
				break;
			case 2:
				this.setupRadioBox();
				break;
			case 3:
				this.setupImage();
				break;
			case 4:
				this.setupFeedback();
				break;
			case 5:
				this.setupImagePool();
				break;
			default:
				this.setupCheckBox()
		}
		this.game.add.tween(this.container).from({
			y: 720
		}, 600, Phaser.Easing.Back.Out, !0), this.checkDoneButton()
	},
	onAnswerClicked: function(e) {
		if (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), 2 === this.surveyData.type) {
			for (var t = 0; t < this.answers.length; t++) this.answers[t].setSelected(!1);
			e.setSelected(!0)
		}
		this.checkDoneButton()
	},
	checkDoneButton: function() {
		for (var e = 0; e < this.answers.length; e++)
			if (this.answers[e].selected) return this.doneButton.setEnabled(!0), void 0;
		this.doneButton.setEnabled(!1)
	},
	setupCheckBox: function() {
		this.game.prodigy.create.font(this.container, 30, 30, this.surveyData.question, {
			width: this.container.width - 60,
			align: "center",
			size: 40
		}), Prodigy.Lodash.shuffle(this.surveyData.answers);
		for (var e = 0; e < this.surveyData.answers.length; e++) {
			var t = e > 0 ? this.answers[e - 1].y + this.answers[e - 1].height + 15 : 150;
			this.answers[e] = new Prodigy.Control.CheckBoxButton(this.game, this.container, 155, t, 900, this.surveyData.answers[e], this.onAnswerClicked.bind(this))
		}
	},
	setupRadioBox: function() {
		this.game.prodigy.create.font(this.container, 30, 30, this.surveyData.question, {
			width: this.container.width - 60,
			align: "center",
			size: 40
		}), Prodigy.Lodash.shuffle(this.surveyData.answers);
		for (var e = 0; e < this.surveyData.answers.length; e++) {
			var t = e > 0 ? this.answers[e - 1].y + this.answers[e - 1].height + 15 : 150;
			this.answers[e] = new Prodigy.Control.CheckBoxButton(this.game, this.container, 155, t, 900, this.surveyData.answers[e], this.onAnswerClicked.bind(this), !0)
		}
	},
	setupImage: function() {},
	setupImagePool: function() {
		if (Util.isDefined(this.header) || (this.header = this.game.prodigy.create.font(this.container, 30, 30, this.surveyData.question, {
				width: this.container.width - 60,
				align: "center",
				size: 40
			})), this.currentPage = Util.isDefined(this.currentPage) ? this.currentPage + 1 : 0, this.currentPage === this.surveyData.poolSize - 1) this.doneButton.setText("Done!");
		else if (this.currentPage >= this.surveyData.poolSize) return this.answers.push({
			selected: this.answer1.selected,
			answerData: this.answer1.answerData
		}), this.answers.push({
			selected: this.answer2.selected,
			answerData: this.answer2.answerData
		}), this.onClose.call(this), void 0;
		this.doneButton.setEnabled(!1);
		for (var e = [], t = 0; t < this.surveyData.poolSize; t++) e.push(t + 1);
		var i = Math.floor(Math.random() * e.length),
			a = Math.floor(Math.random() * e.length);
		a === i && (a = 0 === i ? Math.floor(Math.random() * (e.length - 1)) + 1 : i - 1);
		var s = this.surveyData.poolTags[this.currentPage] + "/" + e[i],
			r = this.surveyData.poolTags[this.currentPage] + "/" + e[a];
		if (!Util.isDefined(this.wildImageIds)) {
			this.wildImageIds = [];
			for (var t = 0; t < this.surveyData.wildSize; t++) this.wildImageIds.push(t + 1);
			Prodigy.Lodash.shuffle(this.wildImageIds)
		}
		this.wildImageIds.length > 0 && (e[0] === this.surveyData.poolSize && Math.random() > .5 ? (s = "wild/" + this.wildImageIds[0], this.wildImageIds.splice(0, 1)) : e[1] === this.surveyData.poolSize && Math.random() > .5 && (r = "wild/" + this.wildImageIds[0], this.wildImageIds.splice(0, 1))), Util.isDefined(this.image1) && this.image1.destroy(), Util.isDefined(this.image2) && this.image2.destroy(), this.image1 = this.container.add(this.game.prodigy.create.sprite(350, 200, "popup-toy-survey", s)), this.image2 = this.container.add(this.game.prodigy.create.sprite(650, 200, "popup-toy-survey", r)), Util.isDefined(this.answer1) && (this.answers.push({
			selected: this.answer1.selected,
			answerData: this.answer1.answerData
		}), this.answer1.destroy()), Util.isDefined(this.answer2) && (this.answers.push({
			selected: this.answer2.selected,
			answerData: this.answer2.answerData
		}), this.answer2.destroy()), this.answer1 = new Prodigy.Control.CheckBoxButton(this.game, this.container, 420, 400, 40, {
			id: this.game.prodigy.player.appearance.getGender() + "-" + s + "-" + r
		}, this.onImageSelected.bind(this), !0), this.answer2 = new Prodigy.Control.CheckBoxButton(this.game, this.container, 720, 400, 40, {
			id: this.game.prodigy.player.appearance.getGender() + "-" + r + "-" + s
		}, this.onImageSelected.bind(this), !0)
	},
	setupFeedback: function() {},
	onImageSelected: function(e) {
		this.answer1.setSelected(!1), this.answer2.setSelected(!1), e.setSelected(!0), this.doneButton.setEnabled(!0)
	},
	onClose: function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop");
		var e = this.game.add.tween(this.container).to({
			y: 720
		}, 600, Phaser.Easing.Back.In, !0);
		e.onComplete.add(function() {
			for (var e = 0; e < this.answers.length; e++)
				if (this.answers[e].selected) {
					Util.log("SurveyID:" + this.surveyData.id + "  -- Answer selected: " + this.answers[e].answerData.id), this.game.prodigy.network.sendAnalytics("Survey-" + this.surveyData.id, "" + this.answers[e].answerData.id, "Surveys");
					try {
						this.game.prodigy.network.sendEvent("survey-results", {
							survey: this.surveyData.id,
							answer: Util.strip(this.answers[e].answerData.id)
						})
					} catch (t) {}
				} this.game.prodigy.open.gotItem([{
				type: "item",
				ID: 25,
				N: 1
			}], null, null, "survey"), this.game.prodigy.player.setSurvey(this.surveyData.id), this.game.prodigy.surveyController.updateData(), this.destroy()
		}, this)
	}
}), Prodigy.Menu.BountyBoard = function(e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.BountyBoard, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.BountyBoard,
	create: function() {
		this.addTransparent(), this.createBaseSetup(27, 16, "shine", null, null, !0);
		var e = this.game.prodigy.create.element(this, -5, 20);
		e.add(this.game.prodigy.create.sprite(145, 60, "core", "board-corner"));
		for (var t = 0; 21 > t; t++) e.add(this.game.prodigy.create.sprite(225 + 40 * t, 60, "core", "board-top")), e.add(this.game.prodigy.create.sprite(225 + 40 * t, 100, "core", "board-panel-mid"));
		e.add(this.game.prodigy.create.sprite(1065, 60, "core", "board-corner2")), this.content = this.game.prodigy.create.element(this, e.x, e.y), this.game.prodigy.create.panel(e, 145, 140, 25, 12, "board-panel"), Prodigy.RenderMenu.prototype.create.call(this)
	},
	process: function() {
		Prodigy.RenderMenu.prototype.process.call(this), this.content.removeAll(!0), this.content.add(this.game.prodigy.create.sprite(128, 107, "core", "lantern")), this.content.add(this.game.prodigy.create.sprite(1104, 107, "core", "lantern")), this.cont = [1, 2, 3];
		for (var e = 0; e < this.game.prodigy.player.state.get("world-bounties").length; e++) this.cont[e] = new Prodigy.Container.BountyContainer(this.game, this, 205 + 300 * e, 150, this.game.prodigy.bounty.getBounty(e), e)
	}
}), Prodigy.MailModel = function() {
	this.id = -1, this.isOpened = !1, this.subject = "", this.image = "", this.vImage = 1, this.message = "", this.attachments = [], this.gameMethod = null, this.splitTest = "";
	var e = null;
	Object.defineProperty(this, "data", {
		get: function() {
			return e
		},
		set: function(t) {
			Util.isNullOrUndefined(t) || (this.id = t.id, this.isOpened = t.isOpened, this.subject = t.subject, this.image = t.image, this.vImage = t.vImage, this.message = t.message, this.attachments = t.attachments, this.gameMethod = t.gameMethod, this.splitTest = t.splitTest), e = t
		}
	})
}, Prodigy.MailModel.prototype = {
	constructor: Prodigy.MailModel
}, Prodigy.Menu.OpenMail = function(e, t, i, a, s) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = s, this.create(i, a)
}, Prodigy.extends(Prodigy.Menu.OpenMail, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.OpenMail,
	create: function(e, t) {
		this.addTransparent();
		var i = 20,
			a = 8,
			s = 1,
			r = 32 - a,
			n = 2,
			o = r - 2 * n,
			h = 2,
			l = 1,
			d = Math.floor(40 * r / 50) - 2 * l,
			c = 3,
			p = 5,
			g = 18 - s,
			u = 11,
			y = 40 * r - u,
			m = 20;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * r), i);
		var f = this.game.prodigy.create.element(this.form, 0, 0);
		this.game.prodigy.create.panel(f, 0, 0, r, g, "white"), this.game.prodigy.create.button(this.form, y - 18, -10, "icons", "close", this.close.bind(this));
		var b = this.game.prodigy.create.panel(f, 40 * n, u, o, h, "shine2");
		this.game.prodigy.create.font(b, m, m, e.subject, {
			size: 30,
			width: 40 * o - 2 * m,
			align: "center",
			lineHeight: 38
		});
		var v = this.game.prodigy.create.panel(f, 50 * l + p, b.y + 40 * h + u, 17, c, "panel-light");
		this.game.prodigy.create.font(v, m, m, e.message, {
			size: 20,
			width: 50 * d - p - 2 * m,
			align: "left",
			lineHeight: 38
		});
		var P = e.image || "letter-mail-open-image";
		0 !== P.indexOf("letter-") && (P = "letter-" + P), this.mailDataImage = this.game.prodigy.create.sprite(.5 * y, v.y + 50 * c + u, P, null, !0, this.onLetterImageLoaded.bind(this, u)), this.mailDataImage.anchor.setTo(.5, 0), f.add(this.mailDataImage);
		var w = Util.isDefined(e.attachments) ? e.attachments.length : 0,
			x = 22,
			D = 160,
			C = (2 * x + w * D - y) / -(w + 1);
		this.cards = this.game.prodigy.create.element(f, x + Math.floor(.5 * u), this.mailDataImage.y + 200 + u), this.itemPanels = [];
		for (var k = 0; w > k; k++) this.itemPanels.push(this.game.prodigy.create.item(this.cards, Math.floor((k + 1) * C + k * D), 0, e.attachments[k], "card"));
		Prodigy.RenderMenu.prototype.create.call(this), !t && w > 0 && this.game.prodigy.open.gotItem(e.attachments, null, null, "open-mail")
	},
	onLetterImageLoaded: function(e) {
		Util.isDefined(this.mailDataImage) && (this.mailDataImage.anchor.setTo(.5, 0), Util.isDefined(this.cards) && (this.cards.y = this.mailDataImage.y + this.mailDataImage.height + e))
	},
	close: function() {
		Util.isDefined(this.onClose) && this.onClose(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.MicrotransactionMenu = function(e, t, i) {
	e.prodigy.network.sendAnalytics("Conjure-Cube-Menu-Clicks", "HUD-Button-Clicked"), Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), 1 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb && (this.game.prodigy.player.updateFirstBoxBreadcrumb(), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.game.prodigy.microtransaction.totals])), 1 === this.game.prodigy.player.getMicrotransactionDetails().firstOpenBreadcrumb && (this.game.prodigy.player.updateFirstOpenBreadcrumb(), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.game.prodigy.microtransaction.totals])), this.onClose = i, this.create()
}, Prodigy.extends(Prodigy.Menu.MicrotransactionMenu, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MicrotransactionMenu,
	create: function() {
		Prodigy.RenderMenu.prototype.create.call(this), this.game.prodigy.user.evtProc = !0, this.addTransparent(.25);
		var e = 100,
			t = 0,
			i = 19.5 - t,
			a = 22,
			s = 40 * i - a,
			r = 0;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * i), e), this.panel = this.game.prodigy.create.element(this.form, 0, 0), this.panel.add(this.game.prodigy.create.sprite(0, 0, "microtransactions", "base-yellow")), this.game.prodigy.create.button(this.form, s - 15, -20, "microtransactions", "x-btn", this.close.bind(this)), this.game.prodigy.create.button(this.form, 50, 50, null, null, this.setMode.bind(this, 0), null, null, !1, 340, 80), this.game.prodigy.create.button(this.form, 390, 50, null, null, this.setMode.bind(this, 1), null, null, !1, 340, 80), this.content = this.game.prodigy.create.element(this.panel, 0, 0), this.setMode(r), this.game.prodigy.microtransaction.displayDetails || (this.openDetails(0, !0), this.game.prodigy.microtransaction.displayDetails = !0), this.game.broadcaster.addAppListener(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, this.setMode.bind(this, this.currentMode), this, "ProdigyMicrotransactionMenu")
	},
	clearContents: function() {
		Util.isDefined(this.game) && (Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this.panel, 0, 0))
	},
	setMode: function(e) {
		switch (Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), e) {
			case 1:
				this.buyCubes();
				break;
			default:
				this.myCubes()
		}
		this.currentMode = e
	},
	openDetails: function(e, t) {
		Util.isDefined(t) || this.game.prodigy.network.sendAnalytics("Conjure-Cube-Menu-Clicks", "What-Are-Cubes-Button-Clicked"), this.game.prodigy.open.microtransactionDetails(this.setMode.bind(this), e)
	},
	myCubes: function() {
		var e = this.game.prodigy.microtransaction.totals.waitingToUnlock || 0,
			t = this.game.prodigy.microtransaction.currentCube || 0,
			i = this.game.prodigy.microtransaction.totals.readyToOpen || 0,
			a = this.game.prodigy.create.element(this.content, 0, 0);
		0 === e && 0 === i ? (a.add(this.game.prodigy.create.sprite(390, 50, "microtransactions", "top-purple-2")), a.add(this.game.prodigy.create.sprite(50, 50, "microtransactions", "top-blue-1-w-text")), a.add(this.game.prodigy.create.sprite(310, 200, "microtransactions", "icon-bg")), a.add(this.game.prodigy.create.sprite(330, 240, "microtransactions", "conjurecube")), a.add(this.game.prodigy.create.button(a, 90, 380, "microtransactions", "orange-button-1-w-text", this.openDetails.bind(this))), a.add(this.game.prodigy.create.button(a, 450, 380, "microtransactions", "orange-button-2-w-text", this.setMode.bind(this, 1)))) : (a.add(this.game.prodigy.create.sprite(390, 50, "microtransactions", "top-purple-2")), a.add(this.game.prodigy.create.sprite(50, 50, "microtransactions", "top-blue-1-wo-text")), a.add(this.game.prodigy.create.sprite(110, 160, "microtransactions", "blue-sections-1")), this.ownedPanel(e), this.progressPanel(t), this.openPanel(i), this.game.prodigy.create.button(this.content, 265, 410, "microtransactions", "orange-button-1-w-text", this.openDetails.bind(this)))
	},
	ownedPanel: function(e) {
		var t = this.game.prodigy.create.element(this.content, 100, 155);
		if (e > 1) {
			var i = this.game.prodigy.create.sprite(22, 57, "microtransactions", "icon-bg-plain"),
				a = this.game.prodigy.create.sprite(15, 15, "microtransactions", "conjurecube"),
				s = this.game.prodigy.create.sprite(125, 110, "microtransactions", "orange-circle-left");
			i.addChild(a), i.addChild(s), e > 100 && (e = 100);
			var r = this.game.prodigy.create.font(s, -6, 7, (e - 1).toString(), {
				font: "microtransactions",
				width: 46,
				align: "center",
				lineHeight: 46
			});
			s.addChild(r), t.add(i)
		} else this.game.prodigy.create.button(t, 35, 100, "microtransactions", "get-more-cubes", this.setMode.bind(this, 1))
	},
	progressPanel: function(e) {
		var t = this.game.prodigy.create.element(this.content, 290, 155);
		if (e) {
			var i = this.game.prodigy.create.sprite(22, 57, "microtransactions", "icon-bg-plain"),
				a = this.game.prodigy.create.sprite(15, 15, "microtransactions", "conjurecube");
			i.addChild(a), t.add(i);
			var s = this.game.add.bitmapText(22, 190, "font-user-name", e.progress + "/" + e.totalToOpen + " Questions Answered", 16);
			t.add(s);
			var r = this.game.prodigy.create.element(t, 37, 212);
			r.add(this.game.prodigy.create.sprite(0, 0, "microtransactions", "fillbar-purple")), this.barFill = new Phaser.TileSprite(this.game, 0, 0, 0, 14, "microtransactions", "fillbar-yellow"), this.barFill.width = Math.floor(e.progress / e.totalToOpen * 116), r.add(this.barFill), t.addChild(r);
			var n = this.game.prodigy.create.indicator(75, 75);
			n.addTween(), n.visible = !1, t.add(n), 2 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb && (n.visible = !0)
		} else this.game.prodigy.create.button(t, 35, 100, "microtransactions", "get-more-cubes", this.setMode.bind(this, 1))
	},
	openPanel: function(e) {
		var t = this.game.prodigy.create.element(this.content, 475, 155);
		if (e > 0) {
			var i = this.game.prodigy.create.button(t, 18, 48, "microtransactions", "icon-bg-glow", this.openConjureCube.bind(this)),
				a = this.game.prodigy.create.sprite(25, 25, "microtransactions", "conjurecube"),
				s = this.game.prodigy.create.sprite(135, 120, "microtransactions", "blue-circle-right");
			i.add(a), i.add(s), e > 99 && (e = 99);
			var r = this.game.prodigy.create.font(s, -6.5, 7, e.toString(), {
				font: "microtransactions",
				width: 46,
				align: "center",
				lineHeight: 46
			});
			s.addChild(r), t.add(i);
			var n = this.game.prodigy.create.indicator(80, 75);
			n.addTween(), n.visible = !1, t.add(n), 2 === this.game.prodigy.player.getMicrotransactionDetails().firstOpenBreadcrumb && (n.visible = !0)
		} else t.add(this.game.prodigy.create.sprite(35, 100, "microtransactions", "no-cubes-ready"))
	},
	buyCubes: function() {
		var e = this.game.prodigy.create.element(this.content, 0, 0);
		e.add(this.game.prodigy.create.sprite(50, 50, "microtransactions", "top-purple-1")), e.add(this.game.prodigy.create.sprite(50, 50, "microtransactions", "top-blue-1")), e.add(this.game.prodigy.create.sprite(425, 75, "microtransactions", "purchase-tab-text")), this.game.prodigy.player.inTestGroupLegacy(0, !1, !1, !1, !0, 1e4) ? e.add(this.game.prodigy.create.sprite(100, 140, "microtransactions", "purchase-text-10")) : this.game.prodigy.player.inTestGroupLegacy(1, !1, !1, !1, !0, 1e4) && e.add(this.game.prodigy.create.sprite(100, 140, "microtransactions", "purchase-text-5")), e.add(this.game.prodigy.create.sprite(150, 185, "microtransactions", "conjcube-one")), e.add(this.game.prodigy.create.sprite(275, 200, "microtransactions", "purchase-cubes-1")), e.add(this.game.prodigy.create.sprite(135, 270, "microtransactions", "conjcube-five")), e.add(this.game.prodigy.create.sprite(275, 295, "microtransactions", "purchase-cubes-5")), e.add(this.game.prodigy.create.sprite(120, 330, "microtransactions", "conjcube-twenty")), e.add(this.game.prodigy.create.sprite(275, 390, "microtransactions", "purchase-cubes-20")), e.add(this.game.prodigy.create.sprite(620, 400, "microtransactions", "red-flag-deal")), e.add(this.game.prodigy.create.sprite(620, 175, "microtransactions", "orange-button-prices-text")), e.add(this.game.prodigy.create.button(e, 620, 175, null, null, this.purchaseScreen.bind(this, 1), null, null, !0, 125, 80)), e.add(this.game.prodigy.create.button(e, 620, 273, null, null, this.purchaseScreen.bind(this, 2), null, null, !0, 125, 80)), e.add(this.game.prodigy.create.button(e, 620, 370, null, null, this.purchaseScreen.bind(this, 3), null, null, !0, 125, 80)), e.add(this.game.prodigy.create.sprite(480, 485, "microtransactions", "usd-disclaimer")), e.add(this.game.prodigy.create.button(this.content, 360, 450, "microtransactions", "questionmark-big", this.openDetails.bind(this, 1)))
	},
	purchaseScreen: function(e) {
		if ("1" === Util.getUrlVariable("iosApp")) return this.game.prodigy.open.alert("To purchase Conjure Cubes, please use the browser version of Prodigy"), void 0;
		this.game.prodigy.network.sendAnalytics("Conjure-Cube Menu-Clicks", 1 === e ? "1-Cube Purchase-Clicked" : 2 === e ? "5-Cube Purchase-Clicked" : "20-Cube Purchase-Clicked"), this.purchaseBlocker = this.form.add(this.game.prodigy.create.sprite(-280, -110, "core", "overlay-light")), this.purchaseBlocker.width = 1350, this.purchaseBlocker.height = 740, this.purchaseBlocker.alpha = 1, this.purchaseBlocker.tint = 16777215;
		var t = Items.getItemObject("bundle", e);
		if (Util.isDefined(t)) {
			this.game.prodigy.network.stopInactiveTimer();
			var i = StripeUtilities.StripeCheckoutWrapper(this.game.prodigy.player.userID, Util.getEnvironment(), {
				onSuccess: this.purchaseConjureCube.bind(this, t),
				onFail: this.purchaseConjureCubeFail.bind(this),
				onUserCancel: this.purchaseConjureCube.bind(this, null)
			});
			i.purchase(t.ID, t.type, t.data.name, t.data.price)
		} else this.purchaseBlocker.destroy()
	},
	purchaseConjureCube: function(e) {
		if (this.game.prodigy.network.startInactiveTimer(), this.purchaseBlocker.destroy(), Util.isDefined(e)) {
			var t = e.data.items[0].N;
			this.game.prodigy.player.inTestGroupLegacy(1, !1, !1, !1, !0, 1e4) ? this.game.prodigy.network.sendAnalytics("Conjure-Cube-Purchase-Completed", 1 === t ? "1-Cube-Purchase-Completed-5-Questions" : 5 === t ? "5-Cube-Purchase-Completed-5-Questions" : "20-Cube-Purchase-Completed-5-Questions") : this.game.prodigy.player.inTestGroupLegacy(2, !1, !1, !1, !0, 1e4) ? this.game.prodigy.network.sendAnalytics("Conjure-Cube-Purchase-Completed", 1 === t ? "1-Cube-Purchase-Completed-0-Questions" : 5 === t ? "5-Cube-Purchase-Completed-0-Questions" : "20-Cube-Purchase-Completed-0-Questions") : this.game.prodigy.player.inTestGroupLegacy(0, !1, !1, !1, !0, 1e4) && this.game.prodigy.network.sendAnalytics("Conjure-Cube-Purchase-Completed", 1 === t ? "1-Cube-Purchase-Completed-10-Questions" : 5 === t ? "5-Cube-Purchase-Completed-10-Questions" : "20-Cube-Purchase-Completed-10-Questions"), 1 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb && (this.game.prodigy.player.updateFirstBoxBreadcrumb(), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.game.prodigy.microtransaction.totals])), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.GET_CONJURE_CUBES, "ProdigyMicrotransactionButton"), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.GET_CONJURE_CUBES, "ProdigyMicrotransactionMenu")
		}
		this.setMode(0)
	},
	purchaseConjureCubeFail: function() {
		this.game.prodigy.network.startInactiveTimer(), this.purchaseBlocker.destroy(), this.game.prodigy.open.alert("Your purchase did not complete, please try again"), this.setMode(1)
	},
	openConjureCube: function() {
		this.game.prodigy.network.sendAnalytics("Conjure-Cube-Menu-Clicks", "Cube-Opened"), 2 === this.game.prodigy.player.getMicrotransactionDetails().firstOpenBreadcrumb && (this.game.prodigy.player.updateFirstOpenBreadcrumb(), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.game.prodigy.microtransaction.totals])), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.MARK_AS_OPEN, "ProdigyMicrotransactionMenu")
	},
	close: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, this, "ProdigyMicrotransactionMenu"), Util.isDefined(this.onClose) && this.onClose(), this.game.prodigy.user.evtProc = !1, Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.MicrotransactionDetails = function(e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.closeMode = a, this.create()
}, Prodigy.extends(Prodigy.Menu.MicrotransactionDetails, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MicrotransactionDetails,
	create: function() {
		Prodigy.RenderMenu.prototype.create.call(this), this.addTransparent(.45);
		var e = 100,
			t = 0,
			i = 19.5 - t,
			a = 22,
			s = 40 * i - a;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * i), e), this.panel = this.game.prodigy.create.element(this.form, 0, 0), this.panel.add(this.game.prodigy.create.sprite(0, 0, "microtransactions", "base-yellow")), this.game.prodigy.create.button(this.form, s - 15, -20, "microtransactions", "x-btn", this.close.bind(this, this.closeMode)), this.panel.add(this.game.prodigy.create.sprite(115, -45, "microtransactions", "header-w-text"));
		var r = this.game.prodigy.create.element(this.form, 50, 50);
		r.add(this.game.prodigy.create.sprite(0, 0, "microtransactions", "top-blue-2")), r.add(this.game.prodigy.create.sprite(150, 75, "microtransactions", "glow")), this.game.prodigy.player.inTestGroupLegacy(1, !1, !1, !1, !0, 1e4) ? r.add(this.game.prodigy.create.sprite(30, 50, "microtransactions", "details-text-5")) : this.game.prodigy.player.inTestGroupLegacy(2, !1, !1, !1, !0, 1e4) ? r.add(this.game.prodigy.create.sprite(70, 50, "microtransactions", "details-text-none")) : this.game.prodigy.player.inTestGroupLegacy(0, !1, !1, !1, !0, 1e4) && r.add(this.game.prodigy.create.sprite(30, 50, "microtransactions", "details-text-10")), this.panel.add(r), this.game.prodigy.create.button(this.form, 265, 425, "microtransactions", "orange-button-2-w-text", this.close.bind(this, 1))
	},
	close: function(e) {
		Prodigy.RenderMenu.prototype.close.call(this), Util.isDefined(e) && Util.isDefined(this.onClose) && this.onClose(e)
	}
}), Prodigy.Menu.MicrotransactionLoot = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.create()
}, Prodigy.extends(Prodigy.Menu.MicrotransactionLoot, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MicrotransactionLoot,
	create: function() {
		Prodigy.RenderMenu.prototype.create.call(this), this.addTransparent(.45);
		var e = 100,
			t = 19.5;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * t), e), this.panel = this.game.prodigy.create.element(this.form, 0, 0), this.panel.add(this.game.prodigy.create.sprite(0, 0, "microtransactions", "base-yellow")), this.panel.add(this.game.prodigy.create.sprite(50, 50, "microtransactions", "animation-bg")), this.content = this.game.prodigy.create.element(this.panel, 0, 0), this.openCube()
	},
	receiveLoot: function() {
		this.mainPrizeSlotItem = this.rollMainSlotItem(), this.secondPrizeSlotItem = this.rollSecondSlotItem(), this.thirdPrizeSlotItem = this.rollThirdSlotItem();
		var e = [this.mainPrizeSlotItem, this.secondPrizeSlotItem, this.thirdPrizeSlotItem];
		this.game.prodigy.microtransaction.openConjureCube(e)
	},
	rollMainSlotItem: function() {
		for (var e = [{
				type: "GreenEquip",
				weight: 600
			}, {
				type: "BlueHouse",
				weight: 200
			}, {
				type: "BlueEquip",
				weight: 190
			}, {
				type: "PurpleEquip",
				weight: 4
			}, {
				type: "PurpleHouse",
				weight: 5
			}, {
				type: "Buddy",
				weight: 1
			}], t = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33], i = null; null === i && 0 !== e.length;) {
			var a = Prodigy.Random.weightedArrayElement(e),
				s = null;
			switch (a.type) {
				case "GreenEquip":
					s = {
						outfit: [1, 2, 3, 4, 5, 8, 22, 28, 30, 34, 36, 37, 41],
						weapon: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 52, 55, 61, 63, 65, 69],
						boots: [2, 3, 4, 21, 22],
						hat: [1, 2, 3, 4, 5, 6, 7, 8, 11, 37, 38, 39, 40, 41, 45, 55]
					}, i = this.getEquipLoot(1, s), Util.removeFromArray(a, e);
					break;
				case "BlueHouse":
					i = this.getHouseLoot(2), Util.removeFromArray(a, e);
					break;
				case "BlueEquip":
					s = {
						outfit: [7, 27, 29, 31, 33, 35, 43, 48],
						weapon: [10, 64, 66, 67, 70, 73],
						boots: [5, 6, 23, 24, 25, 27],
						hat: [9, 31, 32, 33, 34, 46]
					}, i = this.getEquipLoot(2, s), Util.removeFromArray(a, e);
					break;
				case "PurpleEquip":
					i = this.getEquipLoot(3), Util.removeFromArray(a, e);
					break;
				case "PurpleHouse":
					i = this.getHouseLoot(3), Util.removeFromArray(a, e);
					break;
				case "Buddy":
					for (; 0 !== t.length && null === i;) i = Items.getItemObject("follow", t[Prodigy.Random.integerInRange(0, t.length)]), Util.isDefined(i) && this.game.prodigy.player.backpack.hasItem("follow", i.ID) && (Util.removeFromArray(i.ID, t), i = null);
					null === i && Util.removeFromArray(a, e)
			}
		}
		return null === i ? this.rollSecondSlotItem() : (i.isGift = !0, i)
	},
	rollSecondSlotItem: function() {
		for (var e = [{
				type: "LowPotions",
				weight: 400
			}, {
				type: "MidPotions",
				weight: 150
			}, {
				type: "HighPotions",
				weight: 50
			}, {
				type: "CommonHouse",
				weight: 370
			}, {
				type: "GreenEquip",
				weight: 20
			}, {
				type: "BlueHouse",
				weight: 10
			}], t = [96, 98, 100, 102, 104, 106, 108], i = [97, 99, 101, 103, 105, 107], a = [109, 110, 111], s = null; null === s && 0 !== e.length;) {
			var r = Prodigy.Random.weightedArrayElement(e),
				n = null;
			switch (r.type) {
				case "LowPotions":
					n = t[Prodigy.Random.integerInRange(0, t.length)], s = Items.getItemObject("item", n);
					break;
				case "MidPotions":
					n = i[Prodigy.Random.integerInRange(0, i.length)], s = Items.getItemObject("item", n);
					break;
				case "HighPotions":
					n = a[Prodigy.Random.integerInRange(0, a.length)], s = Items.getItemObject("item", n);
					break;
				case "CommonHouse":
					s = this.getHouseLoot(1), Util.removeFromArray(r, e);
					break;
				case "GreenEquip":
					var o = {
						outfit: [1, 2, 3, 4, 5, 8, 22, 28, 30, 34, 36, 37, 41],
						weapon: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 52, 55, 61, 63, 65, 69],
						boots: [2, 3, 4, 21, 22],
						hat: [1, 2, 3, 4, 5, 6, 7, 8, 11, 37, 38, 39, 40, 41, 45, 55]
					};
					s = this.getEquipLoot(1, o), Util.removeFromArray(r, e), s = Util.isDefined(s) && Util.isDefined(this.mainPrizeSlotItem) && Util.isDefined(this.mainPrizeSlotItem.ID) && Util.isDefined(this.mainPrizeSlotItem.type) && s.ID === this.mainPrizeSlotItem.ID && s.type === this.mainPrizeSlotItem.type ? null : s;
					break;
				case "BlueHouse":
					s = this.getHouseLoot(2), Util.removeFromArray(r, e), s = Util.isDefined(s) && Util.isDefined(this.mainPrizeSlotItem) && s === this.mainPrizeSlotItem ? null : s
			}
		}
		return s.isGift = !0, s
	},
	rollThirdSlotItem: function() {
		var e = [{
				type: "Apple",
				weight: 100
			}, {
				type: "Salad",
				weight: 100
			}, {
				type: "Croissant",
				weight: 100
			}, {
				type: "Cake",
				weight: 100
			}, {
				type: "Chicken",
				weight: 100
			}, {
				type: "Confetti",
				weight: 250
			}, {
				type: "Firework",
				weight: 250
			}],
			t = null,
			i = Prodigy.Random.weightedArrayElement(e);
		switch (i.type) {
			case "Apple":
				t = Items.getItemObject("item", 1);
				break;
			case "Salad":
				t = Items.getItemObject("item", 3);
				break;
			case "Croissant":
				t = Items.getItemObject("item", 4);
				break;
			case "Cake":
				t = Items.getItemObject("item", 11);
				break;
			case "Chicken":
				t = Items.getItemObject("item", 22);
				break;
			case "Confetti":
				t = Items.getItemObject("item", 77);
				break;
			case "Firework":
				t = Items.getItemObject("item", 76)
		}
		return t.isGift = !0, t
	},
	getHouseLoot: function(e) {
		for (var t = Items.getRawItems("dorm", e), i = null; 0 !== t.length && null === i;) i = t[Prodigy.Random.integerInRange(0, t.length)], (Util.isDefined(i.ID) && this.game.prodigy.player.house.getOwned(i.ID) >= 9 || i.ID > 71) && (Util.removeFromArray(i, t), i = null);
		return i
	},
	getEquipLoot: function(e, t) {
		for (var i = ["outfit", "weapon", "boots", "hat"], a = null; 0 !== i.length && null === a;) {
			var s = i[Prodigy.Random.integerInRange(0, i.length)],
				r = [];
			if (Util.isDefined(t) && 0 !== t[s].length)
				for (var n = 0; n < t[s].length; n++) {
					var o = Items.getItemObject(s, t[s][n]);
					Util.isDefined(o) && (o.type = s, r.push(o))
				}
			for (; 0 !== r.length && null === a;) a = r[Prodigy.Random.integerInRange(0, r.length)], Util.isDefined(a.ID) && this.game.prodigy.player.backpack.hasItem(a.type, a.ID) && (Util.removeFromArray(a, r), a = null);
			Util.removeFromArray(s, i)
		}
		return a
	},
	openCube: function() {
		var e = this.game.prodigy.event.create();
		this.sprite = this.game.prodigy.create.element(this.content, 380, 280), this.sprite.visible = !0, this.cubeSpine = this.game.add.spine(0, 0, "micro-cube"), this.cubeSpine.setAnimationByName(0, "animation", !1), this.sprite.add(this.cubeSpine), e.delay(50), e.set(this.sprite, "visible", !1), e.delay(150), e.set(this.sprite, "visible", !0), e.delay(2e3), e.function(this.receiveLoot.bind(this)), e.delay(100), e.function(this.close.bind(this)), e.start()
	},
	close: function() {
		Util.isDefined(this.onClose) && this.onClose(), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionMenu", [this.game.prodigy.microtransaction.totals]), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.FriendsList.AddFriendByUser = function(e, t) {
	this.game = e;
	var i = 20,
		a = 10,
		s = 6,
		r = 40 * a,
		n = 40 * s,
		o = .5 * r,
		h = 640,
		l = 360,
		d = -10,
		c = e.prodigy.create.element(t, 0, 0);
	Util.centreObject(c, h, l, r, n), e.prodigy.create.panel(c, 0, 0, a, s, "shine");
	var p = e.prodigy.create.button(c, 0, d, "icons", "close", null);
	p.x = r - .5 * p.width + d;
	var g = e.prodigy.create.font(c, 0, i, "Enter your friend's username here!", {
		align: "center",
		size: 20,
		font: "black",
		width: Prodigy.Control.InputField.WIDTH_MEDIUM
	});
	Util.centreObject(g, o, null, Prodigy.Control.InputField.WIDTH_MEDIUM, null);
	var u = g.y + g.height + i,
		y = Prodigy.Control.InputField.createInputField(e, c, "fl-username", "", o, u, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text2g");
	y.setFocus(!0), Util.centreObject(y, h, l, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM);
	var m = e.prodigy.create.textButton(c, 0, u + Prodigy.Control.InputField.HEIGHT_MEDIUM + i, {
		text: "ok!",
		size: Prodigy.Control.TextButton.CONFIRM
	}, null);
	Util.centreObject(m, o, null, Prodigy.Control.TextButton.CONFIRM, null)
}, Prodigy.Menu.FriendsList.AddFriendByUser.prototype = {
	constructor: Prodigy.Menu.FriendsList.AddFriendByUser
}, Prodigy.Menu.FriendsList = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.friendsPerPage = 8, this.currentFriendIndex = 0, this.maxFriendIndex = 0, this.create(), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_SENT, this.refreshUI.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_RECEIVED, this.refreshUI.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this.refreshUI.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this.refreshUI.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this.refreshUI.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.FRIEND_REMOVED, this.refreshUI.bind(this), this, "FriendsList", !1)
}, Prodigy.extends(Prodigy.Menu.FriendsList, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.FriendsList,
	create: function() {
		this.addTransparent();
		var e = 20,
			t = 1,
			i = 1,
			a = 32 - t,
			s = 18 - i,
			r = 22,
			n = 40 * a - r;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * a), e);
		var o = this.game.prodigy.create.element(this.form, 0, 0);
		this.game.prodigy.create.panel(o, 0, 0, a, s, "shine");
		var h = .5 * r,
			l = 5,
			d = 7;
		o.add(new Phaser.TileSprite(this.game, h, 40 * l - h, n, 40, "core", "blue-top")), o.add(new Phaser.TileSprite(this.game, h, 40 * (l + 1) - h, n, 40 * (d + 2) + h, "core", "blue-mid")), o.add(new Phaser.TileSprite(this.game, h, 40 * (l + d + 3), n, 40, "core", "blue-top2")), this.game.prodigy.create.panel(o, 40, 40, a - 2, 2, "banner"), this.game.prodigy.create.font(this.form, 0, 60, "FRIENDS LIST", {
			font: "button",
			size: 36,
			width: n,
			align: "center",
			lineHeight: 38
		});
		var c = 40 * (l - 2) - h + r;
		this.friendsView = [];
		for (var p = 0; p < this.friendsPerPage; p++) {
			var g = 210 * Math.floor(p / 2) + 195,
				u = p % 2 === 0 ? 210 : 425,
				y = new Prodigy.Menu.FriendsList.FriendModel(this.game.prodigy.friendsListNetworkHandler.friendsList[p]);
			this.friendsView[p] = new Prodigy.Menu.FriendsList.FriendView(this.game, y, o, g, u)
		}
		var m = function() {
			this.setActive(!1), this.game.prodigy.open.friendRequests(this.returnToFriendsList.bind(this, !0, null))
		}.bind(this);
		this.cmdFriendRequests = this.game.prodigy.create.textButton(o, 2 * r, c, {
			size: Prodigy.Control.TextButton.LG,
			text: "friend requests"
		}, m), this.renderFriendRequestsIndicator(), this.game.prodigy.create.button(this.form, n - 18, -10, "icons", "close", this.close.bind(this));
		var f = 200;
		this.friendsCounter = this.game.prodigy.create.font(o, n - r, 0, "00/20 Friends", {
			font: "black",
			width: f,
			align: "center"
		}), this.renderFriendsCounter(), this.friendsCounter.y = this.cmdFriendRequests.y + .5 * this.cmdFriendRequests.height - .5 * this.friendsCounter.height, this.friendsCounter.x -= this.friendsCounter.width + r;
		var b = 40 * l + 20 * d + 40;
		this.prevPage = this.game.prodigy.create.button(o, 68, b, "icons-menu", "up-circle-arrow", this.changeFriendsIndex.bind(this, -2)), this.nextPage = this.game.prodigy.create.button(o, n - 41, b, "icons-menu", "up-circle-arrow", this.changeFriendsIndex.bind(this, 2)), this.prevPage.sprite.rotateMiddleBased(-90), this.nextPage.sprite.rotateMiddleBased(90), this.refreshUI(), Prodigy.RenderMenu.prototype.create.call(this)
	},
	close: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_SENT, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_RECEIVED, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.FRIEND_REMOVED, this, "FriendsList"), Prodigy.RenderMenu.prototype.close.call(this)
	},
	returnToFriendsList: function(e, t) {
		Util.isDefined(t) && t(), this.setActive(e)
	},
	refreshUI: function() {
		this.renderFriendsCounter(), this.renderFriendRequestsIndicator(), this.renderFriendsList(), this.renderPaginationButtons()
	},
	renderFriendsCounter: function() {
		var e = this.game.prodigy.friendsListNetworkHandler;
		this.friendsCounter.setText("" + e.totalFriends + "/" + e.friendsCap + " Friends")
	},
	renderFriendRequestsIndicator: function() {
		var e = this.game.prodigy.friendsListNetworkHandler.pendingRequests > 0;
		if (e) {
			if (!Util.isDefined(this.cmdFriendRequests.bg.indicator)) {
				var t = this.game.prodigy.create.indicator(0, 0),
					i = this.cmdFriendRequests.bg;
				i.addChild(t), i.indicator = t, t.visible = !1;
				var a = Util.getCenteredXY(t.width, 0, i.x, 0, i.width, 0);
				t.x = a.x, t.y = i.y - t.height, t.addTween()
			}
			this.cmdFriendRequests.bg.indicator.visible = !0
		} else Util.isDefined(this.cmdFriendRequests.bg.indicator) && (this.cmdFriendRequests.bg.indicator.visible = !1)
	},
	renderFriendsList: function() {
		this.friendsPerPage - 2 === this.game.prodigy.friendsListNetworkHandler.friendsList.length - this.currentFriendIndex && (this.currentFriendIndex = Math.max(this.currentFriendIndex - 2, 0));
		for (var e = 0; e < this.friendsPerPage; e++) {
			var t = this.game.prodigy.friendsListNetworkHandler.friendsList[this.currentFriendIndex + e];
			this.friendsView[e].updateModel(t)
		}
	},
	renderPaginationButtons: function() {
		this.updateMaxFriendIndex(), 0 === this.currentFriendIndex ? this.prevPage.setInactive() : this.prevPage.setActive(), this.currentFriendIndex >= this.maxFriendIndex ? this.nextPage.setInactive() : this.nextPage.setActive()
	},
	getTotalFriends: function() {
		return Util.isDefined(this.game.prodigy.friendsListNetworkHandler.friendsList) ? this.game.prodigy.friendsListNetworkHandler.friendsList.length : 0
	},
	updateMaxFriendIndex: function() {
		var e = this.getTotalFriends();
		this.maxFriendIndex = e > this.friendsPerPage ? 2 * Math.ceil(.5 * (e - this.friendsPerPage)) : 0
	},
	changeFriendsIndex: function(e) {
		this.updateMaxFriendIndex(), this.currentFriendIndex = Phaser.Math.clamp(this.currentFriendIndex + e, 0, this.maxFriendIndex), this.refreshUI()
	}
}), Prodigy.Menu.FriendsList.FriendModel = function(e) {
	this.userID = e, this.status = 0, this.appearance = null, this.isMember = null, this.data = null
}, Prodigy.Menu.FriendsList.FriendModel.prototype = {
	constructor: Prodigy.Menu.FriendsList.FriendModel
}, Prodigy.Menu.FriendsList.FriendView = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, i, a, s), this.model = JSON.parse(JSON.stringify(t)), this.cardModel = null, this.listenerActive = !1, this.setupEquipment(), this.setup(), this.onDestroy.add(this.stopListeners, this), this.startListeners()
}, Prodigy.extends(Prodigy.Menu.FriendsList.FriendView, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.FriendsList.FriendView,
	setup: function() {
		this.emptyPanel = this.game.prodigy.create.panel(this, 0, 0, 5, 5, "empty"), this.panel = this.game.prodigy.create.panel(this, 0, 0, 5, 5, "button"), this.waiting = this.game.prodigy.create.panel(this, 0, 0, 5, 5, "button");
		for (var e = 0; e < this.waiting._imgs.length; e++) this.waiting._imgs[e].alpha = .5;
		this.waiting.visible = !1, this.add(this.waiting), this.collisionBlock = this.game.prodigy.create.sprite(0, 0, "core", "empty", !1, null, 200, 200), this.collisionBlock.inputEnabled = !0, this.collisionBlock.events.onInputDown.add(this.onDown, this), this.collisionBlock.events.onInputUp.add(this.onUp, this), this.collisionBlock.events.onInputOver.add(this.onOver, this), this.collisionBlock.events.onInputOut.add(this.onOut, this), this.add(this.collisionBlock), this.playerName = this.game.prodigy.create.font(this.panel, 10, 165, "loading", {
			size: 16,
			width: 175
		}), this.memberIcon = this.game.prodigy.create.font(this.panel, 10, 10, "[membership]"), this.memberIcon.visible = !1, this.level = this.game.prodigy.create.font(this.panel, 100, 10, " ", {
			size: 36,
			font: "button"
		}), this.level.scale.setTo(.7, .7), this.panel.visible = Util.isDefined(this.model), this.emptyPanel.visible = !this.panel.visible
	},
	setupEquipment: function() {
		Util.isDefined(this.model) ? (this.cardModel = JSON.parse(JSON.stringify(this.model)), delete this.model.equipment) : this.cardModel = null, Util.isDefined(this.player) && (this.player.equipment = new Prodigy.Entity.Equipment(this.game))
	},
	updateModel: function(e) {
		if (this.listenerActive && this.stopListeners(), this.model = Util.isDefined(e) ? JSON.parse(JSON.stringify(e)) : null, this.setupEquipment(), this.startListeners(), Util.isDefined(this.model) === !1) return this.panel.visible = !1, this.waiting.visible = !1, this.emptyPanel.visible = !this.panel.visible, void 0;
		if (this.panel.visible = !0, this.emptyPanel.visible = !this.panel.visible, Util.isDefined(this.model.appearance)) {
			Util.isDefined(this.playerContainer) && this.playerContainer.destroy(), this.player = new Player(this.game), this.player.init(this.model), this.playerContainer = this.game.prodigy.create.player(this.panel, this.player, 2, 100, 215, !0), this.playerContainer.reload(), this.memberIcon.visible = Util.isDefined(this.model.isMember) && 0 !== this.model.isMember;
			var t = "Waiting: ",
				i = Util.isDefined(this.model.appearance.nick) && "" !== this.model.appearance.nick ? this.model.appearance.nick : this.model.appearance.name,
				a = "...";
			0 === this.model.status && (i = t + i), this.waiting.visible = 0 === this.model.status;
			for (var s = i.split(" "), r = 14, n = 9, o = "", h = "", l = 0; l < s.length; l++)
				if (0 === h.length && r >= o.length + s[l].length) o += s[l] + " ";
				else {
					if (!(n >= h.length + s[l].length)) {
						var d = n - h.length;
						h += s[l].substr(0, d) + a;
						break
					}
					h += s[l] + " "
				} h = h.trim();
			var c = o.length > 0 ? o.trim() + "\n" + h : h;
			this.playerName.setText(c), this.playerName.y = 145, this.panel.addChild(this.playerName), this.level.setText("$" + this.player.getLevel()), this.level.x = 185 - this.level.width
		}
	},
	startListeners: function() {
		Util.isDefined(this.model) && (this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.FRIENDS_APPEARANCE_UPDATED, this.updateModel.bind(this), this, "" + this.model.userID), this.listenerActive = !0)
	},
	stopListeners: function() {
		Util.isDefined(this.model) && (this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.FRIENDS_APPEARANCE_UPDATED, this, "" + this.model.userID), this.listenerActive = !1)
	},
	onDown: function() {
		if (this.panel.visible) {
			if (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.player) && Util.isDefined(this.cardModel)) {
				var e = new Player(this.game);
				e.init(this.cardModel), this.game.prodigy.open.card(e, !0)
			}
			this.panel.y = 0, this.waiting.y = 0
		}
	},
	onUp: function() {
		this.collisionBlock.input.pointerOver() && this.panel.visible && (this.panel.y = -3, this.waiting.y = -3)
	},
	onOver: function() {
		this.panel.visible && (this.panel.y = -3, this.waiting.y = -3)
	},
	onOut: function() {
		this.panel.visible && (this.panel.y = 0, this.waiting.y = 0)
	}
}), Prodigy.Menu.FriendRequests = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.friendRequests = [], this.requestControllers = [], this.requestViews = [], this.requestsPerPage = 4, this.offset = 0, this.create(), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.GOT_FRIEND_REQUEST_LIST, this.setupFriendRequests.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this.acceptRequestSuccessful.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this.rejectRequestSuccessful.bind(this), this, "FriendsList", !1), e.broadcaster.addAppListener(Prodigy.Events.FriendsList.REQUEST_CANCELLED, this.requestCancelled.bind(this), this, "FriendRequests", !1), e.broadcaster.broadcast(Prodigy.Events.FriendsList.CLEAR_FRIEND_REQUESTS_CACHE, "FriendsList", []), this.loadPage(this.offset)
}, Prodigy.extends(Prodigy.Menu.FriendRequests, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.FriendRequests,
	create: function() {
		this.addTransparent();
		var e = 20,
			t = 14,
			i = 1,
			a = 32 - t,
			s = 18 - i,
			r = 22,
			n = 40 * a - r,
			o = 40 * s - r,
			h = .5 * r,
			l = 4,
			d = 8;
		this.form = this.game.prodigy.create.element(this, .5 * (1280 - 40 * a), e);
		var c = this.game.prodigy.create.element(this.form, 0, 0);
		this.game.prodigy.create.panel(c, 0, 0, a, s, "shine"), c.add(new Phaser.TileSprite(this.game, h, 40 * l - h, n, 40, "core", "blue-top")), c.add(new Phaser.TileSprite(this.game, h, 40 * (l + 1) - h, n, 40 * d, "core", "blue-mid")), c.add(new Phaser.TileSprite(this.game, h, 40 * (l + d + 1) - h, n, 40, "core", "blue-top2")), this.game.prodigy.create.panel(c, 40, 40, a - 2, 2, "banner"), this.game.prodigy.create.font(c, 0, 60, "FRIEND REQUESTS", {
			font: "button",
			size: 36,
			width: n,
			align: "center",
			lineHeight: 38
		}), this.game.prodigy.create.button(this.form, n - 18, -10, "icons", "close", this.close.bind(this));
		for (var p, g, u, y = 0; y < this.requestsPerPage; y++) p = new Prodigy.Menu.FriendRequest.FriendRequestModel, g = new Prodigy.Menu.FriendRequest.FriendRequestController(this.game, p, y), u = new Prodigy.Menu.FriendRequest.FriendRequestView(this.game, g, c, 0, 40 * l + 100 * y), u.render(null), Util.centreObject(u, .5 * n, null, 560, null), this.requestControllers.push(g), this.requestViews.push(u);
		var m = 40 * l + 40 * d,
			f = m + .5 * (o - m) + 35;
		this.prevPage = this.game.prodigy.create.button(c, 68, f, "icons-menu", "up-circle-arrow", this.loadPage.bind(this, -this.requestsPerPage)), this.nextPage = this.game.prodigy.create.button(c, n - 41, f, "icons-menu", "up-circle-arrow", this.loadPage.bind(this, this.requestsPerPage)), this.prevPage.sprite.rotateMiddleBased(-90), this.nextPage.sprite.rotateMiddleBased(90), this.prevPage.setInactive(), this.nextPage.setInactive(), Prodigy.RenderMenu.prototype.create.call(this)
	},
	close: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.GOT_FRIEND_REQUEST_LIST, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, this, "FriendsList"), this.game.broadcaster.removeAppListener(Prodigy.Events.FriendsList.REQUEST_REJECTED, this, "FriendsList"), Util.isDefined(this.onClose) && this.onClose(), Prodigy.RenderMenu.prototype.close.call(this)
	},
	setupFriendRequests: function(e) {
		this.friendRequests = e, this.refreshUI()
	},
	refreshUI: function() {
		this.renderRequests(), this.renderPaginationButtons()
	},
	renderRequests: function() {
		var e, t = 0;
		for (this.offset === this.friendRequests.length && (this.offset = Math.max(0, this.offset - this.requestsPerPage)), e = this.offset; e < this.offset + this.requestsPerPage; e++) {
			t = e % this.requestsPerPage;
			var i = this.friendRequests[e];
			Util.isDefined(i) ? (this.requestControllers[t].setUserID(i.userID), this.requestControllers[t].setUsername(i.name), this.requestViews[t % this.requestsPerPage].render(i.name)) : this.requestViews[t % this.requestsPerPage].render(null)
		}
	},
	acceptRequestSuccessful: function(e, t) {
		this.requestViews[t].render(null), this.getNextRequest()
	},
	rejectRequestSuccessful: function(e, t) {
		this.requestViews[t].render(null), this.getNextRequest()
	},
	requestCancelled: function(e) {
		this.friendRequests = e, this.refreshUI()
	},
	getNextRequest: function() {
		this.friendRequests.length > this.requestsPerPage ? this.game.prodigy.friendsListNetworkHandler.getFriendRequestList(null, 1) : this.refreshUI()
	},
	renderPaginationButtons: function() {
		this.offset > 0 ? this.prevPage.setActive() : this.prevPage.setInactive(), Util.isDefined(this.friendRequests[this.offset + this.requestsPerPage]) ? this.nextPage.setActive() : this.nextPage.setInactive()
	},
	loadPage: function(e) {
		if (this.offset += e, 0 > e) this.setupFriendRequests(this.friendRequests);
		else {
			var t = 0 === this.offset ? 2 * this.requestsPerPage : this.requestsPerPage;
			this.offset + t + 1 > this.friendRequests.length ? this.game.prodigy.friendsListNetworkHandler.getFriendRequestList(this.offset > 0 ? this.offset + this.requestsPerPage : this.offset, 0 === this.offset ? 2 * this.requestsPerPage : this.requestsPerPage) : this.setupFriendRequests(this.friendRequests)
		}
	}
}), Prodigy.Menu.FriendRequest.FriendRequestModel = function() {
	this.userID = -1, this.username = ""
}, Prodigy.Menu.FriendRequest.FriendRequestModel.prototype = {
	constructor: Prodigy.Menu.FriendRequest.FriendRequestModel
}, Prodigy.Menu.FriendRequest.FriendRequestView = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, i, 0, 0);
	var r = 14,
		n = 2,
		o = 40 * r,
		h = 40 * n,
		l = 10,
		d = 3,
		c = 28,
		p = 8,
		g = 20,
		u = 50,
		y = 20,
		m = e.prodigy.create.panel(this, a + l, s, r, n, "mail");
	m.add(e.prodigy.create.sprite(d, d, "icons", "mail-heart")), e.prodigy.create.font(m, d + c + p, p, "Add friend?", {
		size: 16
	}), this.mainText = e.prodigy.create.font(m, g, .5 * h, "", {
		font: "black",
		size: 20
	});
	var f = e.prodigy.create.button(m, o - u - g, 0, "icons", "close", this.game.prodigy.open.confirm.bind(this.game.prodigy.open, "Are you sure you want to cancel this friend request?", t.rejectRequest.bind(t), null, null, "Removing Friend Request"));
	Util.centreObject(f, null, .5 * h, null, f.height);
	var b = e.prodigy.create.button(m, f.x - u - y, 0, "icons", "yes", t.acceptRequest.bind(t));
	Util.centreObject(b, null, .5 * h, null, b.height)
}, Prodigy.extends(Prodigy.Menu.FriendRequest.FriendRequestView, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.FriendRequest.FriendRequestView,
	render: function(e) {
		this.visible = Util.isDefined(e), this.visible && this.mainText.setText(e)
	}
}), Prodigy.Menu.FriendRequest.FriendRequestController = function(e, t, i) {
	this.game = e, this.model = t, this.requestID = i
}, Prodigy.Menu.FriendRequest.FriendRequestController.prototype = {
	constructor: Prodigy.Menu.FriendRequest.FriendRequestController,
	setUserID: function(e) {
		this.model.userID = e
	},
	getUserID: function() {
		return this.model.userID
	},
	setUsername: function(e) {
		this.model.username = e
	},
	getUsername: function() {
		return this.model.username
	},
	acceptRequest: function() {
		this.game.prodigy.friendsListNetworkHandler.acceptFriendRequest(this.getUserID(), this.requestID)
	},
	rejectRequest: function() {
		this.game.prodigy.friendsListNetworkHandler.rejectFriendRequest(this.getUserID(), this.requestID)
	}
}, Prodigy.Menu.SlotMachine = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.assets = ["popup-toyZone"], this.game = e, this.spinning = !1, this.id = s, this.guaranteeHeart = r, this.bonusIds = [], this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
}, Prodigy.Menu.SlotMachine.FORCED_RESULT = [], Prodigy.Menu.SlotMachine.SKIP_BONUS_CHANCE = !1, Prodigy.extends(Prodigy.Menu.SlotMachine, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.SlotMachine,
	setup: function() {
		var e = [];
		GameConstants.get("GameConstants.Build.DEBUG") && 3 === Prodigy.Menu.SlotMachine.FORCED_RESULT.length ? (e.push(Prodigy.Menu.SlotMachine.EFFECT[Prodigy.Menu.SlotMachine.FORCED_RESULT[0] - 1]), e.push(Prodigy.Menu.SlotMachine.EFFECT[Prodigy.Menu.SlotMachine.FORCED_RESULT[1] - 1]), e.push(Prodigy.Menu.SlotMachine.EFFECT[Prodigy.Menu.SlotMachine.FORCED_RESULT[2] - 1])) : (e.push(Phaser.ArrayUtils.getRandomItem(Prodigy.Menu.SlotMachine.EFFECT)), e.push(Phaser.ArrayUtils.getRandomItem(Prodigy.Menu.SlotMachine.EFFECT)), e.push(Phaser.ArrayUtils.getRandomItem(this.guaranteeHeart ? Prodigy.Menu.SlotMachine.HEAL_EFFECT : Prodigy.Menu.SlotMachine.EFFECT)));
		var t = {
				x: 10,
				y: 10
			},
			i = {
				x: 10,
				y: 20
			},
			a = 140;
		this.bonusIds = [e[0].id, e[1].id, e[2].id], this.slotDoorTop = [], this.slotDoorBottom = [], this.msg = [], this.sprites = this.game.prodigy.create.element(this, 0, 0), this.bg = this.game.prodigy.create.element(this.sprites, 0, 0), this.fg = this.game.prodigy.create.element(this.sprites, 0, 0), this.bgRect = this.game.add.graphics(0, 0, this.bg), this.bgRect.beginFill(16777215, 1), this.bgRect.drawRect(20, 120, 400, 140), this.bgRect.endFill(), this.base = this.fg.add(this.game.prodigy.create.sprite(-25, 1, "popup-toyZone", "tz-interface-base")), this.startBtn = this.game.prodigy.create.button(this.fg, 275, 321, "popup-toyZone", "tz-start-up", this.startSpinning.bind(this), null, null, !1), this.quitBtn = this.game.prodigy.create.button(this.fg, 86, 321, "popup-toyZone", "tz-quit-up", this.quit.bind(this), null, null, !1);
		for (var s = 0; 3 > s; s++) this.bg.add(this.game.prodigy.create.sprite(35 + s * a + t.x, 141 + t.y, "popup-toyZone", e[s].icon)), Util.isDefined(e[s].icon2) && this.bg.add(this.game.prodigy.create.sprite(35 + s * a + i.x, 141 + i.y, "popup-toyZone", e[s].icon2)), this.slotDoorTop.push(this.bg.add(this.game.prodigy.create.sprite(33 + s * a, 141, "popup-toyZone", "tz-door-top"))), this.slotDoorBottom.push(this.bg.add(this.game.prodigy.create.sprite(33 + s * a, 195, "popup-toyZone", "tz-door-bottom"))), this.msg.push(this.game.prodigy.create.font(this.fg, -28 + 142 * s, 270, e[s].name, {
			width: 230,
			align: "center",
			size: 20
		})), this.msg[s].alpha = 0;
		this.game.add.tween(this).from({
			y: 720
		}, 700, Phaser.Easing.Back.Out, !0)
	},
	startSpinning: function() {
		if (this.startBtn.isActive = !1, this.quitBtn.isActive = !1, this.spinning === !1) {
			this.spinning = !0, this.startBtn.sprite.frameName = "tz-start-down";
			var e = this.game.prodigy.event.create();
			if (!Prodigy.Menu.SlotMachine.SKIP_BONUS_CHANCE)
				for (var t = 0; 3 > t; t++) e.animation(this.game.prodigy.animation.shake.bind(this.game.prodigy.animation, this.sprites, 10, 0, -10, 0, 120, 0, Phaser.Easing.Quadratic.Out, !0)), e.animation(this.game.prodigy.animation.translate.bind(this.game.prodigy.animation, this.slotDoorTop[t], this.slotDoorTop[t].x, 83, 800, 120, Phaser.Easing.Quadratic.Out, !0)), e.animation(this.game.prodigy.animation.translate.bind(this.game.prodigy.animation, this.slotDoorBottom[t], this.slotDoorBottom[t].x, 252, 800, 0, Phaser.Easing.Quadratic.Out, !0)), e.delay(800), e.tween(this.msg[t], {
					alpha: 1
				}, 1, Phaser.Easing.Quadratic.Out, !1), e.tween(this.msg[t], {
					alpha: 0
				}, 1200, Phaser.Easing.Quadratic.In, !1);
			e.function(this.applyBonus.bind(this)), e.start()
		}
	},
	quit: function() {
		1 === this.quitBtn.alpha && (this.quitBtn.x = 277, this.quitBtn.y = 288, this.quitBtn.sprite.frameName = "tz-quit-down", this.game.broadcaster.broadcast(Prodigy.Events.Battle.END_BATTLE, null, ["run"]), this.close())
	},
	applyBonus: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.Battle.APPLY_SLOT_BONUS, null, [this.bonusIds]), this.close()
	},
	close: function() {
		var e = this.game.add.tween(this).to({
			y: 720
		}, 700, Phaser.Easing.Back.In, !0);
		e.onComplete.add(this.onCloseComplete, this)
	},
	onCloseComplete: function() {
		this.game.prodigy.open.close(this), this.destroy()
	}
}), Prodigy.Menu.SlotMachine.EFFECT = [{
	id: 5,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 6,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 7,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-30percent",
	bonus: 3
}, {
	id: 8,
	name: "Drain",
	icon: "slot-lose-hp",
	icon2: "slot-lose-10percent",
	bonus: -1
}, {
	id: 9,
	name: "Drain",
	icon: "slot-lose-hp",
	icon2: "slot-lose-20percent",
	bonus: -2
}, {
	id: 10,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 10,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 11,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 11,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 12,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-30percent",
	bonus: 3
}, {
	id: 12,
	name: "Bonus stars",
	icon: "slot-add-stars",
	icon2: "slot-add-30percent",
	bonus: 3
}, {
	id: 13,
	name: "Damage bonus",
	icon: "slot-add-damage",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 13,
	name: "Damage bonus",
	icon: "slot-add-damage",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 14,
	name: "Damage reduced",
	icon: "slot-lose-damage",
	icon2: "slot-lose-10percent",
	bonus: -1
}, {
	id: 15,
	name: "Bonus gold",
	icon: "slot-add-gold",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 15,
	name: "Bonus gold",
	icon: "slot-add-gold",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 16,
	name: "Evasion up",
	icon: "slot-add-agility",
	icon2: "slot-add-10percent",
	bonus: 1
}], Prodigy.Menu.SlotMachine.HEAL_EFFECT = [{
	id: 5,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-10percent",
	bonus: 1
}, {
	id: 6,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 6,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 6,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-20percent",
	bonus: 2
}, {
	id: 7,
	name: "Heal HP",
	icon: "slot-add-hp",
	icon2: "slot-add-30percent",
	bonus: 3
}], Prodigy.HUD.Menu = function(e, t, i) {
	Prodigy.Control.Element.call(this, e, t), this.ID = 1, this.model = new Prodigy.HUD.MenuModel(e, i || {}), this.page = 0, this.menus = [], this.isHouse = !1, this.onDestroy.add(this.cleanup.bind(this)), this.game.broadcaster.addAppListener(Prodigy.Events.HUD.OPEN_CHAT, this.show.bind(this, !1), this, "HUD", !1), this.game.broadcaster.addAppListener(Prodigy.Events.HUD.CLOSE_CHAT, this.show.bind(this, !0), this, "HUD", !1), this.open(0, this.isHouse)
}, Prodigy.extends(Prodigy.HUD.Menu, Prodigy.Control.Element, {
	constructor: Prodigy.HUD.Menu,
	open: function(e, t) {
		this.removeAll(!0), this.model.resetConfig(), this.model.addDefaultConfig(), this.game.prodigy.player.hasCompletedTutorial() && this.game.prodigy.create.microtransactionButton(this, this.game.width - 150, 50, "icons", "mech"), this.isHouse = t, t && this.model.addHouseConfig(e), this.menus = [];
		for (var i = this.model.pages[e], a = 0; a < i.length; a++) this.menus.push(this.createMenu(i[a]));
		this.centreMenus()
	},
	createMenu: function(e) {
		var t = this.game.prodigy.create.element(this, 0, 0);
		t.add(this.game.prodigy.create.sprite(0, 0, "core", "HUD-end"));
		for (var i = 30, a = 0; a < e.length; a++) t.add(this.game.prodigy.create.sprite(i, 0, "core", "HUD-mid")), i += 62;
		t.add(this.game.prodigy.create.sprite(i + 30, 0, "core", "HUD-end")).scale.x = -1, i = 33;
		var s = [];
		for (a = 0; a < e.length; a++) {
			var r = e[a],
				n = null;
			n = r.type ? this.game.prodigy.create.hudButton(r.type, t, i, 14, r.key, r.frameName, r.callback) : Util.isDefined(r.frameName) ? this.game.prodigy.create.button(t, i, 14, r.key, r.frameName, r.callback) : null;
			var o = {
				buttonSprite: n,
				exclamationSprite: null
			};
			i += 62, s.push(o)
		}
		return {
			bar: t,
			buttons: s
		}
	},
	centreMenus: function() {
		for (var e = 0, t = 50, i = 0; i < this.menus.length; i++) Util.isDefined(this.menus[i].bar) && (e += this.menus[i].bar.width);
		e += 10 * (this.menus.length - 1);
		var a = Math.floor(.5 * (1280 - e));
		for (i = 0; i < this.menus.length; i++) Util.isDefined(this.menus[i].bar) && (this.menus[i].bar.x = a + t * i, this.menus[i].bar.y = 638, a += this.menus[i].bar.width + 10)
	},
	show: function(e) {
		this.visible = e
	},
	cleanup: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.House.CLICKED_HOUSE_ICON, this, "UI"), this.game.broadcaster.removeAppListener(Prodigy.Events.HUD.OPEN_CHAT, this, "HUD"), this.game.broadcaster.removeAppListener(Prodigy.Events.HUD.CLOSE_CHAT, this, "HUD")
	}
}), Prodigy.HUD.MenuModel = function(e, t) {
	this.game = e, this.disable = t, this.resetConfig()
}, Prodigy.HUD.MenuModel.prototype = {
	constructor: Prodigy.HUD.MenuModel,
	resetConfig: function() {
		this.pages = []
	},
	addPage: function(e) {
		Util.isDefined(this.pages[e]) || this.pages.push([])
	},
	addMenu: function(e, t) {
		Util.isDefined(this.pages[e][t]) || this.pages[e].push([])
	},
	addDefaultConfig: function() {
		var e = 0,
			t = 0;
		this.addPage(e), this.addMenu(e, t), this.addMemberIcon(e, t), this.addBackpack(e, t), this.addSpellbook(e, t), this.addPet(e, t), this.addMap(e, t), this.addEvent(e, t), this.addSocial(e, t), this.addSettings(e, t), this.addChat(e, t), this.addFriendsList(e, t), this.addMailer(e, t)
	},
	addHouseConfig: function(e) {
		var t = 1;
		this.addMenu(e, t), this.addMoveHouse(e, t), this.addEditHouse(e, t), this.addLockHouse(e, t)
	},
	addMoveHouse: function(e, t) {
		this.pages[e][t].push({
			type: "MoveHouseButton"
		})
	},
	addEditHouse: function(e, t) {
		this.pages[e][t].push({
			type: "EditHouseButton"
		})
	},
	addLockHouse: function(e, t) {
		this.pages[e][t].push({
			type: "LockHouseButton"
		})
	},
	addMailer: function(e, t) {
		this.pages[e][t].push({
			type: "MailerButton"
		})
	},
	addSpellbook: function(e, t) {
		this.pages[e][t].push({
			type: "SpellbookButton"
		})
	},
	addBackpack: function(e, t) {
		(this.game.prodigy.player.getGold() > 0 || this.game.prodigy.player.backpack.getTotalUnique() > 0) && this.pages[e][t].push({
			type: "BackpackButton"
		})
	},
	addPet: function(e, t) {
		this.game.prodigy.player.kennel.getPets().length > 0 && !Util.isDefined(this.disable.pets) && this.pages[e][t].push({
			type: "PetsButton"
		})
	},
	addSocial: function(e, t) {
		this.pages[e][t].push({
			type: "SocialButton"
		})
	},
	addFriendsList: function(e, t) {
		this.pages[e][t].push({
			type: "FriendsListButton"
		})
	},
	addMap: function(e, t) {
		(this.game.prodigy.player.hasCompletedTutorial() || GameConstants.get("GameConstants.Debug.ENABLE_MAP")) && this.pages[e][t].push({
			type: "WorldMapButton"
		})
	},
	addEvent: function(e, t) {
		for (var i = this.game.prodigy.skin.getButtons(), a = 0; a < i.length; a++) this.pages[e][t].push(i[a])
	},
	addChat: function(e, t) {
		this.pages[e][t].push({
			type: "ChatButton"
		})
	},
	addSettings: function(e, t) {
		this.pages[e][t].push({
			type: "SettingsButton"
		})
	},
	addMemberIcon: function(e, t) {
		this.game.prodigy.player.isMember || this.pages[e][t].push({
			type: "MemberIconButton"
		})
	}
}, Prodigy.Menu.BuyToy = function(e, t, i, a, s, r) {
	this.assets = ["popup-toyStore", "icons"], this.game = e, this.id = i, this.openChallenge = a, this.message = s, this.urlMessage = r, this.game.prodigy.load.assets(this.assets, this.create.bind(this)), Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu)
}, Prodigy.extends(Prodigy.Menu.BuyToy, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.BuyToy,
	create: function() {
		this.addTransparent(.5), this.sprites = this.game.prodigy.create.element(this, 350, 100), this.b = this.game.prodigy.create.panel(this.sprites, 100, 0, 10, 13, "shine2"), this.text = this.game.prodigy.create.font(this.sprites, 150, 20, Util.isDefined(this.message) ? this.message : "If you want to play this game, you need", {
			width: 300,
			align: "center"
		}), this.toyImg = this.sprites.add(this.game.prodigy.create.sprite(150, 100, "popup-toyStore", this.id + "_1")), this.toyImg.scale.x = 25 / 35, this.toyImg.scale.y = 25 / 35;
		var e = Items.getItemData("pet", this.id);
		this.game.prodigy.create.font(this.sprites, -320, 310, " " + e.name, {
			size: 36,
			font: "button",
			align: "center"
		});
		var t = e.name.length;
		this.sprites.add(this.game.prodigy.create.sprite(300 - 8 * t - 60, 300, "icons", "icon-bar-" + e.element));
		var i = this.game.prodigy.create.panelButton(this.sprites, 120, 395, 9, 2, "button", this.openWebsite.bind(this, Util.isDefined(this.urlMessage) ? this.urlMessage : "epics arena!"));
		i.content.add(this.game.prodigy.icon.createFromData({
			type: "pet",
			ID: this.id
		}, 10, -10)), this.game.prodigy.create.font(i.content, 100, 15, "buy toy now!", {
			width: 250,
			size: 36,
			font: "button",
			align: "center"
		}), this.game.prodigy.create.button(this.sprites, 462, -5, "icons", "close", this.close.bind(this)), this.game.add.tween(this.sprites).from({
			y: 720
		}, 400, Phaser.Easing.Back.Out, !0), Prodigy.RenderMenu.prototype.create.call(this)
	},
	openWebsite: function(e) {
		if (Util.isDefined(this.urlMessage) && "epic attacks!" === this.urlMessage)
			for (var t = !1, i = 125; 131 > i; i++) this.game.prodigy.player.kennel.hasPet(i) && (t = !0);
		t && !this.game.prodigy.player.kennel.hasPet(this.id) && this.game.prodigy.network.sendAnalytics("other-epic-attack", "try-buy-other", "Events"), Prodigy.Menu.ToyStore.openWebsite(this.game, e.replace(/\s/g, "-").replace("!", ""), !1, this.id)
	},
	close: function() {
		this.openChallenge === !0 && this.game.prodigy.open.epicRewardsMenu.call(this.game.prodigy.open, this.id, this.game.prodigy.player.kennel.hasPet(this.id)), this.destroy()
	}
}), Prodigy.Menu.BattleBase = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.CENTER = 192, this.type = a.type, this.memberStarsEarned = a.memberStarsEarned, this.hearts = a.hearts, this.source = a.source, this.spell = a.spell, this.totalStars = a.totalStars, this.x = 448, this.y = 122, this.scopeApp = i, this.setupBackground(), this.setupTitle(), this.setupBlockOne(), this.setupBlockTwo(), this.setupNextButton(), e.add.tween(this).from({
		y: 720
	}, 700, Phaser.Easing.Back.Out, !0), this.type === Prodigy.Menu.BattleBase.SUMMARY && (this.autoCloseTimer = e.time.events.add(3e4, this.onClose.bind(this), this))
}, Prodigy.Menu.BattleBase.SUMMARY = 0, Prodigy.Menu.BattleBase.LEVEL_UP = 1, Prodigy.Menu.BattleBase.SPELL = 2, Prodigy.extends(Prodigy.Menu.BattleBase, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.BattleBase,
	setupBackground: function() {
		this.backgound = this.game.prodigy.create.sprite(0, 0, "battle", "bg-popup"), this.add(this.backgound)
	},
	setupTitle: function() {
		this.type === Prodigy.Menu.BattleBase.SUMMARY ? this.add(this.game.prodigy.create.sprite(125, 12, "battle", "text-battle-summary")) : this.add(this.game.prodigy.create.sprite(112, 30, "battle", "text-well-done"))
	},
	setupBlockOne: function() {
		this.type === Prodigy.Menu.BattleBase.SUMMARY ? (this.add(this.game.prodigy.create.sprite(155, 120, "battle", "text-stars-collected")), this.add(this.game.prodigy.create.sprite(145, 162, "core-2", "user-star")), this.game.prodigy.create.font(this, 175, 168, "" + this.totalStars, {
			size: 2,
			font: "battle",
			width: 70,
			align: "center"
		})) : this.type === Prodigy.Menu.BattleBase.LEVEL_UP ? Util.isDefined(this.hearts) ? (this.add(this.game.prodigy.create.sprite(152, 120, "battle", "icon-heart")), this.game.prodigy.create.font(this, 127, 135, "+" + this.hearts, {
			size: 30,
			width: 126,
			align: "center",
			font: "general"
		})) : (this.add(this.game.prodigy.create.sprite(151, 120, "battle", "icon-star")), this.game.prodigy.create.font(this, 129, 150, "" + this.source.getLevel(), {
			size: 2,
			width: 126,
			align: "center",
			font: "battle"
		}).alpha = .5) : this.type === Prodigy.Menu.BattleBase.SPELL && this.add(this.game.prodigy.create.sprite(152, 120, "icons", "icon-bar-large-" + this.spell.data.element))
	},
	setupBlockTwo: function() {
		var e;
		if (this.type === Prodigy.Menu.BattleBase.SUMMARY) {
			var t = this.game.prodigy.player.isMember ? this.memberStarsEarned : 0;
			this.add(this.game.prodigy.create.sprite(88, 240, "battle", "text-member-stars-collected"));
			var i = this.add(this.game.prodigy.create.sprite(125, 0 === t ? 265 : 290, "core-2", "member-star")),
				a = this.game.prodigy.create.font(this, 55, 0 === t ? 270 : 295, t + "/" + this.memberStarsEarned, {
					size: 2,
					font: "battle"
				});
			i.x = this.CENTER - .5 * (i.width + a.width + 10), a.x = this.CENTER - .5 * (i.width + a.width + 10) + i.width + 10, 0 === t && (this.getStarsBtn = this.game.prodigy.create.button(this, this.CENTER, 337, "battle", "btn-get-them-now-green-red", this.onMembershipClick.bind(this)), this.getStarsBtn.sprite.anchor.set(.5, .5))
		} else this.type === Prodigy.Menu.BattleBase.LEVEL_UP ? (e = this.game.prodigy.create.font(this, 93, 260, this.source.getName(), {
			size: 16,
			width: 200,
			align: "center",
			font: "black"
		}), this.add(this.game.prodigy.create.sprite(130, e.y + e.height + 15, "battle", "text-leveled-up"))) : this.type === Prodigy.Menu.BattleBase.SPELL && (e = this.game.prodigy.create.font(this, 93, 240, this.source.getName(), {
			size: 16,
			width: 200,
			align: "center",
			font: "black"
		}), this.add(this.game.prodigy.create.sprite(95, e.y + e.height + 10, "battle", "text-learned-a-new-spell")), this.game.prodigy.create.font(this, 93, e.y + e.height + 35, this.spell.data.name, {
			size: 20,
			width: 200,
			align: "center",
			font: "black"
		}))
	},
	setupNextButton: function() {
		if (this.nextButton = this.game.prodigy.create.button(this, this.CENTER - 83, 410, "battle", "btn-next", this.onClose.bind(this)), this.type === Prodigy.Menu.BattleBase.SUMMARY && !this.game.prodigy.player.isMember) {
			this.nextButton.alpha = 0, this.nextButton.y = 430, this.nextButton.isActive = !1;
			var e = this.game.prodigy.event.create();
			e.delay(3e3), e.tween(this.nextButton, {
				alpha: 1,
				y: 410
			}, 300, Phaser.Easing.Quadratic.In), e.set(this.nextButton, "isActive", !0), e.start()
		}
	},
	onMembershipClick: function() {
		var e = {
			conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_GET_MEMBER_STARS
		};
		this.game.prodigy.network.sendConversionFunnelEvent(e.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_STARS, e.conversionFunnelMetadata), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_EXP, null, e), this.game.time.events.remove(this.autoCloseTimer)
	},
	onClose: function() {
		Util.isDefined(this.autoCloseTimer) && this.game.time.events.remove(this.autoCloseTimer), Util.isDefined(this.nextButton) && this.nextButton.setInactive(16777215), Util.isDefined(this.getStarsBtn) && this.getStarsBtn.setInactive(16777215);
		var e = this.type === Prodigy.Menu.BattleBase.SUMMARY ? 500 : 700,
			t = this.game.add.tween(this).to({
				y: 720
			}, e, Phaser.Easing.Back.In, !0);
		t.onComplete.add(this.onCloseComplete, this)
	},
	onCloseComplete: function() {
		this.type === Prodigy.Menu.BattleBase.SUMMARY ? this.game.broadcaster.broadcast(Prodigy.Events.VictoryManager.COMPLETE, this.game) : this.game.broadcaster.broadcast(Prodigy.Events.Battle.POPUP_CLOSED, this.scopeApp, null), this.game.prodigy.open.close(this), this.destroy()
	}
}), Prodigy.Menu.EpicRewardsMenu = function(e, t, i, a) {
	this.assets = ["popup-toyZone", "popup-toyStore", "core", "core-2", "icons"], this.game = e, this.ID = i, this.hasPet = a;
	for (var s = [{
			ID: 125,
			text: ["Challenge 1", "Challenge 2", "Challenge 3"]
		}, {
			ID: 126,
			text: ["Challenge 1", "Challenge 2", "Challenge 3"]
		}, {
			ID: 127,
			text: ["Challenge 1", "Challenge 2", "Challenge 3"]
		}, {
			ID: 128,
			text: ["Challenge 1", "Challenge 2", "Challenge 3"]
		}, {
			ID: 129,
			text: ["Challenge 1", "Challenge 2", "Challenge 3"]
		}], r = 0; r < s.length; r++)
		if (s[r].ID === i) {
			this.data = s[r];
			break
		} e.prodigy.load.assets(this.assets, this.create.bind(this)), Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu)
}, Prodigy.extends(Prodigy.Menu.EpicRewardsMenu, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.EpicRewardsMenu,
	create: function() {
		this.addTransparent(.5), this.sprites = this.game.prodigy.create.element(this, 0, 20);
		var e = this.sprites.add(this.game.prodigy.create.panel(this.sprites, 235, 50, 20, 14, "shine")),
			t = this.sprites.add(this.game.prodigy.create.panel(this.sprites, 336, -5, 15, 3, "banner"));
		this.game.prodigy.create.font(t, -340, 40, "EPICS ARENA BATTLE SELECT", {
			size: 30,
			align: "center"
		});
		var i = Items.getItemData("pet", this.ID);
		this.game.prodigy.create.font(e, 120, 81, i.name, {
			size: 36,
			font: "button"
		}), e.add(this.game.prodigy.create.sprite(50, 70, "icons", "icon-bar-" + i.element));
		var a = this.sprites.add(this.game.prodigy.create.sprite(380, 300, "popup-toyStore", this.ID + ""));
		if (a.anchor.setTo(.5, .5), this.hasPet) {
			for (var s = this.game.prodigy.player.kennel.getPets(), r = 0; r < s.length; r++)
				if (s[r].ID === this.ID) {
					var n = new Monster(s[r], this.game);
					break
				} var o = n.getLevel()
		} else var o = 0;
		for (var h = [], l = 130, d = 60, c = [10, 25, 50], r = 0; 3 > r; r++) {
			var p, g;
			o >= c[r] ? (p = "tz-menu-checkmark", g = !1) : (p = "tz-menu-locked", g = !0), h.push(this.game.prodigy.create.panelButton(this.sprites, 530, 195 + r * l, 9, 2, "panel-light", this.startBattle.bind(this, g, r))), h[r].content.add(this.game.prodigy.create.sprite(23 + d, -20, "core-2", "user-bar-level")), this.game.prodigy.create.font(h[r].content, -575 + d, 15, "" + c[r], {
				font: "battle",
				size: 1,
				align: "center"
			}), this.game.prodigy.create.font(h[r].content, -430 + d, 35, this.data.text[r], {
				size: 20,
				align: "center"
			});
			var u = Monsters.epicArena[this.ID].rewards[r];
			this.game.prodigy.player.house.getOwned(u.ID) >= 9 ? (h[r].content.add(this.game.prodigy.icon.gold(300 + d, 15)), this.game.prodigy.create.font(h[r].content, -310 + d, 55, "50", {
				size: 16,
				align: "center"
			})) : h[r].content.add(this.game.prodigy.create.sprite(300 + d, 9, "popup-toyZone", "reward" + (r + 1) + "-" + this.ID)), g === !0 && h[r].content.add(this.game.prodigy.create.sprite(23, 25, "popup-toyZone", p))
		}
		if (this.hasPet) {
			var y = this.sprites.add(this.game.prodigy.create.element(this.sprites, 287, 455));
			y.add(this.game.prodigy.create.sprite(60, -20, "core-2", "user-bar-level")), this.game.prodigy.create.font(y, -540, 15, "" + o, {
				font: "battle",
				size: 1,
				align: "center"
			})
		} else {
			var h = this.game.prodigy.create.panelButton(this.sprites, 269, 465, 6, 2, "button", this.openWebsite.bind(this, "epics arena!"));
			h.content.add(this.game.prodigy.icon.createFromData({
				type: "pet",
				ID: this.ID
			}, 10, -10)), this.game.prodigy.create.font(h.content, 35, 15, "buy toy", {
				width: 250,
				size: 36,
				font: "button",
				align: "center"
			})
		}
		this.game.prodigy.create.button(e, 763, -6, "icons", "close", this.close.bind(this)), this.game.add.tween(this.sprites).from({
			y: 630
		}, 400, Phaser.Easing.Back.Out, !0), Prodigy.RenderMenu.prototype.create.call(this)
	},
	close: function() {
		this.hasPet === !1 && this.game.prodigy.open.buyToy.call(this.game.prodigy.open, this.ID, !1), this.destroy()
	},
	startBattle: function(e, t) {
		this.hasPet === !1 ? (this.game.prodigy.network.sendAnalytics("start-epics-arena-game-new", "no-toy", "Events"), this.game.prodigy.open.buyToy.call(this.game.prodigy.open, this.ID, !0)) : e === !1 && (this.game.prodigy.network.sendAnalytics("start-epics-arena-game-new", "toy", "Events"), this.game.prodigy.battle.startEpicArena.call(this.game.prodigy.battle, this.ID, t))
	},
	openWebsite: function(e) {
		Prodigy.Menu.ToyStore.openWebsite(this.game, e.replace(/\s/g, "-").replace("!", ""))
	}
}), Prodigy.Menu.ConfirmPotionUse = function(e, t, i, a) {
	this.itemInfo = i, this.current = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.ConfirmPotionUse, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ConfirmPotionUse,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 350, 150), this.panel = this.game.prodigy.create.panel(this, 330, 200, 15, 8, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 560, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.game.prodigy.create.font(this.content, 30, 100, "There is already a potion in effect. Are you sure you want to use another one instead?", {
			size: 30,
			width: 540
		}), this.game.prodigy.create.button(this, this.panel.x + 40, this.panel.y + 200, "core", "yes-btn", this.onConfirm.bind(this)), this.game.prodigy.create.button(this, this.panel.x + 560 - 40 - 100 - 60, this.panel.y + 200, "core", "no-btn", this.onGoBack.bind(this)), Prodigy.RenderMenu.prototype.create.call(this)
	},
	onConfirm: function() {
		this.itemInfo.confirmPotionUse.call(this.itemInfo), this.close()
	},
	onGoBack: function() {
		this.itemInfo.close.call(this.itemInfo), this.close()
	}
}), Prodigy.Menu.BattlePotionSelect = function(e, t, i, a) {
	this.player = i, this.attackMenu = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.BattlePotionSelect, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.BattlePotionSelect,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 350, 150), this.createBaseSetup(17, 12, "shine", null, [], !0);
		var e = this.game.prodigy.create.element(this, 0, 0);
		e.setRenderState(!0), Prodigy.RenderMenu.prototype.create.call(this), this.bar = this.game.prodigy.create.slider(this, 900, 160, 380, !0, !0), this.setMode(0), this.reload()
	},
	setMode: function(e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), this.itemType = "item", this.listItemsOfType()
	},
	clearContents: function() {
		Util.isDefined(this.content) && this.content.removeAll(!0)
	},
	itemSelected: function(e) {
		this.game.prodigy.open.itemInfo({
			ID: e.ID,
			L: e.L,
			type: e.type || this.itemType
		}, this.reload.bind(this), "potion")
	},
	reload: function(e) {
		this.game.input.clearEnterCallback(), this.bar.process(), e && (this.attackMenu.close.call(this.attackMenu), this.close())
	},
	scrollItems: function(e) {
		this.page = Util.isDefined(e) ? e : Util.isDefined(this.page) ? this.page : 0, e = this.page, this.clearContents();
		var t = this.player.backpack.getBackpackItemsByType(this.itemType);
		this.owned = [];
		for (var i = 0; i < t.length; i++) {
			var a = Items.getItemData(this.itemType, t[i].ID);
			Util.isDefined(a) && Util.isDefined(a.type) && "potion" === a.type && this.owned.push(t[i])
		}
		for (var i = e; e + 6 > i; i++) {
			var s = i - e;
			i >= this.owned.length ? this.game.prodigy.create.panel(this.content, s % 3 * 180, 220 * Math.floor(s / 3), 4, 5, "empty") : this.game.prodigy.create.item(this.content, s % 3 * 180, 220 * Math.floor(s / 3), {
				ID: this.owned[i].ID,
				type: this.itemType,
				L: this.owned[i].L,
				N: this.owned[i].N
			}, "inv", this.itemSelected.bind(this, this.owned[i]))
		}
	},
	listItemsOfType: function() {
		var e = this.player.backpack.getBackpackItemsByType(this.itemType);
		this.owned = [];
		for (var t = 0; t < e.length; t++) {
			var i = Items.getItemData(this.itemType, e[t].ID);
			Util.isDefined(i) && Util.isDefined(i.type) && "potion" === i.type && this.owned.push(e[t])
		}
		this.bar.reset(this.owned.length - 3, 3, -1, this.scrollItems.bind(this))
	}
}), Prodigy.Menu.PotionPVPPopup = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), Util.isDefined(i) && (Util.isDefined(i.popups) || (i.popups = []), i.popups.push(this)), this.create()
}, Prodigy.extends(Prodigy.Menu.PotionPVPPopup, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.PotionPVPPopup,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 350, 150), this.panel = this.game.prodigy.create.panel(this, 330, 200, 15, 8, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.font(this.content, 6, 70, "Using items against fellow wizards is quite unsportsmanlike!", {
			size: 30,
			width: 540,
			align: "center"
		}), this.game.prodigy.create.font(this.content, 6, 200, "Sorry, you can only use items in battles against wild monsters.", {
			size: 30,
			width: 540,
			align: "center"
		}), this.game.prodigy.create.textButton(this, this.panel.x + 200, this.panel.y + 245, {
			text: "OK",
			textY: 4
		}, this.close.bind(this)), Prodigy.RenderMenu.prototype.create.call(this)
	}
}), Prodigy.Menu.ParentLinkBenefitsConfig = {
	ANALYTICS_SOURCE_BADGE: "Parental-Benefits-Badge",
	ANALYTICS_SOURCE_SETTINGS: "Parental-Benefits-Settings",
	ANALYTICS_SOURCE_LOGIN: "Parental-Benefits-Login",
	XP_BONUS: {
		frameName: "icons/small-star-boost",
		trackingEvent: "XPBonus-Icon-Click"
	},
	BUDDY: {
		frameName: "icons/get-fox-buddy",
		trackingEvent: "Buddy-Icon-Click"
	},
	APPLES: {
		frameName: "icons/get-free-apples",
		trackingEvent: "Apples-Icon-Click"
	},
	TRACKING_EVENT_MOBILE: "Mobile-Message-Displayed",
	TRACKING_EVENT_SIGN_UP: "Signup-Button-Click",
	TRACKING_EVENT_POPUP_SHOWN: "Popup-Shown",
	TRACKING_EVENT_SCHOOL_HOURS: "School-Hours-Message-Displayed",
	TRACKING_EVENT_RECEIVED_REWARDS: "Parent-Benefits-Rewards-Received",
	MESSAGE_MOBILE: "Visit www.prodigygame.com to link a parent account for great in-game rewards!",
	MESSAGE_POST_CLICK: "If you successfully linked a parent account, you will receive your rewards the next time you log in.",
	MESSAGE_SCHOOL_HOURS: "To receive these benefits, ask your parent to create a parent account and link it to yours.",
	URL_SIGN_UP_STAGING: "www.prodigygame.org/#start-now?usertype=parent",
	URL_SIGN_UP_PROD: "www.prodigygame.com/#start-now?usertype=parent",
	ATLAS: "popup-parent-link",
	DESCRIPTION_TEXT_BG_HEIGHT_PERCENT: .25,
	REWARD_ICONS_BG_HEIGHT_PERCENT: .5,
	LINK_ACCOUNT_BG_HEIGHT_PERCENT: .88,
	CLOSE_BTN_OFFSET: {
		x: -10,
		y: 10
	},
	BODY_TEXT_OFFSET: {
		x: 40,
		y: 0
	},
	ICON_TWEEN_TIME_MS: 125,
	ICON_TWEEN_DELAY_MS: 125,
	ICON_TWEEN_AMOUNT_Y: 20,
	SUCCESS_POPUP_CONFIG: {
		headerFrameName: "parent-link-title-success",
		bodyText: "Congratulations on linking a parent account! Please enjoy these great rewards!",
		submitButtonFrameName: "parent-link-button-success",
		showCloseButton: !1
	},
	INFO_POPUP_CONFIG: {
		headerFrameName: "parent-link-title",
		bodyText: "Have your parent or guardian link their account to your player account and receive awesome stuff!",
		submitButtonFrameName: "parent-link-button",
		showCloseButton: !0
	}
}, Prodigy.Menu.ParentalLink = function(e, t, i, a, s) {
	e.prodigy.player.parentalLink = !0, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), Util.isDefined(a) || (a = Prodigy.Menu.ParentLinkBenefitsConfig.ANALYTICS_SOURCE_LOGIN), this.analyticsSource = a, this.onClose = s, this.popupConfig = i, this.popupConfig === Prodigy.Menu.ParentLinkBenefitsConfig.SUCCESS_POPUP_CONFIG ? (this.onSubmitButtonClickCallback = this.onOkayClick.bind(this), this.onRewardIconClickCallback = null) : (this.onSubmitButtonClickCallback = this.onLinkParentAccountClick.bind(this, Prodigy.Menu.ParentLinkBenefitsConfig.TRACKING_EVENT_SIGN_UP), this.onRewardIconClickCallback = this.onLinkParentAccountClick), this.create()
}, Prodigy.Menu.ParentalLink.featureIconConfigs = [Prodigy.Menu.ParentLinkBenefitsConfig.XP_BONUS, Prodigy.Menu.ParentLinkBenefitsConfig.BUDDY, Prodigy.Menu.ParentLinkBenefitsConfig.APPLES], Prodigy.extends(Prodigy.Menu.ParentalLink, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ParentalLink,
	create: function() {
		this.addTransparent(), Prodigy.RenderMenu.prototype.create.call(this), this.game.prodigy.network.sendAnalytics(this.analyticsSource, Prodigy.Menu.ParentLinkBenefitsConfig.TRACKING_EVENT_POPUP_SHOWN), this.startLoad([Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS], this.onAssetsLoaded.bind(this))
	},
	onAssetsLoaded: function() {
		var e = this.game.prodigy.create.sprite(0, 0, Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS, "popup-box");
		this.add(e), Util.centerItemsWithinContainer([e], this, !0);
		var t = this.game.prodigy.create.sprite(0, 0, Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS, this.popupConfig.headerFrameName);
		t.anchor.set(0, .5), e.addChild(t), Util.centerItemsWithinContainer([t], e, !0), t.y = 10, this.game.prodigy.create.font(e, Prodigy.Menu.ParentLinkBenefitsConfig.BODY_TEXT_OFFSET.x, e.height * Prodigy.Menu.ParentLinkBenefitsConfig.DESCRIPTION_TEXT_BG_HEIGHT_PERCENT, this.popupConfig.bodyText, {
			font: "black",
			size: 20,
			width: e.width - 2 * Prodigy.Menu.ParentLinkBenefitsConfig.BODY_TEXT_OFFSET.x,
			align: "center"
		});
		var i = this.generateRewardIcons(e);
		if (Util.centerItemsWithinContainer(i, e, !0), i.forEach(function(t, i) {
				t.y = e.height * Prodigy.Menu.ParentLinkBenefitsConfig.REWARD_ICONS_BG_HEIGHT_PERCENT, this.game.add.tween(t).to({
					y: t.y - Prodigy.Menu.ParentLinkBenefitsConfig.ICON_TWEEN_AMOUNT_Y
				}, Prodigy.Menu.ParentLinkBenefitsConfig.ICON_TWEEN_TIME_MS, Phaser.Easing.Quadratic.InOut, !0, Prodigy.Menu.ParentLinkBenefitsConfig.ICON_TWEEN_DELAY_MS * i, 0, !0)
			}, this), this.popupConfig.showCloseButton) {
			var a = this.game.prodigy.create.button(e, 0, 0, Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS, "exit-button", this.close.bind(this));
			a.x = e.width - .5 * a.width + Prodigy.Menu.ParentLinkBenefitsConfig.CLOSE_BTN_OFFSET.x, a.y = -(.5 * a.width) + Prodigy.Menu.ParentLinkBenefitsConfig.CLOSE_BTN_OFFSET.y
		}
		var s = this.game.prodigy.create.button(e, 0, 0, Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS, this.popupConfig.submitButtonFrameName, this.onSubmitButtonClickCallback);
		Util.centerItemsWithinContainer([s], e, !0), s.y = e.height * Prodigy.Menu.ParentLinkBenefitsConfig.LINK_ACCOUNT_BG_HEIGHT_PERCENT, this.process()
	},
	generateRewardIcons: function(e) {
		var t = [];
		return Prodigy.Menu.ParentalLink.featureIconConfigs.forEach(function(i) {
			var a = Util.isDefined(this.onRewardIconClickCallback),
				s = a ? this.onRewardIconClickCallback.bind(this, i.trackingEvent) : null,
				r = this.game.prodigy.create.button(e, 0, 0, Prodigy.Menu.ParentLinkBenefitsConfig.ATLAS, i.frameName, s);
			r.sprite.inputEnabled = a, t.push(r)
		}, this), t
	},
	onOkayClick: function() {
		var e = function() {
			this.game.prodigy.network.sendAnalytics(Prodigy.Menu.ParentLinkBenefitsConfig.TRACKING_EVENT_RECEIVED_REWARDS), this.close()
		}.bind(this);
		this.game.prodigy.player.backpack.hasItem("follow", 34) ? this.close() : this.game.prodigy.open.gotItem([{
			type: "follow",
			ID: 34,
			N: 1
		}, {
			type: "item",
			ID: 1,
			N: 10
		}], e, null, "parental-link")
	},
	onLinkParentAccountClick: function(e) {
		Util.isSchoolHours() ? (this.game.prodigy.network.sendAnalytics(this.analyticsSource, Prodigy.Menu.ParentLinkBenefitsConfig.TRACKING_EVENT_SCHOOL_HOURS), this.game.prodigy.open.message(Prodigy.Menu.ParentLinkBenefitsConfig.MESSAGE_SCHOOL_HOURS)) : 1 === Util.getUrlVariable("iosApp") || Device.isIOS() && !Device.isChrome() ? (this.game.prodigy.network.sendAnalytics(this.analyticsSource, Prodigy.Menu.ParentLinkBenefitsConfig.TRACKING_EVENT_MOBILE), this.game.prodigy.open.message(Prodigy.Menu.ParentLinkBenefitsConfig.MESSAGE_MOBILE)) : (this.game.prodigy.network.sendAnalytics(this.analyticsSource, e), this.game.prodigy.network.openWebsite(document.domain.indexOf("prodigygame.com") >= 0 ? Prodigy.Menu.ParentLinkBenefitsConfig.URL_SIGN_UP_PROD : Prodigy.Menu.ParentLinkBenefitsConfig.URL_SIGN_UP_STAGING), this.game.prodigy.open.message(Prodigy.Menu.ParentLinkBenefitsConfig.MESSAGE_POST_CLICK))
	}
}), Prodigy.Menu.ParentalLink.isInfoRequired = function(e, t) {
	return !1
}, Prodigy.Menu.ParentalLink.isSuccessRequired = function(e, t) {
	return !1
}, Prodigy.Menu.PlayAtHome = function(e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = i, this.create()
}, Prodigy.extends(Prodigy.Menu.PlayAtHome, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.PlayAtHome,
	create: function() {
		this.addTransparent();
		var e = this.game.prodigy.create.element(this, 0, 0);
		this.popupViewProperties = {
			tileWidth: 25,
			tileHeight: 16,
			margin: 0,
			padding: 30,
			tileSize: 40,
			contentTileTop: 3
		}, this.popupViewProperties.top = .5 * (18 - this.popupViewProperties.tileHeight) * this.popupViewProperties.tileSize, this.popupViewProperties.left = .5 * (32 - this.popupViewProperties.tileWidth) * this.popupViewProperties.tileSize, this.popupViewProperties.width = this.popupViewProperties.tileWidth * this.popupViewProperties.tileSize, this.popupViewProperties.height = this.popupViewProperties.tileHeight * this.popupViewProperties.tileSize;
		var t = this.renderBackground(e, this.popupViewProperties),
			i = {
				top: 120,
				left: 11,
				tileSize: this.popupViewProperties.tileSize
			};
		i.tileHeight = this.popupViewProperties.tileHeight - i.top / this.popupViewProperties.tileSize - 1, i.width = this.popupViewProperties.width - 2 * i.left, this.renderContent(t, i);
		var a = {
			top: 20,
			left: 120,
			padding: 18,
			tileSize: this.popupViewProperties.tileSize
		};
		a.tileWidth = this.popupViewProperties.tileWidth - 2 * (a.left / a.tileSize), this.renderTitle(t, a);
		var s = {
			top: this.popupViewProperties.contentTileTop * this.popupViewProperties.tileSize + 20,
			left: 80,
			padding: 10,
			tileHeight: 7,
			tileSize: this.popupViewProperties.tileSize
		};
		s.tileWidth = this.popupViewProperties.tileWidth - 2 * s.left / s.tileSize;
		var r = this.renderMessage(t, s),
			n = {
				left: 120,
				padding: 10,
				tileHeight: 3,
				tileSize: this.popupViewProperties.tileSize
			};
		n.top = (s.tileHeight - n.tileHeight - .5) * n.tileSize, n.tileWidth = (r.width - 2 * n.left) / n.tileSize, this.renderCredentials(r, n);
		var o = {
			top: t.height,
			left: .5 * t.width,
			padding: 10
		};
		this.game.prodigy.loading(!0), this.game.prodigy.load.assets(["popup-after-hours"], this.renderImages.bind(this, t, o)), Prodigy.RenderMenu.prototype.create.call(this)
	},
	renderBackground: function(e, t) {
		return this.game.prodigy.create.panel(e, t.left, t.top, t.tileWidth, t.tileHeight, "shine")
	},
	renderContent: function(e, t) {
		e.add(new Phaser.TileSprite(this.game, t.left, t.top, t.width, t.tileSize, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, t.left, t.top + t.tileSize, t.width, (t.tileHeight - 2) * t.tileSize, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, t.left, t.top + (t.tileHeight - 1) * t.tileSize, t.width, t.tileSize, "core", "blue-top2"))
	},
	renderTitle: function(e, t) {
		var i = this.game.prodigy.create.panel(e, t.left, t.top, t.tileWidth, 2, "banner");
		this.game.prodigy.create.font(i, 0, t.padding, "ENJOY PRODIGY EVERYWHERE!", {
			size: 36,
			width: t.tileWidth * t.tileSize,
			font: "button",
			align: "center",
			lineHeight: 38
		})
	},
	renderMessage: function(e, t) {
		var i = this.game.prodigy.create.panel(e, t.left, t.top, t.tileWidth, t.tileHeight, "white"),
			a = this.game.prodigy.create.font(i, t.padding, t.padding, "You can always continue your adventure at school AND at home! Just remember your username and password for wherever you wish to play!", {
				size: 16,
				width: i.width - 2 * t.padding,
				font: "black",
				align: "center",
				lineHeight: 38
			});
		return this.game.prodigy.create.font(i, t.padding, a.y + a.height + 3 * t.padding, "Here they are one more time, in case you forgot to write them down!", {
			size: 16,
			width: i.width - 2 * t.padding,
			font: "black",
			align: "center",
			lineHeight: 38
		}), i
	},
	renderCredentials: function(e, t) {
		var i = this.game.prodigy.create.panel(e, t.left, t.top, t.tileWidth, t.tileHeight, "blue"),
			a = this.game.prodigy.player.username,
			s = this.game.prodigy.create.font(i, 0, t.padding, "Username: " + a, {
				size: 36,
				width: i.width,
				font: "button",
				align: "center"
			}),
			r = this.game.prodigy.player.password;
		this.game.prodigy.create.font(i, 0, s.y + s.height + t.padding, "Password: " + r, {
			size: 36,
			width: i.width,
			font: "button",
			align: "center"
		})
	},
	renderImages: function(e, t) {
		this.game.prodigy.loading(!1), e.add(this.game.prodigy.create.sprite(t.left, t.top - t.padding, "popup-after-hours", "after-hours-mail-notice-image", !0)), this.renderCommands(e)
	},
	renderCommands: function(e) {
		var t = {
				top: this.popupViewProperties.height,
				left: .5 * this.popupViewProperties.width,
				margin: 3
			},
			i = this.game.prodigy.create.textButton(e, t.left, t.top, {
				text: "okay!",
				size: Prodigy.Control.TextButton.MED
			}, this.close.bind(this));
		i.x -= .5 * i.width, i.y -= .5 * i.height + t.margin
	},
	close: function() {
		Util.isDefined(this.onClose) && this.onClose(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.Menu.PlayAtHome.isRequired = function(e) {
	return GameConstants.get("GameConstants.Features.SplitTests.PLAY_AT_HOME") && Util.isDefined(e.username) && Util.isDefined(e.password)
}, Prodigy.Menu.EpicErrorMessage = function(e, t, i, a, s) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.message = i, this.attributes = a || {}, Util.isDefined(s) && (Util.isDefined(s.popups) || (s.popups = []), s.popups.push(this)), this.create()
}, Prodigy.extends(Prodigy.Menu.EpicErrorMessage, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.EpicErrorMessage,
	create: function() {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 350, 150), this.panel = this.game.prodigy.create.panel(this, 330, 200, 15, 8, "shine"), this.panel.setRenderState(!0), Util.isDefined(this.attributes.showClose) && this.attributes.showClose === !1 || this.game.prodigy.create.button(this, this.panel.x + 560, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.game.prodigy.create.font(this.content, Util.isDefined(this.attributes.textX) ? this.attributes.textX : 30, 100, this.message, {
			size: 30,
			width: 540
		}), this.game.prodigy.create.textButton(this, this.panel.x + 200, this.panel.y + 200, {
			text: "OKAY",
			textY: 4
		}, this.close.bind(this)), Prodigy.RenderMenu.prototype.create.call(this)
	}
}), Prodigy.Menu.QuestDescription = function(e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.questData = i, this.callback = a, this.create()
}, Prodigy.extends(Prodigy.Menu.QuestDescription, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.QuestDescription,
	create: function() {
		if (this.addTransparent(), this.content = this.game.prodigy.create.element(this, 0, 0), Util.isDefined(this.questData.yOffset)) var e = Math.ceil(-this.questData.yOffset / 40);
		if (this.panel = this.game.prodigy.create.panel(this.content, 400, 360 - 20 * (6 + e), 12, 6 + e, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this.panel, 440, -10, "icons", "close", this.close.bind(this)), this.game.prodigy.create.font(this.panel, 60, 20, "Today's Quest", {
				size: 30,
				width: 350,
				align: "center"
			}), Util.isDefined(this.questData.description) && this.game.prodigy.create.font(this.panel, 60, 80, this.questData.description, {
				width: 350,
				align: "center"
			}), Util.isDefined(this.questData.source)) {
			var t = this.game.prodigy.icon.createIcon(200, 180, this.questData.source);
			this.game.prodigy.load.isFileLoaded(this.questData.source) ? this.positionSource(t, e) : t.onTextureLoaded = this.positionSource.bind(this, t, e), this.panel.add(t), this.game.prodigy.event.create()
		}
		this.game.prodigy.create.textButton(this.panel, 90, 120 + 40 * e, {
			text: "Start Quest",
			textY: 4,
			size: Prodigy.Control.TextButton.MED
		}, this.startQuest.bind(this)), Prodigy.RenderMenu.prototype.create.call(this)
	},
	startQuest: function() {
		this.callback(), this.close.call(this)
	},
	positionSource: function(e, t) {
		e.x = 240 + (this.questData.xOffset || 0), e.y = 100 + 40 * t + (this.questData.yOffset || 0)
	}
}), Prodigy.Container.CreatureContainer = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.chatColour = 16758272, this.nameColour = 16777215, this.source = i, this.setScale = a || 1, this.x = Math.floor(s), this.y = Math.floor(r), this.locomotion = null, this.speed = 10, this.walkSpeed = 1.2, this.sprites = this.game.prodigy.create.element(this, 0, 0), this.indicatorE = this.game.prodigy.create.element(this);
	var n = 0,
		o = -150,
		h = "";
	this.source.npc ? (Util.isDefined(this.source.nameX) && (n = this.source.nameX), Util.isDefined(this.source.nameY) && (o = this.source.nameY), Util.isDefined(this.source.name) && (h = this.source.name)) : Util.isNullOrUndefined(this.source.modifiers) || this.source.modifiers.barrier !== !0 || (this.barrierSprite = this.game.prodigy.create.sprite(60, -160, "boss-titan-barrier", "1", {
		x: .5,
		y: .5
	}, this.addBarrierSpritesheet.bind(this, "deflect")), this.barrierSpriteBreak = this.game.prodigy.create.sprite(60, -160, "boss-titan-barrier-break", "1", {
		x: .5,
		y: .5
	}, this.addBarrierSpritesheet.bind(this, "break")), this.barrierSpriteSpark = this.game.prodigy.create.sprite(-325, -115, "boss-titan-spark", "1", {
		x: .5,
		y: .5
	}, this.addBarrierSpritesheet.bind(this, "spark")), this.add(this.barrierSprite), this.add(this.barrierSpriteBreak), this.add(this.barrierSpriteSpark)), this.name = this.game.prodigy.create.nameFont(this, n, this.source.npc ? o : 1 === a ? -130 : -230, h), this.add(this.name), this.name.oldY = this.name.y, this.fxQueue = 0, this.onDestroy.add(this.stopListeners, this), this.initListeners()
}, Prodigy.extends(Prodigy.Container.CreatureContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.CreatureContainer,
	initListeners: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.Creature.LEVEL_UP, this.onCreatureLevelUp.bind(this), this, this.source), this.game.broadcaster.addAppListener(Prodigy.Events.Creature.STARS_ADDED, this.onStarsAdded.bind(this), this, this.source), this.game.broadcaster.addAppListener(Prodigy.Events.FlyingStars.DONE, this.onFxAnimationDone.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.POPUP_CLOSED, this.processLevelEvent.bind(this), this, this)
	},
	stopListeners: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.LEVEL_UP, this, this.source), this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.STARS_ADDED, this, this.source), this.game.broadcaster.removeAppListener(Prodigy.Events.FlyingStars.DONE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Battle.POPUP_CLOSED, this, this)
	},
	enableLocomotion: function(e, t) {
		Util.isDefined(this.locomotion) || (this.locomotion = new Prodigy.Component.PlayerLocomotion(this.game), this.locomotion.setup(e, t, this.source === this.game.prodigy.player))
	},
	setNewTarget: function(e, t) {
		Util.isDefined(this.locomotion) && this.locomotion.setNewTarget(e, t)
	},
	reload: function(e) {
		this.outOfDate = !0, this.loadedCallback = e
	},
	startLoad: function() {
		this.outOfDate = !1
	},
	update: function() {
		if (Prodigy.Control.Element.prototype.update.call(this), !this.loading && this.outOfDate && this.startLoad(), Util.isDefined(this.source.emoteID) && (this.emote(this.source.emoteID), this.source.emoteID = null), Util.isDefined(this.source.chatID) && (this.chatText(this.source.chatID), this.source.chatID = null), Util.isDefined(this.source.danceID) && (this.dance(this.source.danceID, this.game.prodigy.player.appearance.getGender()), this.source.danceID = null), Util.isDefined(this.source.chatID) && (this.chatText(this.source.chatID), this.source.chatID = null), this.source.firework) {
			"object" == typeof this.source.firework && this.game.prodigy.network.emitMessage(this.source.firework);
			var e = this.game.prodigy.event.create();
			e.firework(this.x + 20, this.y - 200), e.start(), delete this.source.firework
		}
		if (this.source.confetti) {
			"object" == typeof this.source.confetti && this.game.prodigy.network.emitMessage(this.source.confetti);
			var e = this.game.prodigy.event.create();
			e.confetti(this.x + 20, this.y - 200), e.start(), delete this.source.confetti
		}
		if (this.source.goldwork) {
			"object" == typeof this.source.goldwork && this.game.prodigy.network.emitMessage(this.source.goldwork);
			var e = this.game.prodigy.event.create();
			e.goldwork(this.x + 20, this.y - 200), e.start(), delete this.source.goldwork
		}
	},
	emote: function(e, t, i) {
		var a = Items.getItemObject("emote", e);
		if (Util.isDefined(this.chatBubble) && this.chatBubble.destroy(), Util.isDefined(this.game) && Util.isDefined(a))
			if (a.data.isAnimated) {
				if (Util.isDefined(this.animatedEmote) && Util.isDefined(this.animatedEmote.emoteAnimation) && this.animatedEmote.emoteAnimation.isPlaying) return this.animatedEmote.emoteAnimation.stop(!0, !0), this.animatedEmote.create(a), void 0;
				this.animatedEmote = new Prodigy.Container.AnimatedEmote(this.game, this), this.animatedEmote.create(a)
			} else Util.isDefined(this.animatedEmote) && this.animatedEmote.emoteAnimation.isPlaying && this.animatedEmote.emoteAnimation.stop(!0, !0), this.chatBubble = new Prodigy.Container.ChatBubble(this.game, this, 0, -t || -100, i), this.chatBubble.setID(e)
	},
	chat: function(e, t, i) {
		Util.isDefined(this.game) && (Util.isDefined(this.chatBubble) || (this.chatBubble = new Prodigy.Container.ChatBubble(this.game, this, 0, -t || -100, i)), this.chatBubble.setID(e + 12))
	},
	chatText: function(e) {
		if (Util.isDefined(this.game)) {
			var t = this.game.prodigy.chat.getPhrase(e);
			Util.isDefined(t) && (Util.isDefined(this.timer) && window.clearInterval(this.timer), this.name.tint = this.chatColour, this.game.add.tween(this.name).to({
				y: this.name.oldY - 10
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.name.oldY
			}, 500, Phaser.Easing.Quadratic.In).start(), this.name.setText('"' + t + '"'), this.name.x = Math.round(this.source.nameX || -(.5 * this.name.width)), this.timer = setInterval(this.endChat.bind(this), 5e3))
		}
	},
	endChat: function() {
		this.name.tint = this.nameColour, Util.isDefined(this.timer) && window.clearInterval(this.timer), this.showName(this.name.visible)
	},
	"float": function(e) {
		Util.isDefined(this.floatTween) ? this.floatTween.stop() : (this.sprites.oldY = this.sprites.y, this.sprites.y = this.sprites.y - 10, this.floatTween = this.game.add.tween(this.sprites).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "20"
		}, 1400, Phaser.Easing.Quadratic.InOut).loop()), e ? this.floatTween.start() : (this.floatTween.stop(), this.sprites.y = this.sprites.oldY)
	},
	setValidPath: function(e, t, i, a) {
		var s = function(e, t) {
			this.setPath(t, e)
		};
		Util.isDefined(a) ? e.findPath(this.x, this.y, t, i, s.bind(this, a)) : e.findPath(this.x, this.y, t, i, this.setPath.bind(this))
	},
	stopTweens: function() {
		Util.isNullOrUndefined(this.game) || (this.game.tweens.removeFrom(this, !1), this.game.tweens.removeFrom(this.sprites))
	},
	setPath: function(e, t, i) {
		if (Util.isDefined(e)) {
			this.stopTweens(), Util.isDefined(i) || (i = this.walkSpeed);
			for (var a = null, s = null, r = this.x, n = this.y, o = e.length - 1; o >= 0; o--) {
				var h = e[o];
				Util.isDefined(h.x) || (h.x = r), Util.isDefined(h.y) || (h.y = n);
				var l = Phaser.Math.distance(h.x, h.y, r, n);
				if (0 !== l) {
					Util.isDefined(a) || (a = this.game.add.tween(this), s = this.game.add.tween(this.sprites.scale));
					var d = Math.abs(this.sprites.scale.x);
					a.to({
						x: h.x,
						y: h.y
					}, 6 * l / i, Phaser.Easing.Linear.None), s.to({
						x: h.x > r ? 1 * d : -1 * d
					}, 1, Phaser.Easing.Linear.None), s.to({}, 6 * l / i - 100, Phaser.Easing.Linear.None), r = h.x, n = h.y
				}
			}
			Util.isDefined(a) ? (a.onComplete.addOnce(this.stand, this), Util.isDefined(t) && a.onComplete.addOnce(t), this.walk(), this.mode = 0, Util.isDefined(a) && a.start(), Util.isDefined(s) && s.start()) : (Util.isDefined(t) && t(), this.stand())
		}
	},
	walk: function() {
		this.sprites.callAll("play", null, "walk", this.speed), this.mode = 0
	},
	showName: function(e, t) {
		var i;
		Util.isDefined(this.source.getName) ? i = this.source.getName() : Util.isDefined(this.source.name) && (i = this.source.name), this.source.isMember && (i = "@" + i), t && (i = t), this.name.setText(i), this.name.updateText(), Util.isDefined(this.source.nameX) ? this.name.x = this.source.nameX : this.name.hasOwnProperty("width") ? this.name.x = Math.round(-(.5 * this.name.width)) : this.name.hasOwnProperty("textWidth") && (this.name.x = Math.round(-(.5 * this.name.textWidth))), Util.isDefined(this.name) && (this.name.visible = e)
	},
	hop: function(e, t, i, a) {
		i = i || 0, a = a || 20;
		var s = this.game.add.tween(this).to({
			y: this.y - a
		}, e || 100, Phaser.Easing.Quadratic.Out).to({
			y: this.y
		}, e || 100, Phaser.Easing.Quadratic.In).start();
		this.game.add.tween(this).to({
			x: this.x + Math.floor(i / 2)
		}, e || 100, Phaser.Easing.Linear.None).to({
			x: this.x + i
		}, e || 100, Phaser.Easing.Linear.None).start(), Util.isDefined(t) && s.onComplete.addOnce(t)
	},
	stand: function() {
		this.sprites.callAll("play", null, "stand", this.speed), this.x = Math.round(this.x), this.y = Math.round(this.y), this.mode = 1
	},
	moonwalk: function() {
		this.sprites.callAll("play", null, "walk", this.speed), this.mode = 2
	},
	attack: function() {},
	damaged: function() {},
	flip: function() {
		this.sprites.scale.x = -1 * this.sprites.scale.x
	},
	isFacingLeft: function() {
		return this.sprites.scale.x < 0
	},
	faceToward: function(e) {
		this.sprites.scale.x = this.x > e ? -1 * this.setScale : this.setScale
	},
	addOnClick: function(e) {
		for (var t = 0; t < this.sprites.length; t++) this.sprites.children[t].inputEnabled = !0, this.sprites.children[t].events.onInputDown.add(e.bind(this))
	},
	onFxAnimationDone: function() {
		this.fxQueue > 0 && (this.fxQueue--, 0 === this.fxQueue && this.game.broadcaster.broadcast(Prodigy.Events.Creature.ANIMATION_DONE, this.source, []))
	},
	onStarsAdded: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.Battle.GET_IS_RUNNING, this.game) === !0 && (this.fxQueue++, this.flyingStars = new Prodigy.Container.FlyingStars(this.game, this.x, this.y - (this.height - 35)))
	},
	onCreatureLevelUp: function() {
		"TileScreen" !== this.game.state.current && "Arena" !== this.game.state.current && (this.fxQueue++, this.game.time.events.add(3e3, this.finishLevelUp.bind(this), this))
	},
	finishLevelUp: function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "level-up");
		var e = this.game.prodigy.create.sprite(-86, this.source === this.game.prodigy.player ? -320 : -330, "battle"),
			t = this.game.prodigy.create.sprite(-86, this.source === this.game.prodigy.player ? -320 : -330, "battle");
		e.animations.add("over", Phaser.Animation.generateFrameNames("levelup-over-", 1, 10), !0).onComplete.add(function() {
			e.destroy(), this.onLevelUpAnimationDone()
		}, this, e), t.animations.add("under", Phaser.Animation.generateFrameNames("levelup-under-", 1, 11), !0).onComplete.add(function() {
			t.destroy()
		}, t), e.animations.play("over", 10), t.animations.play("under", 10), this.sprites.add(e), this.sprites.addAt(t, 0)
	},
	checkShowLevelUp: function(e) {
		if (0 === e.length) return !0;
		for (var t = 0; t < e.length; t++)
			if (Util.isDefined(e[t].h)) return !1;
		return !0
	},
	onLevelUpAnimationDone: function() {
		var e = this.source.getUnprocessedLevelEvents();
		this.checkShowLevelUp(e) ? this.callBattlePopup({
			type: Prodigy.Menu.BattleBase.LEVEL_UP,
			source: this.source
		}) : this.processLevelEvent()
	},
	processLevelEvent: function() {
		var e = this.source.getUnprocessedLevelEvents();
		if (Util.isDefined(e) && e.length > 0) {
			var t = e.pop();
			if (Util.isDefined(t.h) && this.levelEventNewHeart(t.h), Util.isDefined(t.a) && this.levelEventNewSpell(this.game.prodigy.attacks.getAttack(t.a)), Util.isDefined(t.e) && this.levelEventEvolve(t.e), Util.isDefined(t.g)) {
				if (e.length >= 1) return e.unshift(t), this.processLevelEvent(), void 0;
				var i = Items.getItemObject("giftBox", 1);
				"USA" === this.game.prodigy.player.location && Util.isDefined(i) && t.lvl === this.game.prodigy.player.data.level ? this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.RECEIVE_CONJURE_CUBE, null, [{
					ID: i.ID,
					q: i.data.questions,
					isOpen: !1,
					callback: this.processLevelEvent.bind(this)
				}]) : this.processLevelEvent()
			}
		} else this.onFxAnimationDone()
	},
	levelEventNewHeart: function(e) {
		for (var t = 0; 10 > t; t++) {
			var i = this.game.prodigy.create.sprite(this.x, this.y - 50, "core-2", "user-heart");
			this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [i, "content"]), i.anchor.setTo(.5, .5), i.alpha = .5, this.game.add.tween(i).to({
				x: 470
			}, 600, Phaser.Easing.Linear.None).delay(300 * t).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(i).to({
				y: 55
			}, 600, Phaser.Easing.Quadratic.Out).delay(300 * t).start()
		}
		this.source.changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER), this.callBattlePopup({
			type: Prodigy.Menu.BattleBase.LEVEL_UP,
			hearts: 10 * e,
			source: this.source
		})
	},
	levelEventNewSpell: function(e) {
		for (var t = 0; 6 > t; t++) {
			var i = this.game.prodigy.icon.createFromData(e, this.x, this.y - 50);
			i.onTextureLoaded = this.onLevelEventSpellIconLoaded.bind(this, i, t)
		}
		this.game.time.events.add(3e3, this.callBattlePopup.bind(this, {
			type: Prodigy.Menu.BattleBase.SPELL,
			source: this.source,
			spell: e
		}), this)
	},
	onLevelEventSpellIconLoaded: function(e, t) {
		this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [e, "content"]), e.anchor.setTo(3, 3), e.angle = 60 * t, this.game.add.tween(e).to({
			angle: "+1000"
		}, 3500, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.anchor).to({
			x: .5,
			y: .5
		}, 1500, Phaser.Easing.Linear.None).delay(2e3).to({
			x: 5,
			y: 5
		}, 500, Phaser.Easing.Linear.None).start()
	},
	levelEventEvolve: function(e) {
		this.chat(1, this.sprites.height, !0), this.loadCompleted = !1, this.blinkCount = 0, this.stopEvolve = !1, this.game.prodigy.effects.flashText(this.source.getName() + " is evolving into...", null, Prodigy.EffectFactory.TOP, Prodigy.EffectFactory.SMALL, 3500);
		var t = this.game.prodigy.create.sprite(this.x, 0, "attacks", "core-beam2");
		this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [t, "content"]), t.alpha = .75, t.anchor.setTo(.5, 0);
		var i = this.game.prodigy.create.button(this.contents, this.x - 200, 620, "battle", "stop-evolve", this.stopEvolving.bind(this));
		this.game.add.tween(t).to({
			height: 720
		}, 250, Phaser.Easing.Linear.None).delay(500).start();
		var a = this.game.add.tween(t).to({
			alpha: .25
		}, 400, Phaser.Easing.Linear.None, !0, 0, 1e3, !0);
		a.onLoop.add(this.blinkComplete.bind(this, e, a, t, i), this), this.game.prodigy.load.assets(Prodigy.Container.MonsterContainer.getAssets(this.source), this.loadComplete.bind(this))
	},
	loadComplete: function(e, t) {
		Util.isDefined(this.game) && t && (this.loadCompleted = !0)
	},
	stopEvolving: function() {
		this.stopEvolve = !0
	},
	blinkComplete: function(e, t, i, a) {
		this.loadCompleted && !(this.blinkCount < 14) || this.stopEvolve ? (Util.isDefined(a) && (a.visible = !1), t.stop(), this.game.add.tween(i).to({
			alpha: 0
		}, 300, Phaser.Easing.Linear.None, !0), this.game.add.tween(i.scale).to({
			x: 5
		}, 300, Phaser.Easing.Linear.None, !0), this.stopEvolve ? this.game.prodigy.effects.flashText(this.source.getName() + " stopped evolving!", null, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.SMALL, 2500) : (this.source.evolve(e), this.reload(), this.game.prodigy.effects.flashText(this.source.getSourceName() + "!", null, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.MEDIUM, 2500)), this.chatBubble.visible = !1, this.game.time.events.add(5500, this.processLevelEvent.bind(this), this)) : this.blinkCount++
	},
	callBattlePopup: function(e) {
		this.game.prodigy.open.battleLevel(this, e)
	},
	doBarrierAnimation: function() {
		this.barrierSprite.alpha = 1, this.barrierSpriteSpark.alpha = 1, this.barrierSprite.play("deflect"), this.barrierSpriteSpark.play("spark")
	},
	doBarrierBreakAnimation: function() {
		this.barrierSpriteBreak.alpha = 1, this.barrierSpriteSpark.alpha = 1, this.barrierSpriteBreak.play("break"), this.barrierSpriteSpark.play("spark")
	},
	addBarrierSpritesheet: function(e, t) {
		t.alpha = 0, t.scale.x = 2.33, t.scale.y = 2.33, t.smoothed = !1, t.smoothing = !1, t.animations.add(e, null, 10, !1), t.animations.getAnimation(e).onComplete.add(function() {
			t.alpha = 0
		}, this)
	}
}), Prodigy.MonsterContainerAdv = function(e, t, i, a, s) {
	Prodigy.Container.CreatureContainer.call(this, e, t, s, 1, i, a), this.assets = Prodigy.MonsterContainerAdv.getAssets(this.source)
}, Prodigy.extends(Prodigy.MonsterContainerAdv, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.MonsterContainerAdv,
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.MonsterContainerAdv.getAssets(this.source), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function() {
		this.complete = !0, this.loading = !1
	},
	tryAction: function(e) {
		return !this.complete || this.loading ? (window.setTimeout(e, 500), !1) : !0
	},
	removeTweens: function(e) {
		for (var t = 0; t < e.length; t++) this.game.tweens.removeFrom(e[t], !1)
	},
	rig: function() {}
}), Prodigy.MonsterContainerAdv.getAssets = function(e) {
	return ["tmp-" + e.getID()]
}, Prodigy.Container.QuestMap = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a
}, Prodigy.extends(Prodigy.Container.QuestMap, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuestMap,
	open: function(e, t) {
		this.zone = e, this.visible = !0, Util.isDefined(this.map) && this.map.destroy(), Util.isDefined(this.page) && this.page.destroy(), this.page = this.game.prodigy.create.element(this, 0, 0);
		var i = new Phaser.TileSprite(this.game, 640, 70, 10, 494, "core-2", "map-mid");
		i.anchor.setTo(.5, 0), this.page.add(i);
		var a = this.game.add.tween(i).to({
				width: 850
			}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
				width: 810
			}, 300, Phaser.Easing.Quadratic.InOut).start(),
			s = this.game.prodigy.create.sprite(640, 70, "core-2", "map-side");
		s.anchor.setTo(1, 0), this.page.add(s), this.game.add.tween(s).to({
			x: s.x - 420
		}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
			x: s.x - 400
		}, 300, Phaser.Easing.Quadratic.InOut).start(), s = this.game.prodigy.create.sprite(752, 70, "core-2", "map-side"), s.scale.x = -1, this.page.add(s), this.game.add.tween(s).to({
			x: s.x + 420
		}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
			x: s.x + 400
		}, 300, Phaser.Easing.Quadratic.InOut).start(), a.onComplete.addOnce(this.createMap.bind(this, t), this), this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.STOP_PLAYER)
	},
	createMap: function(e) {
		if (this.exists) {
			this.map = this.game.prodigy.create.element(this, 90, 50), this.map.alpha = 0;
			for (var t = this.game.add.graphics(500, 110, this.map), i = this.game.prodigy.player.quests.getCurrentQuest(this.zone.ID), a = this.game.prodigy.player.quests.isQuestStarted(this.zone.ID, i), s = null, r = null, n = 0, o = null, h = 0; h < this.zone.quests.length; h++) {
				var l = this.zone.quests[h],
					d = i - 1 > h || i - 1 === h && a ? 16229944 : 8947848;
				Util.isDefined(s) && (t.lineStyle(7, 0), t.moveTo(s[0], s[1]), t.lineTo(l.coords[0], l.coords[1]), t.lineStyle(5, d), t.moveTo(s[0], s[1]), t.lineTo(l.coords[0], l.coords[1])), this.map.add(this.game.prodigy.create.sprite(t.x + l.coords[0] - 25, t.y + l.coords[1] - 14, "core-2", i - 1 > h || i - 1 === h && a ? "node" : "node2"));
				var c = this.game.prodigy.create.sprite(t.x + l.coords[0], t.y + l.coords[1] - 20, "icons", "star-small");
				e && h + 1 === e.complete ? (c.frameName = "yes", o = l, n = h + 1, r = c) : i - 1 > h ? (c.frameName = "yes", o = l, n = h + 1, r = c) : h !== i - 1 && 0 !== h || Util.isDefined(e) && e.complete || (Util.isDefined(l.req) && a ? (c.destroy(), c = this.game.prodigy.icon.createFromData(l.reward[0], t.x + l.coords[0], t.y + l.coords[1] - 20, {
					x: .5,
					y: .5
				})) : c.frameName = "star", r = c, o = l, n = h + 1), c.inputEnabled = !0, c.oldY = c.y, c.events.onInputDown.add(this.showQuestTargets.bind(this, l, h + 1, c), this), c.anchor.setTo(.5, .5), this.map.add(c), s = l.coords
			}
			this.targetQuest = o, this.targetID = n, this.target = r, this.game.add.tween(this.map).to({
				alpha: 1
			}, 300, Phaser.Easing.Quadratic.Out, !0).onComplete.addOnce(this.showQuestTargets.bind(this, o, n, r), this), this.map.add(this.game.prodigy.icon.createIcon(270, -15, this.zone.icon)), this.map.add(this.game.prodigy.icon.createIcon(750, -15, this.zone.icon)), this.game.prodigy.create.font(this.map, 300, 15, this.zone.fullName, {
				size: 36,
				align: "center",
				width: 500,
				font: "button"
			})
		}
	},
	showQuestTargets: function(e, t, i) {
		if (i !== this.currentIcon && this.exists) {
			Util.isDefined(this.quest) && this.quest.destroy();
			var a = this.game.prodigy.player.quests.getCurrentQuest(this.zone.ID);
			if (Util.isDefined(this.currentTween) && (this.game.tweens.remove(this.currentTween), this.currentIcon.y = this.currentIcon.oldY), this.currentIcon = i, this.currentTween = this.game.add.tween(i).to({
					y: i.y - 10
				}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, 99999, !0), this.quest = this.game.prodigy.create.element(this.map, 154, 80), this.game.prodigy.create.panel(this.quest, 0, 0, 6, 6), t > a || t === a && !this.game.prodigy.player.quests.isQuestStarted(this.zone.ID, a)) return this.game.prodigy.create.font(this.quest, 15, 10, "???", {
				width: 270,
				align: "center"
			}), void 0;
			if (this.game.prodigy.create.font(this.quest, 15, 10, e.name, {
					width: 270,
					align: "center"
				}), Util.isDefined(e.req)) {
				this.game.prodigy.create.font(this.quest, 15, 80, e.desc, {
					width: 270
				});
				for (var s = 150 - 42 * (e.req.length - 1), r = 0; r < e.req.length; r++) {
					var n = e.req[r],
						o = 0;
					if (o = "pet" === n.type ? this.game.prodigy.player.quests.getMonsterProgress(this.zone.ID, n.ID) : "boss" === n.type || "player" === n.type ? this.game.prodigy.player.quests.getBossProgress(this.zone.ID) : this.game.prodigy.player.backpack.hasItem(n.type, n.ID), Util.isDefined(n.type) && Items.data.hasOwnProperty(n.type) ? this.quest.add(this.game.prodigy.icon.createFromData({
							type: n.type,
							ID: n.ID
						}, s - 40, 250)) : this.quest.add(this.game.prodigy.create.sprite(s - 40, 250, "icons", Util.convertItemToIcon(n))), a > t || o >= n.N) {
						var h = this.game.prodigy.create.sprite(s - 40 + 22, 210, "icons", "yes");
						this.quest.add(h)
					} else this.game.prodigy.create.font(this.quest, s - 50, 215, o + "/" + n.N, {
						width: 100,
						align: "center"
					});
					s += 84
				}
			}
		}
	}
}), Prodigy.Container.PlayerContainer = function(e, t, i, a, s, r, n) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, a, s, r), this.headOnly = n, this.clickEnabled = !0, this.digSetup = !1, this.showHandIK = !1, this.weaponSize = 0, this.animState = "", this.lastSmoothing = null, this.forceWeaponVisual = !1, null != Prodigy.Container.PlayerContainer.smoothOverride && (this.lastSmoothing = Prodigy.Container.PlayerContainer.smoothOverride), this.animStates = {
		STAND: "stand",
		WALK: "walk",
		DIG: "dig",
		ATTACK: "attack",
		ATTACK_BIG: "attackBig",
		STAND_FLOAT: "standFloat",
		WALK_FLOAT: "walkFloat",
		FLOAT_DIG: "floatDig",
		ATTACK_FLOAT: "attackFloat",
		SETUP: "setup"
	}, this.anchorOffsetY = a > 1 ? 0 : -12, this.fixedIKPositions = {
		head: {
			x: 1,
			y: -43 + this.anchorOffsetY
		},
		neck: {
			x: -5,
			y: -14 + this.anchorOffsetY
		}
	}, this.tweenAnimations = {}, GameConstants.get("GameConstants.Build.DEBUG") && (this.game.prodigy.automation.addTrigger({
		ID: "autoclick-" + this.source.appearance.data.name,
		context: this,
		callback: function() {
			return {
				x: this.worldPosition.x,
				y: this.worldPosition.y
			}
		}.bind(this)
	}), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK, this.onDebugAutoClick.bind(this), this))
}, Prodigy.Container.PlayerContainer.smoothOverride = null, Prodigy.Container.PlayerContainer.overrideSmoothing = function(e) {
	Prodigy.Container.PlayerContainer.smoothOverride = e
}, Prodigy.extends(Prodigy.Container.PlayerContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.PlayerContainer,
	forceOutfit: function(e) {
		this.digSetup = 39 === e
	},
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.transforming = this.transformID !== this.source.transformID, this.transformID = this.source.transformID, this.setup()
	},
	showSmoke: function() {
		Util.isDefined(this.smoke) && this.smoke.destroy(), this.smoke = this.game.prodigy.create.element(this, 0, 0);
		for (var e = 0; 10 > e; e++) {
			var t = this.game.prodigy.create.sprite(0, 0, "icons", "smoke");
			t.sprites.scale.x = t.sprites.scale.y = .5 * this.setScale, t.anchor.setTo(.5, .5);
			var i = Math.floor(-30 + 60 * Math.random()),
				a = Math.floor(-50 - 50 * Math.random()) * this.setScale;
			this.game.add.tween(t).to({
				y: "" + a,
				x: "" + i,
				angle: Math.floor(-100 + 200 * Math.random()),
				alpha: 0
			}, 500 + Math.floor(1e3 * Math.random()), Phaser.Easing.Quadratic.Out).start(), this.smoke.add(t)
		}
	},
	setupMonster: function() {},
	setupAssetsToLoad: function() {
		Items.exist("outfit", this.data.outfit) || (this.data.outfit = 1);
		var e = this.source.appearance.getGender();
		if (this.outfitTag = e + "-outfit-" + this.data.outfit, this.hatTag = "player-hat-" + this.data.hat, this.hairTag = "player-hair-" + this.data.hair.style, this.faceTag = "player-face-" + this.data.face, this.weaponTag = "player-weapon-" + this.data.weapon, this.hairMetadata = Items.getItemMetadata("hair", this.data.hair.style), this.hatMetadata = Util.isDefined(this.data.hat) ? Items.getItemMetadata("hat", this.data.hat) : null, this.outfitMetadata = Items.getItemMetadata("outfit", this.data.outfit).assets[e], this.faceMetadata = Items.getItemMetadata("face", this.data.face), this.weaponMetadata = Util.isDefined(this.data.weapon) ? Items.getItemMetadata("weapon", this.data.weapon) : null, Util.isDefined(this.hatMetadata) && Util.isDefined(this.hatMetadata.hairHide) && parseInt(this.hatMetadata.hideReplace) >= 0)
			for (var t = 0; t < this.hatMetadata.hairHide.length; t++)
				if (-1 === this.hatMetadata.hairHide[t] || this.data.hair.style === this.hatMetadata.hairHide[t]) {
					this.hairTag = "player-hair-" + this.hatMetadata.hideReplace, this.hairMetadata = Items.getItemMetadata("hair", parseInt(this.hatMetadata.hideReplace));
					break
				} var i = {};
		i["player-head-1"] = {
			type: "singleImage",
			v: 5
		}, i["player-neck-1"] = {
			type: "singleImage",
			v: 1
		}, i[this.hairTag] = this.hairMetadata, i[this.faceTag] = this.faceMetadata, Util.isDefined(this.data.weapon) && (i[this.weaponTag] = this.weaponMetadata), Util.isDefined(this.data.hat) && (i[this.hatTag] = this.hatMetadata), this.game.prodigy.assets.appendAssets(i)
	},
	setup: function() {
		this.characterContainer = new Phaser.Group(this.game, this), this.add(this.characterContainer), this.visible = !1, this.setData(), this.setupAssetsToLoad(), this.flagsToComplete = 8, this.sprites.removeAll(!0), this.rightArm = this.game.prodigy.create.sprite(this.outfitMetadata.rightArm.x, this.outfitMetadata.rightArm.y + this.anchorOffsetY, this.outfitTag, "rightArm_0", !1, this.updateRightArm.bind(this)), this.leftArm = this.game.prodigy.create.sprite(this.outfitMetadata.leftArm.x, this.outfitMetadata.leftArm.y + this.anchorOffsetY, this.outfitTag, "leftArm_0", !1, this.updateLeftArm.bind(this)), this.shirt = this.game.prodigy.create.sprite(this.outfitMetadata.shirt.x, this.outfitMetadata.shirt.y + this.anchorOffsetY, this.outfitTag, "outfit", !1, this.updateShirt.bind(this)), this.legs = this.game.prodigy.create.sprite(this.outfitMetadata.legs.x, this.outfitMetadata.legs.y + this.anchorOffsetY, this.outfitTag, "legs_0", !1, this.updateLegs.bind(this)), Util.isDefined(this.data.hat) ? (this.flagsToComplete++, this.hat = this.game.prodigy.create.sprite(this.hatMetadata.x, this.hatMetadata.y + this.anchorOffsetY, this.hatTag, null, !1, this.updateHat.bind(this))) : this.hat = null, (this.setScale > 1 || this.forceWeaponVisual) && Util.isDefined(this.data.weapon) || this.digSetup ? (this.flagsToComplete++, this.weapon = this.game.prodigy.create.sprite(this.leftArm.x + this.outfitMetadata.leftArm.handIK.x, this.leftArm.y + this.outfitMetadata.leftArm.handIK.y, this.weaponTag, null, !1, this.updateWeapon.bind(this))) : this.weapon = null, this.game.prodigy.colorReplaceController.checkColorAsset("player-head-1", [{
			color: this.data.skinColor,
			itemColor: "skinColor"
		}], this.updateHead.bind(this)), this.game.prodigy.colorReplaceController.checkColorAsset("player-neck-1", [{
			color: this.data.skinColor,
			itemColor: "skinColor"
		}], this.updateNeck.bind(this)), this.game.prodigy.colorReplaceController.checkColorAsset(this.faceTag, [{
			color: this.data.faceColor,
			itemColor: "faceColor"
		}, {
			color: this.data.eyeColor,
			itemColor: "eyeColor",
			base: [
				[85, 85, 85]
			]
		}], this.updateFace.bind(this)), this.game.prodigy.colorReplaceController.checkColorAsset(this.hairTag, [{
			color: this.data.hair.color,
			itemColor: "hairColor"
		}], this.updateHair.bind(this))
	},
	mountSprites: function() {
		var e = 1 === this.setScale;
		Util.isDefined(Prodigy.Container.PlayerContainer.smoothOverride) && (e = Prodigy.Container.PlayerContainer.smoothOverride), this.headOnly || this.sprites.add(this.leftArm), this.headOnly || this.digSetup || Util.isDefined(this.weapon) && (this.sprites.add(this.weapon), this.weapon.smoothed = e), this.headOnly || this.sprites.add(this.neck), this.sprites.add(this.head), this.head.addChild(this.eyes), this.head.addChild(this.hair), this.headOnly || (this.sprites.add(this.legs), this.sprites.add(this.shirt), this.sprites.add(this.rightArm)), Util.isDefined(this.hat) && (this.sprites.addChild(this.hat), this.hat.smoothed = e), !this.headOnly && this.digSetup && Util.isDefined(this.weapon) && (this.sprites.add(this.weapon), this.weapon.smoothed = e), this.neck.smoothed = e, this.head.smoothed = e, this.hair.smoothed = e, this.eyes.smoothed = e, this.leftArm.smoothed = e, this.rightArm.smoothed = e, this.shirt.smoothed = e, this.legs.smoothed = e, this.sprites.scale.setTo(this.sprites.scale.x < 0 ? -this.setScale : this.setScale, this.setScale), this.setupCollisionBlock(), this.x = Math.round(this.x), this.y = Math.round(this.y)
	},
	onLoadComplete: function() {
		this.flagsToComplete--, this.flagsToComplete > 0 || !Util.isDefined(this.game) || (this.mountSprites(), this.setupAnimations(), this.transforming && this.showSmoke(), this.stand(), Util.isDefined(this.loadedCallback) && (Util.log("loaded callback in player container"), this.loadedCallback()), this.complete = !0, this.loading = !1, this.visible = !0, Util.isDefined(this.game) && this.game.broadcaster.broadcast(Prodigy.Events.Creature.PLAYER_LOADED, this.game, [this]))
	},
	updateRightArm: function(e) {
		Util.isDefined(this.outfitMetadata) && Util.isDefined(this.outfitMetadata.rightArm.pivot) ? (e.anchor.x = this.outfitMetadata.rightArm.pivot.x / e.width, e.anchor.y = this.outfitMetadata.rightArm.pivot.y / e.height) : (e.anchor.x = .625, e.anchor.y = .35), this.onLoadComplete()
	},
	updateLeftArm: function(e) {
		if (Util.isDefined(this.outfitMetadata) && Util.isDefined(this.outfitMetadata.leftArm.pivot) ? (e.anchor.x = this.outfitMetadata.leftArm.pivot.x / e.width, e.anchor.y = this.outfitMetadata.leftArm.pivot.y / e.height) : (e.anchor.x = .3125, e.anchor.y = .35), this.showHandIK && Util.isDefined(this.game)) {
			var t = this.game.prodigy.create.sprite(this.outfitMetadata.leftArm.handIK.x, this.outfitMetadata.leftArm.handIK.y, "icons", "empty");
			t.anchor.set(.5, .5), t.scale.set(.1), e.addChild(t)
		}
		this.onLoadComplete()
	},
	updateShirt: function(e) {
		Util.has(this, "outfitMetadata.shirt.pivot") ? (e.anchor.x = this.outfitMetadata.shirt.pivot.x / e.width, e.anchor.y = this.outfitMetadata.shirt.pivot.y / e.height) : (e.anchor.x = 62 / 96, e.anchor.y = .5), this.onLoadComplete()
	},
	updateLegs: function(e) {
		Util.has(this, "outfitMetadata.legs.pivot") ? (e.anchor.x = this.outfitMetadata.legs.pivot.x / e.width, e.anchor.y = this.outfitMetadata.legs.pivot.y / e.width) : (e.anchor.x = .5, e.anchor.y = .2), this.onLoadComplete()
	},
	updateHair: function() {
		if (Util.isDefined(this.game)) {
			if (this.hair = this.game.prodigy.create.sprite(this.hairMetadata.x, this.hairMetadata.y, this.hairTag + "-" + this.data.hair.color), Util.isDefined(this.hairMetadata) && Util.isDefined(this.hairMetadata.pivot) ? (this.hair.anchor.x = this.hairMetadata.pivot.x / this.hair.width, this.hair.anchor.y = this.hairMetadata.pivot.y / this.hair.height) : (this.hair.anchor.x = 64 / 112, this.hair.anchor.y = 36 / 112), Util.isDefined(this.hatMetadata) && -1 === parseInt(this.hatMetadata.hideReplace) && this.hatMetadata.hairHide.length > 0)
				for (var e = 0; e < this.hatMetadata.hairHide.length; e++)
					if (-1 === this.hatMetadata.hairHide[e] || this.hatMetadata.hairHide[e] === this.data.hair.style) {
						this.hair.visible = !1;
						break
					} this.onLoadComplete()
		}
	},
	updateHat: function(e) {
		Util.isDefined(this.hatMetadata) && Util.isDefined(this.hatMetadata.pivot) ? (e.anchor.x = this.hatMetadata.pivot.x / e.width, e.anchor.y = this.hatMetadata.pivot.y / e.height) : (e.anchor.x = 71 / 128, e.anchor.y = .4375), this.onLoadComplete()
	},
	updateFace: function() {
		Util.isDefined(this.game) && (this.eyes = this.game.prodigy.create.sprite(0, 0, "player-face-" + this.data.face + "-" + this.data.faceColor + "-" + this.data.eyeColor), this.eyes.anchor.set(26 / 48, 21 / 32), this.onLoadComplete())
	},
	updateHead: function() {
		Util.isDefined(this.game) && (this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_SCENE, this.onDebugAutoClick.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this.onDebugAutoClickList.bind(this), this), this.head = this.game.prodigy.create.sprite(this.fixedIKPositions.head.x, this.fixedIKPositions.head.y, "player-head-1-" + this.data.skinColor), this.head.anchor.set(31 / 52, 37 / 49), this.onLoadComplete())
	},
	setupCollisionBlock: function() {
		if (Util.isDefined(this.game)) {
			var e = this.sprites.add(this.game.prodigy.create.sprite(-40, -100, "core", "empty"));
			e.width = 70, e.height = 60, e.inputEnabled = !0, e.alpha = .5, e.events.onInputDown.add(this.playerClicked.bind(this));
			var t = this.sprites.add(this.game.prodigy.create.sprite(-30, -41, "core", "empty"));
			t.width = 50, t.height = 40, t.inputEnabled = !0, t.alpha = .5, t.events.onInputDown.add(this.playerClicked.bind(this))
		}
	},
	updateNeck: function() {
		Util.isDefined(this.game) && (this.neck = this.game.prodigy.create.sprite(this.fixedIKPositions.neck.x, this.fixedIKPositions.neck.y, "player-neck-1-" + this.data.skinColor), this.neck.anchor.x = 5 / 6, this.neck.anchor.y = 2, this.neck.angle = 0, this.onLoadComplete())
	},
	updateWeapon: function(e) {
		Util.isDefined(this.weaponMetadata) ? (this.weaponSize = this.weaponMetadata.size || 0, e.anchor.x = this.weaponMetadata.anchor.x || .5, e.anchor.y = this.weaponMetadata.anchor.y || .85, e.angle = this.weaponMetadata.angle || 45) : (e.anchor.x = .5, e.anchor.y = .85, e.angle = 45), this.onLoadComplete()
	},
	randomSetup: function() {
		this.source.appearance.data.gender = Math.random() > .5 ? "male" : "female", this.source.equipment.data.outfit = Math.floor(56 * Math.random() + 1), this.source.equipment.data.hat = Math.random() > .4 ? Math.floor(56 * Math.random() + 1) : null, this.source.equipment.data.weapon = Math.floor(56 * Math.random() + 1), this.source.appearance.data.hair = {
			style: Math.floor(15 * Math.random()) + 1,
			color: Math.floor(21 * Math.random()) + 1
		}, this.source.appearance.data.eyeColor = Math.floor(15 * Math.random()) + 1, this.source.appearance.data.face = Math.floor(15 * Math.random()) + 1, this.source.appearance.data.skinColor = Math.floor(5 * Math.random()) + 1
	},
	setData: function() {
		this.data = {
			hair: this.source.appearance.getHair(),
			eyeColor: this.source.appearance.getEyeColor(),
			face: this.source.appearance.getFace(),
			skinColor: this.source.appearance.getSkinColor(),
			weapon: this.digSetup ? 96 : this.source.equipment.getEquipment("weapon"),
			hat: this.source.equipment.getEquipment("hat"),
			outfit: this.source.equipment.getEquipment("outfit") || 1
		}, this.data.faceColor = Items.getItemMetadata("skinColor", this.data.skinColor).faceColor
	},
	playerClicked: function() {
		Util.isDefined(this.clickCallback) && this.clickEnabled && this.clickCallback()
	},
	onDebugAutoClick: function(e) {
		Util.isDefined(this.clickCallback) && e === "player_" + this.x + "_" + this.y && this.clickCallback()
	},
	onDebugAutoClickList: function() {
		Util.log("Scene Tag: player_" + this.x + "_" + this.y)
	},
	stopListeners: function() {
		Prodigy.Container.CreatureContainer.prototype.stopListeners.call(this), GameConstants.get("GameConstants.Build.DEBUG") && (this.game.prodigy.automation.removeAllTriggers(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_SCENE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this, this.game))
	},
	damaged: function() {
		this.game.add.tween(this).to({
			alpha: .5
		}, 100, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER).start(), this.speed = 0
	},
	broadcastPlayerFullInfo: function(e) {
		if (Util.isDefined(this.locomotion)) {
			var t = {
				action: "info",
				data: {
					userID: this.source.userID,
					target: this.locomotion.target,
					appearance: this.source.appearance.data,
					isMember: this.source.isMember,
					equipment: this.source.equipment.data,
					data: this.source.data
				}
			};
			Util.isDefined(e) && (t.target = parseInt(e)), this.game.prodigy.network.emitMessage(t)
		}
	},
	setupAnimations: function() {
		if (!this.headOnly) {
			this.tweenAnimations = {};
			var e = [],
				t = 0,
				i = Prodigy.Container.PlayerContainerAnimations;
			for (var a in i) {
				this.tweenAnimations[a] = [];
				for (var s in i[a])
					if (Util.isDefined(this[s]))
						for (var r in i[a][s]) {
							e = [];
							var n = r,
								o = new Prodigy.TweenController(this.game, this[s]);
							for (t = 0; t < i[a][s][r].frames.length; t++) "x" === r || "y" === r || "angle" === r ? "walk" === a && "legs" === s && "y" === r ? e.push(i[a][s][r].frames[t] + this[s][r] + ("male" === this.source.appearance.getGender() ? 2 : 4)) : e.push(i[a][s][r].frames[t] + this[s][r]) : "xScale" === r ? (n = "x", e.push(i[a][s][r].frames[t])) : "yScale" === r ? (n = "y", e.push(i[a][s][r].frames[t])) : "images/right-arm" === i[a][s][r].frames[t] ? e.push("rightArm_0") : e.push(s + "_" + i[a][s][r].frames[t]);
							if (("xScale" === r || "yScale" === r) && (o = new Prodigy.TweenController(this.game, this[s].scale)), o.set(n, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(o), "head" === s) {
								for (var h = ["hat"], n = r, l = null, d = 0; d < h.length; d++)
									if (i[a].hasOwnProperty(h[d]) === !1 && this[h[d]]) {
										if (e = [], "x" !== r || null == l)
											for (t = 0; t < i[a][s][r].frames.length; t++) "x" === r || "y" === r || "angle" === r ? e.push(i[a][s][r].frames[t] + this[h[d]][r]) : "xScale" === r ? (n = "x", e.push(i[a][s][r].frames[t])) : "yScale" === r && (n = "y", e.push(i[a][s][r].frames[t]));
										var c = new Prodigy.TweenController(this.game, this[h[d]]);
										if ("yScale" === r) {
											var c = new Prodigy.TweenController(this.game, this[h[d]].scale);
											c.set(n, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(c)
										} else if ("xScale" === r) {
											var c = new Prodigy.TweenController(this.game, this[h[d]].scale);
											if (c.set(n, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(c), e.length > 1) {
												for (var p = [], g = this[h[d]].x, u = 0; u < e.length; u++) - 1 === e[u] ? p.push(-1 * g + i[a][s].x.frames[u] / 2 - 2) : Util.isNullOrUndefined(i[a][s].x) || Util.isNullOrUndefined(i[a][s].x.frames) || Util.isNullOrUndefined(!Util.isNullOrUndefined(i[a][s].x.frames[u])) ? p.push(g) : p.push(g + i[a][s].x.frames[u]);
												var y = new Prodigy.TweenController(this.game, this[h[d]]);
												y.set("x", p, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), Util.isNullOrUndefined(l) ? (l = this.tweenAnimations[a].length, this.tweenAnimations[a].push(y)) : this.tweenAnimations[a] = l
											}
										} else c.set(n, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(c)
									}
							} else if ("shirt" === s)
								for (var h = ["neck"], d = 0; d < h.length; d++)
									if (i[a].hasOwnProperty(h[d]) === !1 && this[h[d]]) {
										for (e = [], t = 0; t < i[a][s][r].frames.length; t++)("x" === r || "y" === r || "angle" === r) && e.push(i[a][s][r].frames[t] + this[h[d]][r]);
										var c = new Prodigy.TweenController(this.game, this[h[d]]);
										c.set(r, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(c)
									}
						} else if ("character" === s)
							for (var r in i[a][s]) {
								var o = new Prodigy.TweenController(this.game, this.sprites),
									n = r;
								for (e = [], t = 0; t < i[a][s][r].frames.length; t++) "x" === r ? e.push(i[a][s][r].frames[t]) : "y" === r ? e.push(i[a][s][r].frames[t]) : "xScale" === r ? (n = "x", e.push(i[a][s][r].frames[t])) : "yScale" === r && (n = "y", e.push(i[a][s][r].frames[t]));
								("xScale" === r || "yScale" === r) && (o = new Prodigy.TweenController(this.game, this.sprites.scale)), o.set(n, e, i[a][s][r].interval, i[a].loop ? GameConstants.MAX_SAFE_INTEGER : 1), this.tweenAnimations[a].push(o)
							}
			}
		}
	},
	setNewAnimationState: function(e, t, i) {
		if (!(this.animState === e && e === this.animStates.WALK || this.headOnly)) {
			this.animState = e;
			var a = (new Date).getTime();
			if (this.tweenAnimations.hasOwnProperty(this.animState))
				for (var s = 0; s < this.tweenAnimations[this.animState].length; s++) this.tweenAnimations[this.animState][s].start(a, 0 === s ? t : null, i)
		}
	},
	walk: function() {
		this.sprites.x = 0, this.sprites.y = 0, this.setNewAnimationState(this.animStates.WALK, null)
	},
	stand: function() {
		this.x = Math.round(this.x), this.y = Math.round(this.y), this.setNewAnimationState(this.animStates.STAND, null, !0)
	},
	moonwalk: function() {
		this.setNewAnimationState(this.animStates.WALK)
	},
	dig: function(e, t) {
		this.setNewAnimationState(this.animStates.DIG, this.stand.bind(this), !0), setTimeout(t, 1e3)
	},
	attack: function() {
		this.setNewAnimationState(this.animStates.ATTACK, this.stand.bind(this), !0)
	},
	dance: function(e, t) {
		this.stopTweens(), Util.isNullOrUndefined(this.rightArm) || Util.isNullOrUndefined(this.leftArm) || (this.rightArm.angle = 0, this.leftArm.angle = 0), this.tweenAnimations.hasOwnProperty(e + t) && (e += t), this.setNewAnimationState(e, this.stand.bind(this), !0)
	},
	update: function() {
		if (Prodigy.Container.CreatureContainer.prototype.update.call(this), Util.isDefined(this.locomotion) && this.locomotion.update(), Util.isDefined(this.tweenAnimations) && "" !== this.animState && Util.isDefined(this.tweenAnimations[this.animState]))
			for (var e = (new Date).getTime(), t = 0; t < this.tweenAnimations[this.animState].length; t++) this.tweenAnimations[this.animState][t].update(e);
		this.lastSmoothing != Prodigy.Container.PlayerContainer.smoothOverride && (this.lastSmoothing = Prodigy.Container.PlayerContainer.smoothOverride, this.reload())
	}
}), Prodigy.Container.MonsterContainer = function(e, t, i, a, s, r, n, o) {
	this.onClick = o, Prodigy.Container.CreatureContainer.call(this, e, t, i, a, s, r), 2 !== a || Util.isDefined(Items.getItem("pet", i.data.ID).metadata.assets.default) || (this.sprites.scale.x = this.sprites.scale.y = 2), this.forceSimple = n || Device.isTablet(), this.assets = Prodigy.Container.MonsterContainer.getAssets(this.source, this.setScale, this.forceSimple)
}, Prodigy.extends(Prodigy.Container.MonsterContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.MonsterContainer,
	startLoad: function(e) {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.Container.MonsterContainer.getAssets(this.source, this.setScale, this.forceSimple), Util.isDefined(e) && (this.assets = this.assets.concat(e)), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function(e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			this.sprites.removeAll(!0);
			var i = this.assets[0];
			if (this.forceSimple) {
				var a = this.game.prodigy.assets.getImageBounds(i);
				this.body = this.game.prodigy.create.sprite(0, 0, i), this.sprites.add(this.body), this.body.x = -a[0], this.body.y = -this.body.height, this.onClick && (this.body.inputEnabled = !0, this.body.events.onInputDown.add(this.onClick))
			} else {
				var a = this.game.prodigy.assets.getImageBounds(i),
					s = Math.floor(-a[2] / 2);
				s = -a[0];
				var r = -a[3];
				this.body = this.game.prodigy.create.sprite(s, r, i), this.sprites.add(this.body), this.onClick && (this.body.inputEnabled = !0, this.body.events.onInputDown.add(this.onClick)), this.sprites.callAll("animations.add", "animations", "walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [8, 9, 10, 11, 12, 13, 14, 15], 10, !0, !0);
				try {
					var n = this.body.animations.add("attack", [16, 17, 18, 19, 20, 21, 22, 23], 10);
					n.onComplete.add(this.stand, this)
				} catch (o) {}
				this.sprites.callAll("play", null, "stand")
			}
			Math.abs(this.sprites.scale.x) > 1 && this.sprites.setAll("smoothed", !1), this.complete = !0, this.loading = !1, Util.isDefined(this.loadedCallback) && this.loadedCallback()
		}
	},
	attack: function() {
		this.sprites.callAll("play", null, "attack")
	},
	damaged: function() {
		this.game.add.tween(this).to({
			alpha: .5
		}, 100, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER).start(), this.speed = 0
	}
}), Prodigy.Container.MonsterContainer.getAssets = function(e, t, i, a) {
	t = 1 !== t && Util.isDefined(Items.getItem("pet", e.data.ID).metadata.assets.default) ? "default" : "reduced";
	var s = [];
	"default" !== t || !i && !Device.isTablet() || a || (t = "small");
	var r = e.getID();
	s.push(t + "-pet-" + r);
	var n = null;
	switch (r) {
		case 125:
			n = ["attack-storm-wrath"];
			break;
		case 126:
			n = ["attack-forest-fury"];
			break;
		case 127:
			n = ["attack-frigid-blast"];
			break;
		case 128:
			n = ["attack-tidal-twister"];
			break;
		case 129:
			n = ["attack-hot-snow"]
	}
	return Util.isDefined(n) && (s = s.concat(n)), s
}, Prodigy.Container.FollowContainer = function(e, t, i, a, s, r, n) {
	Prodigy.Container.MonsterContainer.call(this, e, t, i, a, s.x, s.y - 1, !1, n), this.path = r, this.player = s, this.coords = [], GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
		ID: "autoclick-follow-" + i.data.ID,
		context: this,
		callback: function() {
			return {
				x: this.x,
				y: this.y
			}
		}.bind(this)
	}), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Container.FollowContainer, Prodigy.Container.MonsterContainer, {
	constructor: Prodigy.Container.FollowContainer,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	update: function() {
		if (Prodigy.Container.MonsterContainer.prototype.update.call(this), Util.isDefined(this.player)) {
			var e = this.coords[this.coords.length - 1],
				t = Math.round(this.player.x),
				i = Math.round(this.player.y);
			Util.isDefined(e) && e.x === this.player.x && e.y === this.player.y || this.coords.push({
				x: t,
				y: i
			}), this.coords.length > 50 || this.x <= 0 && this.y <= 0 ? (this.x < this.coords[0].x ? this.sprites.scale.x = 1 : this.x > this.coords[0].x && (this.sprites.scale.x = -1), this.x = this.coords[0].x, this.y = this.coords[0].y, this.walk(), this.coords.splice(0, 1)) : this.stand()
		}
	}
}), Prodigy.Container.BossContainer = function(e, t, i, a, s, r) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, 2, a, s), this.forceRegular = r, this.assets = Prodigy.Container.BossContainer.getAssets(this.source, this.forceRegular)
}, Prodigy.extends(Prodigy.Container.BossContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.BossContainer,
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.Container.BossContainer.getAssets(this.source, this.forceRegular), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function(e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			this.sprites.removeAll(!0);
			var i, a = this.assets[0];
			if (this.forceRegular) i = this.game.prodigy.assets.getImageBounds(a), this.body = this.game.prodigy.create.sprite(0, 0, a), this.sprites.add(this.body), this.body.x = -i[0], this.body.y = -this.body.height;
			else {
				i = this.game.prodigy.assets.getImageBounds(a);
				var s = -i[0],
					r = -i[3];
				this.body = this.game.prodigy.create.sprite(s, r, a), this.sprites.add(this.body);
				var n = null;
				try {
					this.sprites.callAll("animations.add", "animations", "walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), n = this.body.animations.add("attack", [8, 9, 10, 11, 12, 13, 14, 15], 10)
				} catch (o) {
					this.sprites.callAll("animations.add", "animations", "walk", [0], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [0], 10, !0, !0), n = this.body.animations.add("attack", [0], 10)
				}
				n.onComplete.add(this.stand, this), this.sprites.callAll("play", null, "stand")
			}
			this.complete = !0, this.loading = !1
		}
	},
	attack: function() {
		this.sprites.callAll("play", null, "attack")
	}
}), Prodigy.Container.BossContainer.getAssets = function(e, t) {
	var i = [],
		a = "";
	return e.getID() < 10 && !t && Device.isTablet() && (a = "small-"), i.push("boss-" + a + e.getID()), i
}, Prodigy.Container.Hearts = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.nextSrc = null, this.x = this.baseX = i, this.y = a, this.animating = !1, this.updateFrame = 0, this.heartsPercentage = 2, this.starPercentage = 2, this.retryUpdateHearts = !1, this.STAR_SHIFT = 20;
	var n = 138;
	this.reverse = r, this.hideStars = this.reverse, this.barMask = Prodigy.DrawUtil.createBox(this.game, this.reverse ? Prodigy.Container.Hearts.WIDTH - (n + 288) : n, 30, 288, 96, 0, 1, this), this.heartsBase = this.game.prodigy.create.sprite(0, 0, "core-2", "user-bar-base"), this.heartsBase.x = this.reverse ? Prodigy.Container.Hearts.WIDTH - n : n, this.heartsBase.y = 40, this.heartsBase.scale.x = this.reverse ? -1 : 1, this.add(this.heartsBase), this.heartsIcon = this.game.prodigy.create.sprite(this.reverse ? -8 : Prodigy.Container.Hearts.WIDTH - 41, this.heartsBase.y, "core-2", "user-bar-heart"), this.heartsIcon.anchor.setTo(.5, .5), this.heartsIcon.x += this.heartsIcon.width >> 1, this.heartsIcon.y += this.heartsIcon.height >> 1, this.add(this.heartsIcon), this.heartsFill = this.game.prodigy.create.sprite(this.heartsBase.x, this.heartsBase.y + 2, "core-2", "user-bar-fill-heart"), this.heartsFill.scale.x = this.reverse ? -1 : 1, this.heartsFill.mask = this.barMask, this.add(this.heartsFill), this.heartsBarText = this.game.prodigy.create.font(this, this.reverse ? 32 : 107, this.heartsBase.y + 8, null, {
		size: 2,
		width: 328,
		align: "center",
		font: "battle"
	}), this.heartsBarText.setText(""), this.starsBase = this.game.prodigy.create.sprite(0, 0, "core-2", "user-bar-base"), this.starsBase.x = this.heartsBase.x + (this.reverse ? this.STAR_SHIFT : -this.STAR_SHIFT), this.starsBase.y = 80, this.starsBase.scale.x = this.reverse ? -1 : 1, this.starsBase.visible = !this.hideStars, this.add(this.starsBase), this.starsIcon = this.game.prodigy.create.sprite(this.reverse ? this.STAR_SHIFT : this.heartsIcon.x - this.STAR_SHIFT, this.starsBase.y, "core-2", "user-bar-star"), this.starsIcon.anchor.setTo(.5, .5), this.starsIcon.y += this.starsIcon.height >> 1, this.starsIcon.visible = !this.hideStars, this.add(this.starsIcon), this.starsFill = this.game.prodigy.create.sprite(this.starsBase.x, this.starsBase.y + 2, "core-2", "user-bar-fill-star"), this.starsFill.mask = this.barMask, this.starsFill.scale.x = this.reverse ? -1 : 1, this.starsFill.visible = !this.hideStars, this.add(this.starsFill), this.elementBanner = new Prodigy.Container.ElementBanner(e, this, 0, 0, s), this.elementBanner.x = this.reverse ? Prodigy.Container.Hearts.WIDTH - this.elementBanner.width : 0, this.add(this.elementBanner), this.playerName = this.game.prodigy.create.font(this, 0, 5, "", {
		size: 20
	}), this.levelTitle = this.game.prodigy.create.sprite(this.elementBanner.x + 30, 7, "core-2", "user-bar-level"), this.add(this.levelTitle), this.levelText = this.game.prodigy.create.font(this, this.elementBanner.x + 7, 39, null, {
		size: 1,
		width: 126,
		align: "center",
		font: "battle",
		mono: 44
	}), this.setSource(s), this.ready = !0
}, Prodigy.extends(Prodigy.Container.Hearts, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Hearts,
	moveOut: function() {
		this.game.add.tween(this).to({
			x: this.reverse ? 1300 : -Prodigy.Container.Hearts.WIDTH
		}, 700, Phaser.Easing.Quadratic.In, !0)
	},
	moveIn: function() {
		this.game.add.tween(this).to({
			x: this.baseX
		}, 2100, Phaser.Easing.Quadratic.In, !0)
	},
	setSource: function(e) {
		Util.isDefined(e) && (this.nextSrc !== e ? (this.nextSrc = e, this.updateData(), this.x !== this.baseX && (this.game.tweens.removeFrom(this), this.x = this.baseX, this.y = -300, this.game.add.tween(this).to({
			y: 0,
			x: this.baseX
		}, 1200, Phaser.Easing.Quadratic.Out, !0))) : this.x !== this.baseX && (this.game.tweens.removeFrom(this), this.moveIn()))
	},
	updateData: function() {
		this.player = this.nextSrc, this.elementBanner.setSource(this.player), this.playerName.setText(this.player.getName()), this.playerName.x = this.reverse ? Prodigy.Container.Hearts.WIDTH - 143 - this.playerName.width : 143, this.playerName.y = 5, this.level = this.player.getLevel(), this.totalHearts = this.player.getMaxHearts(), this.currentHearts = this.target = this.player.getCurrentHearts(), this.currentStars = this.player.getStars(), this.starsToLevel = this.player.getStarsToLevel(), this.levelText.setText(this.level.toString()), this.displayCurrentHearts = 0, this.displayCurrentTotalHearts = 0, this.heartsPercentage = 2, this.starPercentage = 2, this.updateHeartsBarText(!1), this.updateHeartsBar(!1), this.updateStarsBar(!1)
	},
	updateHeartsBar: function(e) {
		if (Util.isDefined(this.player) && this.player.hasHeartsEventInQueue()) return !0;
		var t = Math.round(this.currentHearts / this.totalHearts * 100) / 100;
		if (Util.isNullOrUndefined(this.player.modifiers) || this.player.modifiers.barrier !== !0 ? (this.heartsFill.frameName = "user-bar-fill-heart", this.heartsIcon.frameName = "user-bar-heart") : (this.heartsFill.frameName = "user-bar-fill-barrier", this.heartsIcon.frameName = "user-bar-shield"), e && (this.currentHearts > this.displayCurrentHearts ? this.bumpHearts() : this.bumpDownHearts()), t !== this.heartsPercentage) {
			this.heartsPercentage = t;
			var i = this.heartsBase.x + (this.reverse ? Math.round(278 * (1 - this.heartsPercentage)) : -Math.round(278 * (1 - this.heartsPercentage)));
			e ? this.game.add.tween(this.heartsFill).to({
				x: i
			}, 1e3, Phaser.Easing.Quadratic.Out, !0) : this.heartsFill.x = i
		}
		return !1
	},
	updateHeartsBarText: function(e) {
		if (!Util.isDefined(this.player) || !this.player.hasHeartsEventInQueue()) {
			if (this.displayCurrentHearts !== this.currentHearts || 0 === this.heartsBarText.text.length) {
				e || (this.displayCurrentHearts = this.currentHearts);
				var t = Math.round(.05 * Math.abs(this.displayCurrentHearts - this.currentHearts));
				1 > t && (t = 1), this.displayCurrentHearts += this.displayCurrentHearts < this.currentHearts ? t : -t, this.heartsBarText.setText(Math.round(this.displayCurrentHearts) + "/" + this.totalHearts)
			}
			this.displayCurrentTotalHearts !== this.totalHearts && (this.displayCurrentTotalHearts = this.totalHearts, this.heartsBarText.setText(Math.round(this.displayCurrentHearts) + "/" + this.totalHearts))
		}
	},
	updateStarsBar: function(e) {
		var t = Prodigy.Creature.starsToLevel(this.level > 0 ? this.level - 1 : 0);
		this.currentStars < t && (this.currentStars = t);
		var i = Math.round((this.currentStars - t) / (this.starsToLevel + (this.currentStars - t)) * 100) / 100;
		if (this.level >= 100 && (i = 1), i !== this.starPercentage) {
			var a = 20,
				s = this.reverse ? this.starsBase.x + Math.round((1 - i) * (278 - a)) : this.starsBase.x - Math.round((1 - i) * (278 - a));
			if (e) {
				if (i < this.starPercentage) {
					var r = this.game.add.tween(this.starsFill).to({
							x: this.starsBase.x
						}, 1e3, Phaser.Easing.Quadratic.Out, !1, 700),
						n = this.game.add.tween(this.starsFill).to({
							alpha: 0
						}, 100, Phaser.Easing.Linear.None),
						o = this.game.add.tween(this.starsFill).to({
							x: s
						}, 1e3, Phaser.Easing.Quadratic.Out);
					n.onComplete.add(function() {
						this.starsFill.alpha = 1, this.starsFill.x = this.starsBase.x + (this.reverse ? 278 : -278)
					}, this), r.chain(n), n.chain(o), r.start()
				} else this.game.add.tween(this.starsFill).to({
					x: s
				}, 1e3, Phaser.Easing.Quadratic.Out, !0, 700);
				this.bumpStars()
			} else this.starsFill.x = s;
			this.starPercentage = i
		}
	},
	bumpStars: function() {
		this.game.add.tween(this.starsIcon.scale).to({
			y: 1.4,
			x: 1.4
		}, 220, Phaser.Easing.Quadratic.Out, !0, 800, 2, !0)
	},
	bumpHearts: function() {
		this.game.add.tween(this.heartsIcon.scale).to({
			y: 1.4,
			x: 1.4
		}, 250, Phaser.Easing.Quadratic.Out, !0, 400, 5, !0)
	},
	bumpDownHearts: function() {
		var e = this.heartsIcon,
			t = this.game.add.tween(e.scale).to({
				y: .9,
				x: .9
			}, 700, Phaser.Easing.Quadratic.Out, !0);
		t.onComplete.add(function() {
			e.scale.setTo(1, 1)
		}, e)
	},
	updateLevelText: function() {
		this.levelText.setText(this.level.toString())
	},
	updateLevel: function(e) {
		Util.isDefined(e) ? (this.game.add.tween(this.levelText).to({
			y: -100
		}, 500, Phaser.Easing.Quadratic.Out, !0, 0, 0, !0), this.game.time.events.add(500, this.updateLevelText, this)) : this.updateLevelText()
	},
	update: function() {
		if (Prodigy.Control.Element.prototype.update.call(this), Util.isDefined(this.player) && Util.isDefined(this.ready) && (this.updateHeartsBarText(!0), this.game.prodigy.updateCount % 15 == 0)) {
			var e = this.player.getMaxHearts(),
				t = this.player.getCurrentHearts(),
				i = this.player.getStars(),
				a = this.player.getStarsToLevel(),
				s = this.player.getLevel(),
				r = this.player.getName();
			s !== this.level && (this.level = s, this.starPercentage = 1, this.game.time.events.add(3e3, this.updateLevel.bind(this, !0), this)), (e !== this.totalHearts || this.retryUpdateHearts) && (this.totalHearts = e, this.currentHearts = t, this.retryUpdateHearts = this.updateHeartsBar(!0)), (t !== this.currentHearts || this.retryUpdateHearts) && (this.currentHearts = t, this.retryUpdateHearts = this.updateHeartsBar(!0)), (this.starsToLevel !== a || this.currentStars !== i) && (this.currentStars = i, this.starsToLevel = a, this.updateStarsBar(!0)), this.playerName.text !== r && this.playerName.setText(r)
		}
	}
}), Prodigy.Container.Hearts.WIDTH = 460, Prodigy.Container.Hearts.getAssets = function() {
	return []
}, Prodigy.Container.ElementBanner = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.flag = this.add(this.game.prodigy.create.sprite(0, 0, "core-2", "user-bar-flag-back")), this.flagBanners = [], this.flagIcons = [], this.setSource(s)
}, Prodigy.extends(Prodigy.Container.ElementBanner, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ElementBanner,
	setSource: function(e) {
		if (Util.isDefined(e)) {
			var t = 1;
			this.initSpriteArray(this.flagBanners, t, 7, -5, "core-2", "user-bar-flag-wizard"), this.initSpriteArray(this.flagIcons, t, 40, 139, "icons", "icon-bar-wizard"), this.setSpriteFrames(e), this.flag.bringToTop()
		}
	},
	initSpriteArray: function(e, t, i, a, s, r) {
		if (t > 0)
			if (e.length > t) this.shrinkSpriteArray(e, t), this.redrawMasks(e);
			else if (e.length < t) {
			for (; e.length < t;) {
				var n = this.add(this.game.prodigy.create.sprite(i, a, s, r));
				e.push(n)
			}
			this.redrawMasks(e)
		}
	},
	shrinkSpriteArray: function(e, t) {
		for (var i = e.splice(t), a = 0; a < i.length; ++a) Util.isDefined(i[a].mask) && i[a].mask.destroy(), i[a].destroy()
	},
	redrawMasks: function(e) {
		if (1 === e.length) Util.isDefined(e[0].mask) && (e[0].mask.destroy(), e[0].mask = null);
		else if (e.length > 1)
			for (var t = e[0].width / e.length, i = e[0].height, a = 0; a < e.length; ++a) {
				Util.isDefined(e[a].mask) && e[a].mask.destroy();
				var s = this.game.add.graphics(e[a].x, e[a].y, this);
				s.beginFill(16777215, 1), s.drawRect(t * a, 0, t, i), e[a].mask = s
			}
	},
	setSpriteFrames: function(e) {
		var t = [e.getElement()];
		if (t.length === this.flagIcons.length && t.length === this.flagBanners.length)
			for (var i = 0; i < this.flagIcons.length; ++i) this.flagIcons[i].frameName = "icon-bar-" + t[i], this.flagBanners[i].frameName = "user-bar-flag-" + t[i]
	}
}), Prodigy.Container.Chest = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t), this.levelUp = !1;
	var r = "open a chest!";
	if (this.chests = [], Math.random() > .6 && this.game.prodigy.player.getLevel() >= -5 && i) {
		var n = Math.floor(2 * Math.random());
		this.chests.push(this.createChest(950 + (0 === n ? -230 : 30), a)), this.chests.push(this.createChest(950 + (1 === n ? -230 : 30), a.concat(s), !0))
	} else this.chests.push(this.createChest(850, a)), r = "open the chest!";
	this.rewards = this.game.prodigy.create.element(this, 0, 0), this.openText = this.game.prodigy.create.font(this, 750, 300, r, {
		font: "button",
		size: 36,
		width: 400,
		align: "center"
	}), this.game.add.tween(this.openText).to({
		y: 320
	}, 3e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.initListeners(), GameConstants.get("GameConstants.Build.DEBUG") && (this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_SCENE, this.onDebugAutoClick.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this.onDebugAutoClickList.bind(this), this))
}, Prodigy.extends(Prodigy.Container.Chest, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Chest,
	initListeners: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.Chest.SHOW_PIPPET_BATTLE_BONUS, this.showPippetBattleBonus.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.Chest.SHOW_MEMBER_STARS, this.showMemberStars.bind(this), this, this.game), this.onDestroy.add(this.stopListeners, this)
	},
	stopListeners: function() {
		Util.isDefined(this.chestOpened) && Util.isDefined(this.chestOpened.bot) && this.chestOpened.bot.destroy(), this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.SHOW_PIPPET_BATTLE_BONUS, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.SHOW_MEMBER_STARS, this, this.game), GameConstants.get("GameConstants.Build.DEBUG") && (this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.AUTO_CLICK_SCENE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.AUTO_CLICK_LIST, this, this.game))
	},
	createChest: function(e, t, i) {
		var a = this.game.prodigy.create.element(this, 1500, 100);
		a.reward = t, a.specialChest = i, a.chestId = i ? 2 : 1, a.bot = this.game.prodigy.create.sprite(0, 95, "battle", i ? "member-chest-bottom" : "chest-bottom"), a.bot.inputEnabled = !0, a.add(a.bot), a.top = this.game.prodigy.create.sprite(0, i ? -25 : 0, "battle", i ? "member-chest-closed" : "chest-closed"), a.top.inputEnabled = !0, a.add(a.top), this.game.add.tween(a).to({
			x: e
		}, 1200, Phaser.Easing.Quadratic.Out).start();
		var s = this.game.add.tween(a).to({
			y: 400
		}, 1200, Phaser.Easing.Bounce.Out).start();
		return s.onComplete.add(this.activate.bind(this, a), this), a
	},
	activate: function(e) {
		e.top.events.onInputDown.add(this.onDown.bind(this, e), this), e.bot.events.onInputDown.add(this.onDown.bind(this, e), this)
	},
	onDebugAutoClick: function(e) {
		"chest_1" === e ? this.onDown(this.chests[0]) : "chest_2" === e && this.onDown(this.chests[1])
	},
	onDebugAutoClickList: function() {
		for (var e = 0; e < this.chests.length; e++) Util.log("Scene Tag: chest_" + this.chests[e].chestId)
	},
	onDown: function(e) {
		if (!this.locked) {
			if (e.top.y = -30, this.chestOpened = e, this.game.tweens.removeFrom(this.openText, !1), this.openText.destroy(), e.specialChest && this.game.prodigy.network.sendAnalytics("Select-Member-Chest"), e.specialChest && !this.game.prodigy.player.isMember) {
				var t = {
					conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_OPEN_MEMBER_CHEST_BATTLE
				};
				return this.game.prodigy.network.sendConversionFunnelEvent(t.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_OPEN_CHEST), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MEMBER_CHESTS, null, t), void 0
			}
			e.top.frameName = e.specialChest ? "member-chest-open" : "chest-open", this.locked = !0;
			var i, a = [];
			for (i = 0; i < e.reward.length; i++) {
				var s = e.reward[i];
				if ("gold" === s.type)
					for (var r = 0; r < s.N / 10; r++) a.push(this.game.prodigy.icon.gold(0, 0));
				else a.push(this.game.prodigy.icon.createFromData(s, 0, 0))
			}
			var n;
			for (i = 0; i < a.length; i++) {
				a[i].anchor.setTo(.5, .5), a[i].x = e.x + 80 + 40 * Math.random(), a[i].y = e.y + 120, a[i].visible = !1, this.rewards.add(a[i]), n = 50 * i + Math.floor(50 * Math.random());
				var o = this.game.add.tween(a[i]).to({
					y: 500 - (200 + Math.floor(240 * Math.random()))
				}, 600, Phaser.Easing.Quadratic.Out);
				o.onStart.add(function() {
					this.icon.visible = !0
				}, {
					icon: a[i]
				}), o.delay(n), o.to({
					y: 500
				}, 600, Phaser.Easing.Quadratic.In), o.start(), this.game.add.tween(a[i]).to({
					x: 250,
					angle: Math.floor(360 * Math.random())
				}, 1200, Phaser.Easing.Linear.None).delay(n).to({
					alpha: 0
				}, 100, Phaser.Easing.Linear.None).start(), o.start()
			}
			e.bot.x = e.bot.x + e.x, e.bot.y = e.bot.y + e.y, this.rewards.add(e.bot), 0 === e.reward.length ? this.game.broadcaster.broadcast(Prodigy.Events.VictoryManager.SHOW_DROPS, this.game, [e.reward]) : this.game.time.events.add(3e3, this.showDrops.bind(this, e.reward), this)
		}
	},
	showPippetBattleBonus: function(e, t) {
		var i = this.game.prodigy.create.sprite(640, 180, "battle", "text-pippet-battle-bonus", !0);
		i.alpha = 0, this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [i, "menus"]), this.game.add.tween(i).to({
			y: "+20",
			alpha: 1
		}, 200, Phaser.Easing.Sinusoidal.InOut, !0);
		for (var a = 0; 15 > a; a++) this.addStar(80 * a + 80 * Math.random(), 14 === a, "user-star", !1, this.pippetStarsFinish.bind(this, i));
		this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [this.chestOpened.bot, "menus"]), this.levelUp = t.addStars(e, null, !0)
	},
	pippetStarsFinish: function(e) {
		this.game.add.tween(e).to({
			y: "-20",
			alpha: 0
		}, 200, Phaser.Easing.Sinusoidal.InOut, !0);
		var t = this.levelUp;
		this.levelUp = !1, this.game.broadcaster.broadcast(Prodigy.Events.FlyingPippetStars.DONE, this.game, [t])
	},
	showMemberStars: function(e, t) {
		for (var i = this.game.prodigy.player.isMember ? 0 : 1e3, a = 0; 15 > a; a++) this.addStar(80 * a + 80 * Math.random() + i, 14 === a, "member-star", !0, this.memberStarsFinish.bind(this));
		this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [this.chestOpened.bot, "menus"]), this.game.prodigy.player.isMember && (this.levelUp = t.addStars(e, null, !0))
	},
	addStar: function(e, t, i, a, s) {
		var r = this.game.prodigy.create.sprite(this.chestOpened.bot.x + 80, this.chestOpened.bot.y + 50, "core-2", i);
		r.anchor.setTo(.5, .5), this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [r, "menus"]);
		var n = 1 + .4 * Math.random();
		if (!a || this.game.prodigy.player.isMember) {
			r.scale.setTo(0, 0);
			var o = this.game.add.tween(r.scale).to({
					x: 1,
					y: 1
				}, 200, Phaser.Easing.Quadratic.Out).delay(e),
				h = this.game.add.tween(r.scale).to({
					x: 1.3,
					y: 1.3
				}, 400, Phaser.Easing.Quadratic.InOut),
				l = this.game.add.tween(r.scale).to({
					x: n,
					y: n
				}, 400, Phaser.Easing.Quadratic.InOut),
				d = this.game.add.tween(r.scale).to({
					x: 0,
					y: 0
				}, 200, Phaser.Easing.Quadratic.In);
			d.onComplete.add(function() {
				r.kill()
			}, r), t && d.onComplete.add(function() {
				Util.isDefined(s) && s()
			}, this), o.chain(h), h.chain(l), l.chain(d), o.start(), this.game.add.tween(r).to({
				y: 90 + 10 * Math.random()
			}, 1200, Phaser.Easing.Quadratic.Out).delay(e).start(), this.game.add.tween(r).to({
				x: 279 + 40 * Math.random()
			}, 1200, Phaser.Easing.Quadratic.In).delay(e).start()
		} else {
			var c = 590 + Math.floor(100 * Math.random()),
				p = 260 + Math.floor(100 * Math.random()),
				g = 30 + Math.floor(20 * Math.random()),
				u = 30 + Math.floor(20 * Math.random());
			this.game.add.tween(r.scale).to({
				x: n,
				y: n
			}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.game.add.tween(r).to({
				y: p
			}, 600, Phaser.Easing.Quadratic.Out, !0).delay(e);
			var y = this.game.add.tween(r).to({
					x: c - g
				}, 800, Phaser.Easing.Quadratic.In, !0).delay(e),
				m = this.game.add.tween(r).to({
					y: p + u,
					x: c + g
				}, 600, Phaser.Easing.Quadratic.InOut),
				f = this.game.add.tween(r).to({
					y: -(100 + 100 * Math.random()),
					x: 1280 + 150 * Math.random()
				}, 800, Phaser.Easing.Quadratic.In);
			t && f.onComplete.add(function() {
				Util.isDefined(s) && s()
			}, this), f.onComplete.add(function() {
				r.kill()
			}, r), y.chain(m), m.chain(f), y.start()
		}
	},
	memberStarsFinish: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.FlyingMemberStars.DONE, this.game, [this.levelUp])
	},
	showDrops: function(e) {
		for (var t = 0; t < e.length; t++) "gold" === e[t].type && (e[t].N = Math.floor(e[t].N));
		this.game.broadcaster.broadcast(Prodigy.Events.VictoryManager.SHOW_DROPS, this.game, [e])
	}
}), Prodigy.Container.Achievement = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.src = s, this.create(), this.setSource(s)
}, Prodigy.extends(Prodigy.Container.Achievement, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Achievement,
	create: function() {
		var e = this.game.prodigy.create.panel(this, 0, 0, 16, 3, "award");
		e.add(this.game.prodigy.create.sprite(10, 10, "core", "award-frame")), this.iconContainer = this.game.prodigy.create.panel(e, 550, 10, 2, 2, "white"), this.name = this.game.prodigy.create.font(e, 120, 6, "", {}), this.desc = this.game.prodigy.create.font(e, 120, 93, "", {
			align: "right",
			width: 510,
			size: 16
		}), this.bar = this.game.prodigy.create.progressBar(e, 120, 50, 420), this.stars = [];
		for (var t = 0; 5 > t; t++) this.stars.push(e.add(this.game.prodigy.create.sprite(60, 60, "core", "star-empty"))), this.stars[t].anchor.setTo(.5, .5), this.stars[t].visible = !1;
		this.star = e.add(this.game.prodigy.create.sprite(60, 60, "core", "star-full")), this.star.anchor.setTo(.5, .5), this.star.visible = !1, this.award = e.add(this.game.prodigy.create.sprite(60, 55, "core", "award-ribbon")), this.award.anchor.setTo(.5, .5), this.award.visible = !1
	},
	setSource: function(e) {
		this.src !== e && (this.src = e, this.updateState())
	},
	updateState: function() {
		if (this.visible = Util.isDefined(this.src), Util.isDefined(this.src)) {
			if (this.name.setText(this.game.prodigy.achievements.getName(this.src)), this.desc.setText(this.game.prodigy.achievements.getDesc(this.src)), this.bar.setProgress(this.game.prodigy.achievements.getProgress(this.src), this.game.prodigy.achievements.getCompletionText(this.src)), Util.isDefined(this.icon) && (this.iconContainer.remove(this.icon), this.icon = null), Util.isDefined(this.src.metadata) && Util.isDefined(this.src.metadata.icon) && "string" == typeof this.src.metadata.icon) {
				var e = this.src.metadata.icon.split("/");
				2 === e.length && (this.icon = this.game.prodigy.icon.createIcon(40, 40, 2 === e.length ? "icon-" + e[0] + "-" + e[1] : "icon-item-1", {
					x: .5,
					y: .5
				}))
			}
			Util.isDefined(this.icon) || (this.icon = this.game.prodigy.create.sprite(40, 40, "core", "empty"), this.icon.loadNewTexture(Items.getIconAtlas(this.src), Util.convertItemToIcon(this.src)), this.icon.anchor.setTo(.5, .5)), this.icon.scale.x = this.icon.scale.y = .8, this.iconContainer.add(this.icon);
			for (var t = 40, i = Math.PI * (2 / 3) / 4, a = (Math.PI - Math.PI * (2 / 3)) / 2, s = this.src.data.ranks.length <= 1 ? Math.PI / 2 : Math.PI - (a + i * (2 - .5 * (this.src.data.ranks.length - 1))), r = this.game.prodigy.player.achievements.getProgress(this.src.ID), n = 0; 5 > n; n++) {
				var o = this.stars[n];
				n >= this.src.data.ranks.length ? o.visible = !1 : (o.visible = !0, o.x = Math.floor(60 + t * Math.cos(s - i * n)), o.y = Math.floor(60 + t * Math.sin(s - i * n)), o.frameName = r > n ? "star-full" : "star-empty")
			}
			this.award.visible = r >= this.src.data.ranks.length
		}
	},
	unlockNext: function(e) {
		if (Util.isDefined(this.src)) {
			var t = this.game.prodigy.player.achievements.getProgress(this.src.ID);
			if (!(t >= this.src.data.ranks.length)) {
				var i = this.stars[t];
				this.star.x = i.x, this.star.y = i.y, this.star.visible = !0, this.star.scale.x = this.star.scale.y = 5, this.star.alpha = 0, this.game.add.tween(this.star.scale).to({
					x: 1,
					y: 1
				}, 500, Phaser.Easing.Linear.None).start();
				var a = this.game.add.tween(this.star).to({
					alpha: 1
				}, 500, Phaser.Easing.Linear.None).to({}, 1500, Phaser.Easing.Linear.None).start();
				t === this.src.data.ranks.length - 1 && (this.award.visible = !0, this.award.alpha = 0, this.award.scale.x = this.award.scale.y = 5, this.game.add.tween(this.award.scale).to({
					x: 1,
					y: 1
				}, 800, Phaser.Easing.Linear.None).delay(500).start(), a = this.game.add.tween(this.award).to({
					alpha: 1
				}, 800, Phaser.Easing.Linear.None).delay(500).start()), a.onComplete.addOnce(this.endUnlock.bind(this, e), this)
			}
		}
	},
	endUnlock: function(e) {
		this.star.visible = !1, this.game.prodigy.player.achievements.complete(this.src.ID), this.updateState(), Util.isDefined(e) && e()
	}
}), Prodigy.Component.HouseItem = function(e, t, i, a) {
	Prodigy.Framework.Core.Component.call(this), this.assetData = null, this.assetMetadata = null, this.itemID = i, this.orientation = a || 0, this.editable = !1, this.parentHouse = t, this.onItemDrag = new Phaser.Signal, this.onItemDropped = new Phaser.Signal, this.onItemMoved = new Phaser.Signal, this.onItemInputDown = new Phaser.Signal, this.canRevert = null
}, Prodigy.extends(Prodigy.Component.HouseItem, Prodigy.Framework.Core.Component, {
	constructor: Prodigy.Component.HouseItem,
	create: function() {
		Prodigy.Framework.Core.Component.prototype.create.call(this), this.updateItemData()
	},
	setItemID: function(e) {
		this.itemID !== e && (this.itemID = e, this.updateItemData())
	},
	updateItemData: function() {
		this.assetData = Items.getItemData("dorm", this.itemID), this.assetMetadata = Items.getItemMetadata("dorm", this.itemID), this.updateSprite()
	},
	getAssetName: function() {
		return Util.isDefined(this.assetData) ? this.getOrientation() + "-dorm-" + this.itemID : ""
	},
	getOrientation: function() {
		return this.assetData.r > 0 && this.orientation & !0 ? "horizontal" : "vertical"
	},
	isAnimated: function() {
		if (Util.isDefined(this.assetMetadata)) {
			var e = this.getOrientation();
			return Util.isDefined(this.assetMetadata.assets[e]) && Util.isDefined(this.assetMetadata.assets[e].animations) && Util.isDefined(this.assetMetadata.assets[e].animations.idle)
		}
		return !1
	},
	getScaleX: function() {
		return Util.isDefined(this.assetData) ? this.assetData.r > 0 && this.orientation > 1 ? -1 : 1 : 1
	},
	updateSprite: function() {
		var e = this.gameObject.findComponent(Prodigy.Framework.Core.Renderer);
		Util.isDefined(e) ? e.setAsset(this.getOrientation() + "-dorm-" + this.itemID, this.assetMetadata.assets[this.getOrientation()]) : e = this.initRenderInterface(), e.setScale(this.getScaleX(), 1), e.hasAnimations() && e.playAnimation("idle", !0, Math.random() * e.getAnimationLength("idle"))
	},
	initRenderInterface: function() {
		var e = Prodigy.Framework.Core.Renderer.createRenderer(this.getOrientation() + "-dorm-" + this.itemID, this.assetMetadata.assets[this.getOrientation()]);
		return this.gameObject.addComponent(e), e.setAnchor(.5, 0), e.resetAfterDrag = !0, e
	},
	canRotate: function() {
		return Util.isDefined(this.assetData) && this.assetData.r > 0
	},
	rotateItem: function() {
		this.editable && this.canRotate() && (this.orientation += 1, this.orientation > 3 && (this.orientation = 0), this.updateSprite())
	},
	setEditable: function(e) {
		void 0 === e && (e = !0), this.editable !== e && (this.editable = e, this.editable ? this.registerInputHandlers() : this.unregisterInputHandlers())
	},
	registerInputHandlers: function() {
		var e = this.getRenderer();
		e.setInputEnabled(), e.enableDragging(!0, !0, 20, 20);
		var t = e.getEvents();
		Util.isNullOrUndefined(t) || (t.onDragStart.add(this.dragStarted, this), t.onDragUpdate.add(this.dragUpdated, this), t.onDragStop.add(this.dragStopped, this), t.onInputDown.add(this.itemFocused, this))
	},
	unregisterInputHandlers: function() {
		var e = this.getRenderer();
		e.setInputEnabled(!1), e.disableDragging();
		var t = e.getEvents();
		Util.isNullOrUndefined(t) || (t.onDragStart.remove(this.dragStarted, this), t.onDragUpdate.remove(this.dragUpdated, this), t.onDragStop.remove(this.dragStopped, this), t.onInputDown.remove(this.itemFocused, this))
	},
	getRenderer: function() {
		return this.gameObject.findComponent(Prodigy.Framework.Core.Renderer)
	},
	dragStarted: function() {
		this.gameObject.game.add.existing(this.gameObject), this.onItemDrag.dispatch()
	},
	dragUpdated: function() {
		Util.isDefined(this.parentHouse) && this.getRenderer().setAlpha(this.parentHouse.canPlaceItem(this) ? 1 : .5)
	},
	dragStopped: function() {
		if (Util.isDefined(this.parentHouse) ? this.parentHouse.content.add(this.gameObject) : this.gameObject.game.add.existing(this.gameObject), !Util.isDefined(this.parentHouse) || this.parentHouse.canPlaceItem(this)) {
			var e = this.getRenderer().getWorld();
			this.onItemDropped.dispatch(this, e.x, e.y), this.onItemMoved.dispatch(this, this.gameObject.x, this.gameObject.y, e.x, e.y), this.canRevert = !0
		} else if (this.canRevert) {
			var t = this.getRenderer(),
				e = t.getWorld();
			this.onItemDropped.dispatch(this, e.x, e.y), t.resetToOrigin(), t.setAlpha(1)
		} else this.gameObject.destroy()
	},
	itemFocused: function() {
		this.onItemInputDown.dispatch()
	}
}), Prodigy.Container.UserEquipment = function(e, t, i, a, s, r, n) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, !Util.isNullOrUndefined(n) && n && this.add(this.game.prodigy.create.sprite(0, 0, "core-2", "char-container")), this.setPlayer(s, Util.isNullOrUndefined(r) ? 2 : r)
}, Prodigy.extends(Prodigy.Container.UserEquipment, Prodigy.Control.Element, {
	constructor: Prodigy.Container.UserEquipment,
	setPlayer: function(e, t) {
		Util.isDefined(this.user) && this.user.destroy(), this.user = this.game.prodigy.create.player(this, e, t, 174, 230), this.user.reload(), this.player = e
	},
	equipItem: function(e, t) {
		Util.isDefined(this[t]) && this.player.equip(e, t) && (this.player.appearanceChanged = !0, this[t].setValue(t + "/" + e, 1, !1, !0), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "whoosh"), "boots" !== t && this.user.reload())
	},
	unEquipItem: function(e) {
		Util.isDefined(this[e]) && this.player.unEquip(e) && (this[e].setValue(-1, 1, !1, !0), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "blop"), "boots" !== e && this.user.reload())
	}
}), Prodigy.Container.QuantityIcon = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t), this.sprite = this.game.prodigy.create.sprite(0, 0, s, 0), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked, this), this.add(this.sprite), this.callback = o, this.x = i, this.y = a, this.font = this.game.prodigy.create.font(this, 0, 60, "", {
		size: 20,
		width: 100,
		align: "left"
	}), this.icon = this.game.prodigy.create.font(this, 0, 0, "@", {
		size: 16
	}), this.icon.alpha = 0, this.add(this.icon), this.visible = !1, this.setValue(s, r, n)
}, Prodigy.extends(Prodigy.Container.QuantityIcon, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuantityIcon,
	setValue: function(e, t, i) {
		return 0 >= i || !Util.isDefined(i) ? (this.visible = !1, this.icon.alpha = 0, this.font.setText(""), void 0) : (this.visible = !0, Util.isDefined(e) && this.sprite.key && this.sprite.loadNewTexture(e, t), Util.isDefined(t) && (this.sprite.frameName = t), this.font.setText(Util.isDefined(i) && (i > 1 || i.length > 1) ? i + "" : ""), void 0)
	},
	setCallback: function(e) {
		this.callback = e
	},
	clicked: function() {
		Util.isDefined(this.callback) && this.callback()
	},
	centerAnchor: function() {
		this.sprite.anchor.setTo(.5, .5)
	}
}), Prodigy.Container.StarDisplay = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i - 77, this.y = a, this.add(this.game.prodigy.create.sprite(0, 0, "battle", "stars")), this.star = this.game.prodigy.create.sprite(35, 3, "battle", "stars-full"), this.add(this.star), this.lvl = this.game.prodigy.create.font(this, 27, 25, "" + s.getLevel(), {
		size: 40,
		width: 100,
		align: "center"
	}), this.source = s, this.giveStars(0);
	for (var n = 0; r > n; n++) {
		var o = this.game.prodigy.create.sprite(77 + Math.floor(-30 + 60 * Math.random()), -600, "battle", "star-icon");
		this.add(o), o.anchor.setTo(.5, .5);
		var h = this.game.add.tween(o).to({
			y: -40
		}, 400, Phaser.Easing.Linear.None).delay(200 * n).to({
			alpha: 0
		}, 1, Phaser.Easing.Linear.None).start();
		h.onComplete.add(this.giveStars.bind(this, 1), this)
	}
}, Prodigy.extends(Prodigy.Container.StarDisplay, Prodigy.Control.Element, {
	constructor: Prodigy.Container.StarDisplay,
	giveStars: function(e) {
		var t = this.source.getLevel();
		this.source.addStars(e);
		var i = this.source.getLevel(),
			a = Math.floor(82 * Prodigy.Creature.getLevelPercent(this.source.getStars()));
		0 >= a && (a = 1), 100 > i ? (this.star.crop({
			x: 0,
			y: 82 - a,
			width: 84,
			height: a
		}), this.star.y = 3 + (82 - a), t !== i && (this.source.changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER), this.lvl.setText(i + ""), this.game.add.tween(this.lvl).to({
			x: this.lvl.x - 50,
			y: this.lvl.y - 50
		}, 300, Phaser.Easing.Quadratic.Out).to({
			x: this.lvl.x,
			y: this.lvl.y
		}, 300, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this.lvl.scale).to({
			x: 2,
			y: 2
		}, 300, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 300, Phaser.Easing.Quadratic.In).start())) : this.star.y = 3
	}
}), Prodigy.Container.ChatBubble = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.chatID = 0, this.dontHide = Util.isDefined(s) && s === !0, this.add(this.game.prodigy.create.sprite(-38, -72, "icons", "chat/bubble"))
}, Prodigy.extends(Prodigy.Container.ChatBubble, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ChatBubble,
	setID: function(e) {
		if (Util.isDefined(this.game)) {
			this.visible = !0, this.chatID++, this.scale.x = this.scale.y = 0, this.game.add.tween(this.scale).to({
				x: 1.2,
				y: 1.2
			}, 200, Phaser.Easing.Quadratic.Out).to({
				x: .8,
				y: 1
			}, 200, Phaser.Easing.Quadratic.In).to({
				x: 1,
				y: .8
			}, 200, Phaser.Easing.Quadratic.Out).to({
				x: 1,
				y: 1
			}, 200, Phaser.Easing.Quadratic.In).start(), Util.isDefined(this.emote) && this.emote.destroy(), this.emote = this.game.prodigy.create.sprite(-18, -62, "icon-emote-" + e, null, null, null, 40, 40), this.add(this.emote);
			var t = function(e) {
				e === this.chatID && (this.visible = !1)
			};
			this.dontHide === !1 && (this.timer = this.game.time.events.add(3e3, t.bind(this, this.chatID), this))
		}
	}
}), Prodigy.Container.AnimatedEmote = function(e, t) {
	Prodigy.Control.Element.call(this, e, t), this.emoteData = null
}, Prodigy.extends(Prodigy.Container.AnimatedEmote, Prodigy.Control.Element, {
	constructor: Prodigy.Container.AnimatedEmote,
	create: function(e) {
		Util.isDefined(e) && (this.emoteData = e, this.game.prodigy.create.sprite(0, 0, "default-emote-" + this.emoteData.ID, null, {
			x: .5,
			y: .5
		}, this.recolour.bind(this)))
	},
	recolour: function(e) {
		if (this.exists) {
			var t = new Phaser.BitmapData(this.game, null, e.texture.baseTexture.width, e.texture.baseTexture.height);
			t.draw(e.key), t.update();
			var i = Items.getItemObject("eyeColor", this.parent.data.eyeColor).data.colors;
			t.processPixelRGB(this.pixelColorReplace, {
				baseColor: [85, 85, 85, 255],
				newColor: i
			});
			var a = t.generateTexture("recolour"),
				s = this.game.cache.getFrameData(e.key, 2) || {
					frames: []
				};
			s.getFrames && (s = Util.frameDataToFrameJson(s.getFrames())), this.game.cache.addTextureAtlas("recolour-atlas", "", a.baseTexture.source, s, Phaser.Loader.TEXTURE_ATLAS_JSON_HASH), t.clear(), PIXI.CanvasPool.removeByCanvas(t.canvas), t.destroy();
			var r = this.emoteData.metadata.assets.default.offSet;
			this.game.prodigy.create.sprite(r.x, r.y, "recolour-atlas", null, {
				x: .5,
				y: .5
			}, this.playEmote.bind(this))
		}
	},
	pixelColorReplace: function(e) {
		return e.r === this.baseColor[0] && e.g === this.baseColor[1] && e.b === this.baseColor[2] && (e.r = this.newColor[0][0], e.g = this.newColor[0][1], e.b = this.newColor[0][2]), e
	},
	playEmote: function(e) {
		e.scale.set(-1, 1), e.smoothed = !0, this.emoteAnimation = e.animations.add("emote", null, 2, !0), this.emoteAnimation.onLoop.add(this.stopEmote, this), this.emoteAnimation.onComplete.add(this.endEmote, this), e.play("emote");
		var t = this.parent.eyes;
		t.visible = !1, this.parent.head.addChild(e), this.parent.head.swapChildren(t, e)
	},
	stopEmote: function(e, t) {
		5 === t.loopCount && (t.loop = !1)
	},
	endEmote: function(e) {
		var t = this.parent.eyes;
		t.visible = !0, this.parent.head.swapChildren(t, e), e.destroy()
	}
}), Prodigy.Container.QuestNPC = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.data = Util.copyObject(s), this.npcData = r, this.npc = this.game.prodigy.create.sprite(0, 0, "npc-sprite-" + this.npcData.atlas, 0), this.npc.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.npc.animations.play("stand"), this.npc.inputEnabled = !0, this.npc.anchor.setTo(.5, 1), this.npc.events.onInputDown.add(this.process.bind(this), this), o && (this.npc.scale.x = -1), this.add(this.npc), this.dialogue = this.game.prodigy.dialogue.create(), Util.isDefined(s) && Util.isDefined(s.quests) && this.setIndicator("quest"), Util.isDefined(this.npcData) && Util.isDefined(this.npcData.indicator) && this.setIndicator(this.npcData.indicator), this.updateIndicator(), this.name = this.game.prodigy.create.nameFont(this, 0, 0 - this.npc.height - 20, this.npcData.name), this.clickCallback = n, this.finishCallback = h
}, Prodigy.extends(Prodigy.Container.QuestNPC, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuestNPC,
	setIndicator: function(e) {
		Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(0, -(this.npc.height - 10), "icons", e), this.indicator.anchor.setTo(.5, 1), this.add(this.indicator), this.game.add.tween(this.indicator).to({
			y: this.indicator.y - 50
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)), this.indicator.frameName = e
	},
	updateIndicator: function() {
		if (Util.isDefined(this.indicator)) {
			if (!Util.isDefined(this.data) || !Util.isDefined(this.data.ID)) return this.indicator.frameName = "quest", void 0;
			var e = this.game.prodigy.player.quests,
				t = this.data.ID,
				i = e.getCurrentQuest(t),
				a = this.data.quests[i - 1],
				s = e.isQuestComplete(t, i, this.game.prodigy.player, a),
				r = e.isQuestStarted(t, i);
			this.indicator.frameName = s && i > 0 && r ? "quest-complete" : "quest"
		}
	},
	process: function() {
		if (Util.isDefined(this.clickCallback)) this.clickCallback();
		else if (Util.isDefined(this.data) && Util.isDefined(this.data.ID)) {
			this.currentSaveState = this.game.prodigy.player.saveEnabled, this.game.prodigy.player.saveEnabled = !1;
			var e = this.game.prodigy.player.quests,
				t = !1,
				i = this.data.ID,
				a = e.getCurrentQuest(i);
			0 === a && (e.startQuestLine(i), a = e.getCurrentQuest(i));
			var s = this.data.quests[a - 1],
				r = e.isQuestComplete(i, a, this.game.prodigy.player, s),
				n = e.isQuestStarted(i, a);
			if (!Util.isDefined(s) && a > 0) {
				if (Util.isDefined(this.finishCallback)) return this.finishCallback(), void 0;
				t = !0
			} else r && n ? (this.dialogue.setText({
				element: this.processMap.bind(this, this.data, {
					complete: a
				})
			}), e.completeQuest(i, a, this.game.prodigy.player, s), this.queueText(s.complete), Util.isDefined(s.reward) && this.dialogue.setText({
				callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, s.reward, this.finishDialogue.bind(this, !0), null, "quest-reward")
			}), this.dialogue.setText({
				callback: this.game.prodigy.effects.flashText.bind(this.game.prodigy.effects, "Quest Complete!")
			})) : n ? (this.queueText(s.during), t = !0) : (e.startQuest(i, a, this.data.quests[a - 1]), this.queueText(s.start), a = e.getCurrentQuest(i), s = this.data.quests[a - 1], this.queueText(s.during), t = !0);
			t && (s ? this.dialogue.setText({
				element: this.processMap.bind(this, this.data, null)
			}) : (s = {}, s.encounter = this.data.battle.encounter), this.dialogue.setText({
				callback: this.finishDialogue.bind(this)
			}), this.dialogue.setText({
				face: this.data.dialogue[1].face,
				text: this.data.dialogue[1].text,
				audio: this.data.dialogue[1].audio,
				yes: this.startBattle.bind(this, s, !0)
			})), this.dialogue.start("" + this.npcData.atlas)
		}
		Util.isDefined(this.data) && Util.isDefined(this.data.quests) && this.updateIndicator()
	},
	finishDialogue: function(e) {
		this.game.prodigy.player.saveEnabled = this.currentSaveState, e && this.process()
	},
	processMap: function(e, t, i) {
		var a = new Prodigy.Container.QuestMap(this.game, i, 0, 0);
		a.open(e, t)
	},
	queueText: function(e) {
		if (Util.isDefined(e))
			for (var t = 0; t < e.length; t++) {
				var i = this.data.dialogue[e[t]];
				this.dialogue.setText(i)
			}
	},
	startBattle: function(e, t) {
		if (t) {
			var i = function(e, t) {
					e.prodigy.world.teleport(this.data.tag, t.x, t.y)
				},
				a = e.mods || {};
			a.screen = this.data.battle.screen, a.quest = e, a.encounter = e.encounter, a.zoneID = this.data.ID, a.quest = e, a.drops = Util.isDefined(e.drops) ? e.drops : this.data.battle.drops, a.difficulty = e.difficulty, Util.isDefined(a.difficulty) || (a.difficulty = Math.floor(this.game.prodigy.player.getLevel() / 15)), Util.isDefined(e.boss) && (a.boss = e.boss, a.boss.level = this.game.prodigy.player.getLevel(), a.boss.maxHP = 20 + Math.floor(a.boss.level / 100 * 40 * 4), a.difficulty = Math.floor(a.boss.level / 10)), a.opponent = e.opponent, Util.isDefined(e.pets) && (a.pets = e.pets), (a.boss || a.opponent || a.pets) && (a.catch = !1);
			var s = this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.game, [!0]);
			this.game.prodigy.battle.start(a, i.bind(this, this.game, s), i.bind(this, this.game, s), null, this.data.tag)
		}
	}
}), Prodigy.Container.Timer = function(e, t, i, a, s) {
	if (Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, !s) {
		var r = this.game.prodigy.create.panel(this, 0, 0, 6, 2, "white");
		r.alpha = .8
	}
	this.text = this.game.prodigy.create.font(this, 0, 10, "00:00", {
		width: 300,
		size: 40,
		align: "center"
	}), this.msg = this.game.prodigy.create.font(this, 0, 60, "", {
		width: 300,
		size: 16,
		align: "center"
	}), this.eventFormat = !1
}, Prodigy.extends(Prodigy.Container.Timer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Timer,
	setTime: function(e) {
		this.target = e, this.text.setText(this.eventFormat ? Prodigy.Container.Timer.processTimeFormatted(e) : Prodigy.Container.Timer.processTime(e))
	},
	setMsg: function(e) {
		this.msg.setText(e)
	},
	start: function(e, t, i) {
		this.eventFormat = i, this.setTime(e), this.callback = t, this.targetTime = (new Date).getTime() + this.target, this.clear(), this.timer = setInterval(this.process.bind(this), 100)
	},
	pause: function() {
		this.paused = this.targetTime - (new Date).getTime()
	},
	resume: function() {
		this.targetTime = (new Date).getTime() + this.paused, this.paused = null
	},
	blink: function() {
		this.game.add.tween(this.text).to({
			y: 0
		}, 500, Phaser.Easing.Quadratic.Out).to({
			y: 10
		}, 500, Phaser.Easing.Quadratic.In).start()
	},
	add: function(e) {
		this.targetTime += e, this.process(), this.blink()
	},
	clear: function() {
		Util.isDefined(this.timer) && (window.clearInterval(this.timer), this.timer = null)
	},
	process: function() {
		if (!Util.isDefined(this.paused)) {
			var e = this.targetTime - (new Date).getTime();
			this.text.setText(this.eventFormat ? Prodigy.Container.Timer.processTimeFormatted(e) : Prodigy.Container.Timer.processTime(e)), 0 >= e && (this.clear(), Util.isDefined(this.callback) && this.callback())
		}
	},
	isInProgress: function() {
		return Util.isDefined(this.timer)
	},
	destroy: function() {
		this.clear(), Prodigy.Control.Element.prototype.destroy.call(this)
	}
}), Prodigy.Container.Timer.processTime = function(e) {
	if (0 >= e) return "00:00";
	var t = Math.floor(e / 36e5),
		i = Math.floor((e - 36e5 * t) / 6e4),
		a = Math.floor((e - 36e5 * t - 6e4 * i) / 1e3);
	return 0 === t ? t = "00" : 10 > t && (t = "0" + t), 0 === i ? i = "00" : 10 > i && (i = "0" + i), 0 === a ? a = "00" : 10 > a && (a = "0" + a), "00" === t ? i + ":" + a : 24 > t ? t + ":" + i + ":" + a : Math.floor(t / 24) + " days"
}, Prodigy.Container.Timer.processTimeFormatted = function(e) {
	if (0 >= e) return 0;
	var t = Math.floor(e / 864e5),
		i = e - 864e5 * t,
		a = Math.floor(i / 36e5);
	i -= 36e5 * a;
	var s = Math.floor(i / 6e4);
	return 0 === a ? a = "00" : 10 > a && (a = "0" + a), 0 === s ? s = "00" : 10 > s && (s = "0" + s), t + "d " + a + "h " + s + "m"
}, Prodigy.Container.ItemContainer = function(e, t, i, a, s, r, n) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), s = s || {}, s.data = s.data || {}, this.itemObject = s, this.refresh(s.ID, s.type, r, n, s.N), GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.itemObject.ID) && Util.isDefined(this.itemObject.type)) {
		var o = Items.getItemObject(this.type, this.ID);
		this.game.prodigy.automation.addTrigger({
			ID: "autoclick-" + o.data.name,
			context: this,
			callback: function() {
				return {
					x: this.panel.worldPosition.x,
					y: this.panel.worldPosition.y
				}
			}.bind(this)
		})
	}
	this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Container.ItemContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ItemContainer,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.itemObject.ID) && Util.isDefined(this.itemObject.type) && this.game.prodigy.automation.removeAllTriggers(this)
	},
	refresh: function(e, t, i, a, s) {
		this.ID = e || this.ID, this.type = t || this.type, this.N = s || this.N, this.mode = i || this.mode, this.onClick = a, this.owned = !1, this.price = 0;
		for (var r in this.damage) this.damage[r].destroy();
		for (var r in this.heart) this.heart[r].destroy();
		this.damage = [], this.heart = [], this.drawCard(this.mode)
	},
	drawCard: function(e) {
		var t = {
			data: {}
		};
		t = "gold" === this.type || "bounty" === this.type ? {
			type: this.type
		} : "spell" === this.type ? this.game.prodigy.attacks.getAttack(this.ID) : Items.getItemObject(this.type, this.ID), "pet" === this.type && (t.data.nickname = t.name || this.itemObject.data.nickname), "icon" === e ? this.createSmall(t, !0) : "icon-no-bg" === e ? this.createSmall(t, !1) : "inv" === e ? this.createInventory(t) : "store" === e ? this.createStore(t) : "card" === e ? this.createCard(t) : "info" === e ? this.createLarge(t) : "StylistCard" === e && this.createStylistCard(t)
	},
	createPanel: function(e, t, i, a, s) {
		if (Util.isDefined(this.panel) && this.panel.destroy(), Util.isDefined(s)) this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, s);
		else if ("gold" === this.type || "bounty" === this.type) this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, "item-currency");
		else if ("pet" === this.type || "spell" === this.type || "dorm" === this.type) this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, "item-" + this.type);
		else if ("item" === this.type || "fossil" === this.type || "currency" === this.type || "giftBox" === this.type || "gender" === this.type || "hairColor" === this.type || "eyeColor" === this.type || "skinColor" === this.type || "hair" === this.type || "face" === this.type) this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, "item-common");
		else if (Util.isDefined(t)) {
			var r = null;
			switch (t) {
				case 0:
					r = "common";
					break;
				case 1:
					r = "uncommon";
					break;
				case 2:
					r = "rare";
					break;
				case 3:
					r = "epic";
					break;
				case 4:
					r = "legend";
					break;
				default:
					r = "common"
			}
			this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, "item-" + r, "equipment" === e ? 1 : "inventory" === e ? 2 : 0)
		} else this.panel = this.game.prodigy.create.panel(this, 0, 0, i, a, "empty");
		Util.isDefined(this.onClick) && this.panel.setClickable(this.clicked.bind(this))
	},
	createSmall: function(e, t) {
		this.panel = this.game.prodigy.create.element(this, 0, 0);
		var i = Util.isDefined(e),
			a = null,
			s = null,
			r = {
				x: 0,
				y: 0
			};
		if ((!Util.isDefined(t) || t) && (s = this.game.prodigy.create.sprite(0, 0, "core", i ? "white-icon" : "empty-icon"), this.panel.add(s), r.x = 10, r.y = 10), i ? a = this.game.prodigy.icon.createFromData(e, r.x, r.y) : (a = this.game.prodigy.create.sprite(r.x, r.y, "icons", "empty-" + this.type), a.alpha = .6), this.panel.add(a), Util.isDefined(this.onClick)) {
			var n = Util.isDefined(s) ? s : a;
			n.inputEnabled = !0, n.events.onInputDown.add(this.clicked.bind(this))
		}
	},
	createMedium: function(e) {
		if (Util.isDefined(e)) {
			e.data = e.data || {}, this.createPanel(null, e.data.rarity, 4, 5);
			var t = this.game.prodigy.create.font(this, 10, 0, e.data.name, {
				width: 140,
				size: 16,
				align: "center",
				lineHeight: 18
			});
			if (t.y = t.lines > 1 ? 2 : 8, t.lines > 2) {
				t.destroy(), t = null;
				var t = this.game.prodigy.create.font(this, 10, 0, e.data.name, {
					width: 180,
					size: 16,
					align: "center",
					lineHeight: 18
				});
				t.y = 2, t.width = 130
			}
			if ("gold" === this.type) this.panel.add(this.game.prodigy.icon.gold(50, 70)), t.setText("Gold Coins");
			else if ("giftBox" === this.type) this.panel.add(this.game.prodigy.create.sprite(40, 60, "microtransactions", "microtrans-icon")), t.setText("Conjure Cube");
			else if ("bounty" === this.type) this.panel.add(this.game.prodigy.create.sprite(40, 50, "icons", "bounty")), t.setText("Bounty Points");
			else if ("spell" === this.type) this.panel.add(this.game.prodigy.icon.createFromData(e, 40, 70));
			else if ("item" === this.type && Util.isDefined(e.type) && "potion" === e.type) this._panel.add(this.game.prodigy.icon.createFromData({
				type: this.type,
				ID: this.ID
			}, 40, 60));
			else if ("gender" === this.type || "hairColor" === this.type || "eyeColor" === this.type || "skinColor" === this.type || "hair" === this.type || "face" === this.type) {
				var i = this.panel.width,
					a = this.panel.height;
				this.panel.add(this.game.prodigy.icon.createFromData(e, 40, 50, !1, function(e) {
					var t = Util.getCenteredXY(e.width, e.height, 0, 0, i, a);
					e.x = t.x, e.y = t.y
				}))
			} else this.panel.add(this.game.prodigy.icon.createFromData(e, 40, 50)), "pet" === this.type && Util.isDefined(e.data.nickname) && t.setText(e.data.nickname);
			"gold" === this.type || "bounty" === this.type ? this.game.prodigy.create.font(this.panel, 0, 165, "" + this.N, {
				width: 160,
				align: "center"
			}) : this.N > 1 && ("currency" !== this.type && this.panel.add(this.game.prodigy.create.sprite(10, 150, "icons", "mail-empty")), "currency" === this.type ? this.game.prodigy.create.font(this.panel, 0, 165, "" + (this.N || 99), {
				width: 160,
				align: "center"
			}) : this.game.prodigy.create.font(this.panel, 10, 155, "" + (this.N || 99), {
				width: 40,
				align: "center"
			}))
		}
	},
	createLarge: function(e) {
		if (Util.isDefined(e)) {
			this.createPanel(null, e.data.rarity, 17, 9);
			var t = new Phaser.TileSprite(this.game, 3, 40, 230, 280, "core", "overlay-small");
			t.alpha = .1, this.panel.add(t), this.game.prodigy.create.font(this, 0, 0, e.data.name, {
				font: "button",
				size: 36,
				width: 680,
				align: "center"
			}), "gender" === e.type || "hair" === e.type || "eyeColor" === e.type || "skinColor" === e.type || "hairColor" === e.type || "outfit" === e.type || "hat" === e.type || "weapon" === e.type || "face" === e.type ? this.createCharacter(e, 40, 40, !1) : this.panel.add(this.game.prodigy.icon.createFromData(e, 80, 80)), this.game.prodigy.create.font(this.panel, 260, 60, e.data.flavorText, {
				size: 20,
				font: "black",
				width: 400,
				lineHeight: 30
			}), this.checkForItemAffixes(e)
		}
	},
	checkForItemAffixes: function(e) {
		if (Util.isDefined(e.data.effects) && e.data.effects.length > 0) {
			var t = Items.getItemData("affix", e.data.effects[0]);
			if (Util.isDefined(t)) {
				var i = String(t.label) + String(t.value);
				this.game.prodigy.create.font(this, 260, 265, i, {
					size: 36,
					width: 400,
					font: "button"
				})
			}
		} else Util.isDefined(e.data.effect) && (Util.isDefined(e.data.effect.hp) ? this.game.prodigy.create.font(this, 260, 265, "Heals " + e.data.effect.hp + " hearts", {
			size: 36,
			width: 400,
			font: "button"
		}) : Util.isDefined(e.data.type) && "potion" === e.data.type && this.game.prodigy.create.font(this, 260, 235, e.data.effect, {
			size: 36,
			width: 400,
			font: "button"
		}))
	},
	createInventory: function(e) {
		Util.isDefined(e) && (this.createMedium(e), this.itemObject.L && !this.game.prodigy.player.isMember && this.panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member")), this.game.prodigy.player.equipment.getEquipment(this.type) === e.ID && this.panel.add(this.game.prodigy.create.sprite(4, 40, "core", "ribbon")))
	},
	createCard: function(e) {
		if (Util.isDefined(e) && (this.createMedium(e), e.data.member && !this.game.prodigy.player.isMember)) {
			if (Util.isDefined(e.isGift) && e.isGift) return;
			this.panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member"))
		}
	},
	createStylistCard: function(e) {
		Util.isDefined(e) && (this.createCharacter(e, 0, 0, !0), e.data.member && !this.game.prodigy.player.isMember && (Util.isNullOrUndefined(e.isGift) || !e.isGift) && this.panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member")))
	},
	createCharacter: function(e, t, i, a) {
		if (Util.isDefined(e)) {
			a && this.game.prodigy.create.panel(this, t, i, 4, 5, "shine");
			var s = new Player(this.game),
				r = new Prodigy.Container.UserEquipment(this.game, this, t - 88, i - 75, s, 1, !1);
			this.resetPlayer(s, r, e)
		}
	},
	resetPlayer: function(e, t, i) {
		var a = this.game.prodigy.player.appearance.getGender(),
			s = this.game.prodigy.player.appearance.getHair(),
			r = s.color,
			n = s.style;
		s = null;
		var o = this.game.prodigy.player.appearance.getEyeColor(),
			h = this.game.prodigy.player.appearance.getSkinColor(),
			l = this.game.prodigy.player.appearance.getFace(),
			d = this.game.prodigy.player.equipment.getEquipment("outfit"),
			c = this.game.prodigy.player.equipment.getEquipment("hat"),
			p = this.game.prodigy.player.equipment.getEquipment("weapon");
		"gender" === i.type ? (a = 1 === i.ID ? "male" : "female", l = 1 === i.ID ? 4 : 12) : "hair" === i.type ? n = i.ID : "eyeColor" === i.type ? o = i.ID : "skinColor" === i.type ? h = i.ID : "hairColor" === i.type ? r = i.ID : "face" === i.type ? l = i.ID : "outfit" === i.type ? d = i.ID : "hat" === i.type ? c = i.ID : "weapon" === i.type && (p = i.ID, t.user.forceWeaponVisual = !0), e.appearance.setGender(a), e.appearance.setHair(n, r), e.appearance.setEyeColor(o), e.appearance.setSkinColor(h), e.appearance.setFace(l), e.equipment.setEquipment({
			outfit: d,
			hat: c,
			weapon: p
		}), e.appearanceChanged = !0, t.user.reload()
	},
	createStore: function(e) {
		if (Util.isDefined(e)) {
			this.createMedium(e);
			var t = this.owned = this.game.prodigy.player.backpack.hasItem(this.type, this.ID);
			if ("dorm" === this.type) t = this.owned = this.game.prodigy.player.house.getOwned(this.ID) >= 9;
			else if ("pet" === this.type) t = this.owned = this.game.prodigy.player.kennel.hasPet(this.ID);
			else if ("dormbg" === this.type) t = this.owned = this.game.prodigy.player.house.getCurrentHouseTag() === e.data.tag;
			else if ("gender" === this.type) {
				var i = {
					male: 1,
					female: 2
				};
				t = this.owned = i[this.game.prodigy.player.appearance.getGender()] === this.ID
			} else "hair" === this.type ? t = this.owned = this.game.prodigy.player.appearance.getHair().style === this.ID : "eyeColor" === this.type ? t = this.owned = this.game.prodigy.player.appearance.getEyeColor() === this.ID : "skinColor" === this.type ? t = this.owned = this.game.prodigy.player.appearance.getSkinColor() === this.ID : "hairColor" === this.type ? t = this.owned = this.game.prodigy.player.appearance.getHair().color === this.ID : "face" === this.type && (t = this.owned = this.game.prodigy.player.appearance.getFace() === this.ID);
			this.cost = this.itemObject.cost;
			var a = "[mail-gold] ";
			if (("currency" !== this.cost.type || 1 !== this.cost.ID) && (a = "[" + Items.getItemData(this.cost.type, this.cost.ID).icon + "] "), "item" === this.type && t >= 99 || "item" !== this.type && t) {
				var s;
				s = "dorm" === this.type || t >= 99 ? "MAX" : "gender" === this.type || "hair" === this.type || "eyeColor" === this.type || "skinColor" === this.type || "hairColor" === this.type || "face" === this.type ? "CURRENT" : "OWNED", this.game.prodigy.create.font(this.panel, 10, 166, s, {
					size: 20
				})
			} else this.cost.N <= 0 ? this.game.prodigy.create.font(this.panel, 10, 166, "FREE", {
				size: 20
			}) : this.game.prodigy.create.font(this.panel, 6, 166, a + Util.numberToString(this.cost.N), {
				size: 20
			});
			e.data.member && !this.game.prodigy.player.isMember && this.panel.add(this.game.prodigy.create.sprite(120, 160, "icons", "mail-member"))
		}
	},
	clicked: function() {
		Util.isDefined(this.onClick) && this.onClick({
			type: this.type,
			ID: this.ID
		}, this.owned, this.price)
	}
}), Prodigy.Container.BountyContainer = function(e, t, i, a, s, r, n) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), this.parent = t, this.ID = r, this.game = e, !this.game.prodigy.player.backpack.hasItem("item", this.ID + 84) && this.game.prodigy.player.state.get("world-bounties")[this.ID] > 0) this.mode = Util.isDefined(n) ? "empty" : "preaccept";
	else if (this.game.prodigy.player.backpack.hasItem("item", this.ID + 84))
		for (var o = this.game.prodigy.bounty.getBounties(), h = 0; h < o.length; h++) o[h].ID - 84 === this.ID && (this.mode = Util.isDefined(o[h].complete) ? "preturnin" : "precomplete");
	else this.mode = "turnedin";
	this.setup(s)
}, Prodigy.extends(Prodigy.Container.BountyContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.BountyContainer,
	setup: function(e) {
		if ("precomplete" === this.mode || "preturnin" === this.mode || "preaccept" === this.mode) {
			this.game.prodigy.create.panel(this, 0, 0, 7, 11, "paper");
			var t = this.game.prodigy.bounty.getMode(e),
				i = this.game.prodigy.bounty.getReward(e);
			if ("pet" === t) {
				var a = "";
				"precomplete" === this.mode || "preaccept" === this.mode ? (a = this.getText(e), "preaccept" === this.mode && (i > 2 && !this.game.prodigy.player.isMember ? this.game.prodigy.create.advButton(this, 150, 310, {
					icon: "membership",
					top: "Member",
					bot: "Bounty"
				}, this.openMessage.bind(this)) : this.game.prodigy.create.advButton(this, 150, 310, {
					icon: "yes",
					top: "Accept",
					bot: "Bounty"
				}, this.accept.bind(this, this.ID + 84, this.game.prodigy.player.state.get("world-bounties")[this.ID], this.ID)))) : a = "You have completed this bounty. Talk to Boardy to turn it in for a reward!";
				var s = this.game.prodigy.bounty.getMonster(e);
				this.add(this.game.prodigy.create.sprite("preaccept" === this.mode ? 30 : 90, 310, "core", "empty-icon")), this.add(this.game.prodigy.icon.createFromData({
					type: "pet",
					ID: s
				}, "preaccept" === this.mode ? 40 : 100, 317))
			}
			this.add(this.game.prodigy.create.sprite(5, 5, "icons", "bounty")), this.game.prodigy.create.font(this, 22, 18, "" + i, {
				size: 40,
				width: 40,
				align: "center"
			}), this.game.prodigy.create.font(this, 20, 110, a, {
				size: 20,
				width: 245
			}), this.game.prodigy.create.font(this, 85, 26, "Bounty Note", {
				size: 20,
				width: 245
			})
		} else this.game.prodigy.create.panel(this, 0, 0, 7, 11, "empty"), "turnedin" === this.mode ? this.game.prodigy.create.font(this, 20, 120, "This bounty has been completed. Come back tomorrow for a new one!", {
			size: 20,
			width: 250
		}) : "empty" === this.mode && this.game.prodigy.create.font(this, 20, 120, "Head to the bounty board in Lamplight Town and accept a new bounty!", {
			size: 20,
			width: 250,
			align: "center"
		})
	},
	getText: function(e) {
		var t = this.game.prodigy.bounty.getMonster(e),
			i = this.game.prodigy.bounty.getZone(e),
			a = this.game.prodigy.bounty.getMap(e),
			s = this.game.prodigy.bounty.getName(e),
			r = this.game.prodigy.bounty.getText(e),
			n = this.game.prodigy.world.zones[i].name,
			o = this.game.prodigy.world.zones[i].maps[a]._name,
			h = "";
		if (0 === r) {
			var l = Items.getItemData("pet", t).name;
			h = "Defeat " + s + ", " + this.getArticle(l) + " " + l + " at " + o + " in " + n + "."
		} else 1 === r ? h = s + " is causing trouble in " + n + ". Stop him at " + o + "." : 2 === r ? h = s + " has finally come out of hiding. Find her at " + o + " in " + n + "." : 3 === r ? h = s + " has appeared at " + o + " in " + n + "." : 4 === r && (h = s + " has appeared at " + o + " in " + n + ". Get him before he vanishes!");
		return h
	},
	accept: function(e, t) {
		this.game.prodigy.player.backpack.hasItem("item", e) || this.game.prodigy.open.gotItem([{
			ID: e,
			type: "item",
			N: 1,
			lvl: this.game.prodigy.bounty.getReward({
				seed: t
			}),
			data: {
				seed: t
			}
		}], null, null, "collect-bounty-note")
	},
	getArticle: function(e) {
		return "A" === e[0] || "E" === e[0] || "I" === e[0] || "O" === e[0] || "U" === e[0] ? "an" : "a"
	},
	openMessage: function() {
		this.game.prodigy.open.membership()
	}
}), Prodigy.Container.LevelContainer = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.stars = n, this.callback = o, this.xpBar = null, this.level = null, this.refresh(s, r)
}, Prodigy.extends(Prodigy.Container.LevelContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.LevelContainer,
	refresh: function(e, t) {
		this.mode = e, this.member = t, this.drawCard(this.mode)
	},
	drawCard: function(e) {
		"player" === e ? this.createPlayer() : "monster" === e ? this.createMonster() : this.createEmpty(), this.stars > 0 && this.getStars()
	},
	createPlayer: function() {
		this.level = this.player.getLevel(), this.game.prodigy.create.panel(this, -2, 40, 12, 3, "item-common"), this.game.prodigy.create.panel(this, -20, 0, 3, 3, "blue"), this.p = this.game.prodigy.create.player(this, this.player, 1, 38, 170, !1), this.p.reload(), this.game.prodigy.create.font(this, 120, 50, this.player.appearance.getName()), this.createBar()
	},
	createMonster: function() {
		this.level = this.member.getLevel();
		var e = this.member.source.name;
		Util.isDefined(this.member.data.nickname) && (e = this.member.data.nickname), this.game.prodigy.create.panel(this, 0, 0, 12, 4, "item-common"), this.game.prodigy.create.panel(this, 20, 10, 2, 2, "blue"), this.add(this.game.prodigy.icon.createFromData({
			type: "pet",
			ID: this.member.data.ID
		}, 20, 10)), this.game.prodigy.create.font(this, 120, 10, e), this.createBar()
	},
	createEmpty: function() {
		this.game.prodigy.create.panel(this, 0, 0, 12, 4, "item-common")
	},
	createBar: function() {
		this.lvl = this.game.prodigy.create.font(this, 120, 85, "Lvl " + this.level);
		var e = Prodigy.Creature.getLevelPercent(this.member.getStars());
		this.xpBar = this.add(new Phaser.TileSprite(this.game, 7, 125, 465, 30, "core", "xp-bar")), this.xpBar.scale.x = 0 === e ? 0 : e, this.fraction = this.game.prodigy.create.font(this, 7, 125, " " + this.member.getStars() + "/" + this.member.getStarsToLevel(), {
			width: 465,
			align: "center"
		})
	},
	getStars: function() {
		this.star = this.game.prodigy.create.sprite(470, 105, "icons", "star"), this.add(this.star), this.star.scale = {
			x: 1.1,
			y: 1.1
		}, this.star.anchor.setTo(.5, .5), this.game.add.tween(this.star).to({
			angle: 270,
			x: 465,
			y: 108
		}, 1e3, Phaser.Easing.Quadratic.In).delay(100).start(), this.game.add.tween(this.star.scale).to({
			x: 1.2,
			y: 1.2
		}, 500, Phaser.Easing.Quadratic.In).to({
			x: 1,
			y: 1
		}, 500, Phaser.Easing.Quadratic.In).start(), this.n = this.game.prodigy.create.font(this, 442, 85, "" + this.stars, {
			font: "button",
			size: 36,
			width: 50,
			align: "center"
		}), this.game.add.tween(this.n).to({
			x: 438,
			y: 81
		}, 400, Phaser.Easing.Quadratic.Out).to({
			x: 442,
			y: 85
		}, 400).delay(1100).start(), this.game.add.tween(this.n.scale).to({
			x: 1.2,
			y: 1.2
		}, 400, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 400, Phaser.Easing.Quadratic.In).delay(1100).start();
		for (var e = 0; e < this.stars; e++) {
			var t = this.game.add.tween().to().delay(300 * e).start();
			t.onComplete.add(this.addStars, this)
		}
	},
	addStars: function() {
		if (this.member.addStars(1), this.stars--, Util.isDefined(this.n) && this.n.destroy(), Util.isDefined(this.fraction) && this.fraction.destroy(), this.fraction = this.game.prodigy.create.font(this, 7, 125, " " + this.member.getStars() + "/" + (this.member.getStars() + this.member.getStarsToLevel()), {
				width: 465,
				align: "center"
			}), this.stars > 0 && (this.n = this.game.prodigy.create.font(this, 442, 85, "" + this.stars, {
				font: "button",
				size: 36,
				width: 50,
				align: "center"
			}), this.game.add.tween(this.n).to({
				x: 438,
				y: 81
			}, 100, Phaser.Easing.Quadratic.Out).to({
				x: 442,
				y: 85
			}, 100).start(), this.game.add.tween(this.n.scale).to({
				x: 1.2,
				y: 1.2
			}, 100, Phaser.Easing.Quadratic.Out).to({
				x: 1,
				y: 1
			}, 100, Phaser.Easing.Quadratic.In).start()), this.stars >= 0) {
			var e = Prodigy.Creature.getLevelPercent(this.member.getStars());
			this.game.add.tween(this.xpBar.scale).to({
				x: e
			}, 100, Phaser.Easing.Quadratic.Out).start(), 0 === this.stars && (this.shootStars(0, 470, 105), this.star.destroy(), this.finish())
		}
		this.member.getLevel() !== this.level && (this.level = this.member.getLevel(), this.levelUp())
	},
	levelUp: function() {
		this.shootStars(0, 180, 110), Util.isDefined(this.lvl) && this.lvl.destroy(), this.lvl = this.game.prodigy.create.font(this, 120, 85, "Lvl " + this.level), this.game.add.tween(this.lvl).to({
			y: 80
		}, 400).to({
			y: 85
		}, 400).start(), this.game.add.tween(this.xpBar.scale).to({
			x: 0
		}, 300, Phaser.Easing.Quadratic.Out).start()
	},
	shootStars: function(e, t, i) {
		for (var a = 0; 5 > a; a++) {
			var s = t - 100 + 50 * a,
				r = i - 150;
			0 === a || 4 === a ? r += 120 : (1 === a || 3 === a) && (r += 50);
			var n = this.game.prodigy.create.sprite(t, i, "icons", "star");
			this.add(n), n.anchor.setTo(.5, .5), n.alpha = 0, this.game.add.tween(n).to({
				alpha: .5
			}, 1, Phaser.Easing.Linear.None).delay(e).to({
				x: s,
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(n).to({
				y: r
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(e).start()
		}
	},
	finish: function() {
		this.callback()
	}
}), Prodigy.Container.FlyingStars = function(e, t, i) {
	this.game = e, this.x = t - 10, this.y = i - 10, this.animate()
}, Prodigy.Container.FlyingStars.prototype = {
	constructor: Prodigy.Container.FlyingStars,
	animate: function() {
		for (var e = 0; 10 > e; e++) this.addStar(80 * e + 50 * Math.random(), 9 === e)
	},
	finish: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.FlyingStars.DONE, this.game, null)
	},
	addStar: function(e, t) {
		var i = this.game.prodigy.create.sprite(this.x + 20 * Math.random(), this.y + 20 * Math.random(), "core-2", "user-star");
		i.anchor.setTo(.5, .5), i.scale.setTo(0, 0), i.angle += Math.round(90 * Math.random()), this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [i, "overlay"]);
		var a = .3 * Math.random(),
			s = this.game.add.tween(i.scale).to({
				x: 1,
				y: 1
			}, 200, Phaser.Easing.Quadratic.Out).delay(e),
			r = this.game.add.tween(i.scale).to({
				x: 1.3,
				y: 1.3
			}, 250, Phaser.Easing.Quadratic.InOut),
			n = this.game.add.tween(i.scale).to({
				x: 1 + a,
				y: 1 + a
			}, 250, Phaser.Easing.Quadratic.InOut),
			o = this.game.add.tween(i.scale).to({
				x: 0,
				y: 0
			}, 200, Phaser.Easing.Quadratic.In);
		o.onComplete.add(function() {
			i.kill()
		}, i), t && o.onComplete.add(function() {
			this.finish()
		}, this), s.chain(r), r.chain(n), n.chain(o), this.game.add.tween(i).to({
			y: 90 + 10 * Math.random()
		}, 900, Phaser.Easing.Quadratic.In).delay(e).start(), this.game.add.tween(i).to({
			x: 279 + 40 * Math.random()
		}, 900, Phaser.Easing.Quadratic.Out).delay(e).start(), s.start()
	}
}, Prodigy.Container.Pet = function(e, t, i, a, s) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "",
		npc: !0
	}, null, a.x, a.y - 1), this._mode = -1, this._tweens = [], this.itemData = Items.getItemData("follow", i), this.assets = ["pets"], this.path = s, this.player = a, this.coords = []
}, Prodigy.extends(Prodigy.Container.Pet, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.Pet,
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = ["pets", "core-2"], this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function(e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			var e = this.itemData.tag;
			this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), e.indexOf("cat") > -1 ? e.indexOf("sparkle") > -1 ? this.createSparkleCat(e, this.itemData.spriteOffsets) : this.createCat(e, this.itemData.spriteOffsets) : e.indexOf("dog") > -1 ? e.indexOf("sparkle") > -1 ? this.createSparkleDog(e) : this.createDog(e) : e.indexOf("rodent") > -1 ? e.indexOf("sparkle") > -1 ? this.createSparkleRodent(e) : this.createRodent(e) : e.indexOf("bird") > -1 ? this.createBird(e) : e.indexOf("lizard") > -1 ? this.createLizard(e) : e.indexOf("turtle") > -1 ? this.createTurtle(e, this.itemData.spriteOffsets) : e.indexOf("reindeer") > -1 ? this.createReindeer(e) : e.indexOf("penguin") > -1 ? this.createPenguin(e) : e.indexOf("snowman") > -1 ? this.createSnowman(e) : e.indexOf("panda") > -1 ? this.createPanda(e) : e.indexOf("sheep") > -1 ? this.createSheep(e) : e.indexOf("cactus") > -1 ? this.createCactus(e) : e.indexOf("fox") > -1 && this.createFox(e), Util.isDefined(this.itemData.extraAnims) && this.itemData.extraAnims.forEach(function(t) {
				var i = this.sprite.add(this.game.prodigy.create.sprite(t.offsets.x, t.offsets.y, "pets", e + "/" + t.animFrames[0])),
					a = null;
				a = "walk" === t.targetCycle ? this._walkTween : this._standTween, a.push(new Prodigy.TweenController(this.game, i)), a[a.length - 1].set("frameName", t.animFrames.map(function(t) {
					return e + "/" + t
				}, this), 80, 9999)
			}, this), this.complete = !0, this.loading = !1, Util.isDefined(this.loadedCallback) && this.loadedCallback()
		}
	},
	setupWalk: function(e) {
		var t = e + "/walk/";
		this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("y", [this._body.y, this._body.y + 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[1].set("frameName", [t + "legs-0", t + "legs-1", t + "legs-2", t + "legs-3"], 150, 9999), Util.isDefined(this._tail) && (this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[2].set("frameName", [t + "tail-0", t + "tail-1"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[3].set("y", [this._tail.y, this._tail.y + 1], 150, 9999))
	},
	setupStand: function(e) {
		var t = e + "/idle/";
		this._standTween = [], Util.isDefined(this._tail) && (this._standTween.push(new Prodigy.TweenController(this.game, this._tail)), this._standTween[0].set("y", [this._tail.y + 6], 1e4, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._tail)), this._standTween[1].set("frameName", [t + "tail-0", t + "tail-1", t + "tail-2"], 150, 9999))
	},
	setSpriteDefaults: function(e) {
		var t = function(e, t) {
			Util.isDefined(t) && (Util.isDefined(t._defaultAnims) && (t.frameName = t._defaultAnims[e]), Util.isDefined(t._defaultVisibility) && (t.visible = t._defaultVisibility[e]), Util.isDefined(t._defaults) && (t.x = t._defaults[e][0], t.y = t._defaults[e][1]))
		};
		t(e, this._head), t(e, this._body), t(e, this._legs), t(e, this._tail)
	},
	createCat: function(e, t) {
		var i = 0,
			a = 0,
			s = Util.isDefined(t) ? t : {};
		Util.isDefined(s.tail) || (s.tail = {
			x: -12,
			y: 1
		}), Util.isDefined(s.body) || (s.body = {
			x: 0,
			y: 0
		}), Util.isDefined(s.legs) || (s.legs = {
			x: -1,
			y: 29
		}), this._tail = this.sprite.add(this.game.prodigy.create.sprite(i + s.tail.x, a + s.tail.y, "pets", e + "/walk/tail-0")), this._body = this.sprite.add(this.game.prodigy.create.sprite(i + s.body.x, a + s.body.y, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(i + s.legs.x, a + s.legs.y, "pets", e + "/walk/legs-0")), this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(this._body.width / 2), this.setupWalk(e), this.setupStand(e)
	},
	createSparkleCat: function(e, t) {
		var i = 0,
			a = 0,
			s = Util.isDefined(t) ? t : {};
		Util.isDefined(s.tail) || (s.tail = {
			x: -12,
			y: 1
		}), Util.isDefined(s.body) || (s.body = {
			x: 0,
			y: 0
		}), Util.isDefined(s.legs) || (s.legs = {
			x: -1,
			y: 29
		}), this._tail = this.sprite.add(this.game.prodigy.create.sprite(i + s.tail.x, a + s.tail.y, "pets", e + "/walk/tail-0")), this._tail._defaultVisibility = {
			walk: !0,
			stand: !1
		}, this._body = this.sprite.add(this.game.prodigy.create.sprite(i + s.body.x, a + s.body.y, "pets", e + "/walk/body-0")), this._body._defaults = {
			walk: [i, a],
			stand: [i - 12, a]
		}, this._legs = this.sprite.add(this.game.prodigy.create.sprite(i + s.legs.x, a + s.legs.y, "pets", e + "/walk/legs-0")), this._legs._defaultVisibility = {
			walk: !0,
			stand: !1
		}, this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(.5 * this._body.width), this.setupWalk(e);
		var r = e + "/idle/";
		this._standTween = [], this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [r + "body-0", r + "body-1", r + "body-2", r + "body-3"], 150, 9999)
	},
	createDog: function(e) {
		var t = 0,
			i = 0;
		this._tail = this.sprite.add(this.game.prodigy.create.sprite(t - 12, i + 9, "pets", e + "/walk/tail-0")), this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(t - 1, i + 33, "pets", e + "/walk/legs-0")), this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(this._body.width / 2), this.setupWalk(e), this.setupStand(e)
	},
	createSparkleDog: function(e) {
		var t = 0,
			i = 0;
		this._tail = this.sprite.add(this.game.prodigy.create.sprite(t - 12, i + 9, "pets", e + "/walk/tail-0")), this._tail._defaultVisibility = {
			walk: !0,
			stand: !1
		}, this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._body._defaults = {
			walk: [t, i],
			stand: [t - 12, i]
		}, this._legs = this.sprite.add(this.game.prodigy.create.sprite(t - 1, i + 33, "pets", e + "/walk/legs-0")), this._legs._defaultVisibility = {
			walk: !0,
			stand: !1
		}, this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(.5 * this._body.width), this.setupWalk(e);
		var a = e + "/idle/";
		this._standTween = [], this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [a + "body-0", a + "body-1", a + "body-2", a + "body-3"], 150, 9999)
	},
	createRodent: function(e) {
		var t = 0,
			i = 0;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(t + 2, i + 18, "pets", e + "/walk/legs-0")), this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(this._body.width / 2), this.setupWalk(e), this.setupStand(e)
	},
	createSparkleRodent: function(e) {
		var t = 0,
			i = 0;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(.5 * this._body.width);
		var a = e + "/walk/";
		this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [a + "body-0", a + "body-1", a + "body-2", a + "body-3"], 150, 9999);
		var s = e + "/idle/";
		this._standTween = [], this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [s + "body-0", s + "body-1", s + "body-2", s + "body-3"], 150, 9999)
	},
	createBird: function(e) {
		var t = 0,
			i = 0,
			a = Util.isDefined(this.itemData.numWalkAnimFrames) ? this.itemData.numWalkAnimFrames : 4;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this.sprite.y = -this._body.height - 30, this.sprite.x = -Math.floor(this._body.width / 2);
		var s = e + "/walk/";
		this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._body));
		for (var r = [], n = 0; a > n; n++) r.push(s + "body-" + n);
		this._walkTween[0].set("frameName", r, 80, 9999), this._standTween = this._walkTween
	},
	createLizard: function(e) {
		var t = 0,
			i = 0,
			a = Util.isDefined(this.itemData.numStandAnimFrames) ? this.itemData.numStandAnimFrames : 0,
			s = e + "/walk/",
			r = e + "/idle/",
			n = [],
			o = [];
		if (this._walkTween = [], this._standTween = [], this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._tail = this.sprite.add(this.game.prodigy.create.sprite(t - 16, i + 6, "pets", e + "/walk/tail-0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(t + 22, i, "pets", e + "/walk/head-0")), this._head._defaultVisibility = {
				walk: !0,
				stand: !1
			}, this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(this._body.width / 2), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [s + "body-0", s + "body-1", s + "body-2", s + "body-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[1].set("frameName", [s + "tail-0", s + "tail-1"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[2].set("y", [this._tail.y, this._tail.y - 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[3].set("y", [this._head.y, this._head.y + 1], 150, 9999), a > 0) {
			this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween.push(new Prodigy.TweenController(this.game, this._tail));
			for (var h = 0; a > h; h++) n.push(r + "body-" + h), o.push(r + "tail-" + h);
			this._standTween[0].set("frameName", n, 150, 9999), this._standTween[1].set("frameName", o, 150, 9999)
		}
	},
	createTurtle: function(e, t) {
		var i = Util.isDefined(t) ? t : {};
		Util.isDefined(i.body) || (i.body = {
			x: 0,
			y: 0
		}), Util.isDefined(i.legs) || (i.legs = {
			x: 0,
			y: 0
		}), this._body = this.sprite.add(this.game.prodigy.create.sprite(i.body.x, i.body.y, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(i.legs.x, i.legs.y + this._body.height, "pets", e + "/walk/legs-0")), this.sprite.y = -(this._body.height + this._legs.height), this.sprite.x = -Math.floor(this._body.width / 2);
		var a = e + "/walk/";
		this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [a + "body-0"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[1].set("frameName", [a + "legs-0", a + "legs-1", a + "legs-2", a + "legs-3"], 150, 9999), this._standTween = []
	},
	createReindeer: function(e) {
		var t = 0,
			i = 0;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t + 7, i, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/legs-0")), this._tail = this.sprite.add(this.game.prodigy.create.sprite(t, i + 26, "pets", e + "/walk/tail-0")), this._body._defaults = {
			walk: [t + 3, i],
			stand: [t + 7, i]
		}, this._legs._defaults = {
			walk: [t + 3, i + 32],
			stand: [t, i]
		}, this._tail._defaults = {
			walk: [t, i + 18],
			stand: [t, i + 26]
		}, this.sprite.y = -(this._body.height + this._legs.height), this.sprite.x = -Math.floor(this._body.width / 2);
		var a = e + "/walk/";
		this._walkTween = [], this.setSpriteDefaults("walk"), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [a + "body-0"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[1].set("frameName", [a + "legs-0", a + "legs-1", a + "legs-2", a + "legs-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[2].set("frameName", [a + "tail-0", a + "tail-1", a + "tail-0", a + "tail-1"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[3].set("y", [this._body.y, this._body.y + 1, this._body.y, this._body.y + 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[4].set("y", [this._tail.y, this._tail.y + 1, this._tail.y, this._tail.y + 1], 150, 9999);
		var s = e + "/idle/";
		this._standTween = [], this.setSpriteDefaults("stand"), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [s + "body-0"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._tail)), this._standTween[1].set("frameName", [s + "tail-0", s + "tail-2", s + "tail-1", s + "tail-2"], 150, 9999)
	},
	createPenguin: function(e) {
		var t = 0,
			i = 0;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/head-0")), this._body._defaults = {
			walk: [t, i],
			stand: [t, i]
		}, this._head._defaults = {
			walk: [t + 8, i - 15],
			stand: [t + 5, i - 15]
		}, this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(this._body.width / 2);
		var a = e + "/walk/";
		this._walkTween = [], this.setSpriteDefaults("walk"), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [a + "body-0", a + "body-1", a + "body-2", a + "body-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[1].set("frameName", [a + "head-0"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[2].set("y", [this._head.y, this._head.y + 1, this._head.y, this._head.y + 1], 150, 9999);
		var s = e + "/idle/";
		this._standTween = [], this.setSpriteDefaults("stand"), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [s + "body-0", s + "body-1", s + "body-2"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[1].set("frameName", [s + "head-0"], 150, 9999)
	},
	createSnowman: function(e) {
		var t = 0,
			i = 0;
		this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/body-0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(t, i, "pets", e + "/walk/head-0")), this._body._defaults = {
			walk: [t, i],
			stand: [t, i]
		}, this._head._defaults = {
			walk: [t + 8, i - 17],
			stand: [t + 8, i - 18]
		}, this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(this._body.width / 2);
		var a = e + "/walk/";
		this._walkTween = [], this.setSpriteDefaults("walk"), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[0].set("frameName", [a + "body-0", a + "body-1", a + "body-2", a + "body-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[1].set("frameName", [a + "head-0"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[2].set("x", [this._head.x, this._head.x + 1, this._head.x + 2, this._head.x + 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[3].set("y", [this._head.y, this._head.y - 1, this._head.y - 1, this._head.y], 150, 9999);
		var s = e + "/idle/";
		this._standTween = [], this.setSpriteDefaults("stand"), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[0].set("frameName", [s + "body-0", s + "body-1", s + "body-1", s + "body-0"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[1].set("frameName", [s + "head-0"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[2].set("y", [this._head.y, this._head.y - 1, this._head.y - 2, this._head.y - 1], 150, 9999)
	},
	createPanda: function(e) {
		var t = e + "/walk/",
			i = e + "/idle/";
		this._body = this.sprite.add(this.game.prodigy.create.sprite(0, 0, "pets", t + "body-0")), this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(this._body.width / 2), this._walkTween = [new Prodigy.TweenController(this.game, this._body)], this._walkTween[this._walkTween.length - 1].set("frameName", [t + "body-0", t + "body-1", t + "body-2", t + "body-3"], 150, 9999), this._standTween = [new Prodigy.TweenController(this.game, this._body)], this._standTween[this._standTween.length - 1].set("frameName", [i + "body-0", i + "body-1", i + "body-2"], 150, 9999)
	},
	createSheep: function(e) {
		var t = e + "/walk/",
			i = e + "/idle/";
		this._walkTween = [], this._standTween = [], this._body = this.sprite.add(this.game.prodigy.create.sprite(0, 0, "pets", t + "body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(0, 0, "pets", t + "shadow-0")), this._legs._defaults = {
			walk: [15, 43],
			stand: [13, 29]
		}, this._legs._defaultAnims = {
			walk: t + "shadow-0",
			stand: i + "legs-0"
		}, this._legs._defaultVisibility = {
			walk: !0,
			stand: !0
		}, this.sprite.y = -(this._body.height + this._legs.height), this.sprite.x = -Math.floor(this._body.width / 2), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[this._walkTween.length - 1].set("frameName", [t + "body-0", t + "body-1", t + "body-1", t + "body-0"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[this._walkTween.length - 1].set("y", [this._body.y, this._body.y - 1, this._body.y - 2, this._body.y - 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[this._walkTween.length - 1].set("frameName", [t + "shadow-0"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[this._standTween.length - 1].set("frameName", [i + "body-0", i + "body-0", i + "body-1", i + "body-1"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[this._standTween.length - 1].set("y", [this._body.y, this._body.y - 1, this._body.y, this._body.y + 1], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._legs)), this._standTween[this._standTween.length - 1].set("frameName", [i + "legs-0", i + "legs-1", i + "legs-2", i + "legs-3"], 150, 9999), this.setSpriteDefaults("walk"), this.setSpriteDefaults("stand")
	},
	createCactus: function(e) {
		var t = e + "/walk/",
			i = e + "/idle/";
		this._body = this.sprite.add(this.game.prodigy.create.sprite(0, 0, "pets", t + "body-0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(0, 0, "pets", t + "flower-0")), this._head._defaults = {
			walk: [11, -17],
			stand: [11, -17]
		}, this._head._defaultAnims = {
			walk: t + "flower-0",
			stand: i + "flower-0"
		}, this.sprite.y = -this._body.height, this.sprite.x = -Math.floor(this._body.width / 2), this._walkTween = [], this._standTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[this._walkTween.length - 1].set("frameName", [t + "body-0", t + "body-1", t + "body-2", t + "body-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[this._walkTween.length - 1].set("frameName", [t + "flower-0", t + "flower-1", t + "flower-2", t + "flower-3"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[this._standTween.length - 1].set("frameName", [i + "body-0", i + "body-1", i + "body-2", i + "body-3"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[this._standTween.length - 1].set("frameName", [i + "flower-0", i + "flower-1", i + "flower-2", i + "flower-3"], 150, 9999), this.setSpriteDefaults("walk"), this.setSpriteDefaults("stand")
	},
	createFox: function(e) {
		var t = 0,
			i = 0,
			a = e + "/walk/",
			s = e + "/idle/";
		this._tail = this.sprite.add(this.game.prodigy.create.sprite(t, i + 14, "pets", e + "/walk/tail-0")), this._body = this.sprite.add(this.game.prodigy.create.sprite(t + 19, i, "pets", e + "/walk/body-0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(t + 18, i + 30, "pets", e + "/walk/legs-0")), this._tail._defaults = {
			walk: [0, 14],
			stand: [0, 13]
		}, this._body._defaults = {
			walk: [19, 0],
			stand: [13, 0]
		}, this._legs._defaults = {
			walk: [18, 30],
			stand: [0, 0]
		}, this.sprite.y = -this._body.height - this._legs.height, this.sprite.x = -Math.floor(.5 * this._body.width), this._standTween = [], this._walkTween = [];
		for (var r = [], n = Math.round(2350 / 150), o = 0; n > o; o++) r.push(s + "body-0");
		r.push(s + "body-1");
		var h = [],
			l = Math.round(850 / 150);
		for (o = 0; l > o; o++) h.push(s + "tail-0");
		h.push(s + "tail-1"), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[this._standTween.length - 1].set("frameName", r, 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._tail)), this._standTween[this._standTween.length - 1].set("frameName", h, 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[this._walkTween.length - 1].set("y", [this._body.y, this._body.y + 1], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[this._walkTween.length - 1].set("frameName", [a + "legs-0", a + "legs-1", a + "legs-2", a + "legs-3"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[this._walkTween.length - 1].set("frameName", [a + "tail-0", a + "tail-1"], 150, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._tail)), this._walkTween[this._walkTween.length - 1].set("y", [this._tail.y, this._tail.y + 1], 150, 9999), this.setSpriteDefaults("stand"), this.setSpriteDefaults("walk")
	},
	update: function() {
		if (Prodigy.Container.CreatureContainer.prototype.update.call(this), this.complete) {
			if (Util.isDefined(this._tweens))
				for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update();
			if (Util.isDefined(this.player)) {
				var t = this.coords[this.coords.length - 1],
					i = Math.round(this.player.x),
					a = Math.round(this.player.y);
				Util.isDefined(t) && t.x === this.player.x && t.y === this.player.y || this.coords.push({
					x: i,
					y: a
				}), this.coords.length > 20 || this.x <= 0 && this.y <= 0 ? (this.x < this.coords[0].x ? this.sprites.scale.x = 1 : this.x > this.coords[0].x && (this.sprites.scale.x = -1), this.x = this.coords[0].x, this.y = this.coords[0].y, this.walk(), this.coords.splice(0, 1)) : this.stand()
			}
		}
	},
	walk: function() {
		if (0 !== this._mode) {
			this._mode = 0, Util.isDefined(this._legs) && (this._legs.visible = !0), Util.isDefined(this._body) && (this._body.frameName = this.itemData.tag + "/walk/body-0"), this.setSpriteDefaults("walk"), this._tweens = this._walkTween;
			for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
		}
	},
	stand: function() {
		if (1 !== this._mode) {
			this._mode = 1, Util.isDefined(this._legs) && (this._legs.visible = !1), Util.isDefined(this._body) && (this._body.frameName = this.itemData.tag + "/idle/body-0"), this.setSpriteDefaults("stand"), this._tweens = this._standTween;
			for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
		}
	}
}), Prodigy.Container.Pippet = function(e, t, i, a, s, r, n) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Pippet",
		npc: !0
	}, null, i, a), this.tweens = [], this.user = s, this.path = r, this.ID = n, this.mods = {
		boss: {
			element: "shadow",
			attacks: [43],
			name: "Pippet",
			tag: "pippet",
			pippetBattle: !0,
			heartsCurveType: "A-",
			levelOffset: 3
		},
		drops: [{
			type: "currency",
			ID: 3,
			N: 1
		}],
		difficulty: 8
	}, this.setup()
}, Prodigy.extends(Prodigy.Container.Pippet, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.Pippet,
	setup: function() {
		var e = "npc-sprite-pippet",
			t = -20,
			i = -60;
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this.torso = this.sprite.add(this.game.prodigy.create.sprite(t, i, e, "torso")), this.head = this.sprite.add(this.game.prodigy.create.sprite(t - 33, i - 62, e, "head-0")), this.face = this.sprite.add(this.game.prodigy.create.sprite(t + 7, i - 31, e, "face-0")), this.handL = this.sprite.add(this.game.prodigy.create.sprite(t - 27, i + 5, e, "hand-l-0")), this.handR = this.sprite.add(this.game.prodigy.create.sprite(t + 48, i, e, "hand-r-0")), this.feet = this.sprite.add(this.game.prodigy.create.sprite(t - 13, i + 36, e, "feet")), this.walkTween = [], this.walkTween.push(new Prodigy.TweenController(this.game, this.head)), this.walkTween[0].set("frameName", ["head-0", "head-0", "head-0", "head-1", "head-2", "head-0"], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.head)), this.walkTween[1].set("y", [this.head.y, this.head.y, this.head.y + 1, this.head.y + 3, this.head.y + 2, this.head.y + 1], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.face)), this.walkTween[2].set("frameName", ["face-0", "face-0", "face-2", "face-0", "face-1", "face-1"], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.face)), this.walkTween[3].set("y", [this.face.y, this.face.y, this.face.y + 1, this.face.y + 3, this.face.y + 2, this.face.y + 1], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.torso)), this.walkTween[4].set("y", [this.torso.y, this.torso.y, this.torso.y, this.torso.y + 1, this.torso.y + 1, this.torso.y], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.handL)), this.walkTween[5].set("frameName", ["hand-l-0", "hand-l-0", "hand-l-0", "hand-l-1", "hand-l-2", "hand-l-1"], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.handL)), this.walkTween[6].set("y", [this.handL.y, this.handL.y, this.handL.y, this.handL.y + 1, this.handL.y + 1, this.handL.y + 1], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.handR)), this.walkTween[7].set("frameName", ["hand-r-0", "hand-r-0", "hand-r-0", "hand-r-1", "hand-r-2", "hand-r-1"], 133, 9999), this.walkTween.push(new Prodigy.TweenController(this.game, this.handR)), this.walkTween[8].set("y", [this.handR.y, this.handR.y, this.handR.y, this.handR.y + 2, this.handR.y + 2, this.handR.y + 2], 133, 9999), this.stand()
	},
	process: function(e, t) {
		this.zone = e, this.map = t
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].update();
		var t = Phaser.Math.distanceSq(this.x, this.y, this.user.x, this.user.y) < 4e4,
			i = this.game.prodigy.world.pippetEncounterDaily.isComplete(),
			a = this.path.isPathBlocked(this.x, this.y, this.user.x, this.user.y),
			s = this.visible && !this.user.evtProc && t && !a;
		this.started || !i && !s || this.alert()
	},
	alert: function() {
		this.started = !0, this.user.setPath([]), this.user.x = Math.floor(this.user.x), this.user.y = Math.floor(this.user.y), this.game.prodigy.network.emitMessage({
			action: "move",
			data: {
				userID: this.game.prodigy.player.userID,
				path: [{
					x: this.user.x,
					y: this.user.y
				}]
			}
		});
		var e = this.game.prodigy.event.create();
		e.function(this.faceToward.bind(this, this.user.x)), this.game.prodigy.world.pippetEncounterDaily.isComplete() ? this.completeDailyCutscene(e) : this.startDailyCutscene(e), e.start()
	},
	startDailyCutscene: function(e) {
		var t = function() {
			this.chatBubble.destroy(), this.endChat()
		}.bind(this);
		e.function(this.chat.bind(this, 1, 150, !0)), e.function(this.faceToward.bind(this, this.user.x)), e.delay(1e3), e.function(t), e.delay(300), e.text(this.game.prodigy.world.pippetEncounterSpawn.dialogue, "pippet"), e.sound(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "monster"), e.function(this.startBattle.bind(this))
	},
	completeDailyCutscene: function(e) {
		e.text(Prodigy.PippetEncounter.data.completeDialogue, "pippet"), e.function(this.stopAnimations.bind(this)), e.set(this.name, "visible", !1), e.set(this.pivot, "y", .5 * -this.height), e.set(this, "y", this.y - .5 * this.height), e.tween(this.scale, {
			x: 0,
			y: 0
		}, 1e3, Phaser.Easing.Linear.None, !0), e.tween(this, {
			x: 640,
			y: -200,
			rotation: 360
		}, 1e3, Phaser.Easing.Linear.None), e.set(this.game.prodigy.world, "pippetEncounterSpawn", null), e.set(this, "visible", !1)
	},
	startBattle: function() {
		var e = function(e) {
			e.prodigy.world.pippetEncounterDaily.complete(), e.prodigy.world.teleport(this.map.getLocation(), this.user.x, this.user.y)
		}.bind(this, this.game);
		this.game.prodigy.network.sendAnalytics("random-pippet-battles", "pippet-initiate-class-percent", "Events"), this.zone.util.getBattle(this.map, "Pippet Battle!", this.mods, e)()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this.tweens = this.walkTween;
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].start()
	},
	stopAnimations: function() {
		this.tweens = []
	}
}), Prodigy.Container.PuppetMaster = function(e, t, i, a) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "The Puppet Master",
		npc: !0,
		nameX: 0,
		nameY: -250
	}, null, i, a), this._tweens = [], this._setup()
}, Prodigy.extends(Prodigy.Container.PuppetMaster, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.PuppetMaster,
	_setup: function() {
		var e = "npc-sprite-puppetmaster",
			t = -61,
			i = -150;
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this._armR = this.sprite.add(this.game.prodigy.create.sprite(t - 12, i + 26, e, "arm-right")), this._handR = this.sprite.add(this.game.prodigy.create.sprite(t - 22, i + 12, e, "hand-1")), this._staff = this.sprite.add(this.game.prodigy.create.sprite(t - 53, i - 70, e, "staff-0")), this._body = this.sprite.add(this.game.prodigy.create.sprite(t, i, e, "body-0")), this._armL = this.sprite.add(this.game.prodigy.create.sprite(t + 70, i + 18, e, "arm-left")), this._handL = this.sprite.add(this.game.prodigy.create.sprite(t + 123, i + 18, e, "hand-0")), this._fingersL = this.sprite.add(this.game.prodigy.create.sprite(t + 105, i - 13, e, "fingers-0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(t + 20, i - 36, e, "head")), this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[0].set("y", [this._head.y, this._head.y - 2, this._head.y - 3, this._head.y - 2], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[1].set("frameName", ["body-0", "body-1", "body-2", "body-3"], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[2].set("y", [this._body.y, this._body.y - 4, this._body.y - 4, this._body.y - 2], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._armR)), this._walkTween[3].set("y", [this._armR.y, this._armR.y - 5, this._armR.y - 5, this._armR.y - 2], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._armR)), this._walkTween[4].set("x", [this._armR.x, this._armR.x + 1, this._armR.x, this._armR.x - 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._handR)), this._walkTween[5].set("y", [this._handR.y, this._handR.y - 3, this._handR.y - 3, this._handR.y - 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._handR)), this._walkTween[6].set("x", [this._handR.x, this._handR.x - 2, this._handR.x - 3, this._handR.x - 2], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._staff)), this._walkTween[7].set("y", [this._staff.y, this._staff.y - 3, this._staff.y - 4, this._staff.y - 3], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._armL)), this._walkTween[8].set("y", [this._armL.y, this._armL.y - 4, this._armL.y - 3, this._armL.y - 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._armL)), this._walkTween[9].set("x", [this._armL.x, this._armL.x - 1, this._armL.x - 1, this._armL.x - 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._handL)), this._walkTween[10].set("y", [this._handL.y, this._handL.y - 2, this._handL.y - 1, this._handL.y + 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._handL)), this._walkTween[11].set("x", [this._handL.x, this._handL.x - 1, this._handL.x - 1, this._handL.x], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._fingersL)), this._walkTween[12].set("frameName", ["fingers-0", "fingers-1", "fingers-2", "fingers-1"], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._fingersL)), this._walkTween[13].set("y", [this._fingersL.y, this._fingersL.y - 1, this._fingersL.y, this._fingersL.y + 1], 200, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._fingersL)), this._walkTween[11].set("x", [this._fingersL.x, this._fingersL.x + 1, this._fingersL.x + 1, this._fingersL.x], 200, 9999), this.stand()
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this._tweens = this._walkTween;
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
	}
}), Prodigy.Container.MamaStar = function(e, t, i, a) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Mama Star",
		npc: !0
	}, null, i, a), this._tweens = [], this._setup()
}, Prodigy.extends(Prodigy.Container.MamaStar, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.MamaStar,
	_setup: function() {
		var e = "npc-sprite-mama_star",
			t = 0,
			i = 33;
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this._feet = this.sprite.add(this.game.prodigy.create.sprite(t - 12, i - 40, e, "feet_0")), this._arms = this.sprite.add(this.game.prodigy.create.sprite(t - 26, i - 63, e, "arms_0")), this._legs = this.sprite.add(this.game.prodigy.create.sprite(t - 12.5, i - 59, e, "dress_0")), this._body = this.sprite.add(this.game.prodigy.create.sprite(t - 20, i - 75, e, "shawl_0")), this._head = this.sprite.add(this.game.prodigy.create.sprite(t - 33.5, i - 123, e, "head_0")), this._eyes = this.sprite.add(this.game.prodigy.create.sprite(t - 7.5, i - 89, e, "eyes_0")), this._eyebrows = this.sprite.add(this.game.prodigy.create.sprite(t - 11, i - 98, e, "eyebrows_0")), this._mouth = this.sprite.add(this.game.prodigy.create.sprite(t - 4.5, i - 80, e, "mouth_0")), this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._head)), this._walkTween[0].set("y", [this._head.y, this._head.y - 1, this._head.y - 1, this._head.y - 3, this._head.y - 2, this._head.y - 1], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._mouth)), this._walkTween[1].set("y", [this._mouth.y, this._mouth.y - 1, this._mouth.y - 1, this._mouth.y - 2, this._mouth.y - 1, this._mouth.y], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._eyes)), this._walkTween[2].set("frameName", ["eyes_0", "eyes_0", "eyes_0", "eyes_1", "eyes_2", "eyes_0"], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._eyes)), this._walkTween[3].set("y", [this._eyes.y, this._eyes.y - 1, this._eyes.y - 1, this._eyes.y - 1, this._eyes.y - 1, this._eyes.y - 1], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._eyebrows)), this._walkTween[4].set("y", [this._eyebrows.y, this._eyebrows.y - 1, this._eyebrows.y + 3, this._eyebrows.y + 2, this._eyebrows.y - 2, this._eyebrows.y], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._body)), this._walkTween[5].set("y", [this._body.y, this._body.y - 1, this._body.y - 1, this._body.y - 2, this._body.y - 1, this._body.y], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._arms)), this._walkTween[6].set("y", [this._arms.y, this._arms.y - 1, this._arms.y - 1, this._arms.y - 2, this._arms.y - 1, this._arms.y], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._legs)), this._walkTween[7].set("y", [this._legs.y, this._legs.y - 1, this._legs.y - 1, this._legs.y - 2, this._legs.y - 1, this._legs.y], 133, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._feet)), this._walkTween[8].set("frameName", ["feet_0", "feet_0", "feet_0", "feet_1", "feet_0", "feet_0"], 133, 9999), this.stand(), this.showName(!0, "Mama Star"), this.name.y += 30
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this._tweens = this._walkTween;
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
	}
}), Prodigy.Container.HowardCornelius = function(e, t, i, a) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Howard Cornelius",
		npc: !0
	}, null, i, a), this._tweens = [], this._setup()
}, Prodigy.extends(Prodigy.Container.HowardCornelius, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.HowardCornelius,
	_setup: function() {
		var e = "npc-sprite-howard_cornelius",
			t = -80,
			i = -225;
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this._hansBackpack = this.sprite.add(this.game.prodigy.create.sprite(t + 100, i + 24, e, "hans_backpack-0")), this._hansBody = this.sprite.add(this.game.prodigy.create.sprite(t + 85, i + 30, e, "hans_body-0")), this._hansHead = this.sprite.add(this.game.prodigy.create.sprite(t + 62, i + 7, e, "hans_head-0")), this._hansEyes = this.sprite.add(this.game.prodigy.create.sprite(t + 78, i + 22, e, "hans_eyes-0")), this.sprite.add(this.game.prodigy.create.sprite(t + 26, i + 208, e, "feet-0")), this._corneliusLegs = this.sprite.add(this.game.prodigy.create.sprite(t + 53, i + 191, e, "legs-0")), this._corneliusBody = this.sprite.add(this.game.prodigy.create.sprite(t + 36, i + 59, e, "body-0")), this._corneliusLeftArm = this.sprite.add(this.game.prodigy.create.sprite(t, i + 99, e, "left_arm-0")), this._corneliusRightArm = this.sprite.add(this.game.prodigy.create.sprite(t + 102, i + 106, e, "right_arm-0")), this._corneliusHead = this.sprite.add(this.game.prodigy.create.sprite(t + 53, i + 42, e, "head-0")), this._corneliusEyes = this.sprite.add(this.game.prodigy.create.sprite(t + 67, i + 65, e, "eyes-0")), this._corneliusMouth = this.sprite.add(this.game.prodigy.create.sprite(t + 42, i + 81, e, "mouth-0")), this._corneliusMustache = this.sprite.add(this.game.prodigy.create.sprite(t + 39, i + 74, e, "mustache-0")), this._corneliusEyebrows = this.sprite.add(this.game.prodigy.create.sprite(t + 54, i + 57, e, "eyebrows-0")), this._walkTween = [], this._walkTween.push(new Prodigy.TweenController(this.game, this._hansHead)), this._walkTween[0].set("y", [this._hansHead.y, this._hansHead.y, this._hansHead.y - 1, this._hansHead.y - 2, this._hansHead.y - 4, this._hansHead.y - 5, this._hansHead.y - 6, this._hansHead.y - 7, this._hansHead.y - 7, this._hansHead.y - 5, this._hansHead.y - 3, this._hansHead.y - 2, this._hansHead.y - 1, this._hansHead.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansEyes)), this._walkTween[1].set("frameName", ["hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-0", "hans_eyes-1", "hans_eyes-2"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansEyes)), this._walkTween[2].set("y", [this._hansEyes.y, this._hansEyes.y, this._hansEyes.y - 1, this._hansEyes.y - 2, this._hansEyes.y - 4, this._hansEyes.y - 5, this._hansEyes.y - 6, this._hansEyes.y - 7, this._hansEyes.y - 7, this._hansEyes.y - 5, this._hansEyes.y - 3, this._hansEyes.y - 2, this._hansEyes.y - 1, this._hansEyes.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansBody)), this._walkTween[3].set("frameName", ["hans_body-0", "hans_body-0", "hans_body-0", "hans_body-0", "hans_body-1", "hans_body-2", "hans_body-2", "hans_body-2", "hans_body-2", "hans_body-3", "hans_body-4", "hans_body-5", "hans_body-6", "hans_body-6"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansBody)), this._walkTween[4].set("y", [this._hansBody.y, this._hansBody.y, this._hansBody.y - 1, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 2, this._hansBody.y - 1], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansBackpack)), this._walkTween[5].set("frameName", ["hans_backpack-0", "hans_backpack-0", "hans_backpack-0", "hans_backpack-0", "hans_backpack-0", "hans_backpack-0", "hans_backpack-0", "hans_backpack-1", "hans_backpack-2", "hans_backpack-3", "hans_backpack-4", "hans_backpack-5", "hans_backpack-5", "hans_backpack-5"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._hansBackpack)), this._walkTween[6].set("y", [this._hansBackpack.y, this._hansBackpack.y, this._hansBackpack.y - 1, this._hansBackpack.y - 2, this._hansBackpack.y - 4, this._hansBackpack.y - 5, this._hansBackpack.y - 5, this._hansBackpack.y - 5, this._hansBackpack.y - 5, this._hansBackpack.y - 4, this._hansBackpack.y - 3, this._hansBackpack.y - 2, this._hansBackpack.y - 1, this._hansBackpack.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusHead)), this._walkTween[7].set("frameName", ["head-0", "head-0", "head-1", "head-2", "head-3", "head-4", "head-5", "head-5", "head-5", "head-6", "head-7", "head-8", "head-7", "head-7"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusHead)), this._walkTween[8].set("y", [this._corneliusHead.y, this._corneliusHead.y, this._corneliusHead.y - 1, this._corneliusHead.y - 2, this._corneliusHead.y - 4, this._corneliusHead.y - 5, this._corneliusHead.y - 5, this._corneliusHead.y - 5, this._corneliusHead.y - 5, this._corneliusHead.y - 4, this._corneliusHead.y - 3, this._corneliusHead.y - 2, this._corneliusHead.y - 1, this._corneliusHead.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusEyebrows)), this._walkTween[9].set("y", [this._corneliusEyebrows.y, this._corneliusEyebrows.y, this._corneliusEyebrows.y - 3, this._corneliusEyebrows.y - 7, this._corneliusEyebrows.y - 6, this._corneliusEyebrows.y - 5, this._corneliusEyebrows.y - 5, this._corneliusEyebrows.y - 5, this._corneliusEyebrows.y - 5, this._corneliusEyebrows.y - 4, this._corneliusEyebrows.y - 3, this._corneliusEyebrows.y - 2, this._corneliusEyebrows.y - 1, this._corneliusEyebrows.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusMustache)), this._walkTween[10].set("y", [this._corneliusMustache.y, this._corneliusMustache.y, this._corneliusMustache.y - 1, this._corneliusMustache.y - 2, this._corneliusMustache.y - 4, this._corneliusMustache.y - 5, this._corneliusMustache.y - 5, this._corneliusMustache.y - 6, this._corneliusMustache.y - 5, this._corneliusMustache.y - 4, this._corneliusMustache.y - 3, this._corneliusMustache.y - 2, this._corneliusMustache.y - 1, this._corneliusMustache.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusMouth)), this._walkTween[11].set("frameName", ["mouth-0", "mouth-0", "mouth-0", "mouth-0", "mouth-0", "mouth-1", "mouth-2", "mouth-3", "mouth-4", "mouth-5", "mouth-0", "mouth-0", "mouth-0", "mouth-0"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusMouth)), this._walkTween[12].set("y", [this._corneliusMouth.y, this._corneliusMouth.y, this._corneliusMouth.y - 1, this._corneliusMouth.y - 2, this._corneliusMouth.y - 4, this._corneliusMouth.y - 5, this._corneliusMouth.y - 5, this._corneliusMouth.y - 6, this._corneliusMouth.y - 5, this._corneliusMouth.y - 4, this._corneliusMouth.y - 3, this._corneliusMouth.y - 2, this._corneliusMouth.y - 1, this._corneliusMouth.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusEyes)), this._walkTween[13].set("frameName", ["eyes-0", "eyes-0", "eyes-0", "eyes-0", "eyes-0", "eyes-0", "eyes-1", "eyes-2", "eyes-0", "eyes-0", "eyes-0", "eyes-0", "eyes-0", "eyes-0"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusEyes)), this._walkTween[14].set("y", [this._corneliusEyes.y, this._corneliusEyes.y, this._corneliusEyes.y - 1, this._corneliusEyes.y - 2, this._corneliusEyes.y - 4, this._corneliusEyes.y - 5, this._corneliusEyes.y - 5, this._corneliusEyes.y - 5, this._corneliusEyes.y - 5, this._corneliusEyes.y - 4, this._corneliusEyes.y - 3, this._corneliusEyes.y - 3, this._corneliusEyes.y - 2, this._corneliusEyes.y - 1], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusRightArm)), this._walkTween[15].set("frameName", ["right_arm-0", "right_arm-1", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-2", "right_arm-3", "right_arm-4", "right_arm-5"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusRightArm)), this._walkTween[16].set("y", [this._corneliusRightArm.y, this._corneliusRightArm.y, this._corneliusRightArm.y - 1, this._corneliusRightArm.y - 2, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 3, this._corneliusRightArm.y - 2, this._corneliusRightArm.y - 2, this._corneliusRightArm.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusLeftArm)), this._walkTween[17].set("frameName", ["left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-0", "left_arm-1", "left_arm-2", "left_arm-3"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusLeftArm)), this._walkTween[18].set("y", [this._corneliusLeftArm.y, this._corneliusLeftArm.y, this._corneliusLeftArm.y - 1, this._corneliusLeftArm.y - 2, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 3, this._corneliusLeftArm.y - 1], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusLegs)), this._walkTween[19].set("frameName", ["legs-0", "legs-0", "legs-1", "legs-2", "legs-3", "legs-3", "legs-3", "legs-3", "legs-3", "legs-3", "legs-3", "legs-3", "legs-1", "legs-0"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusLegs)), this._walkTween[20].set("y", [this._corneliusLegs.y, this._corneliusLegs.y, this._corneliusLegs.y - 1, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 2, this._corneliusLegs.y - 1, this._corneliusLegs.y], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusLegs)), this._walkTween[21].set("x", [this._corneliusLegs.x, this._corneliusLegs.x, this._corneliusLegs.x + 1, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 2, this._corneliusLegs.x + 1, this._corneliusLegs.x], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusBody)), this._walkTween[22].set("frameName", ["body-0", "body-1", "body-2", "body-2", "body-3", "body-4", "body-5", "body-6", "body-7", "body-8", "body-9", "body-10", "body-11", "body-12"], 100, 9999), this._walkTween.push(new Prodigy.TweenController(this.game, this._corneliusBody)), this._walkTween[23].set("y", [this._corneliusBody.y, this._corneliusBody.y, this._corneliusBody.y - 1, this._corneliusBody.y - 2, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 3, this._corneliusBody.y - 2, this._corneliusBody.y - 1, this._corneliusBody.y], 100, 9999), this.stand(), this.showName(!0, "Howard Cornelius"), this.name.y -= 95
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this._tweens = this._walkTween;
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
	}
}), Prodigy.Container.ToyMerchant = function(e, t, i, a, s, r) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Toy Merchant",
		npc: !0
	}, null, i, a), this._tweens = [], this.type = s, this.zone = r, this._setup(), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Container.ToyMerchant, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.ToyMerchant,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	_setup: function() {
		var e = "npc-sprite-toy",
			t = "machav2-";
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this._shadow = this.sprite.add(this.game.prodigy.create.sprite(19, 19, e, t + "shadow")), this._shadow.anchor.setTo(.5, .5), this._body = this.sprite.add(this.game.prodigy.create.sprite(-4, -43, e, t + "body1")), this._head = this.sprite.add(this.game.prodigy.create.sprite(-17, -107, e, t + "head1")), Util.isDefined(this.type) && "default" !== this.type || (this._cart = this.sprite.add(this.game.prodigy.create.sprite(50, -150, e, "toy-merchant-cart")));
		for (var i = 0; i < this.sprite.children.length; i++) this.sprite.children[i].inputEnabled = !0, Util.isDefined(this.type) && Util.isDefined(this.zone) && "default" !== this.type || this.sprite.children[i].events.onInputDown.add(this.clicked.bind(this));
		this.sprite.x -= Math.floor(this.sprite.width / 2), this._standTween = [], this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[0].set("y", [this._head.y, this._head.y + 1, this._head.y + 2, this._head.y + 3, this._head.y + 4, this._head.y + 3, this._head.y + 2, this._head.y + 1], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._head)), this._standTween[1].set("frameName", [t + "head1", t + "head2", t + "head3", t + "head4", t + "head1", t + "head6", t + "head7", t + "head8"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[2].set("y", [this._body.y, this._body.y + 1, this._body.y + 2, this._body.y + 3, this._body.y + 4, this._body.y + 3, this._body.y + 2, this._body.y + 1], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._body)), this._standTween[3].set("frameName", [t + "body1", t + "body2", t + "body1", t + "body2", t + "body1", t + "body2", t + "body1", t + "body2"], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._shadow)), this._standTween[4].set("scale", [{
			x: 1,
			y: 1
		}, {
			x: 1.1,
			y: 1.1
		}, {
			x: 1.2,
			y: 1.2
		}, {
			x: 1.3,
			y: 1.3
		}, {
			x: 1.3,
			y: 1.3
		}, {
			x: 1.2,
			y: 1.2
		}, {
			x: 1.1,
			y: 1.1
		}, {
			x: 1,
			y: 1
		}], 150, 9999), this._standTween.push(new Prodigy.TweenController(this.game, this._shadow)), this._standTween[5].set("alpha", [.2, .3, .4, .5, .5, .4, .3, .2], 150, 9999), this.stand(), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-mapEvent-toyMerchant",
			context: this,
			callback: function() {
				return {
					x: this.x,
					y: this.y
				}
			}.bind(this)
		})
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this._tweens = this._standTween;
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
	},
	clicked: function() {
		var e = this.game.prodigy.event.create();
		Util.isDefined(this.type) && Util.isDefined(this.zone) && "default" !== this.type ? "Arctursus" === this.type ? Util.isDefined(this.zone.getState("a1Visited")) && this.zone.getState("a1Visited") !== !1 ? e.text(8, "toy") : (e.text(3, "toy"), e.function(this.zone.setState.bind(this.zone, "a1Visited", !0))) : "Florafox" === this.type ? Util.isDefined(this.zone.getState("a2Visited")) && this.zone.getState("a2Visited") !== !1 ? e.text(8, "toy") : (e.text(4, "toy"), e.function(this.zone.setState.bind(this.zone, "a2Visited", !0))) : "BigHex" === this.type ? Util.isDefined(this.zone.getState("b1Visited")) && this.zone.getState("b1Visited") !== !1 ? e.text(8, "toy") : (e.text(5, "toy"), e.function(this.zone.setState.bind(this.zone, "b1Visited", !0))) : "Magmischief" === this.type ? Util.isDefined(this.zone.getState("c1Visited")) && this.zone.getState("c1Visited") !== !1 ? e.text(8, "toy") : (e.text(6, "toy"), e.function(this.zone.setState.bind(this.zone, "c1Visited", !0))) : "Diveodile" === this.type ? Util.isDefined(this.zone.getState("c2Visited")) && this.zone.getState("c2Visited") !== !1 ? e.text(8, "toy") : (e.text(7, "toy"), e.function(this.zone.setState.bind(this.zone, "c2Visited", !0))) : "Arena" === this.type && e.text(8, "toy") : (e.text(0, "toy"), e.text(1, "toy"), e.function(this.game.prodigy.open.toyStore.bind(this.game.prodigy.open))), e.start()
	}
}), Prodigy.Container.SirVey = function(e, t, i, a) {
	Prodigy.Container.CreatureContainer.call(this, e, t.content, {
		name: "Sir Vey",
		npc: !0
	}, null, i, a), this.screen = t, this.setup()
}, Prodigy.extends(Prodigy.Container.SirVey, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.SirVey,
	setup: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.Survey.ON_GET_DATA_COMPLETE, this.onGetDataComplete.bind(this), this, this.game), this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this.sirveySpine = this.game.add.spine(0, 0, "npc-sir-vey"), this.sirveySpine.setAnimationByName(0, "idle", !0), this.sprite.add(this.sirveySpine), this.setupCollisionBlock(), this.showName(!0, "Sir Vey"), this.name.y = -115, this.game.prodigy.surveyController.requestSurveyData()
	},
	attention: function() {
		Util.isDefined(this.exclamation) && (this.sirveySpine.setAnimationByName(0, "jump", !1), this.sirveySpine.addAnimationByName(0, "idle", !0), this.game.time.events.add(5e3 + 3e3 * Math.random(), this.attention.bind(this), this))
	},
	onGetDataComplete: function(e) {
		if (this.surveyData = e, Util.isDefined(this.surveyData) && Util.isDefined(this.surveyData.id)) {
			var t = this.sprite.height + 60;
			this.exclamation = this.add(this.game.prodigy.create.sprite(-20, -t, "icons", "exclamation")), this.game.add.tween(this.exclamation).to({
				y: -(t + 10)
			}, 400, Phaser.Easing.Linear.In, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.game.time.events.add(5e3, this.attention.bind(this), this)
		} else Util.isDefined(this.exclamation) && (this.exclamation.destroy(), this.exclamation = null)
	},
	setupCollisionBlock: function() {
		this.collisionBlock = this.sprite.add(this.game.prodigy.create.sprite(-(.5 * this.sprite.width), -this.sprite.height, "core", "empty")), this.collisionBlock.width = this.sprite.width, this.collisionBlock.height = this.sprite.height, this.collisionBlock.inputEnabled = !0, this.collisionBlock.events.onInputDown.add(this.onClicked.bind(this))
	},
	onClicked: function() {
		var e = function(e) {
			Util.isDefined(e) && this.screen.user.setPath(e, this.encounter.bind(this))
		};
		this.screen.path.findPath(this.screen.user.x, this.screen.user.y, this.x - 20, this.y + 20, e.bind(this))
	},
	encounter: function() {
		var e = this.game.prodigy.dialogue.create();
		Util.isDefined(this.surveyData) && Util.isDefined(this.surveyData.id) ? (e.setText(1), e.setText({
			callback: this.showSurveyPanel.bind(this)
		})) : e.setText(0), e.start("sir-vey")
	},
	showSurveyPanel: function() {
		this.game.prodigy.open.survey(this.surveyData)
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this)
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		Util.log("[SirVey] Stand called!")
	}
}), Prodigy.Container.MozzaElla = function(e, t, i, a) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Mozza Ella",
		npc: !0,
		nameX: 60,
		nameY: -120
	}, null, i, a), this.currentTweens = [], this.idleTweens = [], this.spriteLoadCount = 0, this.setup()
}, Prodigy.extends(Prodigy.Container.MozzaElla, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.MozzaElla,
	setup: function() {
		var e = "npc-sprite-mozza-ella",
			t = this.sprites.add(this.game.prodigy.create.sprite(133, -116, e, "tail-0", !1, this.onSpriteLoaded.bind(this), 28, 18)),
			i = this.sprites.add(this.game.prodigy.create.sprite(100, -180, e, "head-0", !1, this.onSpriteLoaded.bind(this), 44, 54)),
			a = this.sprites.add(this.game.prodigy.create.sprite(104, -137, e, "arm-right-0", !1, this.onSpriteLoaded.bind(this), 8, 26)),
			s = this.sprites.add(this.game.prodigy.create.sprite(104, -116, e, "legs-0", !1, this.onSpriteLoaded.bind(this), 34, 28)),
			r = this.sprites.add(this.game.prodigy.create.sprite(108, -142, e, "torso-0", !1, this.onSpriteLoaded.bind(this), 34, 28));
		this.sprites.y += this.sprites.height, this.sprites.x -= this.sprites.width, this.idleTweens.push(new Prodigy.TweenController(this.game, r)), this.idleTweens[this.idleTweens.length - 1].set("y", [r.y, r.y - 1, r.y - 1, r.y], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, s)), this.idleTweens[this.idleTweens.length - 1].set("frameName", ["legs-0", "legs-1", "legs-1", "legs-0"], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, a)), this.idleTweens[this.idleTweens.length - 1].set("y", [a.y, a.y - 1, a.y - 1, a.y], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, a)), this.idleTweens[this.idleTweens.length - 1].set("frameName", ["arm-right-0", "arm-right-0", "arm-right-0", "arm-right-1"], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, i)), this.idleTweens[this.idleTweens.length - 1].set("y", [i.y, i.y - 1, i.y - 1, i.y], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, i)), this.idleTweens[this.idleTweens.length - 1].set("frameName", ["head-0", "head-1", "head-0", "head-2"], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, t)), this.idleTweens[this.idleTweens.length - 1].set("y", [t.y, t.y, t.y - 1, t.y - 1], 200, 9999), this.idleTweens.push(new Prodigy.TweenController(this.game, t)), this.idleTweens[this.idleTweens.length - 1].set("frameName", ["tail-0", "tail-1", "tail-0", "tail-2"], 200, 9999), this.visible = !1, this.tryToStartAnimations()
	},
	onSpriteLoaded: function() {
		this.spriteLoadCount++, this.tryToStartAnimations()
	},
	tryToStartAnimations: function() {
		this.spriteLoadCount >= this.sprites.length && (this.visible = !0, this.stand())
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this.currentTweens.length; e++) this.currentTweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this.currentTweens = this.idleTweens;
		for (var e = 0; e < this.currentTweens.length; e++) this.currentTweens[e].start()
	}
}), Prodigy.Container.ScientistSlimerella = function(e, t, i, a, s, r) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Scientist Slimerella",
		npc: !0
	}, null, i, a), this.tweens = [], this.content = t, this.firstTime = s, this.zone = r, this.coords = {
		x: i,
		y: a
	}, this.setup()
}, Prodigy.extends(Prodigy.Container.ScientistSlimerella, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.ScientistSlimerella,
	setup: function() {
		var e = "npc-sprite-potion",
			t = "body_";
		this.body = this.content.add(this.game.prodigy.create.sprite(this.coords.x, this.coords.y, e, t + "0")), this.body.anchor.setTo(.5, 1), this.body.inputEnabled = !0, this.body.events.onInputDown.add(this.clicked.bind(this)), this.standTween = [], this.standTween.push(new Prodigy.TweenController(this.game, this.body)), this.standTween[0].set("frameName", [t + "0", t + "0", t + "0", t + "0", t + "1", t + "2", t + "2", t + "2", t + "1", t + "0", t + "0", t + "0", t + "0", t + "0"], 150, 9999), this.stand()
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		this.tweens = this.standTween;
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].start()
	},
	clicked: function() {
		var e = this.game.prodigy.event.create();
		this.firstTime ? (this.game.prodigy.network.sendAnalytics("potion-store-activity", "access-store", "Events"), e.text(0, "potion"), e.text(1, "potion"), e.text(2, "potion"), e.text(3, "potion"), e.function(this.zone.setState.bind(this.zone, "firstPotion", !1)), e.set(this, "firstTime", !1), e.reward([{
			type: "item",
			ID: 115,
			N: 1
		}]), e.text(4, "potion")) : (e.text(6, "potion"), e.text(7, "potion"));
		var t = {
			shopkeeperTag: "npc-face-potion",
			shopkeeperFrame: "face_0",
			scaleX: 1,
			scaleY: 1,
			Y: 40
		};
		e.function(this.game.prodigy.open.store.bind(this.game.prodigy.open, this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.POTION_SHOP), null, t)), e.start()
	}
}), Prodigy.Container.Swoopy = function(e, t, i, a, s) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: "Swoopy",
		npc: !0,
		nameX: -7,
		nameY: -100
	}, null, i, a), this.tweens = [], this.content = t, this.coords = {
		x: i,
		y: a
	}, this.onClick = s, this.idleCounter = 0, this.setup()
}, Prodigy.extends(Prodigy.Container.Swoopy, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.Swoopy,
	setup: function() {
		var e = "npc-sprite-swoopy",
			t = "body-",
			i = "l-arm-",
			a = "r-arm-",
			s = "puff-",
			r = "legs-",
			n = "backpack-",
			o = "shadow-";
		this.sprite = this.game.prodigy.create.element(this.content, this.coords.x, this.coords.y);
		var h = -80;
		this.backPack = this.sprite.add(this.game.prodigy.create.sprite(0, 37 + h, e, n + "0")), this.lArm = this.sprite.add(this.game.prodigy.create.sprite(36, 47 + h, e, i + "0")), this.rArm = this.sprite.add(this.game.prodigy.create.sprite(0, 47 + h, e, a + "0")), this.shadow = this.sprite.add(this.game.prodigy.create.sprite(1, 72 + h, e, o + "0")), this.legs = this.sprite.add(this.game.prodigy.create.sprite(11, 68 + h, e, r + "0")), this.puff = this.sprite.add(this.game.prodigy.create.sprite(11, 0 + h, e, s + "0")), this.body = this.sprite.add(this.game.prodigy.create.sprite(2, 30 + h, e, t + "0"));
		for (var l = 0; l < this.sprite.children.length; l++) this.sprite.children[l].inputEnabled = !0, this.sprite.children[l].events.onInputDown.add(this.onClick);
		this.standTween1 = [], this.standTween1.push(new Prodigy.TweenController(this.game, this.body)), this.standTween1[0].set("y", [this.body.y, this.body.y + 1, this.body.y + 1, this.body.y], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.puff)), this.standTween1[1].set("y", [this.puff.y, this.puff.y, this.puff.y + 1, this.puff.y + 1], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.rArm)), this.standTween1[2].set("y", [this.rArm.y, this.rArm.y + 1, this.rArm.y + 1, this.rArm.y], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.lArm)), this.standTween1[3].set("y", [this.lArm.y, this.lArm.y + 1, this.lArm.y + 1, this.lArm.y], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.backPack)), this.standTween1[4].set("y", [this.backPack.y, this.backPack.y + 1, this.backPack.y + 1, this.backPack.y], 150, 9999), this.standTween1[4].end.call(this.standTween1[4], this.updateIdleCounter.bind(this)), this.standTween2 = [], this.standTween2.push(new Prodigy.TweenController(this.game, this.body)), this.standTween2[0].set("frameName", [t + "0", t + "0", t + "1", t + "1", t + "0", t + "0", t + "0", t + "0", t + "0", t + "2", t + "2", t + "0", t + "0"], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.body)), this.standTween2[1].set("y", [this.body.y, this.body.y, this.body.y + 1, this.body.y + 1, this.body.y, this.body.y, this.body.y, this.body.y, this.body.y, this.body.y + 1, this.body.y + 1, this.body.y, this.body.y], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.puff)), this.standTween2[2].set("y", [this.puff.y, this.puff.y, this.puff.y, this.puff.y + 1, this.puff.y + 1, this.puff.y, this.puff.y, this.puff.y - 1, this.puff.y - 1, this.puff.y, this.puff.y, this.puff.y + 1, this.puff.y + 1], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.rArm)), this.standTween2[3].set("y", [this.rArm.y, this.rArm.y, this.rArm.y + 1, this.rArm.y + 2, this.rArm.y + 1, this.rArm.y - 1, this.rArm.y - 1, this.rArm.y, this.rArm.y, this.rArm.y, this.rArm.y, this.rArm.y, this.rArm.y], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.lArm)), this.standTween2[4].set("frameName", [i + "0", i + "0", i + "1", i + "2", i + "2", i + "2", i + "2", i + "2", i + "2", i + "2", i + "2", i + "0", i + "0"], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.lArm)), this.standTween2[5].set("y", [this.lArm.y, this.lArm.y, this.lArm.y + 1, this.lArm.y + 1, this.lArm.y, this.lArm.y - 2, this.lArm.y - 2, this.lArm.y - 1, this.lArm.y - 1, this.lArm.y, this.lArm.y, this.lArm.y, this.lArm.y], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.backPack)), this.standTween2[6].set("y", [this.backPack.y, this.backPack.y, this.backPack.y + 1, this.backPack.y + 1, this.backPack.y + 1, this.backPack.y, this.backPack.y - 1, this.backPack.y - 1, this.backPack.y + 1, this.backPack.y + 1, this.backPack.y, this.backPack.y], 150, 9999), this.standTween2[6].end.call(this.standTween2[6], this.resetToDefaultIdle.bind(this)), this.tweens = this.standTween1, this.showName(!0), this.stand()
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].start()
	},
	updateIdleCounter: function() {
		this.idleCounter++, this.idleCounter > 3 + 3 * Math.random() && (this.tweens = this.standTween2, this.stand(), this.idleCounter = 0)
	},
	resetToDefaultIdle: function() {
		this.tweens = this.standTween1, this.stand()
	}
}), Prodigy.Container.FishMerchant = function(e, t, i, a, s, r, n, o) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.data = Util.copyObject(s), this.npcData = r, this.npc = this.game.prodigy.create.sprite(0, 0, "npc-sprite-" + this.npcData.atlas, 0), this.tween = new Prodigy.TweenController(e, this.npc), this.tween.set("frameName", ["fishthing_1", "fishthing_2", "fishthing_3", "fishthing_4", "fishthing_5", "fishthing_6", "fishthing_7", "fishthing_7", "fishthing_1", "fishthing_2", "fishthing_8", "fishthing_4", "fishthing_9", "fishthing_10", "fishthing_11"], 100, 9999), this.tween.start(), this.npc.inputEnabled = !0, this.npc.anchor.setTo(.5, 1), this.npc.events.onInputDown.add(n, this), o && (this.npc.scale.x = -1), this.add(this.npc), this.dialogue = this.game.prodigy.dialogue.create(), Util.isDefined(s) && Util.isDefined(s.quests) && this.setIndicator("quest"), this.name = this.game.prodigy.create.nameFont(this, -15, -this.npc.height - 20, this.npcData.name)
}, Prodigy.extends(Prodigy.Container.FishMerchant, Prodigy.Control.Element, {
	constructor: Prodigy.Container.FishMerchant,
	setIndicator: function(e) {
		Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(-14, -(this.npc.height - 10), "icons", e), this.indicator.anchor.setTo(.5, 1), this.add(this.indicator), this.game.add.tween(this.indicator).to({
			y: this.indicator.y - 50
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)), this.indicator.frameName = e
	},
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.tween.update()
	}
}), Prodigy.Container.Harvey = function(e, t, i, a, s) {
	Prodigy.Container.CreatureContainer.call(this, e, t.content, {
		name: "Harvey",
		npc: !0
	}, null, i, a), this.screen = t, this.sessionTalk = !1, this.hasCart = s, this.setup()
}, Prodigy.extends(Prodigy.Container.Harvey, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.Harvey,
	setup: function() {
		var e = this.game.prodigy.create.element(this.sprites, 0, 0);
		this.harveySpine = this.game.add.spine(-5, 0, "npc-harvey"), this.harveySpine.setAnimationByName(0, "idle", !0), e.add(this.harveySpine), this.hasCart && (this.harveyCart = this.game.prodigy.create.sprite(20, -110, "boss-titan", "harvey-cart"), e.add(this.harveyCart)), this.setIndicator("store"), this.setupCollisionBlock(e), this.showName(!0, "Harvey"), this.name.y = -100
	},
	setIndicator: function(e) {
		Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(-5, -100, "icons", e), this.indicator.anchor.setTo(.5, 1), this.indicator.inputEnabled = !0, this.indicator.events.onInputDown.add(this.onClicked.bind(this)), this.add(this.indicator), this.game.add.tween(this.indicator).to({
			y: this.indicator.y - 25
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)), this.indicator.frameName = e
	},
	setupCollisionBlock: function(e) {
		this.collisionBlock = e.add(this.game.prodigy.create.sprite(-(.5 * e.width), -e.height, "core", "empty")), this.collisionBlock.width = e.width, this.collisionBlock.height = e.height, this.collisionBlock.inputEnabled = !0, this.collisionBlock.events.onInputDown.add(this.onClicked.bind(this))
	},
	onClicked: function() {
		var e = this.game.prodigy.event.create();
		"shipwreck_shore-Titan" === this.screen.data._zoneName && (this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO, Prodigy.Breadcrumbs.BREADCRUMB_TITAN_HARVEY_TALKED) ? this.sessionTalk || (this.sessionTalk = !0, e.text(2, "harvey"), e.text(3, "harvey"), e.text(4, "harvey")) : (this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO, Prodigy.Breadcrumbs.BREADCRUMB_TITAN_HARVEY_TALKED), e.text(0, "harvey"), e.text(1, "harvey")));
		var t = this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.RECLAMATIONS_AND_RESTORATIONS),
			i = {
				shopkeeperTag: "npc-face-harvey",
				shopkeeperFrame: "face_1",
				X: 125,
				scaleX: .89,
				scaleY: .89
			};
		e.function(this.game.prodigy.open.store.bind(this.game.prodigy.open, t, null, i)), e.start()
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this)
	}
}), Prodigy.Container.RegisterPage = function(e, t, i) {
	Prodigy.Control.Element.call(this, e, t), this.data = i, this.visible = !1, this.backBtn = this.game.prodigy.create.textButton(this, 180, 160, {
		icon: "back",
		size: Prodigy.Control.TextButton.TALL
	}, this.back.bind(this)), this.nextBtn = this.game.prodigy.create.textButton(this, 1e3, 160, {
		icon: "next",
		size: Prodigy.Control.TextButton.TALL
	}, this.next.bind(this)), this.counter = 11
}, Prodigy.extends(Prodigy.Container.RegisterPage, Prodigy.Control.Element, {
	constructor: Prodigy.Container.RegisterPage,
	init: function(e, t) {
		this.backCallback = e, this.nextCallback = t, this.backBtn.visible = Util.isDefined(e), this.nextBtn.visible = Util.isDefined(t)
	},
	open: function() {
		this.visible = !0
	},
	close: function() {
		this.visible = !1, Util.isDefined(this.dialogue) && this.dialogue.close()
	},
	back: function() {
		Util.isDefined(this.backCallback) && (this.backCallback(), this.close())
	},
	next: function() {
		this.validate() && (this.nextCallback(), this.close())
	},
	validate: function() {
		return !0
	}
}), Prodigy.Container.ClassCodePage = function(e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.codeField = Prodigy.Control.InputField.createInputField(this.game, this, "classcodeg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 180, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM), this.codeField.setLabel(this, "Class Code:"), this.codeField.hide(0), this.emailField = Prodigy.Control.InputField.createInputField(this.game, this, "emailg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 180, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM), this.emailField.setLabel(this, "Parent Email:"), this.emailField.hide(0), this.btns = this.game.prodigy.create.element(this, 640, 270), this.spinner = this.add(this.game.prodigy.create.sprite(860, 200, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
		angle: 360
	}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.spinner.visible = !1, this.statusIcon = this.add(this.game.prodigy.create.sprite(860, 200, "icons", "close")), this.statusIcon.anchor.setTo(.5, .5), this.statusIcon.visible = !1, this.statusIcon.inputEnabled = !0, this.statusIcon.events.onInputDown.add(this.tryNext.bind(this)), this.dialogue = this.game.prodigy.dialogue.create(), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Container.ClassCodePage, Prodigy.Container.RegisterPage, {
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	setClassCodeContent: function() {
		this.nextBtn.setInactive(), this.codeField.highlight(!1, 180, -35), this.nextBtn.highlight(!1), this.btns.removeAll(!0), this.mode = "cc", this.codeField.show(0), this.emailField.hide(0);
		var e = this.game.prodigy.create.panel(this.btns, -300, 0, 7, 3, "button");
		e.setClickable(this.getCode.bind(this)), this.game.prodigy.create.font(e, 0, 25, "Teachers: click here", {
			size: 20,
			align: "center",
			width: 280
		}), this.game.prodigy.create.font(e, 0, 60, "to get a class code!", {
			size: 20,
			align: "center",
			width: 280
		});
		var t = this.game.prodigy.create.panel(this.btns, 20, 0, 7, 3, "button");
		if (t.setClickable(this.setEmailContent.bind(this)), this.game.prodigy.create.font(t, 0, 25, "Playing at home?", {
				size: 20,
				align: "center",
				width: 280
			}), this.game.prodigy.create.font(t, 0, 60, "Click here!", {
				size: 20,
				align: "center",
				width: 280
			}), this.dialogue.setText(44), this.dialogue.start("noot", !0), GameConstants.get("GameConstants.Build.DEBUG")) {
			var i = function() {
				return {
					x: this.worldPosition.x + .5 * this.width,
					y: this.worldPosition.y + .5 * this.height
				}
			};
			this.game.prodigy.automation.addTrigger({
				ID: "autoclick-getClassCode",
				context: this,
				callback: i.bind(e)
			}), this.game.prodigy.automation.addTrigger({
				ID: "autoclick-playingAtHome",
				context: this,
				callback: i.bind(t)
			})
		}
	},
	setEmailContent: function() {
		this.nextBtn.setInactive(), this.emailField.highlight(!1, 180, -35), this.nextBtn.highlight(!1), this.btns.removeAll(!0), this.mode = "email", this.emailField.show(0), this.codeField.hide(0);
		var e = this.game.prodigy.create.panel(this.btns, -140, 0, 7, 3, "button");
		e.setClickable(this.setClassCodeContent.bind(this)), this.game.prodigy.create.font(e, 0, 25, "Playing at school?", {
			size: 20,
			align: "center",
			width: 280
		}), this.game.prodigy.create.font(e, 0, 60, "Click here!", {
			size: 20,
			align: "center",
			width: 280
		}), this.dialogue.setText(66), this.dialogue.start("noot", !0)
	},
	tryNext: function() {
		"yes" === this.statusIcon.frameName && this.next()
	},
	getCode: function() {
		this.codeField.clearEvents(!1), this.game.input.keyboard.clearCaptures(), prodigyWeb.getClassCode.open(this.setCode.bind(this))
	},
	setCode: function(e) {
		this.codeField.clearEvents(!0), this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.codeField.setValue(e)
	},
	open: function() {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.status = {}, Util.isDefined(this.data.email) ? this.setEmailContent() : (Util.isDefined(this.data.classCode) && this.setCode(this.data.classCode), this.setClassCodeContent()), this.nextBtn.setInactive()
	},
	close: function() {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.codeField.hide(0), this.emailField.hide(0)
	},
	update: function() {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10))
			if (this.counter = 0, "cc" === this.mode) {
				var e = this.codeField.getValue();
				this.statusIcon.visible = Util.isDefined(e) && e.length >= 6, Util.isDefined(e) && 6 === e.length ? e !== this.status.code || !this.status.valid || this.nextBtn.arrow && this.nextBtn.isActive ? this.validating || e === this.status.code || (this.statusIcon.visible = !1, this.nextBtn.setInactive(), this.validateCode(e)) : (this.statusIcon.frameName = "yes", this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.codeField.highlight(!1)) : this.codeField.arrow || (this.statusIcon.frameName = "close", this.nextBtn.setInactive(), this.codeField.highlight(!0, 180, -35), this.nextBtn.highlight(!1))
			} else if ("email" === this.mode) {
			this.statusIcon.visible = !1;
			var t = this.emailField.getValue();
			Util.isDefined(t) && this.game.prodigy.emailDomains.isValidEmail(t) ? (this.data.parentEmail = t, this.data.classCode = null, this.data.teacherID = null, this.nextBtn.arrow && this.nextBtn.isActive || (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.emailField.highlight(!1))) : this.emailField.arrow || (this.nextBtn.setInactive(), this.emailField.highlight(!0, 180, -35), this.nextBtn.highlight(!1))
		}
	},
	validationComplete: function(e, t) {
		this.statusIcon.visible = !0, this.spinner.visible = this.validating = !1, this.status.valid = e, e ? (this.data.email = null, this.data.classCode = t, this.statusIcon.frameName = "yes") : this.statusIcon.frameName = "close"
	},
	validateCode: function(e) {
		this.statusIcon.visible = !1, this.status = {
			code: e
		}, this.spinner.visible = this.validating = !0, this.game.prodigy.network.verifyClassCode(e, this.validationComplete.bind(this, !0, e), this.validationComplete.bind(this, !1, e))
	}
}), Prodigy.Container.GradePage = function(e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.panel = this.game.prodigy.create.panel(this, 415, 115), this.gradeButtons = [];
	for (var a = 0; 8 > a; a++) {
		var s = this.game.prodigy.create.textButton(this, 415 + a % 4 * 105 + 25, 150 + 125 * Math.floor(a / 4), {
			text: a + 1,
			icon: "star",
			size: Prodigy.Control.TextButton.GRADE
		}, this.selectGrade.bind(this, a));
		s.text.x -= 25, s.text.y += 40, s.icon.x += 5, s.icon.y += 20, s.icon.alpha = .25, s.deselect(), this.gradeButtons.push(s)
	}
}, Prodigy.extends(Prodigy.Container.GradePage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.GradePage,
	open: function() {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.gradeButtons[6].visible = 4 !== this.data.country, this.gradeButtons[7].visible = 4 !== this.data.country, Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.deselect(), this.selectGrade(this.data.grade - 1), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(48), this.dialogue.start("noot", !0)
	},
	selectGrade: function(e) {
		Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.deselect(), this.selectedGradeButton = this.gradeButtons[e], Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.visible ? (this.selectedGradeButton.select(), this.data.grade = e + 1, this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.panel.highlight(!1)) : (this.selectedGradeButton = null, this.data.grade = null, this.nextBtn.setInactive(), this.nextBtn.highlight(!1), this.panel.highlight(!0, 180, -10))
	}
}), Prodigy.Container.LocationPage = function(e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.desiredAccountCreatePanelTileDimensions = {
		horizontalTileNum: 24,
		verticalTileNum: 10
	}, this.defaultAccountCreatePanelTileDimensions = this.game.broadcaster.broadcast(Prodigy.Events.AccountCreate.GET_DEFAULT_BACKGROUND_PANEL_TILE_DIMENSIONS), this.panelA = this.game.prodigy.create.element(this, 0, 140), this.game.prodigy.create.font(this.panelA, 0, -35, "[canada] Canada", {
		size: 36,
		font: "button",
		width: 200,
		align: "center",
		iconOffsetY: 7
	}), this.panelB = this.game.prodigy.create.element(this, 240, 140), this.game.prodigy.create.font(this.panelB, 0, -35, "[us] USA", {
		size: 36,
		font: "button",
		width: 420,
		align: "center",
		iconOffsetY: 7
	}), this.panelC = this.game.prodigy.create.element(this, 700, 140), this.game.prodigy.create.font(this.panelC, 0, -35, "Other", {
		size: 36,
		font: "button",
		width: 200,
		align: "center",
		iconOffsetY: 7
	}), this.buttons = [], this.buttons.push(this.game.prodigy.create.textButton(this.panelA, 0, 25, {
		text: "ontario"
	}, this.selectLocation.bind(this, 0, 1, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelA, 0, 85, {
		text: "other"
	}, this.selectLocation.bind(this, 1, 1, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 0, 25, {
		text: "colorado"
	}, this.selectLocation.bind(this, 2, 2, 3))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 0, 85, {
		text: "florida"
	}, this.selectLocation.bind(this, 3, 2, 1))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 0, 145, {
		text: "new york"
	}, this.selectLocation.bind(this, 4, 2, 6))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 220, 25, {
		text: "tennessee"
	}, this.selectLocation.bind(this, 5, 2, 4))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 220, 85, {
		text: "texas"
	}, this.selectLocation.bind(this, 6, 2, 2))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 220, 145, {
		text: "virginia"
	}, this.selectLocation.bind(this, 7, 2, 5))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 110, 205, {
		text: "other"
	}, this.selectLocation.bind(this, 8, 2, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelC, 0, 25, {
		text: "australia"
	}, this.selectLocation.bind(this, 9, 3, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelC, 0, 85, {
		text: "england"
	}, this.selectLocation.bind(this, 10, 4, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelC, 0, 145, {
		text: "india"
	}, this.selectLocation.bind(this, 11, 5, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelC, 0, 205, {
		text: "other"
	}, this.selectLocation.bind(this, 12, 1, 0)));
	var a = 40 * (this.desiredAccountCreatePanelTileDimensions.horizontalTileNum - this.defaultAccountCreatePanelTileDimensions.horizontalTileNum) * .5;
	this.backBtn.x = this.backBtn.x - a, this.nextBtn.x = this.nextBtn.x + a;
	var s = {
			x: this.backBtn.x + this.backBtn.width,
			y: 0,
			width: this.nextBtn.x - this.backBtn.x - this.backBtn.width,
			height: 0
		},
		r = {
			width: this.panelC.x + this.panelC.width,
			height: this.panelC.height
		},
		n = Util.getCenteredXY(r.width, r.height, s.x, 0, s.width, 0);
	this.panelA.x += n.x, this.panelB.x += n.x, this.panelC.x += n.x
}, Prodigy.extends(Prodigy.Container.LocationPage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.LocationPage,
	open: function(e) {
		return Prodigy.Container.RegisterPage.prototype.open.call(this), Util.isDefined(this.data.classCode) ? (this.data.country = null, this.data.sub = null, -1 === e ? this.back() : this.next(), void 0) : (Util.isDefined(this.selectedButton) && this.selectedButton.deselect(), this.selectLocation(this.data.locationIndex, this.data.country, this.data.sub), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(47), this.dialogue.start("noot", !0), this.game.broadcaster.broadcast(Prodigy.Events.AccountCreate.SET_BACKGROUND_PANEL_TILE_DIMENSIONS, null, [this.desiredAccountCreatePanelTileDimensions.horizontalTileNum, this.desiredAccountCreatePanelTileDimensions.verticalTileNum]), void 0)
	},
	selectLocation: function(e, t, i) {
		Util.isDefined(this.selectedButton) && this.selectedButton.deselect(), this.selectedButton = this.buttons[e], Util.isDefined(this.selectedButton) ? (this.selectedButton.select(), this.data.country = t, this.data.sub = i, this.data.curriculumTreeID = QI.getLocationID(t, i), this.data.locationIndex = e, this.nextBtn.setActive(), this.nextBtn.highlight(!0)) : (this.selectedGradeButton = null, this.data.country = this.data.sub = this.data.curriculumTreeID = null, this.nextBtn.setInactive(), this.nextBtn.highlight(!1))
	},
	close: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.AccountCreate.SET_BACKGROUND_PANEL_TILE_DIMENSIONS, null, [this.defaultAccountCreatePanelTileDimensions.horizontalTileNum, this.defaultAccountCreatePanelTileDimensions.verticalTileNum]), Prodigy.Container.RegisterPage.prototype.close.call(this)
	}
}), Prodigy.Container.NamePage = function(e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.firstNameField = Prodigy.Control.InputField.createInputField(this.game, this, "firstName", "", 370, 240, 250, 50), this.firstNameField.setLabel(this, "First Name:"), this.firstNameField.hide(0), this.lastNameField = Prodigy.Control.InputField.createInputField(this.game, this, "lastName", "", 660, 240, 250, 50), this.lastNameField.setLabel(this, "Last Name:"), this.lastNameField.hide(0)
}, Prodigy.extends(Prodigy.Container.NamePage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.NamePage,
	open: function() {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.firstNameField.show(0), this.lastNameField.show(0), Util.isDefined(this.data.firstName) && this.firstNameField.setValue(this.data.firstName), Util.isDefined(this.data.lastName) && this.lastNameField.setValue(Util.isDefined(this.data.email) ? this.data.lastName.substring(0, 1) : this.data.lastName), this.dialogue = this.game.prodigy.dialogue.create(), this.lastNameField.setLabel(this, "Last-Name Initial:"), this.dialogue.setText(117), this.dialogue.start("noot", !0)
	},
	next: function() {
		this.data.lastName = this.data.lastName.substring(0, 1), Prodigy.Container.RegisterPage.prototype.next.call(this)
	},
	close: function() {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.firstNameField.hide(0), this.lastNameField.hide(0)
	},
	update: function() {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10)) {
			this.counter = 0;
			var e = this.firstNameField.getValue(),
				t = this.lastNameField.getValue();
			e = e.replace(" ", ""), t = t.replace(" ", "");
			var i = "" === t,
				a = "" === e;
			i || (this.data.lastName = t.substring(0, 1), this.lastNameField.setValue(this.data.lastName)), a || (this.data.firstName = e.substring(0, 30), this.firstNameField.setValue(this.data.firstName)), a || i ? this.lastNameField.arrow || (this.nextBtn.setInactive(), this.firstNameField.highlight(!0, 180, -35), this.lastNameField.highlight(!0, 180, -35), this.nextBtn.highlight(!1)) : (this.data.firstName = e, this.nextBtn.arrow && this.nextBtn.isActive || (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.firstNameField.highlight(!1), this.lastNameField.highlight(!1)))
		}
	}
}), Prodigy.Container.PasswordPage = function(e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.pw1 = Prodigy.Control.InputField.createInputField(this.game, this, "pw1", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 190, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM), this.pw1.setLabel(this, "Password:"), this.pw1.hide(0), this.pw2 = Prodigy.Control.InputField.createInputField(this.game, this, "pw2", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 290, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM), this.pw2.setLabel(this, "Re-enter password:"), this.pw2.hide(0), this.error = this.game.prodigy.create.font(this, 410, 340, "", {
		align: "center",
		width: 460
	})
}, Prodigy.extends(Prodigy.Container.PasswordPage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.PasswordPage,
	open: function() {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.pw1.show(0), this.pw2.show(0), Util.isDefined(this.data.password) && (this.pw2.setValue(this.data.password), this.pw1.setValue(this.data.password)), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(46), this.dialogue.start("noot", !0)
	},
	close: function() {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.pw1.hide(0), this.pw2.hide(0)
	},
	update: function() {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10)) {
			this.counter = 0;
			var e = this.pw1.getValue(),
				t = this.pw2.getValue(),
				i = "",
				a = !1;
			"" === e || "" === t || (e.length < 4 ? i = "Password is too short\n (4 to 10 letters)" : e.length > 10 ? i = "Password is too long\n (4 to 10 letters)" : e.indexOf(" ") >= 0 ? i = "Password cannot contain spaces" : e !== t ? i = "Passwords match: no" : (i = "Passwords match: yes", this.data.password = e, a = !0)), this.error.text !== i && this.error.setText(i), !a || this.nextBtn.arrow && this.nextBtn.isActive ? a || this.pw1.arrow || (this.nextBtn.setInactive(), this.pw1.highlight(!0, 280, -35), this.pw2.highlight(!0, 280, -35), this.nextBtn.highlight(!1)) : (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.pw1.highlight(!1), this.pw2.highlight(!1))
		}
	}
}), Prodigy.Container.BattleRequests = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.requestsPerPage = 3, this.create()
}, Prodigy.extends(Prodigy.Container.BattleRequests, Prodigy.Control.Element, {
	constructor: Prodigy.Container.BattleRequests,
	create: function() {
		var e = 40;
		this.content = this.game.prodigy.create.element(this, 320, e), this.scroll = this.game.prodigy.create.slider(this, this.content.x + 480 + 20, e, 380, !0, !0), this.scroll.reset(this.game.prodigy.mail.getMailCount(), 1, -1, this.setMail.bind(this)), this.game.prodigy.mail.addUpdateCallback(this.process.bind(this))
	},
	setMail: function(e) {
		this.lastIndex = e || 0, this.lastSize = this.game.prodigy.mail.getMailCount(), this.content.removeAll(!0);
		for (var t = this.game.prodigy.mail.getMail(e || 0, 4), i = 0; i < this.requestsPerPage; i++) this.createChallenge(0, 130 * i, t[i])
	},
	process: function(e) {
		if (Util.isDefined(this.game)) {
			var t = this.lastIndex + e - this.lastSize;
			(0 > t || 5 > e) && (t = 0), this.scroll.reset(this.game.prodigy.mail.getMailCount(), 1, this.lastIndex || 0, this.setMail.bind(this))
		}
	},
	createChallenge: function(e, t, i) {
		if (Util.isDefined(i)) {
			var a = 12,
				s = 3,
				r = 40 * a,
				n = 40 * s,
				o = 10,
				h = 3,
				l = 28,
				d = 8,
				c = 20,
				p = 50,
				g = 20,
				u = this.game.prodigy.create.panel(this.content, e + o, t, a, s, "mail");
			u.add(this.game.prodigy.create.sprite(h, h, "icons", "mail-challenge"));
			var y = i.data.player.appearance,
				m = Util.isDefined(y.nick) && "" !== y.nick ? y.nick : y.name;
			this.game.prodigy.create.font(u, h + l + d, d, m + " (lvl " + i.data.player.data.level + ")", {
				size: 16
			}), this.game.prodigy.create.font(u, c, n - c - c, "Accept challenge?", {
				font: "black",
				size: 20
			});
			var f = this.game.prodigy.create.button(u, r - p - c, n - c - p, "icons", "close", this.processChallenge.bind(this, i, !1));
			this.game.prodigy.create.button(u, f.x - p - g, n - c - p, "icons", "yes", this.processChallenge.bind(this, i, !0))
		}
	},
	processChallenge: function(e, t) {
		if (this.game.prodigy.mail.remove(e), t) {
			var i = this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.game, [!0]),
				a = function(e, t, i) {
					Util.isDefined(i) && "Tower" === i ? (e.state.states.Tower.startX = t.x, e.state.states.Tower.startY = t.y, e.prodigy.start("Tower")) : e.prodigy.world.teleport(e.prodigy.player.data.zone, t.x, t.y)
				},
				s = new Player(this.game);
			s.init({
				equipment: e.data.player.equipment,
				appearance: e.data.player.appearance,
				data: e.data.player.data,
				isMember: e.data.player.isMember
			}), this.game.prodigy.pvp.start(e.data.userID, this.game.prodigy.player, s, a.bind(this, this.game, i, this.game.state.current), !1, "Arena")
		}
	}
}), Prodigy.Container.Leaderboard = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.classIDs = this.game.prodigy.player.classIDs, this.leaders = s, this.page = 0, this.inClass = Util.isDefined(this.classIDs) && this.classIDs.length > 0, this.leader = this.game.prodigy.create.panel(this, 0, 0, 13, 8, "panel-base"), this.game.prodigy.create.font(this.leader, 0, 0, "Class Leader", {
		font: "button",
		size: 36,
		width: 520,
		align: "center"
	});
	var r = this.game.prodigy.create.sprite(0, 220, "core", "overlay-light", !1, null, 520, 60);
	if (r.alpha = .25, this.leader.add(r), this.leader.top = this.game.prodigy.create.player(this.leader, this.game.prodigy.player, 2, 90, 270), this.leader.topName = this.game.prodigy.create.font(this.leader, 20, 250, "", {
			size: 20,
			align: "right",
			width: 480
		}), this.leader.topStat = this.game.prodigy.create.font(this.leader, 20, 220, "", {
			size: 20,
			align: "right",
			width: 480
		}), !this.game.prodigy.player.isMember) {
		var n = this.game.prodigy.create.panelButton(this, 0, 360, 13, 2, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
		this.game.prodigy.create.font(n.content, 20, 20, "Catch Up to Your Class!", {
			font: "button",
			size: 36,
			width: 480,
			align: "center"
		})
	}
	if (this.list = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base"), this.game.prodigy.create.font(this.list, 0, 0, "Your Class Leaders", {
			font: "button",
			size: 36,
			width: 560,
			align: "center"
		}), this.list.error = this.game.prodigy.create.font(this.list, 20, 100, "You must be in a class to view the leaderboard", {
			size: 20,
			width: 520,
			align: "center"
		}), this.list.error.visible = !1, !Util.isDefined(this.classIDs) || this.classIDs.length <= 0);
	else {
		this.list.chars = this.game.prodigy.create.element(this.list), this.list.icons = [];
		for (var o = 0; 8 > o; o++) this.list.icons.push(this.createIcon(this.list.chars, 20, 60 + 45 * o));
		this.list.bar = this.game.prodigy.create.slider(this.list, 490, 60, 360, !0, !0)
	}
	Util.isDefined(this.leaders) ? this.loadWizardsComplete("data.level", !0, this.leaders) : this.inClass ? this.loadWizards("data.level") : this.loadWizardsComplete("data.level"), this.registerGetElementListener()
}, Prodigy.extends(Prodigy.Container.Leaderboard, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Leaderboard,
	createIcon: function(e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	setIconData: function(e, t) {
		if (Util.isDefined(t)) {
			var i = t.place,
				a = 1 == t.isMember ? "@ " : "",
				s = new Player(this.game);
			s.init(t), e.place.setText(i + ""), e.type.setText("lvl " + s.getLevel());
			var r = s.getName();
			r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r);
			var n = Util.isDefined(t.userID) ? t.userID : t.id;
			e.curr.visible = n === this.game.prodigy.player.userID, e.data = t
		} else Util.isDefined(e) && delete e.data;
		e.visible = Util.isDefined(t)
	},
	openCard: function(e) {
		var t = null;
		e.data.userID === this.game.prodigy.player.userID ? t = this.game.prodigy.player : (t = new Player(this.game), t.init(e.data)), this.game.prodigy.open.card(t, !0)
	},
	loadWizards: function(e) {
		this.game.prodigy.network.getLeaderboard(e, this.classIDs, this.loadWizardsComplete.bind(this, e, !0), this.loadWizardsComplete.bind(this, e, !1))
	},
	loadWizardsComplete: function(e, t, i) {
		if (Util.isDefined(this.game)) {
			if (this.type = e, !t || !Util.isDefined(i) || i.length <= 0) return this.list.error.visible = !0, Util.isDefined(this.list.chars) && Util.isDefined(this.list.bar) && (this.list.chars.visible = this.list.bar.visible = !1), this.inClass ? this.list.error.setText("There was an error loading your class...try again later") : this.list.error.setText("You must be in a class to view the leaderboard"), void 0;
			this.list.error.visible = !1, this.list.chars.visible = !0, this.list.bar.visible = !0, this.leaders = i, this.leaders.length > 0 && this.loadPlayerListData(this.leaders)
		}
	},
	loadPlayerListData: function(e) {
		this.topPlayerId = e[0].userID;
		var t = Util.joinByProperty(e, "id");
		this.game.prodigy.network.getCharData(t, ["appearance", "isMember", "equipment", "data"], this.onLoadPlayerListDataSuccess.bind(this), this.onLoadPlayerListDataFailure.bind(this))
	},
	onLoadPlayerListDataSuccess: function(e) {
		if (Util.isDefined(this.game)) {
			Util.isDefined(e[this.topPlayerId]) ? this.showTopPlayer(e[this.topPlayerId]) : this.leader.topName.setText("Error loading player info");
			for (var t = 0, i = null, a = 0; a < this.leaders.length; a++)
				for (var s in e)
					if (this.leaders[a].userID === parseInt(s)) {
						if (i = this.leaders[a].data, this.leaders[a] = {}, this.leaders[a].data = i, !Util.isDefined(e[s].data)) {
							this.leaders.splice(a, 1), a--;
							break
						}
						i = JSON.parse(e[s].data);
						for (var r in i) "level" !== r && "stars" !== r && "arenaScore" !== r && (this.leaders[a].data[r] = i[r]);
						Util.isDefined(this.leaders[a].data.arenaScore) === !1 && (this.leaders[a].data.arenaScore = "N/A"), this.leaders[a].appearance = JSON.parse(e[s].appearance), this.leaders[a].equipment = JSON.parse(e[s].equipment), this.leaders[a].isMember = Util.isDefined(e[s].isMember) ? JSON.parse(e[s].isMember) : !1, this.leaders[a].place = t + 1, this.leaders[a].userID = parseInt(s), t++
					} if (this.inClass && t > 0) {
				var n = Prodigy.Container.Leaderboard.getPlayerPlace(this.leaders, this.game.prodigy.player);
				this.list.bar.reset(this.leaders.length, 8, n, this.setPage.bind(this))
			}
		}
	},
	showTopPlayer: function(e) {
		var t = new Player(this.game);
		t.init(e), this.leader.top.destroy(), this.leader.top = this.game.prodigy.create.player(this.leader, t, 2, 90, 270), this.leader.top.reload();
		var i = e.isMember ? "@ " : "",
			a = Util.trimText(t.getName(), 25, !0);
		this.leader.topName.setText(i + a), this.leader.topStat.setText("Level " + t.getLevel())
	},
	onLoadPlayerListDataFailure: function() {
		this.leader.topName.setText("Error loading player info")
	},
	setPage: function(e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.list.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.Leaderboard.getPlayerPlace = function(e, t) {
	for (var i = 0; i < e.length; i++) {
		var a = Util.isDefined(e[i].userID) ? e[i].userID : e[i].id;
		if (a == t.userID) return i + 1
	}
	return 31
}, Prodigy.Container.Leaderboard.getPlayerMessage = function(e, t) {
	try {
		var i = Prodigy.Container.Leaderboard.getPlayerPlace(e, t),
			a = t.getLevel(),
			s = e[Util.checkRange(i - 2, 0, e.length - 1)].data.level || 1;
		return 1 === i ? "You're at rank 1! Keep leveling to make sure your friends don't catch up!" : i > 30 ? "You're not on the leaderboard yet...get to level " + s + " or higher!" : s >= a ? "You're at rank " + i + "! Get to level " + (s + 1) + " to go up a rank!" : "Check out the leaderboard and see where your friends are!"
	} catch (r) {
		return "Check out the leaderboard and see where your friends are!"
	}
}, Prodigy.Container.Achievements = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.data = this.game.prodigy.achievements.getData(), this.createData(), this.createCategories(), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.Container.Achievements, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Achievements,
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this)
	},
	createCategories: function() {
		var e = 0,
			t = 40,
			i = null;
		GameConstants.get("GameConstants.Build.DEBUG") && (i = function(e) {
			return {
				x: e.worldPosition.x + .5 * e.totalWidth,
				y: e.worldPosition.y + .5 * e.totalHeight
			}
		});
		for (var a = [], s = 0; 9 > s; s++) a.push(this.createCategory(e, t + 40 * s)), a[s].setClickable(this.categorySelected.bind(this, a[s])), GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-category-" + s,
			context: this,
			callback: i.bind(this, a[s])
		});
		this.scroll = this.game.prodigy.create.slider(this, e + 360 - 50, t, 360, !0, !1), this.scroll.reset(this.data.length, 9, 0, this.showCategories.bind(this, a)), this.categorySelected(a[0])
	},
	showCategories: function(e, t) {
		for (var i = 0; i < e.length; i++) t < this.data.length && this.setCategory(e[i], this.data[t + i])
	},
	createCategory: function(e, t) {
		var i = this.game.prodigy.create.panel(this, e, t, 8, 1, "lb");
		return i.category = this.game.prodigy.create.font(i, 8, 6, "", {}), i
	},
	setCategory: function(e, t) {
		e.category.setText(t.tag), e.data = t, e.data.selected ? e.changePanel("lb-green") : e.changePanel("lb")
	},
	categorySelected: function(e) {
		for (var t = 0; t < this.data.length; t++) this.data[t].selected = !1;
		e.data.selected = !0, this.scroll.process(), this.scrollB.reset(e.data.data.length, 3, 0, this.showAchievements.bind(this, e.data.data)), this.scrollB.process()
	},
	createData: function() {
		var e = 400,
			t = 40;
		this.achievements = [];
		for (var i = 0; 3 > i; i++) this.achievements.push(this.game.prodigy.create.achievement(this, e + 20, t + 130 * i));
		this.scrollB = this.game.prodigy.create.slider(this, e + 720 - 50, t, 380, !0, !0)
	},
	showAchievements: function(e, t) {
		for (var i = 0; i < this.achievements.length; i++) this.achievements[i].setSource(e[t + i])
	}
}), Prodigy.Container.Arena = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var s = e.prodigy.player.processDeserter(),
		r = ["Unranked", "Bronze", "Silver", "Gold", "Platinum", "Diamond"],
		n = ["", "{0 - {499", "{500 - {1499", "{1500 - {2499", "{2500 - {3499", "{3500+"],
		o = [
			[0, 499],
			[500, 1499],
			[1500, 2499],
			[2500, 3499],
			[3500, 1e5]
		],
		h = this.game.prodigy.player.getArenaRank(),
		l = this.game.prodigy.player.getArenaScore(),
		d = this.game.prodigy.player.isUnranked();
	this.createMemberBtn(this, 0, 320), this.game.prodigy.player.hasCompletedTutorial() && this.createChallengeBtn(this, 280, 320);
	var c = this.game.prodigy.create.panel(this, 0, 0, 13, 7, "panel-base"),
		p = c.add(this.game.prodigy.create.sprite(10, 10, "icons", "emblem-rank" + (h + 1)));
	d && (p.tint = 5592405), this.game.prodigy.create.font(c, 20, 0, d ? r[0] : r[h + 1] + " Rank", {
		font: "button",
		size: 36,
		width: 480,
		align: "right"
	}), this.game.prodigy.create.font(c, 20, 48, d ? n[0] : n[h + 1], {
		font: "button",
		size: 36,
		width: 480,
		align: "right"
	}), this.game.prodigy.create.font(c, 20, 180, "[mail-star] Challenge other wizards around the world and earn rewards from the shop!", {
		font: "black",
		size: 20,
		width: 360,
		lineHeight: 30
	});
	var g = this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.ARENA_REWARDS);
	g.callback = this.game.prodigy.player.getArenaRank.bind(this.game.prodigy.player), this.game.prodigy.create.button(c, 400, 180, "icons", "catalogue", this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, g)), d && this.game.prodigy.create.font(c, 140, 48, "Earn a score of [arena]100 or more to reach Bronze Rank!", {
		size: 20,
		width: 360,
		align: "right",
		lineHeight: 30
	});
	var u = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base");
	this.game.prodigy.create.font(u, 20, -2, "My Score {" + l, {
		font: "button",
		size: 36,
		width: 520,
		align: "right"
	}), this.details = this.createDetails(l, h, d), this.details.visible = d, this.details.visible || (this.leaderboard = this.createLeaderboard(l, h), this.game.prodigy.network.getPVPLeaderboard({
		min: o[h][0],
		max: o[h][1]
	}, {
		stars: this.game.prodigy.player.getStars(),
		arenaScore: l
	}, 0, 30, this.loadWizardsComplete.bind(this, !0), this.loadWizardsComplete.bind(this, !1)), this.game.prodigy.create.button(this, 580, -5, "icons", "info", this.toggle.bind(this))), s && (this.game.prodigy.open.message("Each time you close the browser or get disconnected from an arena battle, your score goes down by [arena]50! \n\nBe a good sport and finish your battles!", null, "info", "You Deserted..."), this.game.prodigy.network.sendAnalytics("PVP ", "view-deserter-message", "Events"), this.game.prodigy.network.sendEvent("PVP", {
		type: "view-deserter-message",
		classID: this.game.prodigy.player.getLatestClassIDLegacy(),
		grade: this.game.prodigy.player.grade
	}, !0)), this.registerGetElementListener()
}, Prodigy.extends(Prodigy.Container.Arena, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Arena,
	toggle: function() {
		this.leaderboard.visible = !this.leaderboard.visible, this.details.visible = !this.details.visible
	},
	createDetails: function(e, t, i) {
		for (var a = this.game.prodigy.create.element(this, 560, 0), s = ["Unranked", "Bronze", "Silver", "Gold", "Platinum", "Diamond"], r = ["", "", "[arena]500", "[arena]1500", "[arena]2500", "[arena]3500"], n = 1; 6 > n; n++) {
			var o = 80 + 71 * (5 - n);
			n > 1 && (o += 30);
			var h = 60 + 80 * (n - 1) + Math.floor(Math.pow(2.95, n - 1));
			a.add(new Phaser.TileSprite(this.game, h - 25, o + 20, 50, 400 - o + 20 - 1, "core", "emblem-bar"));
			var l = a.add(this.game.prodigy.create.sprite(h, o + 20, "icons", "emblem-rank" + n));
			l.anchor.setTo(.5, .5), l.scale.x = l.scale.y = .8, (n - 1 > t || i) && (l.tint = 7829367), n - 1 !== t || i || this.game.add.tween(l.scale).to({
				x: .9,
				y: .9
			}, 600, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.game.prodigy.create.font(a, h - 50, o - 50, s[n], {
				size: 16,
				width: 100,
				align: "center"
			}), this.game.prodigy.create.font(a, h - 50, 405, r[n], {
				size: 16,
				width: 100,
				align: "center"
			})
		}
		return a
	},
	createLeaderboard: function() {
		this.challenge = this.game.prodigy.create.element(this, 560, 0), this.challenge.chars = this.game.prodigy.create.element(this.challenge), this.challenge.icons = [];
		for (var e = 0; 8 > e; e++) this.challenge.icons.push(this.createIcon(this.challenge.chars, 20, 60 + 45 * e));
		return this.challenge.bar = this.game.prodigy.create.slider(this.challenge, 490, 60, 360, !0, !0), this.challenge.error = this.game.prodigy.create.font(this.challenge, 20, 100, "You must be in a class to view the leaderboard", {
			size: 20,
			width: 520,
			align: "center"
		}), this.challenge.error.visible = !1, this.challenge
	},
	createChallengeBtn: function(e, t, i) {
		var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "button", this.openMessage.bind(this));
		return this.game.prodigy.create.font(a.content, 8, 20, "Find  Challenger", {
			font: "button",
			size: 36,
			width: 240,
			align: "center"
		}), a.content.add(this.game.prodigy.create.sprite(13, 13, "icons", "inspect")), a.content.add(this.game.prodigy.create.sprite(227, 13, "icons", "inspect")).scale.x = -1, a
	},
	createMemberBtn: function(e, t, i) {
		var a = null;
		if (!this.game.prodigy.player.isMember) {
			var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
			this.game.prodigy.create.font(a.content, 8, 20, "Rank Up  Faster!", {
				font: "button",
				size: 36,
				width: 240,
				align: "center"
			})
		}
		return a
	},
	openMessage: function() {
		Util.isDefined(this.game.prodigy.player.world) ? (this.game.prodigy.network.sendAnalytics("PVP", "try-match", "Events"), this.game.prodigy.network.sendEvent("PVP", {
			type: "try-match",
			classID: this.game.prodigy.player.getLatestClassIDLegacy(),
			grade: this.game.prodigy.player.grade
		}, !0), this.game.prodigy.network.stopInactiveTimer(), this.findChallenger(), this.message = this.game.prodigy.open.messageBoxOkay("Searching for a good match based on your current arena ranking... please wait. \n\n(It could take up to a minute or more.) \n\nTime waiting: XTIMERX", "CANCEL", this.closeMessage.bind(this, !0), null, "Finding Challenger")) : this.message = this.game.prodigy.open.message("Cannot take part in the Arena in Offline Mode.")
	},
	findChallenger: function() {
		if (Util.log("findChallenger retry"), Util.isDefined(this.game)) {
			Util.isDefined(this.timer) && window.clearInterval(this.timer), this.timer = window.setInterval(this.findChallenger.bind(this), 6e4), this.game.prodigy.messageListener.add("arena", this.messageRecieved.bind(this));
			var e = {
				userID: this.game.prodigy.player.userID,
				equipment: this.game.prodigy.player.equipment.data,
				appearance: this.game.prodigy.player.appearance.data,
				data: this.game.prodigy.player.data,
				isMember: this.game.prodigy.player.isMember
			};
			this.game.prodigy.network.startMatchmaking(this.game.prodigy.player.getLevel(), this.game.prodigy.player.getArenaScore(), e, this.success.bind(this, !0), this.success.bind(this, !1))
		}
	},
	success: function(e) {
		Util.log(e)
	},
	messageRecieved: function(e) {
		Util.log("Arena message received:"), Util.log(e), Util.isDefined(this.timer) && window.clearInterval(this.timer), this.message.setText("Match found! Connecting now..."), this.game.prodigy.network.sendAnalytics("PVP", "found-match", "Events"), this.game.prodigy.network.sendEvent("PVP", {
			type: "found-match",
			classID: this.game.prodigy.player.getLatestClassIDLegacy(),
			grade: this.game.prodigy.player.grade
		}, !0), this.game.prodigy.network.startInactiveTimer();
		var t = new Player(this.game);
		e.playerA.id != this.game.prodigy.player.userID ? t.init(e.playerA.data) : e.playerB.id != this.game.prodigy.player.userID && t.init(e.playerB.data);
		var i = function(e, t, i) {
				Util.isDefined(i) && "Tower" === i ? (e.state.states.Tower.startX = t.x, e.state.states.Tower.startY = t.y, e.prodigy.start("Tower")) : e.prodigy.world.teleport(e.prodigy.player.data.zone, t.x, t.y)
			},
			a = this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.game, [!0]);
		this.game.prodigy.pvp.start(e.playerA.id, this.game.prodigy.player, t, i.bind(this, this.game, a, this.game.state.current), !0)
	},
	closeMessage: function(e) {
		this.game.prodigy.messageListener.clear("arena"), Util.isDefined(this.timer) && window.clearInterval(this.timer), e && (this.game.prodigy.network.quitMatchmaking(this.success.bind(!0), this.success.bind(!1)), this.game.prodigy.network.startInactiveTimer())
	},
	createIcon: function(e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	setIconData: function(e, t) {
		if (Util.isDefined(e) && Util.isDefined(this.game)) {
			if (Util.isDefined(t)) {
				var i = t.place,
					a = 1 == t.isMember ? "@ " : "",
					s = new Player(this.game);
				s.init(t), e.place.setText(i + ""), e.type.setText("[arena]" + s.getArenaScore());
				var r = s.getName();
				r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r), e.data = t, e.curr.visible = t.userID === this.game.prodigy.player.userID
			} else Util.isDefined(e) && delete e.data;
			e.visible = Util.isDefined(t)
		}
	},
	openCard: function(e) {
		var t = null;
		e.data.userID === this.game.prodigy.player.userID ? t = this.game.prodigy.player : (t = new Player(this.game), t.init(e.data)), this.game.prodigy.open.card(t, !0, !0)
	},
	loadWizardsComplete: function(e, t) {
		if (Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t)) return this.challenge.error.visible = !0, Util.isDefined(this.challenge.chars) && Util.isDefined(this.challenge.bar) && (this.challenge.chars.visible = this.challenge.bar.visible = !1), this.challenge.error.setText("There was an error loading the leaderboard...try again later"), void 0;
			this.challenge.error.visible = !1, this.challenge.chars.visible = this.challenge.bar.visible = !0;
			for (var i = t.player_list, a = 0; a < i.length; a++) {
				var s = i[a];
				s.place = a + 1, s.username = s.username || "???"
			}
			this.leaders = i, this.leaders.length > 0 && this.loadPlayerListData(this.leaders)
		}
	},
	loadPlayerListData: function(e) {
		var t = Util.joinByProperty(e, "userID");
		this.game.prodigy.network.getCharData(t, ["appearance", "isMember", "equipment", "data"], this.onLoadPlayerListDataSuccess.bind(this), this.onLoadPlayerListDataFailure.bind(this))
	},
	onLoadPlayerListDataSuccess: function(e) {
		var t = 0;
		this.playerPos = 31;
		for (var i = null, a = 0; a < this.leaders.length; a++)
			for (var s in e)
				if (this.leaders[a].userID === parseInt(this.game.prodigy.player.userID) && (this.playerPos = a + 1), this.leaders[a].userID === parseInt(s)) {
					if (i = this.leaders[a].data, this.leaders[a] = {}, this.leaders[a].data = i, !Util.isDefined(e[s]) || !Util.isDefined(e[s].data)) {
						this.leaders.splice(a, 1), a--;
						break
					}
					i = JSON.parse(e[s].data);
					for (var r in i) "level" !== r && "stars" !== r && "arenaScore" !== r && (this.leaders[a].data[r] = i[r]);
					Util.isDefined(this.leaders[a].data.arenaScore) === !1 && (this.leaders[a].data.arenaScore = "N/A"), this.leaders[a].appearance = JSON.parse(e[s].appearance), this.leaders[a].equipment = JSON.parse(e[s].equipment), this.leaders[a].isMember = Util.isDefined(e[s].isMember) ? JSON.parse(e[s].isMember) : !1, this.leaders[a].place = t + 1, this.leaders[a].userID = parseInt(s), t++
				} t > 0 && this.challenge.bar.reset(this.leaders.length, 8, this.playerPos, this.setPage.bind(this))
	},
	onLoadPlayerListDataFailure: function() {
		Util.log("Error loading My Arena Leaderboard info", Util.ERROR)
	},
	setPage: function(e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.challenge.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.ArenaLeaderboard = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.leaders = s, this.page = 0, this.createMemberBtn(this, 0, 320), this.leader = this.game.prodigy.create.panel(this, 0, 0, 13, 7, "panel-base"), this.game.prodigy.create.font(this.leader, 0, 0, "Top Player in the World", {
		font: "button",
		size: 36,
		width: 520,
		align: "center"
	});
	var r = this.game.prodigy.create.sprite(0, 210, "core", "overlay-light", !1, null, 520, 60);
	r.alpha = .25, this.leader.add(r), this.leader.top = this.game.prodigy.create.player(this.leader, this.game.prodigy.player, 2, 90, 270), this.leader.topName = this.game.prodigy.create.font(this.leader, 20, 240, "", {
		size: 20,
		align: "right",
		width: 480
	}), this.leader.topStat = this.game.prodigy.create.font(this.leader, 20, 210, "", {
		size: 20,
		align: "right",
		width: 480
	}), this.list = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base"), this.game.prodigy.create.font(this.list, 0, 0, "Top Arena Players", {
		font: "button",
		size: 36,
		width: 560,
		align: "center"
	}), this.list.error = this.game.prodigy.create.font(this.list, 20, 100, "", {
		size: 20,
		width: 520,
		align: "center"
	}), this.list.error.visible = !1, this.list.chars = this.game.prodigy.create.element(this.list), this.list.icons = [];
	for (var n = 0; 8 > n; n++) this.list.icons.push(this.createIcon(this.list.chars, 20, 60 + 45 * n));
	this.list.bar = this.game.prodigy.create.slider(this.list, 490, 60, 360, !0, !0), this.game.prodigy.network.getPVPLeaderboard({
		min: 0,
		max: 1e5
	}, {
		stars: 99999,
		arenaScore: this.game.prodigy.player.getArenaScore()
	}, 0, 30, this.loadPVPLeaderboardComplete.bind(this, !0), this.loadPVPLeaderboardComplete.bind(this, !1)), this.registerGetElementListener()
}, Prodigy.extends(Prodigy.Container.ArenaLeaderboard, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ArenaLeaderboard,
	createMemberBtn: function(e, t, i) {
		var a = null;
		if (!this.game.prodigy.player.isMember) {
			var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
			this.game.prodigy.create.font(a.content, 8, 20, "Rank Up  Faster!", {
				font: "button",
				size: 36,
				width: 240,
				align: "center"
			})
		}
		return a
	},
	createIcon: function(e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	openCard: function(e) {
		var t = null;
		e.data.userID === this.game.prodigy.player.userID ? t = this.game.prodigy.player : (t = new Player(this.game), t.init(e.data)), this.game.prodigy.open.card(t, !0, !0)
	},
	setIconData: function(e, t) {
		if (Util.isDefined(t)) {
			var i = t.place,
				a = t.isMember ? "@ " : "",
				s = new Player(this.game);
			s.init(t), e.place.setText(i + ""), e.type.setText("[arena]" + s.getArenaScore());
			var r = s.getName();
			r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r), e.curr.visible = t.userID === this.game.prodigy.player.userID, e.data = t
		} else Util.isDefined(e) && delete e.data;
		e.visible = Util.isDefined(t)
	},
	loadPVPLeaderboardComplete: function(e, t) {
		if (Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t)) return this.list.error.visible = !0, Util.isDefined(this.list.chars) && Util.isDefined(this.list.bar) && (this.list.chars.visible = !1, this.list.bar.visible = !1), this.list.error.setText("There was an error loading the leaderboard...try again later"), void 0;
			this.list.error.visible = !1, this.list.chars.visible = !0, this.list.bar.visible = !0, this.leaders = t.player_list, this.leaders.length > 0 && this.loadPlayerListData(this.leaders)
		}
	},
	loadPlayerListData: function(e) {
		this.topPlayerId = e[0].userID;
		var t = Util.joinByProperty(e, "userID");
		this.game.prodigy.network.getCharData(t, ["appearance", "isMember", "equipment", "data"], this.onLoadPlayerListDataSuccess.bind(this), this.onLoadPlayerListDataFailure.bind(this))
	},
	onLoadPlayerListDataSuccess: function(e) {
		if (Util.isDefined(this.game)) {
			Util.isDefined(e[this.topPlayerId]) ? this.showTopPlayer(e[this.topPlayerId]) : this.leader.topName.setText("Error loading player info");
			for (var t = 0, i = null, a = 0; a < this.leaders.length; a++)
				for (var s in e)
					if (this.leaders[a].userID === parseInt(s)) {
						if (i = this.leaders[a].data, this.leaders[a] = {}, this.leaders[a].data = i, !Util.isDefined(e[s].data)) {
							this.leaders.splice(a, 1), a--;
							break
						}
						i = JSON.parse(e[s].data);
						for (var r in i) "level" !== r && "stars" !== r && "arenaScore" !== r && (this.leaders[a].data[r] = i[r]);
						Util.isDefined(this.leaders[a].data.arenaScore) === !1 && (this.leaders[a].data.arenaScore = "N/A"), this.leaders[a].appearance = JSON.parse(e[s].appearance), this.leaders[a].equipment = JSON.parse(e[s].equipment), this.leaders[a].isMember = Util.isDefined(e[s].isMember) ? JSON.parse(e[s].isMember) : !1, this.leaders[a].place = t + 1, this.leaders[a].userID = parseInt(s), t++
					} t > 0 && this.list.bar.reset(t, 8, 0, this.setPage.bind(this))
		}
	},
	showTopPlayer: function(e) {
		var t = new Player(this.game);
		t.init(e), this.leader.top.destroy(), this.leader.top = this.game.prodigy.create.player(this.leader, t, 2, 90, 270), this.leader.top.reload();
		var i = e.isMember ? "@ " : "",
			a = Util.trimText(t.getName(), 25, !0);
		this.leader.topName.setText(i + a), this.leader.topStat.setText("[arena] " + t.getArenaScore())
	},
	onLoadPlayerListDataFailure: function() {
		this.leader.topName.setText("Error loading player info")
	},
	setPage: function(e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.list.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.Bounties = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.game.prodigy.create.panel(this, 0, 120, 5, 8, "white"), this.add(this.game.prodigy.create.sprite(-13, 0, "core-2", "emblem-bounty")), this.game.prodigy.create.font(this, 65, 100, e.prodigy.player.getBountyScore() + "", {
		size: 36,
		font: "button",
		width: 74,
		align: "center"
	}), this.game.prodigy.create.font(this, 10, 300, "Get bounties and defeat monsters to increase your rank!", {
		width: 180
	});
	for (var s = this.game.prodigy.player.state.get("world-bounties"), r = 0; 3 > r; r++) Util.isDefined(s[r]) && new Prodigy.Container.BountyContainer(this.game, this, 230 + 305 * r, 0, this.game.prodigy.bounty.getBounty(r), r, !0)
}, Prodigy.extends(Prodigy.Container.Bounties, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Bounties
}), Prodigy.Container.ForestContainer = function(e, t, i, a, s, r) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, 2, a, s), this.forceSimple = r || Device.isTablet(), this._tweens = []
}, Prodigy.extends(Prodigy.Container.ForestContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.ForestContainer,
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.game.prodigy.load.assets(["boss-gerald"], this.setup.bind(this))
	},
	setup: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.sprites.removeAll(!0), this.name.visible = !1, this.sprite = this.game.prodigy.create.element(this.sprites, 130, -300), this.sprite.scale.x = -1;
		var e = "boss-gerald",
			t = {
				x: 17,
				y: 95
			};
		this._leftArm = this.sprite.add(this.game.prodigy.create.sprite(t.x, t.y, e, "arm-left-1"));
		var i = {
			x: 22,
			y: 43
		};
		this._leftShoulder = this.sprite.add(this.game.prodigy.create.sprite(i.x, i.y, e, "shoulder"));
		var a = {
			x: 94,
			y: 216
		};
		this._leftLeg = this.sprite.add(this.game.prodigy.create.sprite(a.x, a.y, e, "leg"));
		var s = {
			x: 62,
			y: 226
		};
		this._leftFoot = this.sprite.add(this.game.prodigy.create.sprite(s.x, s.y, e, "foot-left"));
		var r = {
			x: 118,
			y: 190
		};
		this._waist = this.sprite.add(this.game.prodigy.create.sprite(r.x, r.y, e, "waist"));
		var n = {
			x: 52,
			y: 46
		};
		this._body = this.sprite.add(this.game.prodigy.create.sprite(n.x, n.y, e, "body"));
		var o = {
			x: 156,
			y: 215
		};
		this._rightLeg = this.sprite.add(this.game.prodigy.create.sprite(o.x, o.y, e, "leg"));
		var h = {
			x: 163,
			y: 224
		};
		this._rightFoot = this.sprite.add(this.game.prodigy.create.sprite(h.x, h.y, e, "foot-right"));
		var l = {
			x: 193,
			y: 94
		};
		this._rightArm = this.sprite.add(this.game.prodigy.create.sprite(l.x, l.y, e, "arm-right-1"));
		var d = {
			x: 69,
			y: 15
		};
		this._head = this.sprite.add(this.game.prodigy.create.sprite(d.x, d.y, e, "head"));
		var c = {
			x: 67,
			y: 58
		};
		this._jaw = this.sprite.add(this.game.prodigy.create.sprite(c.x, c.y, e, "jaw"));
		var p = {
			x: 131,
			y: 43
		};
		this._rightShoulder = this.sprite.add(this.game.prodigy.create.sprite(p.x, p.y, e, "shoulder")), this._idleTween = [], this._idleTween.push(new Prodigy.TweenController(this.game, this._head)), this._idleTween[0].set("x", [d.x, d.x - 4, d.x - 9, d.x - 11, d.x - 11, d.x - 6, d.x - 3, d.x, d.x + 3, d.x + 4, d.x + 4, d.x + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._head)), this._idleTween[1].set("y", [d.y, d.y, d.y + 3, d.y + 6, d.y + 8, d.y + 10, d.y + 11, d.y + 9, d.y + 7, d.y + 5, d.y + 3, d.y + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._jaw)), this._idleTween[2].set("x", [c.x, c.x - 3, c.x - 9, c.x - 9, c.x - 9, c.x - 5, c.x - 2, c.x, c.x + 3, c.x + 4, c.x + 4, c.x + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._jaw)), this._idleTween[3].set("y", [c.y, c.y + 2, c.y + 7, c.y + 14, c.y + 16, c.y + 17, c.y + 16, c.y + 12, c.y + 9, c.y + 5, c.y + 3, c.y + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightShoulder)), this._idleTween[4].set("x", [p.x, p.x - 2, p.x - 3, p.x - 3, p.x - 3, p.x - 2, p.x - 1, p.x + 1, p.x + 2, p.x + 3, p.x + 3, p.x + 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightShoulder)), this._idleTween[5].set("y", [p.y, p.y + 2, p.y + 4, p.y + 5, p.y + 6, p.y + 6, p.y + 6, p.y + 4, p.y + 4, p.y + 3, p.y + 3, p.y + 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._idleTween[6].set("frameName", ["arm-left-1", "arm-left-1", "arm-left-2", "arm-left-3", "arm-left-3", "arm-left-3", "arm-left-3", "arm-left-2", "arm-left-1", "arm-left-1", "arm-left-1", "arm-left-1"], 100, 9999);
		var g = {
				x: 10,
				y: 100
			},
			u = {
				x: 7,
				y: 103
			},
			y = {
				x: 196,
				y: 101
			},
			m = {
				x: 196,
				y: 106
			};
		this._idleTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._idleTween[7].set("x", [l.x, l.x + 1, y.x, m.x, m.x - 4, m.x - 6, m.x - 7, y.x - 4, l.x - 1, l.x - 2, l.x - 2, l.x - 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._idleTween[8].set("y", [l.y, l.y + 2, y.y, m.y, m.y + 6, m.y + 5, m.y + 4, y.y + 4, l.y + 7, l.y + 4, l.y + 2, l.y + 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftShoulder)), this._idleTween[9].set("x", [i.x, i.x + 2, i.x + 3, i.x + 3, i.x + 3, i.x + 2, i.x + 1, i.x - 1, i.x - 2, i.x - 3, i.x - 3, i.x - 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftShoulder)), this._idleTween[10].set("y", [i.y, i.y + 2, i.y + 4, i.y + 5, i.y + 6, i.y + 6, i.y + 6, i.y + 4, i.y + 4, i.y + 2, i.y, i.y - 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._idleTween[11].set("frameName", ["arm-right-1", "arm-right-1", "arm-right-2", "arm-right-3", "arm-right-3", "arm-right-3", "arm-right-3", "arm-right-2", "arm-right-1", "arm-right-1", "arm-right-1", "arm-right-1"], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._idleTween[12].set("x", [t.x, t.x + 3, g.x + 6, u.x, u.x + 1, u.x + 2, u.x + 4, g.x + 4, t.x + 1, t.x + 2, t.x + 3, t.x + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._idleTween[13].set("y", [t.y, t.y + 2, g.y + 7, u.y, u.y + 1, u.y, u.y - 1, g.y, t.y + 2, t.y + 1, t.y, t.y - 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftLeg)), this._idleTween[14].set("x", [a.x, a.x - 1, a.x - 1, a.x - 1, a.x - 1, a.x - 1, a.x, a.x, a.x, a.x, a.x, a.x], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftLeg)), this._idleTween[15].set("y", [a.y, a.y, a.y + 1, a.y + 1, a.y + 1, a.y + 1, a.y + 1, a.y, a.y, a.y, a.y, a.y], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftFoot)), this._idleTween[16].set("x", [s.x], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftFoot)), this._idleTween[17].set("y", [s.y], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightLeg)), this._idleTween[18].set("x", [o.x, o.x + 1, o.x + 1, o.x + 1, o.x + 1, o.x + 1, o.x, o.x, o.x, o.x, o.x, o.x], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightLeg)), this._idleTween[19].set("y", [o.y, o.y, o.y + 1, o.y + 1, o.y + 1, o.y + 1, o.y + 1, o.y, o.y, o.y, o.y, o.y], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightFoot)), this._idleTween[20].set("x", [h.x], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._rightFoot)), this._idleTween[21].set("y", [h.y], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._body)), this._idleTween[22].set("x", [n.x, n.x - 1, n.x - 1, n.x - 1, n.x - 1, n.x, n.x + 1, n.x + 2, n.x + 3, n.x + 3, n.x + 3, n.x + 3], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._body)), this._idleTween[23].set("y", [n.y, n.y + 1, n.y + 2, n.y + 3, n.y + 4, n.y + 5, n.y + 4, n.y + 3, n.y + 2, n.y + 1, n.y, n.y - 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._waist)), this._idleTween[24].set("x", [r.x, r.x - 1, r.x - 1, r.x - 1, r.x - 1, r.x, r.x + 1, r.x + 2, r.x + 3, r.x + 3, r.x + 3, r.x + 2], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._waist)), this._idleTween[25].set("y", [r.y, r.y + 2, r.y + 4, r.y + 6, r.y + 8, r.y + 9, r.y + 8, r.y + 6, r.y + 4, r.y + 2, r.y, r.y - 1], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._idleTween[26].set("angle", [0], 100, 9999), this._idleTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._idleTween[27].set("visible", [!0], 100, 9999), this._attackTween = [], this._attackTween.push(new Prodigy.TweenController(this.game, this._head)), this._attackTween[0].set("x", [d.x, d.x - 6, d.x - 15, d.x - 27, d.x - 32, d.x - 34, d.x - 33, d.x - 30, d.x - 19, d.x - 7], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._head)), this._attackTween[1].set("y", [d.y, d.y + 6, d.y + 13, d.y + 20, d.y + 22, d.y + 22, d.y + 20, d.y + 16, d.y + 12, d.y + 5], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._jaw)), this._attackTween[2].set("x", [c.x, c.x - 6, c.x - 14, c.x - 26, c.x - 31, c.x - 33, c.x - 32, c.x - 29, c.x - 18, c.x - 7], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._jaw)), this._attackTween[3].set("y", [c.y, c.y + 8, c.y + 20, c.y + 29, c.y + 31, c.y + 31, c.y + 29, c.y + 23, c.y + 13, c.y + 7], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightShoulder)), this._attackTween[4].set("x", [i.x, i.x - 4, i.x + 5, i.x + 12, i.x + 16, i.x + 19, i.x + 21, i.x + 25, i.x + 22, i.x + 15], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftShoulder)), this._attackTween[5].set("y", [i.y, i.y, i.y - 5, i.y - 10, i.y - 11, i.y - 10, i.y - 9, i.y - 5, i.y, i.y + 2], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._attackTween[6].set("frameName", ["arm-left-1", "arm-left-1", "arm-left-1", "arm-left-4", "arm-left-2", "arm-left-5", "arm-left-3", "arm-left-4", "arm-left-4", "arm-left-4"], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._attackTween[7].set("x", [t.x, t.x - 5, t.x - 8, t.x - 42 - 15, t.x - 47 + 90, t.x + 15 + 50, t.x + 82 + 20, t.x + 81 + 80, t.x, t.x + -38], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._attackTween[8].set("y", [t.y, t.y - 4, t.y - 13, t.y + 73 - 100, t.y + 34 - 65 - 20, t.y + 45 - 185, t.y - 48 + 40, t.y + 17, t.y, t.y + 112], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightShoulder)), this._attackTween[9].set("x", [p.x, p.x - 8, p.x - 36, p.x - 44, p.x - 48, p.x - 51, p.x - 48, p.x - 42, p.x - 30, p.x - 6], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightShoulder)), this._attackTween[10].set("y", [p.y, p.y + 25, p.y + 48, p.y + 52, p.y + 55, p.y + 54, p.y + 54, p.y + 47, p.y + 38, p.y + 13], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._attackTween[11].set("frameName", ["arm-right-1", "arm-right-4", "arm-right-5", "arm-right-5", "arm-right-5", "arm-right-5", "arm-right-5", "arm-right-5", "arm-right-4", "arm-right-1"], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._attackTween[12].set("x", [193, 132, 58, 39, 34, 35, 45, 58, 127, 187], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightArm)), this._attackTween[13].set("y", [94, 125, 162, 162, 162, 162, 162, 162, 135, 108], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftLeg)), this._attackTween[14].set("x", [a.x, a.x - 2, a.x - 5, a.x - 18, a.x - 21, a.x - 22, a.x - 21, a.x - 19, a.x - 12, a.x - 5], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftLeg)), this._attackTween[15].set("y", [a.y, a.y - 2, a.y - 3, a.y, a.y, a.y + 1, a.y + 1, a.y + 1, a.y + 1, a.y + 1], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftFoot)), this._attackTween[16].set("x", [s.x, s.x - 1, s.x - 7, s.x - 23, s.x - 24, s.x - 23, s.x - 22, s.x - 21, s.x - 15, s.x - 11], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftFoot)), this._attackTween[17].set("y", [s.y, s.y - 9, s.y - 16, s.y, s.y, s.y, s.y, s.y, s.y, s.y], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightLeg)), this._attackTween[18].set("x", [o.x, o.x, o.x, o.x - 4, o.x - 7, o.x - 8, o.x - 8, o.x - 6, o.x - 3, o.x - 1], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightLeg)), this._attackTween[19].set("y", [o.y, o.y, o.y, o.y, o.y, o.y, o.y, o.y, o.y, o.y], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightFoot)), this._attackTween[20].set("x", [h.x, h.x, h.x - 2, h.x - 5, h.x - 6, h.x - 6, h.x - 5, h.x - 3, h.x - 2, h.x], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._rightFoot)), this._attackTween[21].set("y", [h.y, h.y, h.y, h.y, h.y, h.y, h.y, h.y, h.y, h.y], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._body)), this._attackTween[22].set("x", [n.x, n.x - 3, n.x - 8, n.x - 11, n.x - 12, n.x - 13, n.x - 12, n.x - 11, n.x - 8, n.x - 3], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._body)), this._attackTween[23].set("y", [n.y, n.y + 4, n.y + 6, n.y + 7, n.y + 7, n.y + 7, n.y + 7, n.y + 7, n.y + 6, n.y + 3], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._waist)), this._attackTween[24].set("x", [r.x, r.x - 3, r.x - 8, r.x - 11, r.x - 12, r.x - 13, r.x - 12, r.x - 11, r.x - 8, r.x - 3], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._waist)), this._attackTween[25].set("y", [r.y, r.y + 4, r.y + 6, r.y + 7, r.y + 7, r.y + 7, r.y + 7, r.y + 7, r.y + 6, r.y + 3], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._attackTween[26].set("angle", [0, 0, 0, 0, 90, 90, 180, 180, 270, 270], 100, 9999), this._attackTween.push(new Prodigy.TweenController(this.game, this._leftArm)), this._attackTween[27].set("visible", [!0, !0, !0, !0, !0, !0, !0, !0, !1, !1], 100, 9999), this._attackTween[0].end(this.playIdle.bind(this)), this.playIdle.call(this), this.complete = !0, this.loading = !1
	},
	playIdle: function() {
		if (1 !== this._mode) {
			this._mode = 1, this._tweens = this._idleTween;
			for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
		}
	},
	playAttack: function() {
		if (3 !== this._mode) {
			this._mode = 3, this._tweens = this._attackTween;
			for (var e = 0; e < this._tweens.length; e++) this._tweens[e].start()
		}
	},
	stand: function() {
		this.playIdle.call(this)
	},
	attack: function() {
		this.playAttack.call(this)
	},
	update: function() {
		Prodigy.Container.CreatureContainer.prototype.update.call(this);
		for (var e = 0; e < this._tweens.length; e++) this._tweens[e].update()
	}
}), Prodigy.Container.CloudContainer = function(e, t, i, a, s, r, n) {
	Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r), this.elementMode = n
}, Prodigy.extends(Prodigy.Container.CloudContainer, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.CloudContainer,
	setup: function(e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			if ("water" === this.elementMode || "ice" === this.elementMode || "earth" === this.elementMode) {
				this.miniBoss = !0;
				var i, a;
				"ice" === this.elementMode ? (i = this.game.prodigy.create.sprite(-100, -200, "boss-12", "ice_cloud"), a = this.game.prodigy.create.sprite(-38, -149, "boss-12", "med_face_0")) : "water" === this.elementMode ? (i = this.game.prodigy.create.sprite(-100, -200, "boss-12", "water_cloud"), a = this.game.prodigy.create.sprite(-38, -149, "boss-12", "med_face_1")) : "earth" === this.elementMode && (i = this.game.prodigy.create.sprite(-100, -200, "boss-12", "earth_cloud"), a = this.game.prodigy.create.sprite(-38, -149, "boss-12", "med_face_2")), this.cloudParts = {
					base: i,
					eyes: a
				}, this.floatTweens = {
					base: [],
					eyes: []
				}, this.add(this.cloudParts.base), this.add(this.cloudParts.eyes), this.float(this.cloudParts.base, "base", 1400, 20), this.float(this.cloudParts.eyes, "eyes", 1400, 20)
			} else {
				this.waterActive = !0, this.iceActive = !0, this.earthActive = !0, this.attacks = [25, 26, 27, 28], this.coords = {
					main: {
						x: -200,
						y: -200
					},
					unactive_water: {
						x: 45,
						y: -185
					},
					unactive_ice: {
						x: -150,
						y: -300
					},
					active: {
						x: -300,
						y: -100
					},
					unactive_earth: {
						x: -110,
						y: -20
					}
				}, this.cloudParts = {
					base: this.game.prodigy.create.sprite(this.coords.main.x, this.coords.main.y, "boss-12", "main_cloud"),
					eyes: this.game.prodigy.create.sprite(this.coords.main.x + 94, this.coords.main.y + 72, "boss-12", "main_eyes_1"),
					ice_cloud: this.game.prodigy.create.sprite(this.coords.unactive_ice.x, this.coords.unactive_ice.y, "boss-12", "ice_cloud"),
					ice_eyes: this.game.prodigy.create.sprite(this.coords.unactive_ice.x + 94, this.coords.unactive_ice.y + 92, "boss-12", "med_face_0", !0),
					water_cloud: this.game.prodigy.create.sprite(this.coords.unactive_water.x, this.coords.unactive_water.y, "boss-12", "water_cloud"),
					water_eyes: this.game.prodigy.create.sprite(this.coords.unactive_water.x + 94, this.coords.unactive_water.y + 72 + 20, "boss-12", "med_face_1", !0),
					earth_cloud: this.game.prodigy.create.sprite(this.coords.unactive_earth.x, this.coords.unactive_earth.y, "boss-12", "earth_cloud"),
					earth_eyes: this.game.prodigy.create.sprite(this.coords.unactive_earth.x + 94, this.coords.unactive_earth.y + 92, "boss-12", "med_face_2", !0)
				};
				for (var s in this.cloudParts) this.cloudParts.hasOwnProperty(s) && this.add(this.cloudParts[s]);
				this.floatTweens = {
					base: [],
					eyes: [],
					ice_cloud: [],
					ice_eyes: [],
					water_cloud: [],
					water_eyes: [],
					earth_cloud: [],
					earth_eyes: []
				}, this.floatTimes = {
					ice: 1500,
					water: 1600,
					earth: 1300
				}, this.float(this.cloudParts.base, "base", 1400, 20), this.float(this.cloudParts.eyes, "eyes", 1400, 20), this.float(this.cloudParts.ice_cloud, "ice_cloud", this.floatTimes.ice, 10, !0), this.float(this.cloudParts.ice_eyes, "ice_eyes", this.floatTimes.ice, 10, !0), this.float(this.cloudParts.water_cloud, "water_cloud", this.floatTimes.water, 10, !0), this.float(this.cloudParts.water_eyes, "water_eyes", this.floatTimes.water, 10, !0), this.float(this.cloudParts.earth_cloud, "earth_cloud", this.floatTimes.earth, 10, !0), this.float(this.cloudParts.earth_eyes, "earth_eyes", this.floatTimes.earth, 10, !0), this.cloudParts.earth_eyes.scale.x = -1
			}
			this.complete = !0, this.loading = !1
		}
	},
	"float": function(e, t, i, a, s) {
		Util.isDefined(this.floatTweens[t][0]) && this.floatTweens[t][0].stop(), Util.isDefined(this.floatTweens[t][1]) && this.floatTweens[t][1].stop(), this.floatTweens[t][0] = this.game.add.tween(e).to({
			y: "-" + a
		}, i, Phaser.Easing.Quadratic.InOut).to({
			y: "" + a
		}, i, Phaser.Easing.Quadratic.InOut).loop().start(), s && (this.floatTweens[t][1] = this.game.add.tween(e).to({
			x: "-" + a
		}, Math.floor(i / 2), Phaser.Easing.Quadratic.InOut).to({
			x: "" + a
		}, Math.floor(i / 2), Phaser.Easing.Quadratic.InOut).loop().start())
	},
	stormMode: function() {
		if ("storm" !== this.elementMode) {
			var e = this.game.add.tween(this.cloudParts[this.elementMode + "_cloud"]).to({
					x: this.coords["unactive_" + this.elementMode].x,
					y: this.coords["unactive_" + this.elementMode].y
				}, 1500, Phaser.Easing.Quadratic.InOut).start(),
				t = this.game.add.tween(this.cloudParts[this.elementMode + "_eyes"]).to({
					x: this.coords["unactive_" + this.elementMode].x + 94,
					y: this.coords["unactive_" + this.elementMode].y + 92
				}, 1500, Phaser.Easing.Quadratic.InOut).start();
			e.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_cloud"], this.elementMode + "_cloud", this.floatTimes[this.elementMode], 10, !0)), t.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_eyes"], this.elementMode + "_eyes", this.floatTimes[this.elementMode], 10, !0))
		}
		this.attacks = [25, 26, 27, 28], this.elementMode = "storm", this.source.element = "storm", this.source.source.element = "storm"
	},
	iceMode: function() {
		if (this.iceActive && "ice" !== this.elementMode) {
			if ("storm" !== this.elementMode) {
				var e = this.game.add.tween(this.cloudParts[this.elementMode + "_cloud"]).to({
						x: this.coords["unactive_" + this.elementMode].x,
						y: this.coords["unactive_" + this.elementMode].y
					}, 1500, Phaser.Easing.Quadratic.InOut).start(),
					t = this.game.add.tween(this.cloudParts[this.elementMode + "_eyes"]).to({
						x: this.coords["unactive_" + this.elementMode].x + 94,
						y: this.coords["unactive_" + this.elementMode].y + 92
					}, 1500, Phaser.Easing.Quadratic.InOut).start();
				e.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_cloud"], this.elementMode + "_cloud", this.floatTimes[this.elementMode], 10, !0)), t.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_eyes"], this.elementMode + "_eyes", this.floatTimes[this.elementMode], 10, !0))
			}
			this.attacks = [19, 20, 21, 22], this.elementMode = "ice", this.source.element = "ice", this.source.source.element = "ice";
			var i = this.game.add.tween(this.cloudParts.ice_cloud).to({
					x: this.coords.active.x,
					y: this.coords.active.y
				}, 1500, Phaser.Easing.Quadratic.InOut).start(),
				a = this.game.add.tween(this.cloudParts.ice_eyes).to({
					x: this.coords.active.x + 94,
					y: this.coords.active.y + 92
				}, 1500, Phaser.Easing.Quadratic.InOut).start();
			i.onComplete.add(this.float.bind(this, this.cloudParts.ice_cloud, "ice_cloud", this.floatTimes.ice, 10, !0)), a.onComplete.add(this.float.bind(this, this.cloudParts.ice_eyes, "ice_eyes", this.floatTimes.ice, 10, !0))
		}
	},
	earthMode: function() {
		if (this.earthActive && "earth" !== this.elementMode) {
			if ("storm" !== this.elementMode) {
				var e = this.game.add.tween(this.cloudParts[this.elementMode + "_cloud"]).to({
						x: this.coords["unactive_" + this.elementMode].x,
						y: this.coords["unactive_" + this.elementMode].y
					}, 1500, Phaser.Easing.Quadratic.InOut).start(),
					t = this.game.add.tween(this.cloudParts[this.elementMode + "_eyes"]).to({
						x: this.coords["unactive_" + this.elementMode].x + 94,
						y: this.coords["unactive_" + this.elementMode].y + 92
					}, 1500, Phaser.Easing.Quadratic.InOut).start();
				e.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_cloud"], this.elementMode + "_cloud", this.floatTimes[this.elementMode], 10, !0)), t.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_eyes"], this.elementMode + "_eyes", this.floatTimes[this.elementMode], 10, !0))
			}
			this.attacks = [13, 14, 15, 16], this.elementMode = "earth", this.source.element = "earth", this.source.source.element = "earth";
			var i = this.game.add.tween(this.cloudParts.earth_cloud).to({
					x: this.coords.active.x,
					y: this.coords.active.y
				}, 1500, Phaser.Easing.Quadratic.InOut).start(),
				a = this.game.add.tween(this.cloudParts.earth_eyes).to({
					x: this.coords.active.x + 94,
					y: this.coords.active.y + 92
				}, 1500, Phaser.Easing.Quadratic.InOut).start();
			i.onComplete.add(this.float.bind(this, this.cloudParts.earth_cloud, "earth_cloud", this.floatTimes.earth, 10, !0)), a.onComplete.add(this.float.bind(this, this.cloudParts.earth_eyes, "earth_eyes", this.floatTimes.earth, 10, !0))
		}
	},
	waterMode: function() {
		if (this.waterActive && "water" !== this.elementMode) {
			if ("storm" !== this.elementMode) {
				var e = this.game.add.tween(this.cloudParts[this.elementMode + "_cloud"]).to({
						x: this.coords["unactive_" + this.elementMode].x,
						y: this.coords["unactive_" + this.elementMode].y
					}, 1500, Phaser.Easing.Quadratic.InOut).start(),
					t = this.game.add.tween(this.cloudParts[this.elementMode + "_eyes"]).to({
						x: this.coords["unactive_" + this.elementMode].x + 94,
						y: this.coords["unactive_" + this.elementMode].y + 92
					}, 1500, Phaser.Easing.Quadratic.InOut).start();
				e.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_cloud"], this.elementMode + "_cloud", this.floatTimes[this.elementMode], 10, !0)), t.onComplete.add(this.float.bind(this, this.cloudParts[this.elementMode + "_eyes"], this.elementMode + "_eyes", this.floatTimes[this.elementMode], 10, !0))
			}
			this.attacks = [7, 8, 9, 10], this.elementMode = "water", this.source.element = "water", this.source.source.element = "water";
			var i = this.game.add.tween(this.cloudParts.water_cloud).to({
					x: this.coords.active.x,
					y: this.coords.active.y
				}, 1500, Phaser.Easing.Quadratic.InOut).start(),
				a = this.game.add.tween(this.cloudParts.water_eyes).to({
					x: this.coords.active.x + 94,
					y: this.coords.active.y + 92
				}, 1500, Phaser.Easing.Quadratic.InOut).start();
			i.onComplete.add(this.float.bind(this, this.cloudParts.water_cloud, "water_cloud", this.floatTimes.water, 10, !0)), a.onComplete.add(this.float.bind(this, this.cloudParts.water_eyes, "water_eyes", this.floatTimes.water, 10, !0))
		}
	},
	updateClouds: function() {
		var e = this.source.getCurrentHearts() / this.source.getMaxHearts();
		.25 > e ? (this.waterActive = !1, this.cloudParts.water_cloud.frameName = "small_cloud", this.cloudParts.water_eyes.visible = !1, "water" === this.elementMode && this.stormMode()) : .5 > e ? (this.earthActive = !1, this.cloudParts.earth_cloud.frameName = "small_cloud", this.cloudParts.earth_eyes.visible = !1, "earth" === this.elementMode && this.stormMode()) : .75 > e && (this.iceActive = !1, this.cloudParts.ice_cloud.frameName = "small_cloud", this.cloudParts.ice_eyes.visible = !1, "ice" === this.elementMode && this.stormMode())
	}
}), Prodigy.Container.BonfireContainer = function(e, t, i, a, s, r) {
	Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r), this.foodMode = "soup"
}, Prodigy.extends(Prodigy.Container.BonfireContainer, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.BonfireContainer,
	setup: function(e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			this.potParts = {
				pot: this.game.prodigy.create.sprite(-100, 0, "boss-13", "pot"),
				lid: this.game.prodigy.create.sprite(140, -140, "boss-13", "pot-lid")
			}, this.potParts.lid.anchor.setTo(1, 1), this.potParts.pot.anchor.setTo(0, 1), this.burgerParts = {
				dish: this.game.prodigy.create.sprite(300, -50, "boss-13", "dish"),
				bottom: this.game.prodigy.create.sprite(320, -10, "boss-13", "burger-bottom"),
				top: this.game.prodigy.create.sprite(510, -70, "boss-13", "burger-lid")
			}, this.burgerParts.top.anchor.setTo(1, 1), this.burgerParts.bottom.anchor.setTo(0, 1), this.cakeParts = {
				dish: this.game.prodigy.create.sprite(300, -50, "boss-13", "dish"),
				lava: this.game.prodigy.create.sprite(310, 0, "boss-13", "lava"),
				face: this.game.prodigy.create.sprite(350, 10, "boss-13", "expression-1"),
				strawberry: this.game.prodigy.create.sprite(400, -200, "boss-13", "berry")
			}, this.cakeParts.face.animations.add("attack", ["expression-1", "expression-2", "expression-3", "expression-3", "expression-3", "expression-2", "expression-1"], 10, !1, !1), this.cakeParts.lava.anchor.setTo(0, 1), this.cakeParts.face.anchor.setTo(0, 1);
			var i;
			for (i in this.potParts) this.potParts.hasOwnProperty(i) && this.add(this.potParts[i]);
			for (i in this.burgerParts) this.burgerParts.hasOwnProperty(i) && (this.add(this.burgerParts[i]), this.burgerParts[i].visible = !1);
			for (i in this.cakeParts) this.cakeParts.hasOwnProperty(i) && (this.add(this.cakeParts[i]), this.cakeParts[i].visible = !1);
			this.npc = new Prodigy.CebolliniEvent(this.game, this, -100, 0, "npc-sprite-cebollini", null), this.npc.flip(), this.npc.bossStart(this.game), this.complete = !0, this.loading = !1
		}
	},
	attack: function() {
		var e, t, i = this.game.prodigy.animation;
		"soup" === this.foodMode ? (e = this.game.prodigy.event.create(), e.animation(i.rotate.bind(i, this.potParts.lid, "35", 1e3, 0, null, !0)), e.animation(i.translate.bind(i, this.potParts.lid, "0", "-20", 1e3, 0, null, !0), !0), e.animation(i.rotate.bind(i, this.potParts.lid, "-35", 1e3, 0, null, !0)), e.animation(i.translate.bind(i, this.potParts.lid, "0", "20", 1e3, 0, null, !0)), t = this.game.prodigy.event.create(), t.animation(i.rotate.bind(i, this.potParts.pot, "-10", 1e3, 0, null, !0), !0), t.animation(i.rotate.bind(i, this.potParts.pot, "10", 1e3, 0, null, !0)), e.start(), t.start()) : "burger" === this.foodMode ? (e = this.game.prodigy.event.create(), e.animation(i.rotate.bind(i, this.burgerParts.top, "25", 700, 0, null, !0)), e.animation(i.translate.bind(i, this.burgerParts.top, "0", "-20", 700, 0, null, !0), !0), e.animation(i.rotate.bind(i, this.burgerParts.top, "-25", 700, 0, null, !0)), e.animation(i.translate.bind(i, this.burgerParts.top, "0", "20", 700, 0, null, !0)), t = this.game.prodigy.event.create(), t.animation(i.rotate.bind(i, this.burgerParts.bottom, "-10", 700, 0, null, !0), !0), t.animation(i.rotate.bind(i, this.burgerParts.bottom, "10", 700, 0, null, !0)), e.start(), t.start()) : "cake" === this.foodMode && this.cakeParts.face.animations.play("attack")
	},
	startEntree: function() {
		this.foodMode = "burger", this.npc.entreeStart();
		var e = this.game.prodigy.event.create();
		e.text(11, "cebollini"), e.enableInput(!1);
		var t;
		for (t in this.potParts) this.potParts.hasOwnProperty(t) && e.animation(this.game.prodigy.animation.hop.bind(this.game.prodigy.animation, this.potParts[t], "400", "-150", "+150", 2e3, !1, !0));
		e.delay(2e3);
		for (t in this.potParts) this.potParts.hasOwnProperty(t) && e.set(this.potParts[t], "visible", !1);
		for (t in this.burgerParts) this.burgerParts.hasOwnProperty(t) && e.set(this.burgerParts[t], "visible", !0);
		for (t in this.burgerParts) this.burgerParts.hasOwnProperty(t) && e.animation(this.game.prodigy.animation.hop.bind(this.game.prodigy.animation, this.burgerParts[t], "-400", "-150", "+150", 2e3, !1, !0));
		e.delay(2e3), e.enableInput(!0), e.start()
	},
	startDessert: function() {
		this.foodMode = "cake", this.npc.dessertStart();
		var e = this.game.prodigy.event.create();
		e.text(12, "cebollini"), e.enableInput(!1);
		var t;
		for (t in this.burgerParts) this.burgerParts.hasOwnProperty(t) && e.animation(this.game.prodigy.animation.hop.bind(this.game.prodigy.animation, this.burgerParts[t], "400", "-150", "+150", 2e3, !1, !0));
		e.delay(2e3);
		for (t in this.burgerParts) this.burgerParts.hasOwnProperty(t) && e.set(this.burgerParts[t], "visible", !1);
		for (t in this.cakeParts) this.cakeParts.hasOwnProperty(t) && e.set(this.cakeParts[t], "visible", !0);
		for (t in this.cakeParts) this.cakeParts.hasOwnProperty(t) && e.animation(this.game.prodigy.animation.hop.bind(this.game.prodigy.animation, this.cakeParts[t], "-400", "-150", "+150", 2e3, !1, !0));
		e.delay(2e3), e.enableInput(!0), e.start()
	}
}), Prodigy.Container.OldOne = function(e, t, i, a, s, r) {
	Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r)
}, Prodigy.extends(Prodigy.Container.OldOne, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.OldOne,
	setup: function() {
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this.spine = this.game.add.spine(0, 0, "boss-shipwreck_shore"), this.idle(), this.sprite.add(this.spine), this.showName(!0, "Old One"), this.name.y = -430, this.name.x -= 10
	},
	idle: function() {
		Util.log("[Old One] idle called!"), this.spine.setAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	},
	attack: function() {
		Util.log("[Old One] attack called!"), this.spine.setAnimationByName(0, "attack", !1), this.spine.addAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	}
}), Prodigy.Container.IceWyrmBossContainer = function(e, t, i, a, s, r) {
	Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r)
}, Prodigy.extends(Prodigy.Container.IceWyrmBossContainer, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.IceWyrmBossContainer,
	setup: function() {
		this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this.spine = this.game.add.spine(0, 0, "spine-boss-shiverchill"), this.idle(), this.sprite.add(this.spine)
	},
	idle: function() {
		this.spine.setAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	},
	attack: function() {
		this.spine.setAnimationByName(0, "attack", !1), this.spine.addAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	}
}), Prodigy.Container.PippetContainer = function(e, t, i, a, s, r) {
	Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r), this.assets = "spine-battle-pippet"
}, Prodigy.extends(Prodigy.Container.PippetContainer, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.PippetContainer,
	startLoad: function() {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.game.prodigy.load.assets(["spine-battle-pippet"], this.setup.bind(this))
	},
	setup: function() {
		var e = this.game.prodigy.create.element(this.sprites, 0, 0);
		this.spine = this.game.add.spine(0, 0, "spine-battle-pippet"), this.idle(), e.add(this.spine)
	},
	idle: function() {
		Util.log("[Pippet] idle called!"), this.spine.setAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	},
	attack: function() {
		Util.log("[Pippet] attack called!"), this.spine.setAnimationByName(0, "attack", !1), this.spine.addAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	}
}), Prodigy.Container.TitanContainer = function(e, t, i, a, s, r) {
	i.modifiers.barrier = !0, Prodigy.Container.BossContainer.call(this, e, t, i, a, s, r)
}, Prodigy.extends(Prodigy.Container.TitanContainer, Prodigy.Container.BossContainer, {
	constructor: Prodigy.Container.TitanContainer,
	setup: function() {
		this.game.prodigy.load.assets("attack-royal-roar"), this.sprite = this.game.prodigy.create.element(this.sprites, 0, 0), this.spine = this.game.add.spine(100, -100, "spine-boss-titan"), this.spine.smoothed = !1, this.idle(), this.sprite.add(this.spine), this.sprite.scale.x = 1.75, this.sprite.scale.y = 1.75, this.complete = !0, this.loading = !1
	},
	idle: function() {
		this.spine.setAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	},
	attack: function() {
		this.spine.setAnimationByName(0, "attack", !1), this.spine.addAnimationByName(0, "idle", !0), this.spine.setToSetupPose()
	},
	retreat: function() {
		this.spine.setAnimationByName(0, "knockout", !1)
	}
}), Prodigy.BroccolinaEvent = function(e, t, i, a, s, r, n) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		npc: !0
	}, null, i, a), this.body = this.add(e.prodigy.create.sprite(0, -60, "npc-sprite-broccolina", "body_0")), this.body.animations.add("stand", ["body_0", "body_1", "body_2"], 4, !0, !1), this.body.animations.play("stand"), this.head = this.add(e.prodigy.create.sprite(9, -108, "npc-sprite-broccolina", "head_0")), this.head.animations.add("stand", ["head_0", "head_1", "head_2"], 5, !0, !1), this.head.animations.play("stand"), this.sprites.add(this.body), this.sprites.add(this.head), e.add.tween(this.head).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 400, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 300, Phaser.Easing.Linear.None).loop().start(), Util.isDefined(r) && this.addOnClick(r.bind(this)), this.name.y += 20, Util.isDefined(n) && this.showName(!0)
}, Prodigy.extends(Prodigy.BroccolinaEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.BroccolinaEvent
}), Prodigy.EugeneEvent = function(e, t, i, a, s, r, n) {
	this.npcName = n, Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		nameX: -5,
		npc: !0
	}, null, i, a), this.right_arm = this.add(e.prodigy.create.sprite(-20, -75, "npc-sprite-eugene", "right_arm")), this.body = this.add(e.prodigy.create.sprite(0, -80, "npc-sprite-eugene", "body_0")), this.body.animations.add("stand", ["body_0", "body_1", "body_2", "body_2", "body_2", "body_2", "body_1"], 5, !0, !1), this.body.animations.play("stand"), this.left_arm = this.add(e.prodigy.create.sprite(40, -75, "npc-sprite-eugene", "left_arm_0")), this.head = this.add(e.prodigy.create.sprite(0, -110, "npc-sprite-eugene", "head")), this.sprites.add(this.right_arm), this.sprites.add(this.body), this.sprites.add(this.head), this.sprites.add(this.left_arm), e.add.tween(this.head).to({
		y: "-1"
	}, 200, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 500, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 400, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.left_arm).to({
		y: "+2"
	}, 800, Phaser.Easing.Linear.None).delay(600).to({
		y: this.left_arm.y
	}, 800, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.right_arm).to({
		y: "+2",
		x: "-1"
	}, 800, Phaser.Easing.Linear.None).delay(600).to({
		y: this.right_arm.y,
		x: this.right_arm.x
	}, 800, Phaser.Easing.Linear.None).loop().start(), Util.isDefined(r) && this.addOnClick(r.bind(this)), this.name.y += 17, Util.isDefined(n) && this.showName(!0)
}, Prodigy.extends(Prodigy.EugeneEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.EugeneEvent
}), Prodigy.MorrisEvent = function(e, t, i, a, s, r, n) {
	this.npcName = n, Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		npc: !0
	}, null, i, a), this.right_arm = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "right_arm")), this.legs = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "legs")), this.body = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "body")), this.left_arm = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "left_arm")), this.head = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "head")), this.eyes = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "eyes1")), this.snout = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "snout")), this.mouth = this.add(e.prodigy.create.sprite(0, -115, "npc-sprite-morris", "mouth")), this.sprites.add(this.right_arm), this.sprites.add(this.legs), this.sprites.add(this.body), this.sprites.add(this.head), this.sprites.add(this.eyes), this.sprites.add(this.snout), this.sprites.add(this.mouth), this.sprites.add(this.left_arm), e.add.tween(this.eyes).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 250, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 200, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.snout).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 250, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 200, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.mouth).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 250, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 200, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.head).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+2"
	}, 250, Phaser.Easing.Linear.None).to({
		y: this.head.y
	}, 200, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.body).to({
		y: "-1"
	}, 100, Phaser.Easing.Linear.None).to({
		y: "+1"
	}, 200, Phaser.Easing.Linear.None).to({
		y: this.body.y
	}, 100, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.left_arm).to({
		y: "+2"
	}, 400, Phaser.Easing.Linear.None).delay(600).to({
		y: this.left_arm.y
	}, 400, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.right_arm).to({
		y: "+2",
		x: "-1"
	}, 400, Phaser.Easing.Linear.None).delay(600).to({
		y: this.right_arm.y,
		x: this.right_arm.x
	}, 400, Phaser.Easing.Linear.None).loop().start(), Util.isDefined(n) && this.showName(!0)
}, Prodigy.extends(Prodigy.MorrisEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.MorrisEvent
}), Prodigy.WorkerSlimeEvent = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		npc: !0,
		nameX: o,
		nameY: h
	}, null, i, a), "npc-sprite-worker-slime" === s ? (this.body = this.add(e.prodigy.create.sprite(0, -60, "npc-sprite-worker-slime", "body_0")), this.body.animations.add("stand", ["body_0", "body_1", "body_2"], 8, !0, !1), this.body.animations.add("idle", ["stand_0", "stand_1", "stand_2"], 8, !0, !1), this.body.animations.play("stand"), this.face = this.add(e.prodigy.create.sprite(12, -45, "npc-sprite-worker-slime", "face")), this.radish = this.add(e.prodigy.create.sprite(20, -80, "npc-sprite-worker-slime", "radish_0")), this.radish.animations.add("stand", ["radish_0", "radish_1", "radish_2"], 10, !0, !1), this.faceTween = e.add.tween(this.face).to({
		y: "-1"
	}, 300, Phaser.Easing.Linear.None).to({
		y: this.face.y
	}, 300, Phaser.Easing.Linear.None).delay(100).loop().start(), this.sprites.add(this.radish), this.sprites.add(this.body), this.sprites.add(this.face), Util.isDefined(r) && (this.body.inputEnabled = !0, this.body.events.onInputDown.add(r)), this.name.y -= 100) : (this.body = this.add(e.prodigy.create.sprite(-30, -63, "npc-sprite-worker-slime", "red_0")), this.body.animations.add("stand", ["red_0", "red_0", "red_1", "red_1", "red_2", "red_2"], 10, !0, !1), this.body.animations.play("stand"), this.pot = this.add(e.prodigy.create.sprite(-55, -110, "zone-bonfire", "pot")), this.face = this.add(e.prodigy.create.sprite(-18, -45, "npc-sprite-worker-slime", "face_red")), e.add.tween(this.face).to({
		y: "-1"
	}, 300, Phaser.Easing.Linear.None).to({
		y: this.face.y
	}, 300, Phaser.Easing.Linear.None).delay(100).loop().start(), this.sprites.add(this.pot), this.sprites.add(this.body), this.sprites.add(this.face), this.name.y += 50), Util.isDefined(n) && this.showName(!0)
}, Prodigy.extends(Prodigy.WorkerSlimeEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.WorkerSlimeEvent,
	idle: function() {
		this.body.animations.play("idle"), this.face.frameName = "stand_face", this.face.x -= 7, this.body.y -= 15, this.faceTween.stop(), this.face.y = -60, this.faceTween = this.game.add.tween(this.face).to({
			y: "-1"
		}, 300, Phaser.Easing.Linear.None).to({
			y: this.face.y
		}, 300, Phaser.Easing.Linear.None).delay(100).loop().start()
	}
}), Prodigy.CebolliniEvent = function(e, t, i, a, s, r, n) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		npc: !0
	}, null, i, a), this.body = this.add(e.prodigy.create.sprite(-35, 0, "npc-sprite-cebollini", "mini")), this.body.anchor.setTo(0, 1), this.body.animations.add("stand", ["mini", "mini1", "mini2", "mini3", "mini2", "mini1"], 10, !0, !1), this.body.animations.play("stand"), this.sprites.add(this.body), this.name.y += 40, Util.isDefined(n) && this.showName(!0)
}, Prodigy.extends(Prodigy.CebolliniEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.CebolliniEvent,
	bossStart: function(e) {
		this.right_arm = this.add(e.prodigy.create.sprite(50, -30, "npc-sprite-cebollini", "hand_1")), this.body = this.add(e.prodigy.create.sprite(-40, -90, "npc-sprite-cebollini", "body")), this.head = this.add(e.prodigy.create.sprite(-20, -45, "npc-sprite-cebollini", "face_1")), this.hat = this.add(e.prodigy.create.sprite(-55, -135, "npc-sprite-cebollini", "hat_0")), this.left_arm = this.add(e.prodigy.create.sprite(-50, -30, "npc-sprite-cebollini", "hand_2")), this.sprites.add(this.right_arm), this.sprites.add(this.body), this.sprites.add(this.head), this.sprites.add(this.hat), this.sprites.add(this.left_arm), e.add.tween(this.head).to({
			y: "-1"
		}, 200, Phaser.Easing.Linear.None).to({
			y: "+2"
		}, 500, Phaser.Easing.Linear.None).to({
			y: this.head.y
		}, 400, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.hat).to({
			y: "-1"
		}, 200, Phaser.Easing.Linear.None).to({
			y: "+2"
		}, 500, Phaser.Easing.Linear.None).to({
			y: this.hat.y
		}, 400, Phaser.Easing.Linear.None).loop().start(), e.add.tween(this.left_arm).to({
			y: "+2"
		}, 800, Phaser.Easing.Linear.None).delay(600).to({
			y: this.left_arm.y
		}, 800, Phaser.Easing.Linear.None).loop().start(), this.right_arm.frameName = "spatula_0", this.right_arm.y = this.right_arm.y - 60, this.right_arm.x = this.right_arm.x - 15
	},
	entreeStart: function() {
		this.right_arm.frameName = "spatula_1", this.right_arm.x = this.right_arm.x + 15, this.hat.frameName = "hat_1"
	},
	dessertStart: function() {
		this.hat.frameName = "hat_2", this.hat.x = this.hat.x - 20, this.hat.y = this.hat.y - 5, this.head.frameName = "face_2"
	}
});
var AreaEvent = function() {
	function e(t, i, a, s, r, n, o, h, l) {
		Prodigy.Control.Element.call(this, t, i, a.x, a.y), this.noActive = l, this.updateFrame = 0, this.data = a, this.user = s, this.path = r, this.isBlocked = !1, this.canRetrigger = Util.getOptionalParameter(a.canRetrigger, !1), this.callback = l ? function() {} : n;
		var d = Util.getOptionalParameter(a.guideHandPathToX, a.x),
			c = Util.getOptionalParameter(a.guideHandPathToY, a.y);
		Util.isDefined(o) || (o = a.x < 50 ? a.y < 50 ? e.UP_LEFT : a.y > 670 ? e.DOWN_LEFT : e.LEFT : a.x > 1230 ? a.y < 50 ? e.UP_RIGHT : a.y > 670 ? e.DOWN_RIGHT : e.RIGHT : a.y < 50 ? e.UP : a.y > 670 ? e.DOWN : e.LEFT), this._sprite = this.add(this.game.prodigy.create.sprite(0, 0, "core", "area-pointer")), this._sprite.anchor.setTo(.5, 0), this._sprite.angle = o || 0, this._sprite.inputEnabled = !0, this._sprite.events.onInputDown.add(this.moveTo.bind(this, d, c));
		var p = o > e.UP && o < e.DOWN ? -30 : o > e.DOWN && 360 > o ? 30 : 0,
			g = o > e.LEFT || o < e.RIGHT ? 30 : o > e.RIGHT && o < e.LEFT ? -30 : 0;
		this._sprite.x = a.arrowOffsetX || 0, this._sprite.y = a.arrowOffsetY || 0, this.game.add.tween(this._sprite).to({
			x: this._sprite.x + p,
			y: this._sprite.y + g
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.visible = !1, this.count = 0
	}
	return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.UP = 0, e.UP_RIGHT = 45, e.RIGHT = 90, e.DOWN_RIGHT = 135, e.DOWN = 180, e.DOWN_LEFT = 225, e.LEFT = 270, e.UP_LEFT = 315, e.prototype.moveTo = function(e, t) {
		this.user.setValidPath(this.path, e, t)
	}, e.prototype.update = function() {
		if (Prodigy.Control.Element.prototype.update.call(this), !(this.user.evtProc || this.fired && !this.canRetrigger)) {
			if (!(this.count <= 0)) return this.count--, void 0;
			this.count = 5;
			var e = !1;
			Util.isDefined(this.data.r) && Phaser.Math.distance(this.user.x, this.user.y, this.x, this.y) <= this.data.r ? e = !this.fired : !Util.isDefined(this.data.r) && Util.isDefined(this.data.w) && this.user.x >= this.x - Math.floor(this.data.w / 2) && this.user.x <= this.x + Math.floor(this.data.w / 2) && this.user.y >= this.y - Math.floor(this.data.h / 2) && this.user.y <= this.y + Math.floor(this.data.h / 2) ? e = !this.fired : this.canRetrigger && (this.fired = !1), e && (this.fired = !0, this.callback())
		}
	}, e.prototype.process = function(e, t, i) {
		return this.visible = this._isClosest = !1, this.checkDistance(e, t, i)
	}, e.prototype.setClosest = function() {
		this._isClosest = this.visible = !0
	}, e.prototype.checkDistance = function(e, t, i) {
		if (!Util.isDefined(this.data.target) || !Util.isDefined(i)) return null;
		if (e.ID + "-" + t.getTag() === i) return 1;
		var a = function(e, t, s) {
			if (!Util.isDefined(s) || Util.inArray(t, s)) return null;
			if (i === s) return t.length + 1;
			var r = s.split("-"),
				n = e.getZone(r[0]);
			if (!Util.isDefined(n)) return null;
			for (var o = n.getMap(r[1]), h = o._locations, l = null, d = 0; d < h.length; d++) {
				var c = a(e, t.concat([s]), h[d]);
				(!Util.isDefined(l) || l > c && Util.isDefined(c)) && (l = c)
			}
			return l
		};
		return a(this.game.prodigy.world, [e.ID + "-" + t.getTag()], this.data.target)
	}, e.prototype.getOverlay = function() {
		var e, t, i, a;
		return this.data.r ? (e = this.x, t = this.y, i = a = this.data.r) : this.data.rect ? (e = this.x, t = this.y, i = this.data.w, a = this.data.h) : (e = this.x + (this.data.x < 100 ? -Math.floor(.5 * this.data.w) : this.data.x > 1180 ? Math.floor(.5 * this.data.w) : 0), t = this.y + (this.data.y < 100 ? -Math.floor(.5 * this.data.h) : this.data.y > 620 ? Math.floor(.5 * this.data.h) : 0), i = this.data.w * (this.data.x < 100 || this.data.x > 1180 ? 1 : .5), a = this.data.h * (this.data.y < 100 || this.data.y > 620 ? 1 : .5)), this._overlay = this.game.add.graphics(0, 0), this._overlay.beginFill(0, .75), this.data.rect ? this._overlay.drawRect(e - .5 * i, t - .5 * a, i, a) : this._overlay.drawEllipse(e, t, i, a), this._overlay
	}, e
}();
Prodigy.Event.Block = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, r.atlas, r.tag)), this.sprite.anchor.setTo(r.x, r.y);
	var n = Math.floor(this.sprite.width / s.size),
		o = Math.floor((i - this.sprite.width * r.x) / s.size),
		h = Math.floor(this.sprite.height / s.size),
		l = Math.floor((a - this.sprite.height * r.y) / s.size);
	for (i = o; o + n > i; i++)
		for (a = l; l + h > a; a++) s.area[a][i] = 0;
	this.path = s
}, Prodigy.extends(Prodigy.Event.Block, Prodigy.Control.Element, {
	constructor: Prodigy.Event.Block
}), Prodigy.Event.Chest = function(e, t, i, a, s, r, n, o, h, l, d) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), this.chestID = n, this.callback = l, this.user = s, this.key = h, this.reward = o || [], Util.isDefined(d)) this.type = d;
	else {
		this.type = "A";
		for (var c = 0; c < o.length; c++) {
			var p = Items.getItemData(o[c].type, o[c].ID);
			if (p) {
				if (p.quest && 1 === p.quest) {
					this.type = "B";
					break
				}
				1 === p.member && (this.type = "C")
			}
			"gold" === o[c].type && o[c].N >= 500 && (this.type = "C")
		}
	}
	this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, "tileset-core", "chest-" + this.type + "-1")), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked.bind(this), this), this.sprite.x -= Math.floor(.5 * this.sprite.width), this.sprite.y = -this.sprite.height, this.path = r
}, Prodigy.extends(Prodigy.Event.Chest, Prodigy.Control.Element, {
	constructor: Prodigy.Event.Chest,
	process: function(e) {
		this.zone = e, this.highlight(!1);
		var t = e.getState(this.chestID);
		Util.isDefined(t) && 0 !== t && (this.sprite.inputEnabled = !1, this.sprite.frameName = "chest-" + this.type + "-2");
		var i = e.getQuestState();
		if (Util.isDefined(i) && Util.isDefined(i.req))
			for (var a = 0; a < this.reward.length; a++) {
				var s = this.reward[a];
				i.req.type === s.type && i.req.ID === s.ID && i.req.N > this.game.prodigy.player.backpack.hasItem(i.req.type, i.req.ID) && this.highlight(!0, -80, -90)
			}
	},
	clicked: function() {
		var e = function(e) {
			Util.isDefined(e) && this.user.setPath(e, this.collect.bind(this))
		}.bind(this);
		this.path.findPath(this.user.x, this.user.y, this.x - 20, this.y + 20, e)
	},
	collect: function() {
		if (this.user.evtProc || !(Phaser.Math.distance(this.user.x, this.user.y, this.x, this.y) > 50)) {
			if ("C" === this.type && !this.game.prodigy.player.isMember) {
				var e = Util.getOptionalParameter(this.game.prodigy.world.getCurrentMap(), ""),
					t = {
						conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_OPEN_MEMBER_CHEST_WORLD,
						conversionFunnelMetadata: e
					};
				return this.game.prodigy.network.sendConversionFunnelEvent(t.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_OPEN_CHEST, t.conversionFunnelMetadata), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MEMBER_CHESTS, null, t), void 0
			}
			if (Util.isDefined(this.key) && !this.game.prodigy.player.backpack.hasItem(this.key.type, this.key.ID)) return this.game.prodigy.open.message("This chest is locked!\n\nYou need a [icon-" + this.key.type + "-" + this.key.ID + "] to open it!"), void 0;
			this.game.prodigy.player.saveEnabled = !1, this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.sprite.inputEnabled = !1, this.user.evtProc = !0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "whoosh");
			var i = this.game.add.tween(this.sprite).to({
				x: "-5"
			}, 50, Phaser.Easing.Linear.None).to({
				x: "+10"
			}, 150, Phaser.Easing.Linear.None).to({
				x: "-10"
			}, 150, Phaser.Easing.Linear.None).to({
				x: "+5"
			}, 50, Phaser.Easing.Linear.None).to({
				y: "-50"
			}, 200, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 200, Phaser.Easing.Quadratic.In).to({
				y: "-20"
			}, 100, Phaser.Easing.Quadratic.Out).to({
				y: "+20"
			}, 100, Phaser.Easing.Quadratic.In).start();
			i.onComplete.add(this.openChest, this, 1)
		}
	},
	openChest: function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "item"), this.sprite.frameName = "chest-" + this.type + "-2", this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.open.gotItem(this.reward, this.clearState.bind(this), null, "open-chest")
	},
	clearState: function() {
		this.zone.setState(this.chestID, 1), Util.isDefined(this.key) && this.game.prodigy.player.backpack.consume(this.key.type, this.key.ID, 1), this.user.evtProc = !1, this.game.prodigy.player.saveEnabled = !0, this.callback()
	}
});
var CollectEvent = function() {
		function e(e, t, i, a, s, r, n, o, h) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.user = s, this.path = r, this.ID = n, this.callback = h, this.collected = !1, this.data = o || {}, this.data.range = o.range || 30;
			var l = Util.getOptionalParameter(o.showLoading, !0),
				d = this.add(this.game.prodigy.icon.createFromData(o, 0, 0, null, null, null, null, l));
			d.inputEnabled = !0, d.events.onInputDown.add(this.clicked.bind(this), this), d.x -= Math.floor(d.width / 2), d.y = -d.height
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function(e) {
			this.allowCollect = !1, this.visible = !1, this.highlight(!1);
			var t = e.getQuestState();
			Util.isDefined(t) && Util.isDefined(t.req) && (this.questState = t.state, 1 === t.state[this.ID] || "item" !== t.req.type && "key" !== t.req.type || t.req.ID != this.data.ID || this.collected || (this.visible = !0, t.req.N > this.game.prodigy.player.backpack.hasItem(t.req.type, t.req.ID) && (this.allowCollect = !0, this.highlight(!0, -80, -90))))
		}, e.prototype.clicked = function() {
			{
				var e = function(e) {
					Util.isDefined(e) && this.user.setPath(e, this.collect.bind(this))
				};
				this.path.findPath(this.user.x, this.user.y, this.x, this.y, e.bind(this))
			}
		}, e.prototype.collect = function() {
			!this.allowCollect || Phaser.Math.distance(this.user.x, this.user.y, this.x, this.y) > this.data.range || (this.collected = !0, this.questState[this.ID] = 1, this.game.prodigy.player.state.updated = !0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), this.game.prodigy.player.backpack.add(this.data.type, this.data.ID), this.callback())
		}, e
	}(),
	MonsterEvent = function() {
		function e(e, t, i, a, s, r, n, o, h, l, d, c, p) {
			this.monsterData = e.prodigy.battle.chooseRandomMonster(o.encounter), Prodigy.Container.MonsterContainer.call(this, e, t, new Monster({
				ID: this.monsterData.ID
			}, e), 1, i, a, null, c), this.unique = h || !1, this.onEnc = l, this.encountered = !1, this.ID = n, this.user = s, this.path = r, this.screen = p, Util.isDefined(o.range) || (o.range = 4e4 * GameConstants.get("GameConstants.Debug.SCALE_ENCOUNTER_DISTANCE")), o.ignorePathfindingForAlert = Util.isNullOrUndefined(o.ignorePathfindingForAlert) ? !1 : o.ignorePathfindingForAlert, o.unique = h, this.mods = o, o.randDir && Math.random() < .5 && this.flip(), this.mods.encounter = [this.monsterData], d && (this.alpha = .5, this.respawnTimer = (new Date).getTime() + 1e4), this.reload(), this.visible = !1
		}
		return e.prototype = Object.create(Prodigy.Container.MonsterContainer.prototype), e.prototype.process = function(e) {
			this.zone = e;
			var t = !1;
			this.highlight(!1), this.visible = !0, Util.isDefined(this.mods.highlight) && this.mods.highlight === !0 && this.highlight(!0, -40, -90);
			var i = e.getQuestState();
			if (Util.isDefined(i) && Util.isDefined(i.req)) {
				this.questState = i, this.unique && 1 === i.state[this.ID] && (this.visible = !1);
				var a = Util.isDefined(i.req.U) && i.req.U;
				if ("pet" === i.req.type && i.req.N > 0 && this.source.getID() === i.req.ID && this.unique === a) t = !0;
				else if ("item" === i.req.type && this.game.prodigy.player.backpack.hasItem("item", i.req.ID) < i.req.N) {
					if (Util.isDefined(this.mods.drops))
						for (var s = 0; s < this.mods.drops.length; s++) {
							var r = this.mods.drops[s];
							"item" === r.type && r.ID === i.req.ID && (t = !0)
						}
					if (Util.isDefined(this.monsterData.drops))
						for (var s = 0; s < this.monsterData.drops.length; s++) {
							var r = this.monsterData.drops[s];
							"item" === r.type && r.ID === i.req.ID && (t = !0)
						}
				}
				t && this.highlight(!0, -40, -90)
			}
		}, e.prototype.update = function() {
			Prodigy.Container.MonsterContainer.prototype.update.call(this), this.respawnTimer < (new Date).getTime() && (delete this.respawnTimer, this.alpha = 1);
			var e = Phaser.Math.distanceSq(this.x, this.y, this.user.x, this.user.y);
			!this.visible || this.respawnTimer || this.started || this.user.evtProc || !(e < this.mods.range) || !this.mods.ignorePathfindingForAlert && this.path.isPathBlocked(this.x, this.y, this.user.x, this.user.y) || this.alert()
		}, e.prototype.alert = function() {
			this.started = !0, this.encountered = !0, this.highlight(!1), this.game.prodigy.audio.pauseBGM(), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "monster"), this.user.evtProc = !0, this.chat(1, 80), this.user.setPath([]), this.user.x = Math.floor(this.user.x), this.user.y = Math.floor(this.user.y), this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.game.prodigy.network.emitMessage({
				action: "move",
				data: {
					userID: this.game.prodigy.player.userID,
					path: [{
						x: this.user.x,
						y: this.user.y
					}]
				}
			}), this.hop(300, this.engage.bind(this))
		}, e.prototype.engage = function() {
			this.setPath([{
				x: this.user.x,
				y: this.user.y
			}], this.startBattle.bind(this))
		}, e.prototype.startBattle = function() {
			var e = function(e, t, i, a, s, r, n, o) {
				r && (t.defeatMonster(a, s, n), Util.isDefined(o) && o()), r ? e.prodigy.world.teleport(i, this.x, this.y) : e.prodigy.world.teleport(i)
			};
			if (this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, GameConstants.get("GameConstants.Debug.AUTO_RESOLVE_BATTLES_ENABLED")) {
				this.user.evtProc = !1;
				var t = this.game.prodigy.event.create();
				if (t.explode(this.x - 80, this.y - 80, 160, 160, 1, !1, !0), t.function(this.setVisible.bind(this, !1)), t.reward(Items.getRandomizedDropsFromCreatures(this.mods.drops, this.source, !(Util.isDefined(this.mods) && this.mods.dropsDisabled))), t.function(this.zone.defeatMonster.bind(this.zone, this.source.getID(), this.ID, this.unique)), Util.isDefined(this.onEnc) && t.function(this.onEnc), Util.isDefined(this.screen)) {
					var i = this.screen.events.indexOf(this);
					i > -1 && this.screen.events.splice(i, 1), t.function(this.screen.process.bind(this.screen))
				}
				t.function(this.destroy.bind(this)), t.start()
			} else this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !1, this.unique, this.onEnc), e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !0, this.unique, this.onEnc), null, this.mods.onFaint)
		}, e.prototype.setVisible = function(e) {
			this.visible = e
		}, e.prototype.getVisible = function() {
			return this.visible
		}, e.prototype.patrol = function(e) {
			this.encountered === !1 && this.setPath(e, this.patrol.bind(this, e))
		}, e
	}(),
	WizardEvent = function() {
		function e(e, t, i, a, s, r, n, o) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {}, null, i, a), this.ID = n, this.user = s, this.path = r, Util.isDefined(o.range) || (o.range = 4e4 * GameConstants.get("GameConstants.Debug.SCALE_ENCOUNTER_DISTANCE")), this.mods = o;
			var h = new Player(this.game),
				l = this.game.prodigy.player.getLevel();
			this.mods.opponent = this.mods.opponent || [{
				data: {
					level: Prodigy.Random.integerInRange(Math.max(1, l - 2), Math.min(l + 2, 100))
				},
				appearance: h.appearance.data,
				equipment: h.equipment.data
			}];
			for (var d = [], c = Math.min(4, this.game.prodigy.player.kennel.getTeam().length - 2 + 3 * Math.random()), p = 0; c > p; p++) {
				var g = {
					level: Prodigy.Random.integerInRange(Math.max(1, l - 2), Math.min(l + 2, 100))
				};
				g.ID = Items.getRandomItem("pet").ID, d.push(g)
			}
			this.mods.pets = this.mods.pets || d, this.mods.catch = !1, this.mods.run = !1, this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-wizard")), this.sprite.animations.add("walk", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.sprite.animations.add("stand", ["npc_8", "npc_9", "npc_10", "npc_11", "npc_12", "npc_13", "npc_14", "npc_15"], 10, !0, !1), this.sprite.animations.play("stand"), this.sprite.anchor.setTo(.5, 1), this.visible = !1
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.process = function(e) {
			this.zone = e;
			var t = e.getState(this.ID);
			this.visible = !(Util.isDefined(t) && 0 !== t)
		}, e.prototype.update = function() {
			Prodigy.Container.CreatureContainer.prototype.update.call(this), this.visible && !this.started && !this.user.evtProc && Phaser.Math.distanceSq(this.x, this.y, this.user.x, this.user.y) < this.mods.range && !this.path.isPathBlocked(this.x, this.y, this.user.x, this.user.y) && this.alert()
		}, e.prototype.alert = function() {
			this.started = !0, this.highlight(!1), this.game.prodigy.audio.pauseBGM(), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "monster"), this.user.evtProc = !0, this.chat(1, 80), this.user.setPath([]), this.user.x = Math.floor(this.user.x), this.user.y = Math.floor(this.user.y), this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.hop(300, this.engage.bind(this))
		}, e.prototype.engage = function() {
			this.setPath([{
				x: this.user.x,
				y: this.user.y
			}], this.startBattle.bind(this))
		}, e.prototype.startBattle = function() {
			var e = function(e, t, i, a) {
				e.prodigy.world.teleport(i, this.x, this.y), t && a.setState(this.ID, 1)
			};
			this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.mods.scale = !0, this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, !1, this.mods.onEnd, this.zone), e.bind(this, this.game, !0, this.mods.onEnd, this.zone), null, this.mods.onFaint)
		}, e
	}(),
	GnomeEvent = function() {
		function e(e, t, i, a, s, r, n, o, h, l) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {
				name: n,
				npc: !0,
				nameY: 5 === h ? -135 : null
			}, null, s, r), this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-gnome", "npc_0")), this.sprite.x -= Math.floor(this.sprite.width / 2), this.sprite.y = -this.sprite.height, this.animWalk = this.sprite.animations.add("walk", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.animStand = this.sprite.animations.add("stand", ["npc_8", "npc_9", "npc_10", "npc_11", "npc_12", "npc_13", "npc_14", "npc_15"], 10, !0, !1), this.head = this.game.prodigy.create.element(this.sprites, this.sprite.x, 0);
			var d = 13 - (2 === h || 3 === h || 4 === h ? 5 : 5 === h ? 20 : 6 === h ? 22 : 0),
				h = this.head.add(this.game.prodigy.create.sprite(d, 0, "npc-sprite-gnome", "hat_" + (h || 1)));
			h.y = -h.height + 10;
			var o = this.head.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-gnome", "head_" + (o || 1)));
			this.offs = {
				npc_0: 0,
				npc_1: 0,
				npc_2: 2,
				npc_3: 1,
				npc_4: 0,
				npc_5: 0,
				npc_6: 2,
				npc_7: 1,
				npc_8: 0,
				npc_9: 0,
				npc_10: 1,
				npc_11: 2,
				npc_12: 4,
				npc_13: 5,
				npc_14: 4,
				npc_15: 3
			}, Util.isDefined(l) && (o.inputEnabled = !0, o.events.onInputDown.add(this.clicked.bind(this, i, a, l)), h.inputEnabled = !0, h.events.onInputDown.add(this.clicked.bind(this, i, a, l)), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked.bind(this, i, a, l))), this.stand(), this.showName(!0), this.nameOffsetX = -5, this.repositionName()
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.clicked = function(e, t, i) {
			var a = function(e, t) {
				Util.isDefined(t) && e.setPath(t, this.encounter.bind(this, i))
			};
			t.findPath(e.x, e.y, this.x - 20, this.y + 20, a.bind(this, e))
		}, e.prototype.setIndicator = function(e) {
			Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(0, -70, "icons", e), this.indicator.anchor.setTo(.5, 1), this.indicatorE.add(this.indicator), this.game.add.tween(this.indicator).to({
				y: this.indicator.y - 50
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0)), this.indicator.frameName = e
		}, e.prototype.repositionName = function() {
			this.name.x = Math.round(-(.5 * this.name.width) + (this.sprites.scale.x < 0 ? -1 : 1) * this.nameOffsetX)
		}, e.prototype.flip = function() {
			Prodigy.Container.CreatureContainer.prototype.flip.call(this), this.repositionName()
		}, e.prototype.encounter = function(e) {
			Util.isDefined(e) && e()
		}, e.prototype.update = function() {
			if (Prodigy.Container.CreatureContainer.prototype.update.call(this), Util.isDefined(this.animWalk) && Util.isDefined(this.animStand)) {
				var e = "npc_0";
				1 === this.mode ? e = this.animStand.currentFrame.name : 0 === this.mode && (e = this.animWalk.currentFrame.name), Util.isDefined(this.head) && (this.head.y = this.sprite.y - 15 + this.offs[e])
			}
		}, e
	}(),
	NPCEvent = function() {
		function e(e, t, i, a, s, r, n) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {
				name: n,
				npc: !0
			}, null, i, a), this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, s, 0)), this.sprite.anchor.setTo(.5, 1), s.indexOf("monster") > -1 ? (this.sprite.animations.add("walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !1), this.sprite.animations.add("stand", [8, 9, 10, 11, 12, 13, 14, 15], 10, !0, !1)) : this.sprite.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), Util.isDefined(r) && (this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(r)), Util.isDefined(n) && this.showName(!0), ("npc-sprite-slurpy" === s || "npc-sprite-slime_guard" === s) && (this.name.y += 40)
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.animate = function(e) {
			this.sprite.animations.play(e || "stand")
		}, e.prototype.stand = function() {
			this.animate("stand"), this.mode = 1
		}, e.prototype.walk = function() {
			this.animate("walk"), this.mode = 0
		}, e
	}();
Prodigy.Event.HealStone = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, s, r), this.user = i, this.path = a, this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, "tileset-core")), this.sprite.animations.add("stand", ["heal_0", "heal_1", "heal_2", "heal_3", "heal_4", "heal_5", "heal_6", "heal_7"], 10, !0, !1);
	var n = this.sprite.animations.add("heal", ["heal_8", "heal_9", "heal_10", "heal_11", "heal_12", "heal_13", "heal_14", "heal_15"], 10);
	this.sprite.animations.play("stand"), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.interact.bind(this)), this.sprite.anchor.setTo(.5, 1), n.onComplete.add(this.sprite.animations.play.bind(this.sprite.animations, "stand"))
}, Prodigy.extends(Prodigy.Event.HealStone, Prodigy.Control.Element, {
	interact: function() {
		var e = this.game.prodigy.event.create();
		e.validPath(this.user, this.path, this.x, this.y + 1), e.yesNoText(38, "noot"), e.function(this.startHeal.bind(this)), e.start()
	},
	startHeal: function() {
		this.bmgVolume = this.game.prodigy.audio.getBGMVolume(), this.bmgVolume > .1 && this.game.prodigy.audio.setBGMVolume(.1, !0), GameConstants.get("GameConstants.Debug.EDUCATION_ENABLED") ? this.game.prodigy.education.question(this.heal.bind(this), this.game.prodigy.education.isNew) : this.heal(GameConstants.get("GameConstants.Debug.AUTO_ANSWER_CORRECTLY"))
	},
	heal: function(e) {
		Util.isDefined(this.bmgVolume) && this.game.prodigy.audio.setBGMVolume(this.bmgVolume, !0);
		var t = this.game.prodigy.event.create();
		e ? (this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED), t.text(40, "noot"), t.function(this.sprite.animations.play.bind(this.sprite.animations, "heal")), t.function(this.game.prodigy.player.heal.bind(this.game.prodigy.player)), t.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), t.delay(200), t.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), t.delay(200), t.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart")) : t.text(39, "noot"), t.start(), this.game.prodigy.network.updateUserAbility(this.game.prodigy.education.getUpdatedData())
	}
}), Prodigy.QuestEvent = function(e, t, i, a, s, r, n, o, h, l) {
	this.npcTag = n, Prodigy.Control.Element.call(this, e, t, s, r), this.screen = i, this.onComplete = l, this.updateCallback = h
}, Prodigy.extends(Prodigy.QuestEvent, Prodigy.Control.Element, {
	constructor: Prodigy.QuestEvent,
	setup: function(e, t, i) {
		this.npc = this.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-" + t, 0)), this.npc.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.npc.animations.play("stand"), this.npc.inputEnabled = !0, this.npc.anchor.setTo(.5, 1), this.npc.events.onInputDown.add(this.process.bind(this, e, null, !0), this), i && (this.npc.scale.x = -1), this.game.prodigy.create.nameFont(this, 0, 0 - this.npc.height - 20, t.charAt(0).toUpperCase() + t.slice(1))
	},
	process: function(e, t, i) {
		if (!Util.isDefined(e.getQuestState())) {
			e.startQuest(1);
			var a = this.queueEventText(e, "onStart", 1);
			return a.function(this.updateCallback), a.start(), void 0
		}
		var s = e.getQuestState().ID,
			r = e.getQuest(s);
		if (e.isQuestComplete(s) && !r.chain) {
			var a = this.queueEventText(e, "onComplete", s);
			a.enableSave(!1), Util.isDefined(r.reward) && a.reward(r.reward, "quest-event-reward"), a.function(e.completeQuest.bind(e, s)), a.enableSave(!0), a.function(this.updateCallback), a.start()
		} else if (!e.isQuestStarted(s) && Util.isDefined(r)) {
			var a = this.queueEventText(e, "onStart", s);
			a.function(e.startQuest.bind(e, s)), a.function(this.updateCallback), a.start()
		} else i && Util.isDefined(r) ? this.queueEventText(e, "onStart", s).start() : i && this.onComplete()
	},
	queueEventText: function(e, t, i) {
		var a = e.getQuest(i),
			s = this.game.prodigy.event.create();
		if (Util.isDefined(a[t]))
			for (var r = 0; r < a[t].length; r++) s.text(a[t][r], this.npcTag);
		return s
	}
});
var QuestProgress = function() {
	function e(e, t, i) {
		Prodigy.Control.Element.call(this, e, t, 440, 5), this.user = i, this.banner = this.game.prodigy.create.panel(this, 0, 0, 10, 2, "banner"), this.banner.visible = !1, this.icon = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest")), this.state = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest")), this.icon.visible = !1, this.state.visible = !1, this.arrow = this.add(this.game.prodigy.create.sprite(175, 0, "icons", "up")), this.arrow.visible = !1, this.updateFrame = 0
	}
	return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function(e, t) {
		this.visible = !1;
		var i = null;
		if (Util.isDefined(this.text) && (i = this.text.text, this.text.destroy()), this.state.frameName = "quest", this.icon.loadNewTexture("icons", "quest"), this.state.visible = this.icon.visible = !0, Util.isDefined(e.getState("dailyQuest"))) {
			if (e.util.hasDailyQuestExpired() || e.util.isDailyQuestComplete() && e.getState("handedOverQuest")) return;
			var a = e.util.getDailyQuestDescription(e.util.generateQuestId());
			if (e.util.isDailyQuestComplete()) this.icon.destroy(), this.icon = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest-complete")), this.icon.x = 350 - this.icon.width, this.state.frameName = "quest-complete", this.text = this.game.prodigy.create.font(this, 98, 24, "Job Complete!", {
				align: "center",
				width: 204,
				size: 20
			});
			else if ("pet" === a.type) {
				this.icon.destroy();
				var s = function(e) {
					e.x = 350 - e.width, e.onTextureLoaded = null
				};
				this.icon = this.add(this.game.prodigy.icon.createFromData(a, 300, 5, !1, s.bind(this))), this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Defeat " + a.N + " more", {
					size: 20
				})
			}
			this.banner.visible = !0, this.visible = !0
		}
		var r = e.getQuestState();
		if (Util.isDefined(r) && Util.isDefined(r.req)) {
			var n = e.getQuest(r.ID);
			if (Util.isDefined(n)) {
				if (e.isQuestComplete(r.ID)) {
					if (this.icon.destroy(), this.icon = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest-complete")), this.state.frameName = "quest-complete", this.text = this.game.prodigy.create.font(this, 98, 24, "Job Complete!", {
							align: "center",
							width: 204,
							size: 20
						}), !n.chain && !e.isQuestProc(r.ID) && !t.isQuestHub) {
						e.procQuest(r.ID);
						var o = this.game.prodigy.event.create();
						if (o.set(this.user, "evtProc", !0), Util.isDefined(n.onProc) && n.onProc.length > 0)
							for (var h = 0; h < n.onProc.length; h++) n.onProc[h] >= 0 && o.text(n.onProc[h], "noot");
						else o.text(41, "noot");
						o.set(this.user, "evtProc", !1), o.start()
					}
				} else if (Util.isDefined(n.area) && !Util.inArray(n.area, this.game.prodigy.player.data.zone)) this.text = this.game.prodigy.create.font(this, 98, 24, "Follow Path", {
					align: "center",
					width: 204,
					size: 20
				});
				else {
					var a = r.req;
					if (n.desc) this.text = this.game.prodigy.create.font(this, 98, 24, n.desc, {
						align: "center",
						width: 204,
						size: 20
					});
					else if (Util.inArray(["item", "weapon", "hat", "outfit", "boots", "key"], a.type)) {
						this.remove(this.icon);
						var l = function(e) {
							this.icon.x = 350 - e.width
						};
						this.icon = this.add(this.game.prodigy.icon.createFromData(a, 50, 5, !1, l.bind(this))), this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Collect " + Math.max(0, a.N - this.game.prodigy.player.backpack.hasItem(a.type, a.ID)) + " more", {
							size: 20
						})
					} else if ("pet" === a.type) {
						this.remove(this.icon);
						var l = function(e) {
							this.icon.x = 350 - e.width
						};
						this.icon = this.add(this.game.prodigy.icon.createFromData(a, 50, 5, !1, l.bind(this))), this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Defeat " + a.N + " more", {
							size: 20
						})
					} else "clear" === a.type && (this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Clear the " + a.T, {
						size: 20
					}))
				}
				if (this.banner.visible = !0, this.icon.x = 350 - this.icon.width, Util.isDefined(this.text) && i !== this.text.text && Util.isDefined(i)) {
					this.arrow.visible = !0, this.arrow.y = 50, this.arrow.alpha = 1;
					var d = this.game.add.tween(this.arrow).to({
						y: 30,
						alpha: 0
					}, 1e3, Phaser.Easing.Linear.None).start();
					d.onComplete.add(function() {
						this.arrow.visible = !1
					}, this)
				}
				this.visible = !0
			}
		}
	}, e
}();
Prodigy.ClickableEvent = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var l = this.add(new Phaser.Image(e, 0, 0, "core", "overlay-light"));
	l.width = s, l.height = r, l.inputEnabled = !0, l.alpha = h || 0, this.onProcess = o, this.onClick = n, l.events.onInputDown.add(this.clicked.bind(this))
}, Prodigy.extends(Prodigy.ClickableEvent, Prodigy.Control.Element, {
	constructor: Prodigy.ClickableEvent,
	process: function(e, t) {
		Util.isDefined(this.onProcess) && this.onProcess(e, t)
	},
	clicked: function() {
		Util.isNullOrUndefined(this.onClick) || this.onClick(this)
	}
}), Prodigy.ClickableMoveEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.ClickableEvent.call(this, e, t, i, a, s, r, o, h, l), n = Util.getOptionalParameter(n, {}), this.moveToX = Util.getOptionalParameter(n.moveToX, i), this.moveToY = Util.getOptionalParameter(n.moveToY, a), this.addPathingIconFunction = Util.getOptionalParameter(n.addPathingIconFunction, null)
}, Prodigy.extends(Prodigy.ClickableMoveEvent, Prodigy.ClickableEvent, {
	constructor: Prodigy.ClickableMoveEvent,
	clicked: function(e, t) {
		Prodigy.ClickableEvent.prototype.clicked.call(this), this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.MOVE_PLAYER, null, [this.moveToX, this.moveToY]) && (Util.isNullOrUndefined(this.addPathingIconFunction) ? Util.log("Prodigy.ClickableMoveEvent.clicked - pathing was successful, but parent does not have addPathingIcon function.  No pathing star shown.", Util.ERROR) : this.addPathingIconFunction(t.x, t.y))
	}
});
var BountyEvent = function() {
	function e(e, t, i, a, s, r, n, o, h, l, d) {
		this.monsterData = e.prodigy.battle.chooseRandomMonster(o.encounter), MonsterEvent.call(this, e, t, i, a, s, r, n, o, h, l, d)
	}
	return e.prototype = Object.create(MonsterEvent.prototype), e.prototype.startBattle = function() {
		var e = function(e, t, i, a, s, r, n, o) {
			if (r && (t.defeatMonster(a, s, n), Util.isDefined(o) && o(), e.prodigy.bounty.completeBounty(this.mods.bounty)), r)
				if (0 === e.prodigy.player.getBountyScore()) {
					var h = e.prodigy.event.create();
					h.text(94, "noot"), h.function(e.prodigy.world.teleport.bind(e.prodigy.world, i, this.x, this.y)), h.start()
				} else e.prodigy.world.teleport(i, this.x, this.y);
			else e.prodigy.world.teleport(i)
		};
		this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !1, this.unique, this.onEnc), e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !0, this.unique, this.onEnc), null, this.mods.onFaint)
	}, e
}();
Prodigy.FireflyEvent = function(e, t, i, a, s, r, n, o, h) {
	Prodigy.ClickableEvent.call(this, e, t, i, a, s, r, n, o, h), this.game = e, this.sprite = this.add(e.prodigy.create.sprite(50, 90, "zone-forest", "firefly_1", 1)), this.float(!0), this.animate(), this.moving = 0, this.dir = 1, this.delay()
}, Prodigy.extends(Prodigy.FireflyEvent, Prodigy.ClickableEvent, {
	constructor: Prodigy.FireflyEvent,
	move: function() {
		if (Util.isDefined(this.game)) {
			this.moving = 1;
			var e = 1080 * Math.random() + 100,
				t = 520 * Math.random() + 100;
			e < this.x && 1 === this.dir ? (this.sprite.scale.x *= -1, this.dir = -1) : e > this.x && -1 === this.dir && (this.sprite.scale.x *= -1, this.dir = 1);
			var i = this.game.add.tween(this).to({
				x: e,
				y: t
			}, 2500, Phaser.Easing.Quadratic.InOut);
			i.start(), i.onComplete.add(this.delay, this)
		}
	},
	"float": function(e) {
		Util.isDefined(this.floatTween) ? this.floatTween.stop() : (this.sprite.oldY = this.sprite.y, this.sprite.y = this.sprite.y - 10, this.floatTween = this.game.add.tween(this.sprite).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "20"
		}, 1400, Phaser.Easing.Quadratic.InOut).loop()), e ? this.floatTween.start() : (this.floatTween.stop(), this.sprite.y = this.sprite.oldY)
	},
	delay: function() {
		if (Util.isDefined(this.game)) {
			this.moving = 0;
			var e = this.game.prodigy.event.create();
			e.delay(3e3 * Math.random() + 2e3), e.function(this.move.bind(this)), e.start()
		}
	},
	animate: function() {
		this.sprite.animations.add("fly", ["firefly_1", "firefly_2", "firefly_3"], 10, !0, !1), this.sprite.animations.play("fly")
	}
}), Prodigy.Event.MimicEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.ID = n, this.user = s, this.type = o, this.mods = h, this.zoneName = l, this.sprite = this.add(this.game.prodigy.create.animatedSprite(0, 0, "tileset-core", ["chest-" + this.type + "-1", "chest-" + this.type + "-2"])), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked.bind(this), this), this.sprite.x -= Math.floor(.5 * this.sprite.width), this.sprite.y = -this.sprite.height, this.path = r
}, Prodigy.extends(Prodigy.Event.MimicEvent, Prodigy.Control.Element, {
	constructor: Prodigy.Event.MimicEvent,
	process: function(e) {
		this.zone = e, this.highlight(!1);
		var t = e.getState(this.ID);
		Util.isDefined(t) && 0 !== t && (this.sprite.inputEnabled = !1, this.sprite.frameName = "chest-" + this.type + "-2")
	},
	clicked: function() {
		var e = function(e) {
			Util.isDefined(e) && this.user.setPath(e, this.collect.bind(this))
		}.bind(this);
		this.path.findPath(this.user.x, this.user.y, this.x - 20, this.y + 20, e)
	},
	collect: function() {
		!this.user.evtProc && Phaser.Math.distance(this.user.x, this.user.y, this.x, this.y) > 50 || (this.game.prodigy.player.saveEnabled = !1, this.game.inputEnabled = !1, this.sprite.inputEnabled = !1, this.user.evtProc = !0, this.openChest())
	},
	openChest: function() {
		var e = this.game.prodigy.event.create();
		e.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), e.function(this.user.chat.bind(this.user, 1)), e.delay(1e3), e.enableInput(!0), e.function(this.game.prodigy.battle.start.bind(this.game.prodigy.battle, this.mods, this.game.prodigy.world.teleport.bind(this.game.prodigy.world, this.zoneName, this.x - 20, this.y + 20), this.game.prodigy.world.teleport.bind(this.game.prodigy.world, this.zoneName, this.x - 20, this.y + 20, null, {
			callback: this.zone.setState.bind(this.zone, this.ID, 1)
		}), null, this.zone.onFaint)), e.start()
	}
}), Prodigy.AdvancedQuestEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.QuestEvent.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(Prodigy.AdvancedQuestEvent, Prodigy.QuestEvent, {
	constructor: Prodigy.AdvancedQuestEvent,
	process: function(e, t, i) {
		var a;
		if (!Util.isDefined(e.getQuestState())) return e.getQuest(1).questGiver === this.npcTag && (e.startQuest(1), a = this.queueEventText(e, "onStart", 1), a.function(this.updateCallback), a.start()), void 0;
		var s = e.getQuestState().ID,
			r = e.getQuest(s),
			n = Util.isDefined(r) && Util.isDefined(r.questGiver) ? r.questGiver : this.npcTag,
			o = Util.isDefined(r) && Util.isDefined(r.questReceiver) ? r.questReceiver : this.npcTag;
		e.isQuestComplete(s) && !r.chain ? o === this.npcTag ? (a = this.queueEventText(e, "onComplete", s), a.enableSave(!1), Util.isDefined(r.reward) && a.reward(r.reward, "advanced-quest-event-reward"), a.function(e.completeQuest.bind(e, s)), a.enableSave(!0), a.function(this.updateCallback), a.start()) : n === this.npcTag && (a = this.queueEventText(e, "onStart", s), a.function(this.updateCallback), a.start()) : !e.isQuestStarted(s) && Util.isDefined(r) && n === this.npcTag ? (a = this.queueEventText(e, "onStart", s), a.function(e.startQuest.bind(e, s)), a.function(this.updateCallback), a.start()) : i && Util.isDefined(r) ? this.queueEventText(e, n === this.npcTag ? "onStart" : "alternateOnStart", s).start() : i && this.onComplete()
	}
}), Prodigy.FloraEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.QuestEvent.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(Prodigy.FloraEvent, Prodigy.QuestEvent, {
	constructor: Prodigy.FloraEvent,
	setup: function(e, t, i) {
		this.npc = this.add(this.game.prodigy.create.element(this, 0, 0)), this.game.prodigy.create.nameFont(this, 10, -110, "Flora"), this.y += 90, this.x -= 50, this._particles = [];
		for (var a = 0; 4 > a; a++) this._particles.push(this.npc.add(this.game.prodigy.create.sprite(-35, -84, "npc-sprite-flora", "particle-1")));
		this._head = this.npc.add(this.game.prodigy.create.sprite(-35, -84, "npc-sprite-flora", "head-1")), this._backWing = this.npc.add(this.game.prodigy.create.sprite(-6, -39, "npc-sprite-flora", "back-wing-1")), this._frontWing = this.npc.add(this.game.prodigy.create.sprite(-12, -22, "npc-sprite-flora", "front-wing-1")), this._body = this.npc.add(this.game.prodigy.create.sprite(-19, -35, "npc-sprite-flora", "body")), this._body.inputEnabled = !0, this._body.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this._head.inputEnabled = !0, this._head.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this._backWing.inputEnabled = !0, this._backWing.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this._frontWing.inputEnabled = !0, this._frontWing.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this._particlesTween = [];
		for (var s = 0; s < this._particles.length; s++) this._particlesTween.push(new Prodigy.TweenController(this.game, this._particles[s])), this._particlesTween[s].set("frameName", ["particle-1", "particle-2"], 200, 9999), this._particlesTween[s].end(this.randomizePos.bind(this, this._particles[s])), this._particlesTween[s].start();
		i && (this.npc.scale.x = -1);
		var r = {
				x: -35,
				y: -84
			},
			n = {
				x: -36,
				y: -84
			},
			o = {
				x: -19,
				y: -35
			},
			h = {
				x: -6,
				y: -39
			},
			l = {
				x: -6,
				y: -39
			},
			d = {
				x: -6,
				y: -35
			},
			c = {
				x: -7,
				y: -25
			},
			p = {
				x: -28,
				y: -27
			},
			g = {
				x: -26,
				y: -28
			},
			u = {
				x: -12,
				y: -22
			},
			y = {
				x: -9,
				y: -29
			},
			m = {
				x: -6,
				y: -31
			};
		this._tween = [], this._tween.push(new Prodigy.TweenController(this.game, this._head)), this._tween[0].set("frameName", ["head-1", "head-1", "head-1", "head-1", "head-1", "head-2", "head-2", "head-1"], 150, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._head)), this._tween[1].set("x", [r.x], 150, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._head)), this._tween[2].set("y", [r.y, r.y + 1, r.y + 2, r.y + 2, r.y - 1, n.y - 2, n.y - 2, r.y - 1], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._body)), this._tween[3].set("x", [o.x], 150, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._body)), this._tween[4].set("y", [o.y, o.y + 1, o.y + 2, o.y + 2, o.y, o.y - 1, o.y - 1, o.y], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._backWing)), this._tween[5].set("frameName", ["back-wing-1", "back-wing-2", "back-wing-2", "back-wing-1", "back-wing-3", "back-wing-4", "back-wing-5", "back-wing-6"], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._backWing)), this._tween[6].set("x", [h.x, l.x, l.x, h.x, d.x, c.x, p.x, g.x], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._backWing)), this._tween[7].set("y", [h.y, l.y, l.y + 1, h.y + 2, d.y, c.y, p.y, g.y], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._frontWing)), this._tween[8].set("frameName", ["fake-pixel", "fake-pixel", "fake-pixel", "fake-pixel", "fake-pixel", "fake-pixel", "front-wing-1", "front-wing-2"], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._frontWing)), this._tween[9].set("x", [u.x, u.x, u.x, u.x, u.x, u.x, y.x, m.x], 100, 9999), this._tween.push(new Prodigy.TweenController(this.game, this._frontWing)), this._tween[10].set("y", [u.y, u.y + 1, u.y + 2, u.y + 2, u.y, u.y - 1, y.y, m.y], 100, 9999);
		for (var a = 0; a < this._tween.length; a++) this._tween[a].start()
	},
	update: function() {
		for (var e = 0; e < this._tween.length; e++) this._tween[e].update();
		for (var t = 0; t < this._particlesTween.length; t++) this._particlesTween[t].update(), this._particles[t].y += .7
	},
	randomizePos: function(e) {
		e.x = -15 + Math.floor(35 * Math.random()), e.y = -35 + Math.floor(30 * Math.random())
	}
}), Prodigy.BenniEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.QuestEvent.call(this, e, t, i, a, s, r, n, o, h, l)
}, Prodigy.extends(Prodigy.BenniEvent, Prodigy.QuestEvent, {
	constructor: Prodigy.BenniEvent,
	setup: function(e) {
		var t = [];
		this.body = this.add(this.game.prodigy.create.sprite(0, -25, "npc-sprite-benni", "body_0")), this.body.animations.add("stand", ["body_0", "body_1", "body_2"], 5, !0, !1), this.body.animations.play("stand"), t.push(this.body), this.head = this.add(this.game.prodigy.create.sprite(-23, -97, "npc-sprite-benni", "head")), t.push(this.head), this.eyes = this.add(this.game.prodigy.create.sprite(-23, -97, "npc-sprite-benni", "eyes_0")), t.push(this.eyes), this.pupils = this.add(this.game.prodigy.create.sprite(-23, -97, "npc-sprite-benni", "pupils")), t.push(this.pupils), this.pigtails = this.add(this.game.prodigy.create.sprite(-23, -97, "npc-sprite-benni", "pigtails_0")), this.pigtails.animations.add("stand", ["pigtails_0", "pigtails_1", "pigtails_2"], 5, !0, !1), this.pigtails.animations.play("stand"), t.push(this.pigtails), this.game.add.tween(this.head).to({
			y: "+2"
		}, 400, Phaser.Easing.Linear.None).to({
			y: this.head.y
		}, 300, Phaser.Easing.Linear.None).loop().start(), this.game.add.tween(this.pigtails).to({
			y: "+2"
		}, 400, Phaser.Easing.Linear.None).to({
			y: this.head.y
		}, 300, Phaser.Easing.Linear.None).loop().start(), this.game.add.tween(this.eyes).to({
			y: "+2"
		}, 400, Phaser.Easing.Linear.None).to({
			y: this.head.y
		}, 300, Phaser.Easing.Linear.None).loop().start(), this.game.add.tween(this.pupils).to({
			y: "+2"
		}, 400, Phaser.Easing.Linear.None).to({
			y: this.head.y
		}, 300, Phaser.Easing.Linear.None).loop().start();
		for (var i = 0; i < t.length; i++) t[i].inputEnabled = !0, t[i].events.onInputDown.add(this.process.bind(this, e, null, !0), this);
		this.game.prodigy.create.nameFont(this, 20, -117, "Benni")
	}
}), Prodigy.EveEvent = function(e, t, i, a, s, r, n, o, h, l) {
	Prodigy.AdvancedQuestEvent.call(this, e, t, i, a, s, r, n, o, h, l), this.tweens = [], this.idleCounter = 0
}, Prodigy.extends(Prodigy.EveEvent, Prodigy.AdvancedQuestEvent, {
	constructor: Prodigy.EveEvent,
	setup: function(e, t, i) {
		this.npc = this.add(this.game.prodigy.create.element(this, 0, 0));
		var a = "npc-sprite-windsail";
		this.head = this.npc.add(this.game.prodigy.create.sprite(-13, -9, a, "eve-head-1")), this.head.anchor.setTo(.5, 1), this.body = this.npc.add(this.game.prodigy.create.sprite(0, 0, a, "eve-body")), this.body.anchor.setTo(.5, 1), this.face = this.npc.add(this.game.prodigy.create.sprite(-2, -47, a, "eve-face-1")), this.face.anchor.setTo(.5, 1), this.head.inputEnabled = !0, this.head.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this.body.inputEnabled = !0, this.body.events.onInputDown.add(this.process.bind(this, e, null, !0), this), this.face.inputEnabled = !0, this.face.events.onInputDown.add(this.process.bind(this, e, null, !0), this), i && (this.npc.scale.x = -1), this.standTween1 = [], this.standTween1.push(new Prodigy.TweenController(this.game, this.head)), this.standTween1[0].set("y", [this.head.y], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.face)), this.standTween1[1].set("y", [this.face.y], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.head)), this.standTween1[2].set("frameName", ["eve-head-1"], 150, 9999), this.standTween1.push(new Prodigy.TweenController(this.game, this.face)), this.standTween1[3].set("frameName", ["eve-face-1"], 150, 9999), this.standTween1[3].end.call(this.standTween1[3], this.updateIdleCounter.bind(this)), this.standTween2 = [], this.standTween2.push(new Prodigy.TweenController(this.game, this.face)), this.standTween2[0].set("frameName", ["eve-face-1", "eve-face-2", "eve-face-3", "eve-face-3", "eve-face-2", "eve-face-1"], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.head)), this.standTween2[1].set("frameName", ["eve-head-1", "eve-head-2", "eve-head-1", "eve-head-1", "eve-head-1", "eve-head-1"], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.face)), this.standTween2[2].set("y", [this.face.y, this.face.y + 1, this.face.y + 1, this.face.y + 1, this.face.y, this.face.y], 150, 9999), this.standTween2.push(new Prodigy.TweenController(this.game, this.head)), this.standTween2[3].set("y", [this.head.y, this.head.y + 1, this.head.y + 1, this.head.y + 1, this.head.y, this.head.y], 150, 9999), this.standTween2[3].end.call(this.standTween2[3], this.resetToDefaultIdle.bind(this)), this.tweens = this.standTween1, this.name = this.game.prodigy.create.nameFont(this, -7, -160, "Eve"), this.stand()
	},
	process: function(e, t, i) {
		this.game.prodigy.user.faceToward(this.x), this.flip(this.x > this.game.prodigy.user.x), Prodigy.AdvancedQuestEvent.prototype.process.call(this, e, t, i)
	},
	update: function() {
		Prodigy.AdvancedQuestEvent.prototype.update.call(this);
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].start()
	},
	updateIdleCounter: function() {
		this.idleCounter++, this.idleCounter > 10 + 100 * Math.random() && (this.tweens = this.standTween2, this.stand(), this.idleCounter = 0)
	},
	resetToDefaultIdle: function() {
		this.tweens = this.standTween1, this.stand()
	},
	flip: function(e) {
		this.npc.scale.x = e ? -1 : 1
	}
}), Prodigy.JellyJimEvent = function(e, t, i, a, s, r, n) {
	Prodigy.Container.CreatureContainer.call(this, e, t, {
		name: n,
		nameX: -10,
		nameY: -150,
		npc: !0
	}, null, i, a), this.tweens = []
}, Prodigy.extends(Prodigy.JellyJimEvent, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.JellyJimEvent,
	setup: function(e, t) {
		var i = "npc-sprite-jim",
			a = "jelly-idle-";
		this.body = this.add(this.game.prodigy.create.sprite(0, 0, i, a + "1")), this.body.anchor.setTo(.5, 1), this.sprites.add(this.body), t && (this.sprites.scale.x = -1), this.standTween = [], this.standTween.push(new Prodigy.TweenController(this.game, this.body)), this.standTween[0].set("frameName", [a + "1", a + "2", a + "3", a + "4", a + "5", a + "6", a + "7", a + "8"], 150, 9999), this.tweens = this.standTween, this.stand()
	},
	update: function() {
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].update()
	},
	walk: function() {
		this.stand()
	},
	stand: function() {
		for (var e = 0; e < this.tweens.length; e++) this.tweens[e].start()
	},
	flip: function(e) {
		this.sprites.scale.x = e ? -1 : 1
	}
});
var Boot = function() {
	function e() {
		Phaser.State.call(this)
	}
	return e.prototype = Object.create(Phaser.State.prototype), e.prototype.preload = function() {
		this.game.prodigy.load.assets(["font-user-name", "font-general", "font-button", "font-black", "font-battle", "font-shadow", "font-microtransactions", "micro-cube", "core", "heads", "game-data", "store-data", "ui-shared", "ui-titan", "ui-shipwreck-progress", "ui-forest-progress", "ui-bonfire-progress", "ui-shiverchill-progress", "ui-skywatch-progress"], this.loaded.bind(this))
	}, e.prototype.loaded = function(e, t) {
		this.isLoaded = t, this.game.prodigy.localization.setFallbackLanguage(Prodigy.Framework.Localization.LocaleController.DATA), this.game.prodigy.localization.setLanguage(Prodigy.Framework.Localization.LocaleController.DATA);
		var i = this.game.cache.getJSON("game-data");
		i.particleEffect = [{
			ID: 1,
			type: "particleEffect",
			data: {
				particle: {
					image: "font-general",
					frame: "42-16",
					lifespan: 8e3,
					vy: {
						min: 2,
						max: 2
					},
					vx: {
						min: .5,
						max: 1
					},
					rotation: {
						value: 0,
						delta: {
							min: -2,
							max: 2
						}
					}
				},
				emitter: {
					repeat: -1,
					frequency: 50
				}
			},
			metadata: {}
		}, {
			ID: 2,
			type: "particleEffect",
			data: {
				particle: {
					image: "font-general",
					frame: "42-30",
					lifespan: 5e3,
					vy: {
						min: 3,
						max: 3
					},
					vx: {
						min: .25,
						max: .75
					},
					rotation: {
						value: 0,
						delta: {
							min: -3,
							max: 3
						}
					}
				},
				emitter: {
					repeat: -1,
					frequency: 150
				}
			},
			metadata: {}
		}, {
			ID: 3,
			type: "particleEffect",
			data: {
				particle: {
					image: "particles",
					frame: "tiny-bubble",
					lifespan: {
						min: 800,
						max: 1200
					},
					vx: {
						min: -.1,
						max: .1
					},
					vy: {
						min: -.8,
						max: -.1
					},
					scale: {
						value: {
							min: .3,
							max: .6
						},
						control: [{
							x: 0,
							y: 1
						}, {
							x: .3,
							y: 1
						}, {
							x: 1,
							y: 2
						}]
					}
				},
				emitter: {
					repeat: -1,
					frequency: {
						min: 350,
						max: 7500
					}
				}
			},
			metadata: {}
		}, {
			ID: 4,
			type: "particleEffect",
			data: {
				particle: {
					image: "particles",
					frame: "ink",
					lifespan: 1500,
					vy: {
						min: -.8,
						max: -.1
					},
					vx: {
						min: -.3,
						max: .3
					},
					scale: {
						value: 1,
						control: [{
							x: 0,
							y: .5
						}, {
							x: 1,
							y: 1
						}]
					},
					alpha: {
						value: 1,
						control: [{
							x: 0,
							y: 1
						}, {
							x: .4,
							y: 1
						}, {
							x: 1,
							y: 0
						}]
					},
					rotation: {
						initial: {
							min: 0,
							max: 360
						},
						delta: {
							min: .5,
							max: 2
						}
					}
				},
				emitter: {
					repeat: 8,
					frequency: {
						min: 20,
						max: 50
					},
					burstFrequency: {
						min: 5e3,
						max: 1e4
					}
				}
			},
			metadata: {}
		}];
		for (var a = 0; a < i.follow.length; ++a) 130 === i.follow[a].ID ? i.follow[a].data.particleEffects = [{
			ID: 3,
			x: 4,
			y: -15
		}] : 131 === i.follow[a].ID && (i.follow[a].data.particleEffects = [{
			ID: 4,
			x: 0,
			y: 0,
			inFront: !1
		}]);
		Items.parseData(i), this.game.prodigy.chat.addItems(), this.initializeParticleEffectsImages(), Prodigy.Attacks.data = Items.data.spell, Prodigy.Stores.data = this.game.cache.getJSON("store-data");
		var s, a;
		for (a = 0; a < Items.data.outfit.length; a++)
			if (s = Items.data.outfit[a], !Util.isNullOrUndefined(s.gender) && 2 === s.gender) {
				var r = Items.getItemMetadata("outfit", s.ID, 1),
					n = Util.copyObject(s.metadata),
					o = Util.copyObject(r);
				s.metadata.assets = {}, s.metadata.assets.male = n, delete s.metadata.assets.male.vIcon, s.metadata.assets.female = o, delete s.metadata.assets.female.vIcon, s.metadata.type = "multiple", s.gender = 0;
				for (var h in s.metadata)
					if (s.metadata.hasOwnProperty(h)) switch (h) {
						case "vIcon":
						case "assets":
						case "type":
							break;
						default:
							delete s.metadata[h]
					}
			} for (a = 0; a < Items.data.outfit.length; a++) s = Items.data.outfit[a], Util.isNullOrUndefined(s.gender) || 1 !== s.gender || (Items.data.outfit.splice(a, 1), a--);
		this.game.broadcaster.broadcast(Prodigy.Events.Boot.LOADED, null, []), this.isLoaded = t
	}, e.prototype.create = function() {
		Phaser.State.prototype.create.call(this), this.game.prodigy.init(this.game), this.game.add.plugin(PhaserSpine.SpinePlugin), this.game.particleStorm = this.game.add.plugin(Phaser.ParticleStorm), this.game.time.advancedTiming = !0, this.game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT, this.game.scale.refresh(), this.input.maxPointers = 1, this.game.stage.disableVisibilityChange = !0, this.game.device.desktop ? this.game.scale.pageAlignHorizontally = !0 : this.game.scale.forceLandscape = !0, this.extendInput(), this.game.prodigy.load.setLoader(this.game.load)
	}, e.prototype.extendInput = function() {
		this.game.inputDispatcher = new Prodigy.InputDispatcher(this.game), this.game.input.setEnterCallback = function(e) {
			this.game.input.enterCallback = e
		}, this.game.input.clearEnterCallback = function() {
			delete this.game.input.enterCallback
		}, $(document).keyup({
			game: this.game
		}, function(e) {
			13 === e.keyCode && Util.isDefined(e.data.game.input.enterCallback) && e.data.game.input.enterCallback()
		})
	}, e.prototype.initializeParticleEffectsImages = function() {
		for (var e = Items.data.particleEffect, t = [], i = 0, a = e.length; a > i; ++i) {
			var s = e[i].data.particle.image; - 1 === t.indexOf(s) && t.push(s)
		}
		this.game.prodigy.load.assets(s, function() {})
	}, e.prototype.update = function() {
		Phaser.State.prototype.update.call(this), this.isLoaded && (this.isLoaded = !1, this.game.prodigy.start("Login", {
			assets: ["icons", "core-2"],
			title: "Login",
			time: 3e3
		}))
	}, e
}();
Boot.init = function() {
	var e = new Phaser.Game(1280, 720, Phaser.CANVAS, "game-container");
	e.prodigy = new Prodigy.GameObj(e),
	e.state.add("Boot", Boot),
	e.state.add("Loading", Prodigy.Loading),
	e.state.add("PVPLoading", Prodigy.PVPLoading),
	e.state.add("TileScreen", TileScreen),
	e.state.add("Login", Login),
	e.state.add("Battle", Prodigy.Battle.Battle),
	e.state.add("PVP", PVP),
	e.state.add("Faint", Faint),
	e.state.add("CharSelect", Prodigy.CharSelect),
	e.state.add("CharCreate", Prodigy.CharCreate),
	e.state.add("Arena", Arena),
	e.state.add("Museum", Museum),
	e.state.add("DinoDig", DinoDig),
	e.state.add("DanceDance", DanceDance);
	if (Util.isDefined(window.checkForMods)) {
		checkForMods(e, window.location.search)
	} else {
		console.log("%c %c %c Found no mods to hook into. %c %c ", "background: #9bd", "background: #48a", "background: #16a; color: #FFF", "background: #48a", "background: #9bd")
	};
	e.state.start("Boot");
}, Prodigy.Loading = function(e) {
	Phaser.State.call(this), this.game = e
}, Prodigy.extends(Prodigy.Loading, Phaser.State, {
	constructor: Prodigy.Loading,
	startLoading: function(e) {
		Util.isDefined(e) || (e = {}), e.title = e.title || "Loading", e.time = e.time || 3e3, e.fadeIn = e.fadeIn || !1, e.fadeOut = e.fadeOut || !1, e.callback = e.callback || null, e.assets = e.assets || [], e.target = e.target || "Login", e.save = Util.isDefined(e.save) ? e.save : !0, e.loadingWorker = Util.isDefined(e.loadingWorker) ? e.loadingWorker : null, this._data = e, this.game.state.start("Loading")
	},
	create: function() {
		if (this.startTime = (new Date).getTime(), this.complete = !1, this.isLoaded = !1, this.isSaved = !1, this.isProcessed = !1, this._element = this.game.prodigy.create.element(), this._element.add(new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "core", "load")), this._data.time > 1e3) {
			this.game.prodigy.create.panel(this._element, 160, 340, 24, 5, "shine"), this._element.add(new Phaser.TileSprite(this.game, 171, 380, 938, 40, "core", "blue-top")), this._element.add(new Phaser.TileSprite(this.game, 171, 420, 938, 40, "core", "blue-mid")), this._element.add(new Phaser.TileSprite(this.game, 171, 460, 938, 40, "core", "blue-top2")), this._element.add(this.game.prodigy.create.sprite(590, 310, "core", "award-frame"));
			var e = this.game.prodigy.create.font(this._element, 200, 400, this.game.prodigy.hints.getRandomHint("none").text, {
				font: "button",
				width: 880,
				align: "center",
				size: 36
			});
			e.y = 400 + Math.floor((80 - e.height) / 2), this.game.prodigy.create.panel(this._element, 440, 560, 10, 2, "shine");
			var t = this.game.prodigy.create.font(this._element, 440, 560, this._data.title, {
				font: "general",
				width: 400,
				align: "center",
				size: 20
			});
			t.y = 560 + Math.floor((80 - t.height) / 2);
			var i = this.game.prodigy.create.player(this._element, this.game.prodigy.player, 1, 645, 360);
			i.reload(i.walk.bind(i))
		}
		Util.isDefined(this._data.loadingWorker) ? (this.game.broadcaster.addAppListener(Prodigy.Events.Loading.WORKER_LOAD_COMPLETE, this.start.bind(this), this, "loading"), this._data.loadingWorker.performWork()) : this.start()
	},
	start: function() {
		Util.isDefined(this._data.loadingWorker) && (this._data.loadingWorker = null), this.game.broadcaster.removeAppListener(Prodigy.Events.Loading.WORKER_LOAD_COMPLETE, this, "loading");
		var e = this._data.assets || [];
		this.game.prodigy.load.assets(e, this.loaded.bind(this)), this.game.prodigy.network.loggedIn && this._data.save ? (this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.network.setSaveCallback(this.saved.bind(this))) : this.isSaved = !0
	},
	update: function() {
		Phaser.State.prototype.update.call(this), this.complete || this.checkLoaded(), !this.complete && this.isProcessed && (new Date).getTime() - this.startTime >= this._data.time && this.completed()
	},
	completed: function() {
		this.complete = !0, Util.isDefined(this._data.callback) && this._data.callback(), this.game.state.states[this._data.target].fadeInSet = this._data.fadeIn, this.game.state.start(this._data.target)
	},
	loaded: function(e, t) {
		Util.isDefined(this.game) && (this.isLoaded = t)
	},
	checkLoaded: function() {
		this.isLoaded && this.isSaved && !this.isConnecting && (this.game.prodigy.network.socketConnectFailed && Util.isDefined(this.game.prodigy.player.world) ? (this.isConnecting = !0, this.game.prodigy.network.joinMultiplayerServer(this.game.prodigy.player.world, "zone-login", this.reconnect.bind(this, !0), this.reconnect.bind(this, !1))) : this.isProcessed = !0)
	},
	saved: function() {
		this.isSaved = !0
	},
	reconnect: function() {
		this.isConnecting = !1, this.isProcessed = !0
	}
}), Prodigy.LoadingWorker = function(e) {
	this.game = e, this.workerFunction = null
}, Prodigy.LoadingWorker.prototype = {
	constructor: Prodigy.LoadingWorker,
	setWorkerFunction: function(e) {
		this.workerFunction = e
	},
	performWork: function() {
		Util.isDefined(this.workerFunction) ? this.workerFunction() : (Util.log("Prodigy.LoadingWorker.performWork - this.workerFunction does not exist.  Calling signalCompletion to continue with loading.", Util.ERROR), this.signalCompletion())
	},
	signalCompletion: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.Loading.WORKER_LOAD_COMPLETE, "loading")
	}
}, Prodigy.PVPLoading = function(e) {
	Prodigy.Loading.call(this, e)
}, Prodigy.extends(Prodigy.PVPLoading, Prodigy.Loading, {
	constructor: Prodigy.PVPLoading,
	startLoading: function(e) {
		e.title = e.title || "Loading", e.time = e.time || 3e3, e.fadeIn = e.fadeIn || !1, e.fadeOut = e.fadeOut || !1, e.callback = e.callback || null, e.assets = e.assets || [], e.target = "PVP", e.save = Util.isDefined(e.save) ? e.save : !0, this._data = e, this.game.state.start("PVPLoading")
	},
	create: function() {
		this.zoneName = this._data.zoneName, this.playerA = this._data.playerA, this.playerB = this._data.playerB, this.game.prodigy.network.setZone(this), this.inCombat = !1, this._processConnections = !0, this._state = "request_data", this._timeout = (new Date).getTime() + 6e4, this._heartbeat = (new Date).getTime() + 3e3, this.startTime = (new Date).getTime(), this.complete = !1, this.isLoaded = !1, this.isReady = !1, this.playerLoaded = !1, this.isProcessed = !1, this.overlay = this.game.prodigy.create.element(this.background), this.game.prodigy.create.panel(this.overlay, 0, 0, 32, 5, "dark"), this.game.prodigy.create.panel(this.overlay, 0, 200, 32, 8, "light"), this.game.prodigy.create.panel(this.overlay, 0, 520, 32, 5, "dark");
		var e = this.overlay.add(new Phaser.TileSprite(this.game, 0, 199, 1280, 40, "core", "pvp-top")),
			t = this.overlay.add(new Phaser.TileSprite(this.game, 0, 481, 1280, 40, "core", "pvp-top2"));
		this.game.add.tween(e.tilePosition).to({
			x: 400
		}, 1e4, Phaser.Easing.Linear.None, !0).repeat(9999), this.game.add.tween(t.tilePosition).to({
			x: -400
		}, 1e4, Phaser.Easing.Linear.None, !0).repeat(9999);
		var i = this.playerA,
			a = this.playerB,
			s = this.game.prodigy.create.player(this.overlay, i, 2, 400, 450);
		s.reload();
		var r = this.game.prodigy.create.player(this.overlay, a, 2, 880, 450);
		r.reload(), r.flip();
		var n = (this.game.prodigy.create.font(this.overlay, 0, 350, "VS.", {
			size: 80,
			align: "center",
			width: 1280
		}), this.game.prodigy.create.panel(this.overlay, 200, 60, 22, 2, "banner"));
		this.game.prodigy.create.font(n, 40, 20, "$" + i.getLevel(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.font(n, 40, 20, i.getName(), {
			size: 36,
			font: "button",
			align: "center",
			width: 800
		}), this.game.prodigy.create.font(n, 40, 20, i.isMember ? " [membership]" : "", {
			size: 36,
			font: "button",
			align: "right",
			width: 800
		});
		var o = this.game.prodigy.create.panel(this.overlay, 200, 580, 22, 2, "banner");
		this.game.prodigy.create.font(o, 40, 20, "$" + a.getLevel(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.font(o, 40, 20, a.getName(), {
			size: 36,
			font: "button",
			align: "center",
			width: 800
		}), this.game.prodigy.create.font(o, 40, 20, a.isMember ? " [membership]" : "", {
			size: 36,
			font: "button",
			align: "right",
			width: 800
		}), this.start()
	},
	start: function() {
		var e = this._data.assets || [];
		this.game.prodigy.load.assets(e, this.loaded.bind(this))
	},
	update: function() {
		Phaser.State.prototype.update.call(this), this.complete || this.checkLoaded(), !this.complete && this.isProcessed && (new Date).getTime() - this.startTime >= this._data.time && this.completed(), this._processConnections && Util.isDefined(this._timeout) && this._timeout < (new Date).getTime() && (this._processConnections = !1, delete this._heartbeat, delete this._timeout, this._data.callback()), this._processConnections && Util.isDefined(this._heartbeat) && (this._heartbeat < (new Date).getTime() || this._sendNow) && (this.emitMessage({
			action: this._state,
			data: {}
		}), this._heartbeat = (new Date).getTime() + 3e3, this._sendNow = !1)
	},
	completed: function() {
		this.complete = !0, this.game.state.states.PVP.playerA = this.playerA, this.game.state.states.PVP.playerB = this.playerB, this.game.state.states.PVP.teamA = this.teamA, this.game.state.states.PVP.teamB = this.teamB, this.game.state.states.PVP.mods = this._data.mods, this.game.state.states.PVP.zoneName = this.zoneName, this.game.state.states.PVP.challengerID = this._data.challengerID, this.game.state.states.PVP.callback = this._data.callback, this.game.state.start("PVP")
	},
	checkLoaded: function() {
		this.isLoaded && this.playerLoaded && this.isReady && (this.isProcessed = !0)
	},
	onMessage: function(e) {
		Util.isDefined(this.game) && ("request_data" === e.action ? this.emitMessage({
			action: "data",
			data: {
				userID: this.game.prodigy.player.userID,
				equipment: this.game.prodigy.player.equipment.data,
				appearance: this.game.prodigy.player.appearance.data,
				data: this.game.prodigy.player.data,
				pets: this.game.prodigy.player.kennel.data
			}
		}) : "request_init" === e.action && this.isLoaded && this.playerLoaded ? this.emitMessage({
			action: "init",
			data: {}
		}) : "request_action" === e.action && Util.isDefined(this.currentManager.currentAction) ? this.emitMessage({
			action: "action",
			data: this.currentManager.currentAction
		}) : "request_next" === e.action && Util.isDefined(this.currentManager.nextAction) ? this.emitMessage({
			action: "next",
			data: this.currentManager.nextAction
		}) : "data" === e.action && "request_data" === this._state ? (this._state = "loading", this.playerB = new Player(this.game), this.playerB.init(e.data), this.teamA = this.game.prodigy.battle.getPVPTeam(this.playerA), this.teamB = this.game.prodigy.battle.getPVPTeam(this.playerB), this.game.prodigy.load.assets(this.game.prodigy.battle.getAssets("", this.teamA, this.teamB), this.loadedPlayer.bind(this))) : "init" === e.action && "request_init" === this._state ? (this._state = "working", this.isReady = !0) : "loading" === e.action || "working" === e.action, this._timeout = (new Date).getTime() + 6e4)
	},
	emitMessage: function(e) {
		e.target = this.playerB.userID, this.game.prodigy.network.emitMessage(e)
	},
	loadedPlayer: function(e, t) {
		Util.isDefined(this.game) && (this.playerLoaded = t, t && (this._state = "request_init"))
	}
});
var Screen = function() {
		function e(e, t, i, a, s) {
			Phaser.State.call(this), this.showMenu = !1, this.game = e, this.screenName = a || "", this.zoneName = i || "zero", this.fullName = t || "", this.assets = s || [], this._screenData = null
		}
		return e.prototype = Object.create(Phaser.State.prototype), e.prototype.initListeners = function() {
			this.game.broadcaster.addAppListener(Prodigy.Events.Screen.ADD_CHILD, this.onAddChild.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.Screen.GET_LAYER, this.onGetLayer.bind(this), this, this.game)
		}, e.prototype.stopListeners = function() {
			this.game.broadcaster.removeAppListener(Prodigy.Events.Screen.ADD_CHILD, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Screen.GET_LAYER, this, this.game)
		}, e.prototype.onAddChild = function(e, t, i) {
			Util.isDefined(this.stage) && Util.isDefined(this[t]) && (Util.isDefined(i) ? this[t].addChildAt(e, i) : this[t].addChild(e))
		}, e.prototype.onGetLayer = function(e) {
			return Util.log(" onGetLayer "), Util.isDefined(this.stage) && Util.isDefined(this[e]) ? this[e] : null
		}, e.prototype.shutdown = function() {
			this.game.prodigy.cleanup(), this.stopListeners(), this.game.prodigy.network.stopInactiveTimer(), this.background.destroy(), this.content.destroy(), this.foreground.destroy(), this.menus.destroy(), this.dialogue.destroy(), this.overlay.destroy(), this.opaque.destroy(), this.background = null, this.content = null, this.foreground = null, this.menus = null, this.dialogue = null, this.overlay = null, this.opaque = null, Phaser.State.prototype.shutdown.call(this)
		}, e.prototype.preload = function() {
			this.background = this.game.add.group(), this.content = this.game.add.group(), this.foreground = this.game.add.group(), this.menus = this.game.add.group(), this.dialogue = this.game.add.group(), this.overlay = this.game.add.group(), this.opaque = this.game.add.group();
			var e = this.opaque.add(new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "core", "load"));
			if (e.inputEnabled = !0, GameConstants.get("GameConstants.Build.DEBUG")) {
				this.debugLayout = new Prodigy.Framework.Debug.DebugLayout, this.menus.add(new Prodigy.Framework.Core.GameObject(this.game, this.menus, [this.debugLayout]));
				var t = GameConstants.get("GameConstants.Build.SHOW_DEBUG_VALUES");
				GameConstants.get("GameConstants.Build.SHOW_FPS") && t.indexOf("AVERAGE_FPS") < 0 && t.push("AVERAGE_FPS");
				for (var i = 0; i < t.length; ++i) {
					var a = Prodigy.Framework.Debug.DebugValueRegistry.getRegisteredDebugValue(t[i]);
					Util.isNullOrUndefined(a) || this.debugLayout.addRenderer(new a)
				}
			}
			this.game.prodigy.open.menuLayer = this.menus, this.game.prodigy.dialogue.create().menuLayer = this.dialogue, this.game.prodigy.effects.setSource(this), this.game.enableBackground = function(e) {
				this.background.visible = e, this.foreground.visible = e
			}.bind(this), this.game.enableContent = function(e) {
				this.content.visible = e
			}.bind(this), Phaser.State.prototype.preload.call(this), this.initListeners(), this.game.prodigy.network.startInactiveTimer()
		}, e.prototype.create = function() {
			Phaser.State.prototype.create.call(this), this.screenSetup(), this.complete = !0
		}, e.prototype.fadeIn = function() {
			if (this.fadeInSet) {
				var e = this.game.add.tween(this.opaque).to({
					alpha: 0
				}, 1e3, Phaser.Easing.Quadratic.Out).start();
				e.onComplete.add(this.start.bind(this, !0, !1))
			} else this.opaque.visible = !1, this.start(!0, !1)
		}, e.prototype.fadeOut = function(e, t) {
			if (this.opaque.visible = !0, e) {
				var i = this.game.add.tween(this.opaque).to({
					alpha: 1
				}, 1e3, Phaser.Easing.Quadratic.Out).start();
				i.onComplete.add(t)
			} else t()
		}, e.prototype.start = function() {
			this.opaque.visible = !1
		}, e.prototype.update = function() {
			Phaser.State.prototype.update.call(this), this.complete && this.screenUpdate()
		}, e.prototype.screenSetup = function() {
			this.game.prodigy.network.setZone(this), this.start()
		}, e.prototype.screenUpdate = function() {
			this.game.prodigy.update()
		}, e.prototype.showMessage = function(e, t) {
			Util.isDefined(this.msg) || (this.msg = new ScreenMessage(this.game, this.overlay, 140, 10)), this.msg.setMsg(e, t)
		}, e.prototype.enableOverlay = function(e) {
			Util.isDefined(this.rearOverlay) && this.rearOverlay.kill(), this.rearOverlay = this.foreground.add(this.game.prodigy.create.sprite(-10, -10, "core", "overlay-small")), this.rearOverlay.width = 1300, this.rearOverlay.height = 740, this.rearOverlay.alpha = Util.isDefined(e) ? e : .5, this.rearOverlay.inputEnabled = !0, this.game.add.tween(this.rearOverlay).from({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None, !0)
		}, e.prototype.disableOverlay = function(e) {
			if (Util.isDefined(this.rearOverlay)) {
				var t = this.game.add.tween(this.rearOverlay).to({
					alpha: 0
				}, 500, Phaser.Easing.Linear.None);
				t.onComplete.add(function() {
					this.rearOverlay.kill(), Util.isDefined(e) && e()
				}, this), t.start()
			}
		}, e
	}(),
	ScreenMessage = function() {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.ID = 0, this.text = this.game.prodigy.create.font(this, 0, 5)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setMsg = function(e, t) {
			this.visible = !0, this.ID++, this.alpha = 0, this.game.add.tween(this).to({
				alpha: 1
			}, 400, Phaser.Easing.Quadratic.Out).start(), this.text.setText(e, this, 500);
			var i = function(e) {
				e === this.ID && (this.visible = !1)
			};
			this.timer = this.game.time.events.add(t, i.bind(this, this.ID), this)
		}, e
	}(),
	Login = function() {
		function e(e) {
			Screen.call(this, e, "Login", "login", "login", ["login", "sfx-ui", "icons", "icons-menu", "icons-hud", "npc-sprite-toy", "login-buttons"]), this.showMenu = !1, this.skipUrlParams = !1
		}
		return e.onGoogleAuthLoadedCallback = null, e.isGoogleAuthLoaded = !1, e.onGoogleAuthLoaded = function(t, i) {
			e.isGoogleAuthLoaded = t, t ? (Util.log("Login.onGoogleAuthLoaded - google auth lib loaded successfully"), Util.isDefined(e.onGoogleAuthLoadedCallback) && (e.onGoogleAuthLoadedCallback(), e.onGoogleAuthLoadedCallback = null)) : (i = Util.isDefined(i) ? i : {
				error: "no error specified",
				details: "no details specified"
			}, Util.log("Login.onGoogleAuthLoaded - error loading google auth lib. The error is: " + i.error + " \n details: " + i.details, Util.ERROR))
		}, window.onGooglePlatformLoad = function() {
			Util.log("google platform loaded"), window.gapi.load("auth2", function() {
				var t = !1,
					i = null;
				switch (window.location.host) {
					case "www.prodigygame.com":
					case "prodigygame.com":
						t = !0
				}
				i = t || Util.isNullOrUndefined(window.prodigyGoogleClientId) ? "523759519115-63c0h2vhev83mq90pq4c746ncnnpeh1o.apps.googleusercontent.com" : window.prodigyGoogleClientId;
				var a = window.gapi.auth2.init({
					client_id: i,
					cookiepolicy: "single_host_origin"
				});
				a.then(function() {
					e.onGoogleAuthLoaded(!0)
				}, function(t) {
					e.onGoogleAuthLoaded(!1, t)
				})
			})
		}, e.prototype = Object.create(Screen.prototype), e.GOOGLE_AUTH_FAIL_DEFAULT = "Signing in with Google was unsuccessful", e.GOOGLE_AUTH_POPUP_BLOCKED = "Your browser is blocking popups. To sign in with Google, please allow popups and try again.", e.GOOGLE_AUTH_USE_BROWSER_INSTEAD = "Google sign-in only works in the browser version of Prodigy. Would you like to open Prodigy in the browser?", e.prototype.create = function() {
			this.game.prodigy.network.logout(!0), this.game.prodigy.debug.setup(this.game);
			try {
				$("#first-loading-screen").remove()
			} catch (e) {}
			try {
				Util.getUrlVariable("iosApp") && webkit.messageHandlers.setGameVisible.postMessage(0)
			} catch (e) {}
			Screen.prototype.create.call(this)
		}, e.prototype.screenSetup = function() {
			this.game.prodigy.debug.enableDebugCalls(this.game);
			GameConstants.enableGameConstant("GameConstants.Debug.EDUCATION_ENABLED",false);
			try {
				this.game.prodigy.debug.easyMode(0, 1);
			} catch {
				GameConstants.enableGameConstant("GameConstants.Debug.AUTO_ANSWER_CORRECTLY", !0)
			};
			this.game.prodigy.player.data.startDate = (new Date).getTime(),
			this.game.prodigy.player.registerDate = new Date(this.game.prodigy.player.data.startDate); // Fix mail crash for offline mode
			this.background.add(this.game.prodigy.create.sprite(0, 0, "login-bg-1")),
			this.loginBox = this.game.prodigy.create.element(this.background),
			this.usernameField = Prodigy.Control.InputField.createInputField(this.game, this.loginBox, "username", "", 100, 230, 300, 40),
			this.usernameField.hide(0),
			this.usernameField.setLabel(this.loginBox, "Username:");
			var t = Util.getCookie("prodigyUsername");
			Util.isDefined(t) && this.usernameField.setValue(t),
			this.passwordField = Prodigy.Control.InputField.createInputField(this.game, this.loginBox, "password", "", 100, 310, 300, 40, "password"),
			this.passwordField.hide(0),
			this.passwordField.setLabel(this.loginBox, "Password:"),
			this.loginButton = this.game.prodigy.create.button(this.loginBox, 100, 380, "login-buttons", "loadcharacter", this.openFileForCharacter.bind(this))
			this.offlineButton = this.game.prodigy.create.button(this.loginBox, 100, 470, "login-buttons", "offline", this.offlineMode.bind(this))
			this.progressBox = this.game.prodigy.create.element(this.background, 100, 250),
			this.error = this.game.prodigy.create.font(this.progressBox, 0, 0, "", {
				width: 300,
				align: "center"
			}), this.closeButton = this.game.prodigy.create.textButton(this.progressBox, 0, 100, {
				icon: "close",
				text: "okay",
				size: Prodigy.Control.TextButton.MED
			}, this.showLogin.bind(this, !0)),
			this.error.visible = !1,
			this.closeButton.visible = !1,
			this.progressBox.visible = !1,
			this.createAccountButton = this.game.prodigy.create.button(this.background, 100, 560, "login-buttons", "student", this.game.prodigy.start.bind(this, "CharCreate")),
			this.canvas = $("#game-container canvas");
			var i = document.getElementById("external-ui");
			var a = this.game.prodigy.create.panel(this.background, 100, 660, 4, 1, "lb");
			a.alpha = .25, this.game.prodigy.create.font(this.background, a.x, a.y + 8, "Privacy Policy", {
				size: 16,
				width: 160,
				align: "center"
			}), a.setClickable(this.game.prodigy.network.openWebsite.bind(this.game.prodigy.network, "www.prodigygame.com/privacy-policy/")), a = this.game.prodigy.create.panel(this.background, 280, 660, 3, 1, "lb"), a.alpha = .25, this.game.prodigy.create.font(this.background, a.x, a.y + 8, "Website", {
				size: 16,
				width: 120,
				align: "center"
			}), a.setClickable(this.game.prodigy.network.openWebsite.bind(this.game.prodigy.network, "www.prodigygame.com")), this.showLogin(!0), this.checkForAdmin(), this.skipUrlParams ? this.skipUrlParams = !1 : this.tryToStartFlowFromUrlParams();
			var s = new Phaser.Point(0, 0),
				r = {
					type: "LINE_ZONE",
					x1: -200,
					y1: 0,
					x2: 1280,
					y2: 0
				};
			this.game.prodigy.create.createParticleEmitter(this.foreground, Prodigy.Snow.PARTICLE_EFFECT_IDS.SMALL_SNOW, s, r), this.game.prodigy.create.createParticleEmitter(this.foreground, Prodigy.Snow.PARTICLE_EFFECT_IDS.BIG_SNOW, s, r), Screen.prototype.screenSetup.call(this)
		}, e.prototype.offlineMode = function() {
			this.game.prodigy.start("CharSelect")
		}, e.prototype.openFileForCharacter = function() {
			var LoadCharacterData = this.loadCharacter;
			var fileInput = document.createElement('input');
			var e = this.game
			fileInput.type = 'file',
			fileInput.id = 'myfile' + Math.floor(Math.random() * 999999),
			fileInput.name = 'files',
			fileInput.style.display = 'none',
			fileInput.click();
			fileInput.onchange = function(file) {
				var reader = new FileReader();
				reader.readAsText(file.target.files[0]);
				reader.onload = function(reader) {
					finisheddata = JSON.parse(reader.target.result);
					console.log(e);
					LoadCharacterData(finisheddata, !0, e);
				};
				reader.onerror = function(reader) {
					PIXI.game.prodigy.open.messageBoxOkay("Failed to open save file, please retry.","OKAY",null,null,"Character Loader");
				}
			}
		}, e.prototype.loadCharacter = function(e, t, i) {
			try {
				if (e.gameVersion != i.prodigy.version && t == !0) {
					i.prodigy.open.confirm("Your character is from a different Prodigy version! This may cause multiple problems while playing!\n\nDo you want to continue?", i.prodigy.game.state.states.Login.loadCharacter.bind(this, e, !1, i), i.prodigy.game.state.states.Login.showLogin.bind(i.prodigy.game.state.states.Login, !0), null, "Character Loader")
					i.prodigy.game.state.states.Login.showLogin(!1);
				} else {
					i.prodigy.player.appearance.data = e.appearancedata,
					i.prodigy.player.equipment.data = e.equipmentdata,
					i.prodigy.player.kennel.data = e.kenneldata,
					i.prodigy.player.data = e.data,
					i.prodigy.player.quests.data = e.questdata,
					i.prodigy.player.backpack.data = e.backpackdata;
					if (Util.isDefined(e.tutorialdata)) {
						i.prodigy.player.tutorial.data = e.tutorialdata
					};
					if (Util.isDefined(e.statedata)) {
						i.prodigy.player.state.data = e.statedata
					};
					if (Util.isDefined(e.achievementsdata)) {
						i.prodigy.player.achievements.data = e.achievementsdata
					};
					if (i.prodigy.player.hasCompletedTutorial() == !0) {
						i.prodigy.player.house.data = e.housedata
					};
					if (Util.isDefined(e.metadata)) {
						i.prodigy.player.isMember = e.metadata.isMember,
						i.prodigy.player.appearanceChanged = e.metadata.appearanceChanged,
						i.prodigy.player.broadcastId = e.metadata.broadcastId,
						i.prodigy.player.inPVP = e.metadata.inPVP,
						i.prodigy.player.updated = e.metadata.updated;
						if (Util.isDefined(e.data.startDate)) {
							i.prodigy.player.registerDate = new Date(i.prodigy.player.data.startDate)
						} else {
							i.prodigy.player.data.startDate = (new Date).getTime(),
							i.prodigy.player.registerDate = new Date(i.prodigy.player.data.startDate)
						}
					} else {
						i.prodigy.player.isMember = !1, // No membership by default
						i.prodigy.player.data.startDate = (new Date).getTime(), // Fix mail crash
						i.prodigy.player.registerDate = new Date(i.prodigy.player.data.startDate)
					};
					i.prodigy.game.state.states.Login.offlineMode()
				}
			} catch (error) {
				i.prodigy.open.messageBoxOkay("A critical error occurred during your character load! This is most-likely from a corrupted/modified save.\n\n\nCheck the console for more details.", "OKAY", null, null, "Character Loader")
				delete i.prodigy.player.data.reset
				console.error(error),
				Util.log("Character load failed!", Util.ERROR),
				Util.log("Load error detected, data loaded returned below.", Util.INFO),
				console.log(e);
			}
		}, e.prototype.avoidParsingUrlParamsNextScreenSetupCall = function() {
			this.skipUrlParams = !0
		}, e.prototype.tryToStartFlowFromUrlParams = function() {
			var e, t, i, a = Util.getUrlVariable("action");
			if (Util.isDefined(a)) {
				var s = Util.removeParamsFromUrl(window.location.href, ["action"]);
				window.history.replaceState({}, "", s), "login" === a ? (e = Util.getUrlVariable("idToken"), Util.isDefined(e) ? (this.gotoLoginMode("Logging in with Google..."), this.loginWithGoogle({
					idToken: e
				})) : Util.log("Login.startFlowFromUrlParams - can't log in with google without an idToken", Util.ERROR)) : "create" === a ? (e = Util.getUrlVariable("idToken"), t = Util.getUrlVariable("email"), i = Util.getUrlVariable("name"), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i) ? (this.gotoLoginMode("Creating Account..."), this.createAccount({
					idToken: e,
					email: t,
					name: i
				})) : Util.log("Login.startFlowFromUrlParams - can't create account with google.  Expected name, email, and idToken url params")) : "auth-with-google" === a && this.authorizeWithGoogle()
			}
		}, e.prototype.checkForAdmin = function() {
			if ("admin" === Util.getUrlVariable("accessType")) {
				var e = Util.getUrlVariable("userID"),
					t = Util.getUrlVariable("token"),
					i = Util.getUrlVariable("key");
				this.gotoLoginMode("Logging in..."), this.game.prodigy.network.adminLogin(e, t, i, this.game.prodigy.player, this.onError.bind(this, NetworkManager.LOGIN), this.loadSkills.bind(this))
			}
		}, e.prototype.gotoLoginMode = function(e) {
			this.showLogin(!1), this.error.visible = !0, this.error.setText(e)
		}, e.prototype.showLogin = function(e) {
			this.usernameField.setEnabled(e), this.passwordField.setEnabled(e), e && (this.error.visible = !1, this.closeButton.visible = !1), this.progressBox.visible = !e, this.createAccountButton.visible = this.loginBox.visible = e, e ? (this.game.input.setEnterCallback(this.startLogin.bind(this)), this.usernameField.show(100), this.passwordField.show(100), $("#google-button").css({
				opacity: 1,
				cursor: "default"
			})) : (this.game.input.clearEnterCallback(), this.usernameField.hide(100), this.passwordField.hide(100), $("#google-button").css({
				opacity: 0,
				cursor: "default"
			}))
		}, e.prototype.showAll = function(e) {
			this.showLogin(e), this.loginBox.visible = e
		}, e.prototype.startLogin = function() {
			this.gotoLoginMode("Logging in..."), this.username = this.usernameField.getValue(), this.password = this.passwordField.getValue(), "" === this.username || "" === this.password ? this.onError(NetworkManager.LOGIN, null, 400) : window.setTimeout(this.login.bind(this), 1e3)
		}, e.prototype.login = function() {
			this.game.prodigy.network.login(this.username, this.password, this.game.prodigy.player, this.onError.bind(this, NetworkManager.LOGIN), this.loadSkills.bind(this))
		}, e.prototype.loadSkills = function(e) {
			this.game.prodigy.player.username = this.username, this.game.prodigy.player.password = this.password, e = e || {}, e.username = this.username, e.password = this.password, this.error.visible = !0, this.error.setText("Loading skills..."), this.game.prodigy.network.loadSkills(this.game.prodigy.player.userID, this.game.prodigy.player.classIDs, this.loginSuccess.bind(this), this.onError.bind(this, NetworkManager.SKILLS))
		}, e.prototype.loginSuccess = function(e) {
			this.game.prodigy.education.init(e), this.game.prodigy.player.setLocation(e.curriculumTreeID), this.error.visible = !0, this.error.setText("Loading worlds..."), this.game.prodigy.network.getWorldList(this.openPlayer.bind(this), this.openPlayer.bind(this, null))
		}, e.prototype.openPlayer = function(e) {
			var t = !this.game.prodigy.player.data.school,
				i = this.game.prodigy.player.data.reset;
			t || i ? (this.game.prodigy.network.sendEvent("create-character"), this.game.prodigy.start("CharCreate", {
				time: 1001
			}, e)) : (this.game.prodigy.network.sendEvent("login"), this.game.prodigy.start("CharSelect", {
				time: 1001
			}, e))
		}, e.prototype.createAccount = function(e) {
			this.showLogin(!1);
			var t = Util.isDefined(e) && Util.isDefined(e.idToken) ? this.loginWithGoogle.bind(this, {
				idToken: e.idToken
			}) : this.startLoginTutorial.bind(this);
			this.game.prodigy.open.createAccount(e, t)
		}, e.prototype.startLoginTutorial = function(e, t, i) {
			this.showLogin(!0), this.createAccountButton.visible = !e, e && (this.new_username = t, this.new_password = i, this.usernameField.setValue(""), this.passwordField.setValue(""), this.tutorial = !0)
		}, e.prototype.update = function() {
			if (Screen.prototype.update.call(this), this.tutorial) {
				var e = this.usernameField.getValue() || "";
				if (e = e.toLowerCase(), e !== this.new_username.toLowerCase()) {
					if (this.usernameField.hasTooltip()) return;
					this.usernameField.showTooltip("'" + this.new_username + "'", 330), this.usernameField.setFocus(!0), this.passwordField.showTooltip(null), this.loginButton.highlight(!1)
				} else if (this.passwordField.getValue() !== this.new_password) {
					if (this.passwordField.hasTooltip()) return;
					this.passwordField.showTooltip("'" + this.new_password + "'", 330), this.passwordField.setFocus(!0), this.usernameField.showTooltip(null), this.loginButton.highlight(!1)
				} else {
					if (this.loginButton.isHighlighted()) return;
					this.loginButton.highlight(!0, 150, 10), this.usernameField.showTooltip(null), this.passwordField.showTooltip(null)
				}
			}
		}, e.prototype.onError = function(e, t, i) {
			var a = this.game.prodigy.network.getErrorMessage(i, e);
			Util.isDefined(a) || (a = ""), this.showErrorText(a)
		}, e.prototype.showErrorText = function(e) {
			this.error.visible = !0, this.closeButton.visible = !0, this.error.setText(e, this.loginBox, this.game.world.centerX)
		}, e.prototype.shutdown = function() {
			e.onGoogleAuthLoadedCallback = null, $("#google-button").remove(), Screen.prototype.shutdown.call(this)
		}, e
	}();
WalkableScreen = function(e, t, i) {
	i = i || [], Screen.call(this, e, t.fullName, t.zoneName, t.atlas, i.concat(["bgm-intro"])), this.area = null, this.showMenu = !0, this.tileSize = 20, this.hideHex = !1, this.playersInfo = {}, this.playerList = {}, this.clickAreas = []
}, Prodigy.extends(WalkableScreen, Screen, {
	constructor: WalkableScreen,
	onDebugAutoClick: function(e) {
		if (Util.isDefined(e) && e.indexOf("map_") >= 0) {
			var t = e.split("_");
			this.listener(null, {
				x: parseInt(t[1]),
				y: parseInt(t[2])
			})
		}
	},
	shutdown: function() {
		Screen.prototype.shutdown.call(this), window.clearInterval(this.botTimer);
		try {
			for (var e in this.playerList) this.playerList.hasOwnProperty(e) && this.playerList[e].destroy();
			this.playerList = {}, this.user.destroy(), this.user = null
		} catch (t) {}
	},
	create: function(e) {
		this.walkEnabled = !0, this.clickAreas = [], this.saveTag = e, Util.isDefined(e) && this.game.prodigy.player.setZone(e), this.game.prodigy.player.saveEnabled = !0, this.path = new Pathfinder(this.area), this.createBackground(), this.user = this.game.prodigy.create.player(this.content, this.game.prodigy.player, 1, this.startX || 500, this.startY || 300), this.user.enableLocomotion(this, this.user), this.user.setup(null, !0), this.user.showName(!0), this.user.clickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, this.game.prodigy.player), this.game.prodigy.user = this.user, this.addFollow(this.game.prodigy.player.userID, this.game.prodigy.player.equipment.data.follow), this.showMenu && (this.menuBar = new Prodigy.HUD.Menu(this.game, this.menus, this.menuDisabled), -1 === this.zoneName.indexOf("scene-") && this.game.broadcaster.broadcast(Prodigy.Events.Mailer.GET_TOTAL_MAIL, "ProdigyMailerButton", [])), Screen.prototype.create.call(this), GameConstants.get("GameConstants.Build.DEBUG") && this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_SCENE, this.onDebugAutoClick.bind(this), this)
	},
	createBackground: function() {
		this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName, "bg"), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(this.listener.bind(this), this), this.background.add(this.bg)
	},
	screenSetup: function() {
		Device.isTablet() || Device.iPadMini() || 1 == Util.getUrlVariable("iosApp") || !Util.isDefined(this.bgm) || (this.game.prodigy.audio.playBGM(this.bgm, !0, !0), this.game.prodigy.audio.resumeBGM()), Screen.prototype.screenSetup.call(this)
	},
	start: function() {
		this.user.evtProc = !1, Screen.prototype.start.call(this)
	},
	processPopups: function(e) {
		if (GameConstants.get("GameConstants.Debug.POPUPS_ENABLED")) {
			var t = (this.game.prodigy.player.state.get("zone-house"), this.game.prodigy.player.state.get("zone-lamplight")),
				i = this.game.prodigy.achievements.process();
			Prodigy.Menu.ParentalLink.isSuccessRequired(this.game.prodigy.player, t) ? this.game.prodigy.open.parentalLinkSuccessPrompt(e) : Prodigy.Menu.DailyLoginBonus.isRequired(this.game.prodigy.player, t) ? this.game.prodigy.load.assets(["event-daily_login_bonus"], this.game.prodigy.open.dailyLoginBonus.bind(this.game.prodigy.open, e)) : Prodigy.Menu.EmailPrompt.isRequired(this.game.prodigy.player, t) ? this.game.prodigy.open.emailPrompt(e) : Prodigy.Menu.MemberPrompt.isRequired(this.game.prodigy.player, t) ? this.game.prodigy.open.memberPrompt(e) : Prodigy.Menu.ParentalLink.isInfoRequired(this.game.prodigy.player, t) ? this.game.prodigy.open.parentalLinkInfoPrompt(Prodigy.Menu.ParentLinkBenefitsConfig.ANALYTICS_SOURCE_LOGIN, e) : i.length > 0 ? this.game.prodigy.open.achievement(i, e) : this.game.prodigy.player.justLeveled && this.game.prodigy.player.getLevel() >= 10 ? (this.game.prodigy.player.justLeveled = !1, this.game.prodigy.open.rating(e)) : Util.isDefined(e) && e()
		} else Util.isDefined(e) && e()
	},
	onMessage: function(e) {
		Util.isDefined(this.game) && ("challenge" === e.action ? this.game.prodigy.mail.add(e) : "friendRequestReceived" === e.action ? this.game.prodigy.friendsListNetworkHandler.friendRequestReceived(e.data) : "friendRequestCancelled" === e.action ? this.game.prodigy.friendsListNetworkHandler.friendRequestCancelled(e.data) : "friendRequestAccepted" === e.action ? this.game.prodigy.friendsListNetworkHandler.friendRequestAccepted(e.data) : "friendRequestRejected" === e.action ? this.game.prodigy.friendsListNetworkHandler.friendRequestRejected(e.data) : "friendRemoved" === e.action ? this.game.prodigy.friendsListNetworkHandler.friendRemoved(e.data) : "friendQuestUpdate" === e.action && this.game.prodigy.friendsListNetworkHandler.updateFriendQuest(e.data), "change" === e.action && this.updatePlayer(e.data), "move" === e.action && this.movePlayer(e.data), "info" === e.action && this.onPlayerFullInfo(e.data), "chat" === e.action && this.chatPlayer(e.data), "emit" === e.action && this.playerEffect(e.data))
	},
	onPlayerFullInfo: function(e) {
		e.userID !== this.game.prodigy.player.userID && Util.isDefined(e) && (this.playersInfo[e.userID] = e, Util.isDefined(this.playerList[e.userID]) ? this.updatePlayer(this.playersInfo[e.userID]) : this.addPlayer(this.playersInfo[e.userID]), this.movePlayer(this.playersInfo[e.userID]))
	},
	onPlayerList: function(e) {
		if (Util.isDefined(this.game)) {
			for (var t = !1, i = 0; i < e.length; i++) e[i] != this.game.prodigy.player.userID && (t = !0, Util.isDefined(this.playersInfo[e[i]]) && this.addPlayer(this.playersInfo[e[i]]));
			t && this.user.broadcastPlayerFullInfo()
		}
	},
	onPlayerJoined: function(e) {
		e = parseInt(e), e !== this.game.prodigy.player.userID && (Util.isDefined(this.playersInfo[e]) && this.addPlayer(this.playersInfo[e]), Util.isDefined(this.user) && this.user.broadcastPlayerFullInfo(e))
	},
	onPlayerLeft: function(e) {
		this.removePlayer(e)
	},
	addPlayer: function(e) {
		if (!Util.isDefined(this.playerList[e.userID])) {
			var t = new Player(this.game);
			t.init(e);
			var i = this.game.prodigy.create.player(this.content, t, 1, -100, -100);
			i.enableLocomotion(this, i), i.reload(), i.showName(!0), i.clickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, t), this.playerList[e.userID] = i, this.addFollow(t.userID, t.equipment.data.follow), this.game.broadcaster.broadcast(Prodigy.Events.WalkableScreen.PLAYER_ADDED, this.game, [i])
		}
	},
	removePlayer: function(e) {
		Util.isDefined(this.playerList[e]) && (this.removeFollow(e), this.content.remove(this.playerList[e], !0), this.playerList[e].destroy(), delete this.playerList[e])
	},
	updatePlayer: function(e) {
		if (Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e.userID])) {
			var t = this.playerList[e.userID];
			t.source.appearance.setAppearance(e.appearance), t.source.equipment.setEquipment(e.equipment), t.showName(!0), t.clickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, t.source), Util.isNullOrUndefined(e.equipment) || this.addFollow(e.userID, e.equipment.follow), t.reload(), this.game.broadcaster.broadcast(Prodigy.Events.WalkableScreen.PLAYER_UPDATED, this.game, [t])
		}
	},
	playerEffect: function(e) {
		Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e.userID]) && this.playerList[e.userID].source.fx(e.type)
	},
	movePlayer: function(e) {
		if (Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e.userID])) {
			if (e.hasOwnProperty("target")) return this.playerList[e.userID].setNewTarget(e.target.x, e.target.y), void 0;
			e.hasOwnProperty("path") && this.playerList[e.userID].setPath(e.path)
		}
	},
	chatPlayer: function(e) {
		if (Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e.userID])) {
			var t = this.playerList[e.userID];
			e.emoteID ? t.emote(e.emoteID) : e.chatID ? t.chatText(e.chatID) : e.danceID && t.dance(e.danceID, t.source.appearance.getGender())
		}
	},
	removeFollow: function(e) {
		var t = e === this.game.prodigy.player.userID ? this.user : this.playerList[e];
		Util.isDefined(t) && Util.isDefined(t.follow) && (this.content.remove(t.follow, !0), delete t.follow)
	},
	addFollow: function(e, t) {
		if (!Util.isNullOrUndefined(this.content)) {
			var i = e === this.game.prodigy.player.userID ? this.user : this.playerList[e],
				a = Items.getItemMetadata("follow", t),
				s = -1,
				r = null;
			if (Util.isNullOrUndefined(a) || Util.isNullOrUndefined(a.petID) || (s = a.petID), i !== this.user && (r = Prodigy.Menu.ToyStore.openWebsite.bind(Prodigy.Menu.ToyStore, this.game, "follow", !1, s)), Util.isDefined(i) && (this.removeFollow(e), Util.isDefined(t))) {
				s >= 125 && e !== this.game.prodigy.player.userID && this.game.prodigy.network.sendToyEvent("toy-walk", 4, s);
				var n = this.game.prodigy.create.follow(this.content, t, 1, i, this.path, r);
				Util.isNullOrUndefined(n.reload) || n.reload(), i.follow = n
			}
		}
	},
	screenUpdate: function() {
		if (Screen.prototype.screenUpdate.call(this), this.content.sort("y", Phaser.Group.SORT_ASCENDING), this.game.prodigy.player.appearanceChanged) {
			this.game.prodigy.player.appearanceChanged = !1, this.user.reload(), this.user.showName(this.user.name.visible);
			var e = this.game.prodigy.player;
			this.addFollow(e.userID, this.hideHex ? null : e.equipment.data.follow), this.game.prodigy.network.emitMessage({
				action: "change",
				data: {
					userID: e.userID,
					appearance: e.appearance.data,
					equipment: e.equipment.data
				}
			})
		}
	},
	listener: function(e, t) {
		if (this.walkEnabled) {
			this.clickX = Util.isDefined(t) ? t.x : Math.round(this.game.input.x), this.clickY = Util.isDefined(t) ? t.y : Math.round(this.game.input.y);
			for (var i = 0; i < this.clickAreas.length; i++) {
				var a = this.clickAreas[i];
				if (this.clickX >= a.x && this.clickX <= a.x + a.w && this.clickY >= a.y && this.clickY <= a.y + a.h) return a.callback(), void 0
			}
			this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.MOVE_PLAYER, null, [this.clickX, this.clickY]) && this.addPathingIcon(this.clickX, this.clickY)
		}
	},
	addPathingIcon: function(e, t) {
		var i = this.game.prodigy.create.sprite(e, t, "icons", "star-small");
		i.scale.setTo(0, 0), i.anchor.setTo(.5, .5), this.content.add(i), this.game.add.tween(i).to({
			alpha: 0
		}, 600, Phaser.Easing.Cubic.In, !0);
		var a = this.game.add.tween(i.scale).to({
			x: 1,
			y: 1
		}, 600, Phaser.Easing.Linear.None, !0);
		a.onComplete.add(i.destroy.bind(i))
	},
	createStoreNPC: function(e, t, i, a) {
		var s = function(e, t) {
				var i = e.prodigy.dialogue.create();
				i.setText({
					text: "Welcome to " + t.name + "! \nWant to see what I have for sale?",
					face: "0",
					yes: e.prodigy.open.store.bind(e.prodigy.open, t)
				}), i.start("merchant")
			},
			r = new Prodigy.Container.QuestNPC(this.game, this.content, e, t, null, {
				atlas: "merchant",
				name: "Merchant",
				indicator: "store"
			}, s.bind(this, this.game, i), a);
		return r
	},
	createBasicStoreNPC: function(e, t, i, a) {
		return new Prodigy.Container.QuestNPC(this.game, this.content, e, t, null, {
			atlas: "merchant",
			name: ""
		}, this.game.prodigy.open.store.bind(this.game.prodigy.open, i), a)
	},
	addNicknamer: function(e, t, i) {
		var a = this.game.prodigy.create.element(this.content, e, t),
			s = a.add(this.game.prodigy.create.sprite(0, -100, "core-2", "namer")),
			r = a.add(this.game.prodigy.create.sprite(20, -90, "core-2", "feather"));
		this.game.add.tween(r).to({
			x: 40,
			y: -98
		}, 1500, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), s.inputEnabled = !0, s.events.onInputDown.add(this.game.prodigy.open.nicknamer.bind(this.game.prodigy.open, i, this.user))
	}
});
var CutScene = function() {
	function e(e, t) {
		Screen.call(this, e, "", "zone-scene"), this.assets = t || [], this.showMenu = !1, this.sprites = []
	}
	return e.prototype = Object.create(Screen.prototype), e.prototype.shutdown = function() {
		Screen.prototype.shutdown.call(this);
		try {
			for (var e = 0; e < this.sprites.length; e++) this.sprites[e].destroy();
			this.sprites = null, this.events = null
		} catch (t) {}
	}, e.prototype.create = function() {
		Screen.prototype.create.call(this, this.assets), this.game.prodigy.player.saveEnabled = !1
	}, e.prototype.screenSetup = function(e, t, i, a) {
		this.subtitle = this.game.prodigy.create.font(this.content, 0, 660, "", {
			size: 20,
			align: "center",
			width: 1280
		}), Screen.prototype.screenSetup.call(this), this.sprites = e, this.events = t, this.endTime = i, this.endCallback = a, this.events.sort(function(e, t) {
			return e.start - t.start
		}), this.startTime = (new Date).getTime(), this.eventIndex = 0, this.timeCount = 0, this.lastTime = -1;
		var s = this.game.prodigy.create.font(this.menus, 1190, 5, "skip", {
			font: "button",
			size: 36
		});
		s.addClickCallback(this.end.bind(this), 80, 36)
	}, e.prototype.screenUpdate = function() {
		Screen.prototype.screenUpdate.call(this);
		var t = GameConstants.MAX_SAFE_INTEGER;
		if (Util.isDefined(this.game.prodigy.audio.currentBgm) && (t = this.game.prodigy.audio.currentBgm.currentTime), t > this.endTime && Util.isDefined(this.endCallback)) return this.endCallback(), void 0;
		if (t === this.lastTime ? this.timeCount++ : (this.lastTime = t, this.timeCount = 0), this.timeCount > 10) return this.endCallback(), void 0;
		for (var i = null, a = this.eventIndex; a < this.events.length; a++) {
			var s = this.events[a];
			if (!s.finish && s.start <= t) {
				Util.isDefined(i) || (i = a);
				var r = s.src;
				!s.proc && Util.isDefined(s.text) && (this.subtitle.setText(s.text), s.proc = !0, s.finish = !0), Util.isDefined(s.set) && (r[s.attr] = s.set, s.finish = !0), Util.isDefined(s.tween) && (s.start + s.tween.dur <= t ? (s.finish = !0, r[s.attr] = s.tween.to) : r[s.attr] = e.getValue(t - s.start, s.tween.start, s.tween.to - s.tween.start, s.tween.dur, s.tween.type))
			} else if (s.start > t) break
		}
		Util.isDefined(i) && (this.eventIndex = i)
	}, e
}();
CutScene.getValue = function(e, t, i, a, s) {
	return "in" === s ? (e /= a, i * e * e + t) : "out" === s ? (e /= a, -i * e * (e - 2) + t) : i * e / a + t
}, Prodigy.CharSelect = function(e) {
	var t = ["bg-battle-forest", "core-2", "attacks"];
	Util.isDefined(Util.getUrlVariable("unlock")) && (t = t.concat(["attacks", "monster-small-125", "monster-small-126", "monster-small-127", "monster-small-128", "monster-small-129"])), Screen.call(this, e, "", "zone-faint", "", t)
}, Prodigy.extends(Prodigy.CharSelect, Screen, {
	constructor: Prodigy.CharSelect,
	create: function() {
		this.game.prodigy.network.sendToyEvent("char-select", 4), Screen.prototype.create.call(this), this.game.prodigy.player.saveEnabled = !1
	},
	screenSetup: function() {
		this.background.add(this.game.prodigy.create.sprite(0, 0, "bg-battle-forest")), this.game.prodigy.create.panel(this.background, 240, 640, 20, 3, "shine2"), this.off = this.game.prodigy.create.textButton(this.background, 820, 660, {
			icon: "next",
			text: "next"
		}, this.openWorlds.bind(this)), this.game.prodigy.create.textButton(this.background, 260, 660, {
			icon: "back",
			text: "back"
		}, function() {
			this.game.state.states.Login.avoidParsingUrlParamsNextScreenSetupCall(), this.game.prodigy.start("Login")
		}.bind(this));
		var e = this.game.prodigy.create.player(this.content, this.game.prodigy.player, 2, 640, 500);
		e.reload(), e.showName(!0), this.showContentA(), this.showContentB(), Screen.prototype.screenSetup.call(this)
	},
	start: function() {
		Util.isDefined(Util.getUrlVariable("unlock")) && this.game.prodigy.open.toyUnlock(), Screen.prototype.start.call(this)
	},
	showContentA: function() {
		var e = this.contentA = this.game.prodigy.create.panel(this.content, 40, 140, 10, 10, "shine2");
		e.add(new Phaser.TileSprite(this.game, 11, 80, 378, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 120, 378, 200, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 320, 378, 40, "core", "blue-top2")), e.add(this.game.prodigy.create.sprite(20, 20, "icons", "wizard")), this.game.prodigy.create.font(e, 120, 40, "New Teacher?", {
			font: "button",
			size: 36
		}), this.game.prodigy.create.font(e, 20, 120, "Click the button below to add your character to your new class!", {
			font: "black",
			width: 360
		});
		var t = this.game.prodigy.create.textButton(e, 100, 290, {
			icon: "yes",
			text: "update"
		}, this.showClassCode.bind(this));
		if (Util.isDefined(this.game.prodigy.player.owners))
			for (var i = 0; i < this.game.prodigy.player.owners.length; i++) {
				var a = this.game.prodigy.player.owners[i];
				if (a.startDate >= 143801786e4) return this.off.highlight(!0, 0, -30), void 0
			}
		t.highlight(!0, 100)
	},
	showContentB: function() {
		var e = this.contentB = this.game.prodigy.create.panel(this.content, 840, 140, 10, 10, "shine2");
		e.add(new Phaser.TileSprite(this.game, 11, 128, 378, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 168, 378, 152, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 320, 378, 40, "core", "blue-top2")), e.add(this.game.prodigy.create.sprite(13, -5, "core-2", "epics")), this.game.prodigy.create.font(e, 20, 190, "Collect the new Prodigy Dragon toys! Click to learn more!", {
			font: "black",
			width: 360
		});
		this.game.prodigy.create.textButton(e, 50, 290, {
			size: Prodigy.Control.TextButton.MED,
			icon: "play",
			text: "learn more!"
		}, this.orderToy.bind(this))
	},
	orderToy: function() {
		Prodigy.Menu.ToyStore.openWebsite(this.game, "order-btn")
	},
	showClassCode: function() {
		this.overlay = this.content.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-small")), this.overlay.width = 1280, this.overlay.height = 720, this.overlay.alpha = .5, this.overlay.inputEnabled = !0;
		var e = this.game.prodigy.create.element(this.content, 340, 170);
		this.classCode = e, this.game.prodigy.create.panel(e, 0, 0, 12, 8), this.nextButton = Prodigy.Control.TextButton.createNextButton(this.game, e, 350, 370, this.submit.bind(this)), this.backButton = Prodigy.Control.TextButton.createCloseButton(this.game, e, 50, 370, this.closeClassCode.bind(this)), this.game.prodigy.create.font(e, 10, 25, "Enter your teacher's class code", {
			size: 30,
			width: 600,
			align: "center"
		}), this.error = this.game.prodigy.create.font(e, 0, 300, "", {
			width: 600,
			align: "center"
		}), this.codeField = Prodigy.Control.InputField.createInputField(this.game, this.content, "classcodeg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 285, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "textg"), this.codeField.setLabel(this.content, "Class Code:");
		var t = e.add(this.game.prodigy.create.sprite(40, 200, "core", "overlay-light"));
		t.alpha = .2, t.width = 520, t.height = 70, t.inputEnabled = !0, t.events.onInputDown.add(this.getCode, this), this.game.prodigy.create.font(e, 50, 210, "Teachers: Don't have a class code? Click here!", {
			size: 20,
			align: "center",
			width: 500
		}), this.spinner = e.add(this.game.prodigy.create.sprite(300, 125, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.spinner.visible = !1
	},
	closeClassCode: function() {
		this.overlay.destroy(), this.codeField.hide(0), this.classCode.destroy()
	},
	getCode: function() {
		this.codeField.clearEvents(!1), this.game.input.keyboard.clearCaptures(), prodigyWeb.getClassCode.open(this.setCode.bind(this))
	},
	setCode: function(e) {
		this.codeField.clearEvents(!0), this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.codeField.setValue(e)
	},
	validationComplete: function(e) {
		this.spinner.visible = !1, e ? this.game.prodigy.open.message("You were added to a new class!", this.classCodeComplete.bind(this), "star", "success!") : (this.backButton.visible = !0, this.nextButton.visible = !0, this.codeField.show(0), this.error.setText("That class code is not valid"))
	},
	classCodeComplete: function() {
		this.closeClassCode(), this.contentA.destroy()
	},
	submit: function() {
		var e = this.codeField.getValue();
		return e.length <= 0 ? this.error.setText("Please enter a class code") : (this.codeField.hide(0), this.error.setText(""), this.backButton.visible = !1, this.nextButton.visible = !1, this.spinner.visible = !0, this.game.prodigy.network.attachClassCode(e, this.validationComplete.bind(this, !0), this.validationComplete.bind(this, !1))), !1
	},
	openWorlds: function() {
		var e = this._screenData;
		Util.isDefined(e) ? this.game.prodigy.open.serverSelectMode(e, this.chooseServer.bind(this)) : (this.game.prodigy.network.sendAnalytics("Get-World-Fail", "", "Login-Events"), this.chooseServer(e, !1))
	},
	chooseServer: function(e, t) {
		t || (e ? this.game.prodigy.network.sendAnalytics("Socket-Success", "", "Login-Events") : this.game.prodigy.network.sendAnalytics("Socket-Fail", "", "Login-Events"), this.game.prodigy.world.enter())
	}
}), Prodigy.CharCreate = function(e) {
	Screen.call(this, e, "", "zone-faint", "", ["bg-battle-forest", "core-2"])
}, Prodigy.CharCreate.SKIN_COLORS = [1, 2, 3, 4, 5], Prodigy.CharCreate.EYE_COLORS = [1, 2, 3, 4, 6, 8], Prodigy.CharCreate.HAIR_COLORS = [1, 2, 3, 4, 5, 6], Prodigy.CharCreate.BOY_HAIR_STYLES = [19, 20, 21, 22], Prodigy.CharCreate.GIRL_HAIR_STYLES = [5, 7, 11, 13], Prodigy.extends(Prodigy.CharCreate, Screen, {
	constructor: Prodigy.CharCreate,
	create: function() {
		Screen.prototype.create.call(this), this._stage = 0
	},
	screenSetup: function() {
		this.background.add(this.game.prodigy.create.sprite(0, 0, "bg-battle-forest")), this.game.prodigy.create.panel(this.foreground, 240, 640, 20, 3, "shine2"), this.next = this.game.prodigy.create.textButton(this.foreground, 820, 660, {
			icon: "next",
			text: "next"
		}, this.offlineMode.bind(this)), this.game.prodigy.create.textButton(this.foreground, 260, 660, {
			icon: "back",
			text: "back"
		}, this.back.bind(this)), this.playerF = new Player(this.game), this.playerF.setDefault("female"), this.wizardF = this.game.prodigy.create.player(this.content, this.playerF, 2, 640, 560), this.playerM = new Player(this.game), this.playerM.setDefault("male"), this.wizardM = this.game.prodigy.create.player(this.content, this.playerM, 2, 640, 560), this.wizardM.flip(), this.wizardF.clickCallback = this.showChoices.bind(this, this.wizardF, this.wizardM), this.wizardM.clickCallback = this.showChoices.bind(this, this.wizardM, this.wizardF), this.panels = this.game.prodigy.create.element(this.content), GameConstants.get("GameConstants.Build.DEBUG") && (this.game.prodigy.automation.addTrigger({
			ID: "autoclick-female",
			context: this,
			callback: function() {
				return {
					x: this.worldPosition.x,
					y: this.worldPosition.y - 20
				}
			}.bind(this.wizardF)
		}), this.game.prodigy.automation.addTrigger({
			ID: "autoclick-male",
			context: this,
			callback: function() {
				return {
					x: this.worldPosition.x,
					y: this.worldPosition.y - 20
				}
			}.bind(this.wizardM)
		})), Screen.prototype.screenSetup.call(this)
	},
	start: function() {
		this.showWizards(), this.showDialogue(), Screen.prototype.start.call(this)
	},
	shutdown: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this), Screen.prototype.shutdown.call(this)
	},
	showDialogue: function() {
		this._dialogue = this.game.prodigy.dialogue.create(), this._dialogue.setText(49), this._dialogue.start("noot", !0, null, 0)
	},
	back: function() {
		0 === this._stage ? (this.game.state.states.Login.avoidParsingUrlParamsNextScreenSetupCall(), this.game.prodigy.start("Login")) : this.showWizards(), this._stage = 0
	},
	showWizards: function() {
		this._stage = 0, this.wizardF.visible = !0, this.wizardF.x = 490, this.wizardF.reload(), this.wizardF.highlight(!0, -50, -200), this.wizardM.visible = !0, this.wizardM.x = 790, this.wizardM.reload(), this.wizardM.highlight(!0, -50, -200), this.wizardM.isFacingLeft() || this.wizardM.flip(), this.next.setInactive(), this.next.highlight(!1), this.panels.visible = !1
	},
	showChoices: function(e, t) {
		if (0 === this._stage) {
			this.panels.visible = !0, this.next.setActive(), this.next.highlight(!0), this.game.prodigy.player.appearance = e.source.appearance, this.game.prodigy.network.player = this.game.prodigy.player, this.game.prodigy.player.appearance.setName("Apprentice"), e.highlight(!1), t.visible = !1, this._stage = 1, e.x = 640, e.isFacingLeft() && e.flip();
			var i = function(e, t, i, a) {
					t && e.source.appearance.setSkinColor(t), i && e.source.appearance.setEyeColor(i), a && e.source.appearance.setHair(null, a), e.reload(), e.chat(this.game.seededRandom.pick([10]), 150)
				},
				a = 180,
				s = this.game.prodigy.create.element(this.panels, 760, 280 + a),
				r = this.game.prodigy.create.panel(s, 0, 0, 5, 3, "panel-light"),
				n = r.add(this.game.prodigy.create.sprite(1, 80, "core", "panel-pointer"));
			n.scale.x = n.scale.y = -1, this.game.prodigy.create.font(s, 0, -18, "Skin Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.CharCreate.SKIN_COLORS.length; o++) {
				var h = Prodigy.CharCreate.SKIN_COLORS[o],
					l = this.game.prodigy.create.button(s, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, h, null, null));
				l.sprite.tint = Util.rgbArrayToHex(Items.getItemData("skinColor", h).colors[1])
			}
			s = this.game.prodigy.create.element(this.panels, 760, 80 + a), r = this.game.prodigy.create.panel(s, 0, 0, 5, 3, "panel-light");
			var n = r.add(this.game.prodigy.create.sprite(1, 100, "core", "panel-pointer"));
			n.scale.x = -1, this.game.prodigy.create.font(s, 0, -18, "Eye Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.CharCreate.EYE_COLORS.length; o++) {
				var h = Prodigy.CharCreate.EYE_COLORS[o],
					d = this.game.prodigy.create.button(s, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, null, h, null));
				d.sprite.tint = Util.rgbArrayToHex(Items.getItemData("eyeColor", h).colors[0])
			}
			s = this.game.prodigy.create.element(this.panels, 270, 280 + a), r = this.game.prodigy.create.panel(s, 0, 0, 5, 3, "panel-light"), r.add(this.game.prodigy.create.sprite(249, 80, "core", "panel-pointer")).scale.y = -1, this.game.prodigy.create.font(s, 0, -18, "Hair Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.CharCreate.HAIR_COLORS.length; o++) {
				var h = Prodigy.CharCreate.HAIR_COLORS[o],
					c = this.game.prodigy.create.button(s, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, null, null, h));
				c.sprite.tint = Util.rgbArrayToHex(Items.getItemData("hairColor", h).colors[2])
			}
			var p = function(e, t) {
				t.source.appearance.setHair(e), t.reload(), t.chat(this.game.seededRandom.pick([10]), 150)
			};
			s = this.game.prodigy.create.element(this.panels, 270, 80 + a), r = this.game.prodigy.create.panel(s, 0, 0, 5, 3, "panel-light"), r.add(this.game.prodigy.create.sprite(249, 100, "core", "panel-pointer")), this.game.prodigy.create.font(s, 0, -18, "Hair Styles", {
				width: 250,
				align: "center"
			});
			for (var g = "male" === e.source.appearance.getGender() ? Prodigy.CharCreate.BOY_HAIR_STYLES : Prodigy.CharCreate.GIRL_HAIR_STYLES, o = 0; o < g.length; o++) {
				var c = this.game.prodigy.create.button(s, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", p.bind(this, g[o], e));
				this.game.prodigy.create.font(c, 12, 4, "" + (o + 1), {
					size: 36,
					font: "button"
				}), c.sprite.tint = 8969872
			}
		}
	},
	offlineMode: function() {
		delete this.game.prodigy.player.data.reset,
		this.game.prodigy.player.data.school = "none",
		this.game.prodigy.player.data.startDate = (new Date).getTime(),
		this.game.prodigy.player.registerDate = new Date(this.game.prodigy.player.data.startDate),
		this.game.prodigy.world.enter()
	},
	openWorlds: function() {
		this._dialogue.close();
		var e = this._screenData;
		Util.isDefined(e) ? this.game.prodigy.open.serverSelectMode(e, this.chooseServer.bind(this)) : (this.game.prodigy.network.sendAnalytics("Get-World-Fail", "", "Login-Events"), this.chooseServer(e, !1))
	},
	chooseServer: function(e, t) {
		return t ? (this.showDialogue(), void 0) : (this._dialogue.close(), e ? this.game.prodigy.network.sendAnalytics("Socket-Success", "", "Login-Events") : this.game.prodigy.network.sendAnalytics("Socket-Fail", "", "Login-Events"), delete this.game.prodigy.player.data.reset, this.game.prodigy.player.data.school = "none", this.game.prodigy.player.data.startDate = (new Date).getTime(), this.game.prodigy.world.enter(), void 0)
	}
});
var TileScreen = function() {
		function e(e) {
			WalkableScreen.call(this, e, {}), this.area = [
				[]
			], this.battleHistory = [], this.tileSize = 20, this.game = e
		}
		return e.DEBUG_DRAW_AREA_EVENTS = !1, e.prototype = Object.create(WalkableScreen.prototype), e.prototype.shutdown = function() {
			try {
				Util.isNullOrUndefined(this.previousZone) || this.previousZone.cleanup(), Util.isNullOrUndefined(this.previousData) || this.previousData.cleanup()
			} catch (e) {
				Util.log("Error destroying TileScreen.", Util.ERROR)
			}
			GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.removeAllTriggers(this), WalkableScreen.prototype.shutdown.call(this)
		}, e.prototype.initMap = function(e, t, i, a) {
			this.previousData = this.data, this.previousZone = this.zone, this.data = e, this.zone = t, this.zoneName = e._zoneName, this.fullName = e._name, this.startX = i || e._x, this.startY = a || e._y, this._isMap = !0
		}, e.prototype.initScene = function(e, t) {
			this.data = e, this.zone = t, this.zoneName = "scene-" + this.game.prodigy.player.userID, this.fullName = "", this._isMap = !1
		}, e.prototype.create = function() {
			this.game.broadcaster.broadcast(Prodigy.Events.NetworkHandlers.SETUP, "NetworkHandlers", []), WalkableScreen.prototype.create.call(this, this.zoneName)
		}, e.prototype.screenSetup = function() {
			this.events = [], this.user.evtProc = !0, this.zone.init(this.game, this, this.data);
			var e = this.game.prodigy.skin.init(this);
			for (var t in e) "bgm" === t && (this.zone.bgm = e.bgm);
			this.area = this.data.init(this.game, this.tmpBelow, this.tmpAbove, this), this.data._battleBG = Util.isDefined(this.zone.battleBG) ? this.zone.battleBG : this.data._battleBG;
			var i = this.zone.setup(this.game, this, this.data);
			i && i.quit || (this.path.init(this.area, this.tileSize), this.data.setup(this.game, this, i), this._isMap && (this.questProgress = new QuestProgress(this.game, this.menus, this.user)), this.game.prodigy.textureBelow.clear(), this.game.prodigy.textureBelow.renderXY(this.tmpBelow, 0, 0, !0), this.below.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureBelow)), this.game.prodigy.textureAbove.clear(), this.game.prodigy.textureAbove.renderXY(this.tmpAbove, 0, 0, !0), this.above.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureAbove)), this.data.processAnimations(this.game, this), this.tmpBelow.destroy(), this.tmpAbove.destroy(), this.data.processDynamicLayers(this.game, this), WalkableScreen.prototype.screenSetup.call(this, !0, !0))
		}, e.prototype.start = function(e, t) {
			return e ? !t && this._isMap ? (WalkableScreen.prototype.start.call(this, null), this.processPopups(this.start.bind(this, !0, !0)), void 0) : (this.user.evtProc = !1, this.zone.start(this.game, this, this.data), this.data.start(this.game, this), this.process(), this.game.prodigy.skin.apply(this), WalkableScreen.prototype.start.call(this, null), void 0) : (this.fadeIn(), void 0)
		}, e.prototype.createBackground = function() {
			var e = this.background.add(this.game.prodigy.create.sprite(0, 0));
			e.width = 1280, e.height = 720, e.inputEnabled = !0, e.events.onInputDown.add(this.listener.bind(this), this), this.tmpBelow = this.game.prodigy.create.element(this.background, 0, 0), this.tmpAbove = this.game.prodigy.create.element(this.foreground, 0, 0), this.below = this.game.prodigy.create.element(this.background, 0, 0), this.above = this.game.prodigy.create.element(this.foreground, 0, 0), this.floor = this.game.prodigy.create.element(this.background, 0, 0)
		}, e.prototype.screenUpdate = function() {
			WalkableScreen.prototype.screenUpdate.call(this), Util.isDefined(this.data) && (Util.isDefined(this.zone) && this.zone.update(this.game, this, this.data), this.data.update(this.game))
		}, e.prototype.addEvent = function(e, t) {
			GameConstants.get("GameConstants.Build.DEBUG") && this.game.prodigy.automation.addTrigger({
				ID: "autoclick-mapEvent-" + t,
				context: this,
				callback: function() {
					return {
						x: this.x,
						y: this.y
					}
				}.bind(e)
			})
		}, e.prototype.addAreaEvent = function(t, i, a, s, r) {
			var n = new AreaEvent(this.game, this.floor, t, this.user, this.path, i, a, s, r);
			return this.events.push(n), this.addEvent(n, "areaEvent"), (s || GameConstants.get("GameConstants.Build.DEBUG") && e.DEBUG_DRAW_AREA_EVENTS) && this.tmpBelow.add(n.getOverlay()), n
		}, e.prototype.addHealStone = function(e, t) {
			var i = new Prodigy.Event.HealStone(this.game, this.content, this.user, this.path, e, t);
			return this.events.push(i), this.addEvent(i, "healStone"), i
		}, e.prototype.addQuestNPC = function(e, t, i, a, s) {
			var r = new Prodigy.QuestEvent(this.game, this.content, this, this.zone, e, t, i, a, this.process.bind(this), s);
			return r.setup(this.zone, i, a), this.events.push(r), this.addEvent(r, i), r
		}, e.prototype.addConstructedQuestNPC = function(e, t, i, a, s) {
			var r;
			return "benni" === i ? (r = new Prodigy.BenniEvent(this.game, this.content, this, this.zone, e, t, i, a, this.process.bind(this), s), r.setup(this.zone, i, a)) : "flora" === i ? (r = new Prodigy.FloraEvent(this.game, this.content, this, this.zone, e, t, i, a, this.process.bind(this), s), r.setup(this.zone, i, a)) : "eve" === i && (r = new Prodigy.EveEvent(this.game, this.content, this, this.zone, e, t, i, a, this.process.bind(this), s), r.setup(this.zone, i, a)), this.events.push(r), this.addEvent(r, i), r
		}, e.prototype.addClickableEvent = function(e, t, i, a, s, r, n, o) {
			var h = new Prodigy.ClickableEvent(this.game, o || this.content, e, t, i, a, s, r, n);
			return this.events.push(h), this.addEvent(h, "clickable"), h
		}, e.prototype.addClickableMoveEvent = function(e, t, i, a, s, r, n, o, h, l) {
			var d = {
					moveToX: s,
					moveToY: r,
					addPathingIconFunction: this.addPathingIcon.bind(this)
				},
				c = new Prodigy.ClickableMoveEvent(this.game, l || this.content, e, t, i, a, d, n, o, h);
			return this.events.push(c), this.addEvent(c, "clickableMove"), c
		}, e.prototype.addClickableArea = function(e, t, i, a, s) {
			var r = {
				x: e,
				y: t,
				w: i,
				h: a,
				callback: s
			};
			this.clickAreas.push(r), this.addEvent(r, "clickArea")
		}, e.prototype.addFireflyEvent = function(e, t, i, a, s, r, n) {
			var o = new Prodigy.FireflyEvent(this.game, this.foreground, e, t, i, a, s, r, n);
			return this.events.push(o), this.addEvent(o, "firefly"), o
		}, e.prototype.addChest = function(e, t, i, a, s, r) {
			var n = new Prodigy.Event.Chest(this.game, this.content, t, i, this.user, this.path, e, a, s, this.process.bind(this), r);
			return this.events.push(n), this.addEvent(n, "chest"), n
		}, e.prototype.addMimic = function(e, t, i, a, s, r) {
			var n = new Prodigy.Event.MimicEvent(this.game, this.content, t, i, this.user, this.path, e, a, s, r);
			return this.events.push(n), this.addEvent(n, "mimic"), n
		}, e.prototype.addCollect = function(e, t, i, a) {
			var s = function() {
					this.preprocess();
					for (var t = 0; t < this.events.length; t++) this.events[t].ID === e && this.events.splice(t, 1);
					this.process(!1)
				},
				r = new CollectEvent(this.game, this.content, t, i, this.user, this.path, e, a, s.bind(this));
			return this.events.push(r), this.addEvent(r, "collect"), r
		}, e.prototype.addMonster = function(e, t, i, a, s, r, n, o) {
			s.minLevel = this.zone.minLevel, s.maxLevel = this.zone.maxLevel;
			var h = new MonsterEvent(this.game, this.content, t, i, this.user, this.path, e, s, a, r, n, o, this);
			return this.events.push(h), this.addEvent(h, "monster"), h
		}, e.prototype.addPippet = function(e, t, i) {
			var a = new Prodigy.Container.Pippet(this.game, this.content, t, i, this.user, this.path, e);
			return this.events.push(a), this.addEvent(a, "pippet"), a
		}, e.prototype.addBounty = function(e, t, i, a, s, r, n) {
			s.minLevel = this.zone.minLevel, s.maxLevel = this.zone.maxLevel;
			var o = new BountyEvent(this.game, this.content, t, i, this.user, this.path, e, s, a, r, n);
			return this.events.push(o), this.addEvent(o, "bounty"), o
		}, e.prototype.addWizard = function(e, t, i, a) {
			var s = new WizardEvent(this.game, this.content, e, t, this.user, this.path, i, a);
			return this.events.push(s), this.addEvent(s, "wizard"), s
		}, e.prototype.addNPC = function(e, t, i, a, s, r) {
			var n = new NPCEvent(this.game, r ? r : this.content, e, t, i, a, s);
			return this.events.push(n), this.addEvent(n, i), n
		}, e.prototype.addConstructedNPC = function(e, t, i, a, s, r) {
			var n;
			switch (i) {
				case "npc-sprite-jim":
					n = new Prodigy.JellyJimEvent(this.game, this.content, e, t, i, a, s);
					break;
				case "npc-sprite-broccolina":
					n = new Prodigy.BroccolinaEvent(this.game, this.content, e, t, i, a, s);
					break;
				case "npc-sprite-eugene":
					n = new Prodigy.EugeneEvent(this.game, this.content, e, t, i, a, s);
					break;
				case "npc-sprite-morris":
					n = new Prodigy.MorrisEvent(this.game, this.content, e, t, i, a, s);
					break;
				case "npc-sprite-cebollini":
					n = new Prodigy.CebolliniEvent(this.game, r ? r : this.content, e, t, i, a, s);
					break;
				case "npc-sprite-worker-slime":
					n = new Prodigy.WorkerSlimeEvent(this.game, this.content, e, t, i, a, s, -20, 0);
					break;
				case "npc-sprite-worker-slime-red":
					n = new Prodigy.WorkerSlimeEvent(this.game, this.content, e, t, i, a, s);
					break;
				default:
					Util.log("Add Constructed NPC failed: Tag not found", Util.ERROR)
			}
			return this.events.push(n), this.addEvent(n, i), n
		}, e.prototype.addGnome = function(e, t, i, a, s, r) {
			var n = new GnomeEvent(this.game, this.content, this.user, this.path, e, t, i, a, s, r);
			return this.events.push(n), this.addEvent(n, i), n
		}, e.prototype.addBlock = function(e, t, i) {
			var a = new Prodigy.Event.Block(this.game, i.content ? this.content : this.background, e, t, this.path, i);
			return this.events.push(a), this.addEvent(a, "block"), a
		}, e.prototype.preprocess = function() {
			var e = this.zone.getQuestState(),
				t = Util.isDefined(e) ? this.zone.getQuest(e.ID) : null,
				i = Util.isDefined(t) && this.zone.isQuestComplete(e.ID),
				a = Util.isDefined(t) && this.zone.isQuestStarted(e.ID),
				s = [],
				r = [];
			a && (r = i && !t.chain && Util.isDefined(this.zone.questHub) ? [this.zone.questHub] : this.zone.getRemainingQuestAreas(e.ID));
			for (var n = 0; n < r.length; n++) s.push({
				event: null,
				distance: 9999999
			});
			for (n = 0; n < this.events.length; n++)
				if (Util.isDefined(this.events[n].process) && !this.events[n].isBlocked)
					if (a && this.events[n] instanceof AreaEvent && r.length > 0)
						for (var o = 0; o < r.length; o++) {
							var h = this.events[n].process(this.zone, this.data, r[o]);
							h < s[o].distance && Util.isDefined(h) && (s[o].distance = h, s[o].event = this.events[n])
						} else this.events[n].process(this.zone, this.data);
			s.sort(function(e, t) {
				return e.distance - t.distance
			});
			var l = 9999999;
			for (n = 0; n < s.length && !(s[n].distance > l); n++) l = s[n].distance, Util.isDefined(s[n].event) && Util.isDefined(s[n].event.setClosest) && s[n].distance > 1 && s[n].event.setClosest()
		}, e.prototype.process = function(e) {
			e || this.preprocess();
			var t = this.data._zoneName,
				i = Util.isDefined(this.data._zoneName) && t.indexOf("house") > -1 && -1 === t.indexOf("exit") && (t.indexOf(this.game.prodigy.player.userID) > -1 || t.indexOf("undefined") > -1);
			this.menuBar.open(0, i), this._isMap && this.questProgress.process(this.zone, this.data), this.zone.process(this.game, this, this.data), this.data.process(this.game, this, this.zone)
		}, e.prototype.showCollisions = function(e) {
			if (Util.isDefined(this.menus) && (this.menus.removeAll(!0), e)) {
				for (var t = new Phaser.Group(this.game), i = 0; 64 > i; i++)
					for (var a = 0; 36 > a; a++)
						if (!this.path.isNodeOpen(i, a)) {
							var s = t.add(this.game.prodigy.create.sprite(20 * i, 20 * a, "core", "overlay-light"));
							s.width = 20, s.height = 20, s.alpha = .2, s.tint = 12255232
						} this.game.prodigy.textureMenu.clear(), this.game.prodigy.textureMenu.renderXY(t, 0, 0, !0), this.menus.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureMenu)), t.destroy()
			}
		}, e
	}(),
	Faint = function() {
		function e(e) {
			Screen.call(this, e, "So Sleepy...", "zone-faint", "", []), this.showMenu = !1, this.targetZone = ""
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.create = function() {
			Screen.prototype.create.call(this), this.game.prodigy.player.saveEnabled = !1
		}, e.prototype.start = function() {
			this.game.prodigy.player.heal(), this.game.prodigy.player.changeGold(-100, "Faint");
			var e = this.game.prodigy.dialogue.create();
			e.setText(22), e.setText(23), e.setText({
				callback: this.toZone.bind(this)
			}), e.start("noot"), Screen.prototype.start.call(this)
		}, e.prototype.toZone = function() {
			Util.isDefined(this.targetZone) && 0 != this.targetZone.length ? this.targetZone.indexOf("-") > -1 ? this.game.prodigy.world.teleport(this.targetZone) : (delete this.game.state.states[this.targetZone].startX, delete this.game.state.states[this.targetZone].startY, this.game.prodigy.start(this.targetZone)) : this.game.prodigy.world.teleport("house")
		}, e
	}();
Prodigy.Skin = function(e, t, i) {
	this.game = e, this.assets = t, this.locations = i, this.overrideNames = {}, this.eventHub = "lamplight-B3"
}, Prodigy.Skin.prototype = {
	constructor: Prodigy.Skin,
	getOverrideName: function(e) {
		return this.overrideNames[e]
	},
	active: function(e) {
		for (var t = 0; t < this.locations.length; t++)
			if (this.locations[t] === e) return this.game.prodigy.player.backpack.hasItem("key", 13);
		return !1
	},
	getButtons: function() {
		return []
	},
	getAssets: function(e) {
		var t = [];
		return Util.isDefined(this.getOverrideName(e)) && (t = t.concat(this.getOverrideName(e))), this.assets.concat(t)
	},
	init: function() {},
	apply: function() {}
}, Prodigy.GameEvent = function(e, t, i) {
	Prodigy.Skin.call(this, e, t, i), this.eventName = "", this.shopkeeperName = "", this.overrideNames = {}, this.dailyPlacements = [], this.daily = "daily", this.intro = "intro", this.dailyMonsters = [], this.dailyDrops = [], this.canDoDaily = !1, this.battleTPCoordinates = [640, 320], this.dailyEventSize = new Phaser.Point(40, 40), this.dailyHighlighterOffset = new Phaser.Point(-40, 0)
}, Prodigy.extends(Prodigy.GameEvent, Prodigy.Skin, {
	constructor: Prodigy.GameEvent,
	init: function(e) {
		var t = this.game.prodigy.player.canDoDaily(this.daily, this.resetDaily.bind(this, this.game.prodigy.player)),
			i = this.game.prodigy.player.data[this.daily],
			a = Util.isDefined(i) && Util.isDefined(i.dailyLocation) && Util.isDefined(i.dailyLocation[e.saveTag]);
		this.canDoDaily = t && a, Prodigy.Skin.prototype.init.call(this, e)
	},
	apply: function(e) {
		Prodigy.Skin.prototype.apply.call(this, e)
	},
	setIntroState: function(e, t) {
		e.data[this.daily][this.intro] = t, e.updated = !0
	},
	signOnInputDown: function(e, t, i, a, s) {
		var r = this.game.prodigy.player.data[this.daily];
		Util.isDefined(r) && 1 === r.isComplete && 1 !== this.game.prodigy.player.eventSignClicked && 1 !== r.signClickedAndDailyCompleted && (this.game.prodigy.network.sendAnalytics("Sign-Clicked-And-Daily-Completed"), r.signClickedAndDailyCompleted = 1), this.game.prodigy.player.eventSignClicked = 1, this.game.prodigy.open.message(e, t, i, a, null, s)
	},
	placeDaily: function(e, t) {
		var i = this.game.prodigy.player.data[this.daily].dailyLocation;
		if (Util.isDefined(i) && Util.isDefined(i[t])) {
			var a = null;
			if (this.canDoDaily) {
				var s = i[t][0],
					r = i[t][1];
				a = this.game.prodigy.create.element(e.content, s, r), e.addClickableEvent(s, r, this.dailyEventSize.x, this.dailyEventSize.y, this.revealDailyMonster.bind(this, e, t), null, 0, null), a.highlight(!0, this.dailyHighlighterOffset.x, this.dailyHighlighterOffset.y), a.arrow.frameName = "exclamation"
			}
		}
	},
	resetDaily: function(e) {
		e.data[this.daily].monsterID = this.dailyMonsters[Math.floor(Math.random() * this.dailyMonsters.length)], e.data[this.daily].dailyLocation = this.dailyPlacements[Math.floor(Math.random() * this.dailyPlacements.length)]
	},
	revealDailyMonster: function(e, t, i) {
		i = i || [0, 0];
		var a = this.game.prodigy.player.data[this.daily].dailyLocation,
			s = a[t];
		this.battleTPCoordinates = [s[0] + i[0], s[1] + i[1]];
		var r = this.game.prodigy.event.create();
		r.validPath(e.user, e.path, this.battleTPCoordinates[0], this.battleTPCoordinates[1]), r.function(e.user.faceToward.bind(e.user, s[0])), r.enableInput(!1), r.function(e.user.chat.bind(e.user, 1)), r.delay(2e3), r.enableInput(!0), r.function(this.startDailyBattle.bind(this, t)), r.start()
	},
	startDailyBattle: function(e) {
		var t = {
			drops: this.dailyDrops,
			dropsDisabled: !0,
			allowMember: !1,
			run: !0,
			"catch": !1,
			screen: "bg-battle-academy",
			invincible: !1,
			pets: [{
				ID: this.game.prodigy.player.data[this.daily].monsterID
			}]
		};
		this.game.prodigy.battle.start(t, this.runaway.bind(this, e), this.dailyBattleComplete.bind(this, e), null, this.eventHub)
	},
	runaway: function(e) {
		this.game.prodigy.world.teleport(e, this.battleTPCoordinates[0], this.battleTPCoordinates[1])
	},
	dailyBattleComplete: function(e) {
		var t = this.game.prodigy.player.data[this.daily];
		Util.isDefined(t.totalCompleted) ? t.totalCompleted++ : (t.totalCompleted = 1, 1 === this.game.prodigy.player.eventSignClicked && (this.game.prodigy.network.sendAnalytics("Sign-Clicked-And-Daily-Completed"), t.signClickedAndDailyCompleted = 1)), this.game.prodigy.network.sendAnalytics(this.eventName.replace(/ /g, "-") + "-Daily", "Complete", "Events"), this.game.prodigy.player.completeDaily(this.daily, 1), this.game.prodigy.world.teleport(e, this.battleTPCoordinates[0], this.battleTPCoordinates[1])
	},
	openStore: function(e) {
		if (Util.isDefined(this.shopkeeperTag) && Util.isDefined(e)) {
			var t = {
				shopkeeperTag: "npc-face-" + this.shopkeeperTag,
				scaleX: .89,
				scaleY: .89
			};
			this.game.prodigy.open.store(this.game.prodigy.stores.getStore(e), null, t, this.purchasedEventItem.bind(this))
		}
	},
	purchasedEventItem: function() {
		var e = this.game.prodigy.player.data[this.daily];
		Util.isDefined(e.purchasedEventItems) ? e.purchasedEventItems++ : e.purchasedEventItems = 1, e.boughtEventItem++
	},
	teleportToEvent: function(e) {
		this.game.prodigy.world.teleport(Util.isDefined(e) ? e : this.eventHub)
	}
}), Prodigy.Pumpkinfest = function(e) {
	this.shopkeeperTag = "julia_ghoulia", Prodigy.GameEvent.call(this, e, ["tileset-town-october", "event-pumpkinfest", "npc-sprite-" + this.shopkeeperTag], ["lamplight-A2", "lamplight-A3", "lamplight-A4", "lamplight-B0", "lamplight-B1", "lamplight-B2", "lamplight-B3", "lamplight-B4", "lamplight-B5", "lamplight-C2", "lamplight-C3", "lamplight-C4"]), this.overrideNames = {
		"lamplight-A2": "map-lamplight-a2-pumpkinfest",
		"lamplight-A3": "map-lamplight-a3-pumpkinfest",
		"lamplight-A4": "map-lamplight-a4-pumpkinfest",
		"lamplight-B0": "map-lamplight-b0-pumpkinfest",
		"lamplight-B1": "map-lamplight-b1-pumpkinfest",
		"lamplight-B2": "map-lamplight-b2-pumpkinfest",
		"lamplight-B3": "map-lamplight-b3-pumpkinfest",
		"lamplight-B4": "map-lamplight-b4-pumpkinfest",
		"lamplight-B5": "map-lamplight-b5-pumpkinfest",
		"lamplight-C2": "map-lamplight-c2-pumpkinfest",
		"lamplight-C3": "map-lamplight-c3-pumpkinfest",
		"lamplight-C4": "map-lamplight-c4-pumpkinfest"
	}, this.dailyPlacements = [{
		"lamplight-A2": [440, 440],
		pumpkin: 3
	}, {
		"lamplight-A3": [268, 251],
		pumpkin: 5
	}, {
		"lamplight-A4": [1160, 320],
		pumpkin: 4
	}, {
		"lamplight-B2": [140, 220],
		pumpkin: 5
	}, {
		"lamplight-B3": [400, 600],
		pumpkin: 2
	}, {
		"lamplight-B4": [1080, 320],
		pumpkin: 1
	}, {
		"lamplight-B5": [480, 240],
		pumpkin: 3
	}, {
		"lamplight-C2": [760, 360],
		pumpkin: 2
	}, {
		"lamplight-C3": [280, 360],
		pumpkin: 1
	}, {
		"lamplight-C4": [1e3, 440],
		pumpkin: 4
	}], this.daily = "pumpkinfestDaily", this.dailyMonsters = [20, 78, 81, 84, 87, 90, 92], this.dailyDrops = [{
		type: "currency",
		ID: 2,
		N: 10
	}], this.canDoDaily = !1, this.eventName = "Pumpkinfest"
}, Prodigy.extends(Prodigy.Pumpkinfest, Prodigy.GameEvent, {
	constructor: Prodigy.Pumpkinfest,
	getButtons: function() {
		var e = Prodigy.GameEvent.prototype.getButtons();
		return this.game.prodigy.player.backpack.hasItem("key", 13) && (e = e.concat([{
			key: "icons-hud",
			frameName: "pumpkinfest-0",
			callback: this.game.prodigy.open.confirm.bind(this.game.prodigy.open, "Do you want to travel to town and take part in " + this.eventName + "?", this.teleportToEvent.bind(this))
		}])), e
	},
	apply: function(e) {
		Prodigy.GameEvent.prototype.apply.call(this, e);
		var t = "event-pumpkinfest",
			i = e.saveTag;
		if ("lamplight-B3" === i) {
			var a = e.background.add(this.game.prodigy.create.sprite(608, 165, t, "event-sign"));
			a.inputEnabled = !0, a.events.onInputDown.add(this.signOnInputDown.bind(this, "Each day, some tricksters are putting out the light of a pumpkin somewhere in Lamplight Town.\n\nIf you find that pumpkin, click on it, and defeat the trickster. You will receive a big prize of candy corn cash if you do!", null, null, "Pumpkinfest Daily Task"));
			var s = e.addNPC(890, 500, "npc-sprite-" + this.shopkeeperTag, this.talkToShopkeeper.bind(this), "Julia Ghoulia", null);
			s.float(!0);
			var r = e.foreground.add(this.game.prodigy.create.sprite(930, 380, t, "event-shop"));
			r.inputEnabled = !0, r.input.pixelPerfectClick = !0, r.events.onInputDown.add(this.talkToShopkeeper, this), this.addCandleFlame(e, 40, 200, !0), this.addCandleFlame(e, 440, 80, !0), this.addCandleFlame(e, 520, 80, !1), this.addCandleFlame(e, 760, 80, !0)
		} else "lamplight-A2" === i ? (this.addCandleFlame(e, 80, 80, !0), this.addCandleFlame(e, 240, 80, !0), this.addCandleFlame(e, 240, 240, !0), this.addCandleFlame(e, 80, 240, !0), this.addCandleFlame(e, 600, 400, !0), this.addCandleFlame(e, 680, 400, !1)) : "lamplight-C3" === i ? (this.addCandleFlame(e, 360, 360, !1), this.addCandleFlame(e, 400, 360, !0), this.addCandleFlame(e, 640, 360, !0)) : "lamplight-A4" === i ? (this.addCandleFlame(e, 40, 360, !0), this.addCandleFlame(e, 240, 360, !1)) : "lamplight-B4" === i ? (this.addCandleFlame(e, 0, 280, !0), this.addCandleFlame(e, 80, 280, !1), this.addCandleFlame(e, 1040, 280, !1), this.addCandleFlame(e, 1200, 280, !0)) : "lamplight-B5" === i ? (this.addCandleFlame(e, 280, 200, !1), this.addCandleFlame(e, 320, -40, !0), this.addCandleFlame(e, 400, 0, !1)) : "lamplight-C4" === i && (this.addCandleFlame(e, 40, 280, !0), this.addCandleFlame(e, 280, 280, !1), this.addCandleFlame(e, 720, 360, !0), this.addCandleFlame(e, 1e3, 360, !1));
		var n = this.game.prodigy.player.state.get("zone-lamplight");
		Util.isDefined(n) && Util.isDefined(n.quest) && n.quest.ID > 1 && this.placeDaily(e, i)
	},
	addCandleFlame: function(e, t, i, a) {
		var s = "event-pumpkinfest",
			r = [];
		a ? (r.push(e.background.add(this.game.prodigy.create.sprite(t + 24, i + 1.5, s, "flame-1"))), r.push(e.background.add(this.game.prodigy.create.sprite(t + 44, i + 15, s, "flame-1"))), r.push(e.background.add(this.game.prodigy.create.sprite(t + 36, i + 29, s, "flame-1")))) : r.push(e.background.add(this.game.prodigy.create.sprite(t + 13, i + 8, s, "flame-1")));
		for (var n = [], o = 0; o < r.length; o++) n.push(o % 2 === 0 ? "flame1" : "flame2");
		for (var h = 0, l = 0; n.length > 0;) {
			l = Math.floor(Math.random() * n.length);
			var d = n[l];
			n.splice(l, 1), r[h].animations.add("fire", "flame-1" === d ? ["flame-1", "flame-2"] : ["flame-2", "flame-1"], Math.floor(4 * Math.random()) + 2, !0, !1), r[h].animations.play("fire"), h++
		}
		return r
	},
	talkToShopkeeper: function() {
		var e = this.game.prodigy.player.data[this.daily],
			t = this.game.prodigy.event.create();
		Util.isDefined(e) && 1 === e[this.intro] ? t.text(0, this.shopkeeperTag) : (t.text(1, this.shopkeeperTag), t.text(2, this.shopkeeperTag), t.text(3, this.shopkeeperTag), t.text(4, this.shopkeeperTag), t.text(5, this.shopkeeperTag), t.function(this.setIntroState.bind(this, this.game.prodigy.player, 1))), t.function(this.openStore.bind(this, this.game.prodigy.stores.SHOPS.PUMPKINFEST_SHOP)), t.start()
	},
	placeDaily: function(e, t) {
		var i = this.game.prodigy.player.data[this.daily].dailyLocation;
		if (Util.isDefined(i) && Util.isDefined(i[t])) {
			var a = null,
				s = null,
				r = 1;
			if (this.canDoDaily) {
				var n = i[t][0],
					o = i[t][1];
				a = this.game.prodigy.create.element(e.content, n, o);
				for (var h = 0; h < this.dailyPlacements.length; h++) {
					var l = this.dailyPlacements[h];
					Util.isDefined(l[t]) && (r = l.pumpkin)
				}
				s = a.add(this.game.prodigy.create.sprite(0, 0, "event-pumpkinfest", "pumpkin-" + r)), s.inputEnabled = !0, s.events.onInputDown.add(this.revealDailyMonster.bind(this, e, t)), a.highlight(!0, -20 + (5 === r ? -20 : 0), -20), a.arrow.frameName = "exclamation"
			}
		}
	},
	revealDailyMonster: function(e, t) {
		var i = [20, 77.5];
		Util.isDefined(this.game.prodigy.player.data[this.daily].dailyLocation["lamplight-B3"]) && (i = [-20, 0]), Prodigy.GameEvent.prototype.revealDailyMonster.call(this, e, t, i)
	}
}), Prodigy.StarlightFestival = function(e) {
	Prodigy.GameEvent.call(this, e, ["tileset-town-november", "event-starlight_festival", "npc-sprite-" + this.shopkeeperTag], ["lamplight-A2", "lamplight-A3", "lamplight-A4", "lamplight-B0", "lamplight-B1", "lamplight-B2", "lamplight-B3", "lamplight-B4", "lamplight-B5", "lamplight-C2", "lamplight-C3", "lamplight-C4"]), this.shopkeeperTag = "mama_star", this.eventName = "Starlight Festival", this.overrideNames = {
		"lamplight-A2": "map-lamplight-a2-starlight_festival",
		"lamplight-A3": "map-lamplight-a3-starlight_festival",
		"lamplight-A4": "map-lamplight-a4-starlight_festival",
		"lamplight-B0": "map-lamplight-b0-starlight_festival",
		"lamplight-B1": "map-lamplight-b1-starlight_festival",
		"lamplight-B2": "map-lamplight-b2-starlight_festival",
		"lamplight-B3": "map-lamplight-b3-starlight_festival",
		"lamplight-B4": "map-lamplight-b4-starlight_festival",
		"lamplight-B5": "map-lamplight-b5-starlight_festival",
		"lamplight-C2": "map-lamplight-c2-starlight_festival",
		"lamplight-C3": "map-lamplight-c3-starlight_festival",
		"lamplight-C4": "map-lamplight-c4-starlight_festival"
	}, this.dailyPlacements = [{
		"lamplight-A2": [1080, 640],
		pathOffset: [0, -60]
	}, {
		"lamplight-A3": [40, 440],
		pathOffset: [70, 30]
	}, {
		"lamplight-A4": [120, 600],
		pathOffset: [40, -40]
	}, {
		"lamplight-B2": [440, 520],
		pathOffset: [20, -50]
	}, {
		"lamplight-B3": [80, 680],
		pathOffset: [50, -50]
	}, {
		"lamplight-B4": [960, 600],
		pathOffset: [0, -20]
	}, {
		"lamplight-B5": [40, 360],
		pathOffset: [40, -5]
	}, {
		"lamplight-C2": [40, 520],
		pathOffset: [90, 40]
	}, {
		"lamplight-C3": [280, 600],
		pathOffset: [90, 30]
	}, {
		"lamplight-C4": [360, 120],
		pathOffset: [-90, 68]
	}], this.daily = "starlightFestivalDaily", this.dailyMonsters = [20, 50, 75, 107, 84], this.dailyDrops = [{
		type: "currency",
		ID: 10,
		N: 10
	}]
}, Prodigy.extends(Prodigy.StarlightFestival, Prodigy.GameEvent, {
	constructor: Prodigy.StarlightFestival,
	getButtons: function() {
		var e = Prodigy.GameEvent.prototype.getButtons();
		return this.game.prodigy.player.backpack.hasItem("key", 13) && e.push({
			key: "icons-hud",
			frameName: "starlight-festival",
			callback: this.game.prodigy.open.confirm.bind(this.game.prodigy.open, "Do you want to travel to town and take part in the " + this.eventName + "?", this.teleportToEvent.bind(this))
		}), e
	},
	init: function(e) {
		Prodigy.GameEvent.prototype.init.call(this, e), "lamplight-B3" !== e.saveTag ? (e.zone.enableLayer(1, this.canDoDaily), e.zone.enableLayer(0, !this.canDoDaily)) : (e.zone.enableLayer(2, this.canDoDaily), e.zone.enableLayer(3, !this.canDoDaily))
	},
	apply: function(e) {
		Prodigy.GameEvent.prototype.apply.call(this, e);
		var t = "event-starlight_festival",
			i = e.saveTag;
		if ("lamplight-B3" === i) {
			var a = e.content.add(this.game.prodigy.create.sprite(640, 250, t, "event-sign-1"));
			a.anchor.setTo(.5, 1), a.inputEnabled = !0, a.events.onInputDown.add(this.signOnInputDown.bind(this, "Once a day, a star falls somewhere into Lamplight Town. You must find and save it from the Puppet Master's evil forces! If you do, you'll collect a bunch of Dragon Flies!", null, null, "Starlight Festival Daily Task", {
				modifyProperty: [{
					element: "contentText",
					property: "horizontalAlignment",
					value: "center"
				}]
			})), a.animations.add("sway", ["event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-1", "event-sign-2", "event-sign-3", "event-sign-1", "event-sign-4", "event-sign-5", "event-sign-6"], 12, !0, !1), a.animations.play("sway");
			for (var s = new Prodigy.Container.MamaStar(this.game, e.content, 877, 500), r = 0; r < s.sprite.children.length; r++) s.sprite.children[r].inputEnabled = !0, s.sprite.children[r].events.onInputDown.add(this.talkToShopkeeper, this);
			var n = e.content.add(this.game.prodigy.create.sprite(955, 588, t, "milkyway-1"));
			n.anchor.setTo(.5, 1), n.inputEnabled = !0, n.input.pixelPerfectClick = !0, n.events.onInputDown.add(this.talkToShopkeeper, this), n.animations.add("idle", ["milkyway-1", "milkyway-2", "milkyway-3", "milkyway-4"], 6, !0, !1), n.animations.play("idle");
			var o = e.content.add(this.game.prodigy.create.sprite(1063, 588, t, "event-shop"));
			o.anchor.setTo(.5, 1), o.inputEnabled = !0, o.input.pixelPerfectClick = !0, o.events.onInputDown.add(this.talkToShopkeeper, this)
		}
		var h = this.game.prodigy.player.state.get("zone-lamplight");
		Util.isDefined(h) && Util.isDefined(h.quest) && h.quest.ID > 1 && this.placeDaily(e, i)
	},
	talkToShopkeeper: function() {
		var e = this.game.prodigy.player.data[this.daily],
			t = this.game.prodigy.event.create();
		Util.isDefined(e) && 1 === e[this.intro] ? (t.text(14, this.shopkeeperTag), t.text(15, this.shopkeeperTag)) : (t.text(8, this.shopkeeperTag), t.text(9, this.shopkeeperTag), t.text(10, this.shopkeeperTag), t.text(11, this.shopkeeperTag), t.text(12, this.shopkeeperTag), t.function(this.setIntroState.bind(this, this.game.prodigy.player, 1))), t.function(this.openStore.bind(this, this.game.prodigy.stores.SHOPS.STARLIGHT_FESTIVAL_SHOP)), t.start()
	},
	revealDailyMonster: function(e, t) {
		for (var i, a = 0; a < this.dailyPlacements.length; ++a)
			if (!Util.isNullOrUndefined(this.dailyPlacements[a][t])) {
				i = this.dailyPlacements[a].pathOffset;
				break
			} Prodigy.GameEvent.prototype.revealDailyMonster.call(this, e, t, i)
	}
}), Prodigy.Snow = function(e) {
	Prodigy.Skin.call(this, e, [], ["login", "lamplight-A2", "lamplight-A3", "lamplight-A4", "lamplight-B0", "lamplight-B1", "lamplight-B2", "lamplight-B3", "lamplight-B4", "lamplight-B5", "lamplight-C2", "lamplight-C3", "lamplight-C4", "shiverchill-B1", "shiverchill-A2", "shiverchill-A5", "shiverchill-B8", "shiverchill-A11"])
}, Prodigy.extends(Prodigy.Snow, Prodigy.Skin, {
	constructor: Prodigy.Snow,
	apply: function(e) {
		Prodigy.Skin.prototype.apply.call(this, e);
		var t = new Phaser.Point(0, 0),
			i = {
				type: "LINE_ZONE",
				x1: -200,
				y1: 0,
				x2: 1280,
				y2: 0
			};
		this.game.prodigy.create.createParticleEmitter(e.foreground, Prodigy.Snow.PARTICLE_EFFECT_IDS.SMALL_SNOW, t, i), this.game.prodigy.create.createParticleEmitter(e.foreground, Prodigy.Snow.PARTICLE_EFFECT_IDS.BIG_SNOW, t, i)
	}
}), Prodigy.Snow.PARTICLE_EFFECT_IDS = {
	SMALL_SNOW: 1,
	BIG_SNOW: 2
}, Prodigy.Winterfest = function(e) {
	Prodigy.GameEvent.call(this, e, ["tileset-town-december", "event-winterfest", "npc-sprite-" + this.shopkeeperTag, "bgm-winterfest"], ["lamplight-A2", "lamplight-A3", "lamplight-A4", "lamplight-B0", "lamplight-B1", "lamplight-B2", "lamplight-B3", "lamplight-B4", "lamplight-B5", "lamplight-C2", "lamplight-C3", "lamplight-C4"]), this.shopkeeperTag = "howard_cornelius", this.eventName = "Winterfest", this.overrideNames = {
		"lamplight-A2": "map-lamplight-a2-winterfest",
		"lamplight-A3": "map-lamplight-a3-winterfest",
		"lamplight-A4": "map-lamplight-a4-winterfest",
		"lamplight-B0": "map-lamplight-b0-winterfest",
		"lamplight-B1": "map-lamplight-b1-winterfest",
		"lamplight-B2": "map-lamplight-b2-winterfest",
		"lamplight-B3": "map-lamplight-b3-winterfest",
		"lamplight-B4": "map-lamplight-b4-winterfest",
		"lamplight-B5": "map-lamplight-b5-winterfest",
		"lamplight-C2": "map-lamplight-c2-winterfest",
		"lamplight-C3": "map-lamplight-c3-winterfest",
		"lamplight-C4": "map-lamplight-c4-winterfest"
	}, this.dailyPlacements = [{
		"lamplight-A2": [920, 160],
		pathOffset: [120, 180]
	}, {
		"lamplight-A3": [200, 520],
		pathOffset: [155, 100]
	}, {
		"lamplight-A4": [880, 80],
		pathOffset: [130, 170]
	}, {
		"lamplight-B2": [160, 120],
		pathOffset: [130, 170]
	}, {
		"lamplight-B3": [480, 120],
		pathOffset: [-10, 170]
	}, {
		"lamplight-B4": [120, 200],
		pathOffset: [-20, 180]
	}, {
		"lamplight-B5": [1120, 240],
		pathOffset: [-50, 140]
	}, {
		"lamplight-C2": [1040, 320],
		pathOffset: [-30, 160]
	}, {
		"lamplight-C3": [560, 520],
		pathOffset: [-30, 80]
	}, {
		"lamplight-C4": [360, 200],
		pathOffset: [-10, 170]
	}], this.daily = "winterfestDaily", this.dailyMonsters = [16, 40, 51, 62, 78, 87], this.dailyDrops = [{
		type: "currency",
		ID: 5,
		N: 10
	}], this.dailyEventSize.x = 120, this.dailyEventSize.y = 160, this.dailyHighlighterOffset.x = -10
}, Prodigy.extends(Prodigy.Winterfest, Prodigy.GameEvent, {
	constructor: Prodigy.Winterfest,
	getButtons: function() {
		var e = Prodigy.GameEvent.prototype.getButtons();
		return this.game.prodigy.player.backpack.hasItem("key", 13) && e.push({
			key: "icons-hud",
			frameName: "winterfest",
			callback: this.game.prodigy.open.confirm.bind(this.game.prodigy.open, this.game.prodigy.localization.getString("WINTERFEST_TRAVEL_CONFIRM", this.eventName), this.teleportToEvent.bind(this))
		}), e
	},
	init: function(e) {
		return Prodigy.GameEvent.prototype.init.call(this, e), "lamplight-B3" !== e.saveTag ? e.zone.enableLayer(1, this.canDoDaily) : e.zone.enableLayer(2, this.canDoDaily), {
			bgm: "bgm-winterfest"
		}
	},
	apply: function(e) {
		Prodigy.GameEvent.prototype.apply.call(this, e);
		var t = "event-winterfest",
			i = e.saveTag;
		if ("lamplight-B3" === i) {
			var a = e.content.add(this.game.prodigy.create.sprite(640, 250, t, "event-sign-1"));
			a.anchor.setTo(.5, 1), a.inputEnabled = !0, a.events.onInputDown.add(this.signOnInputDown.bind(this, this.game.prodigy.localization.getString("WINTERFEST_SIGN_MESSAGE"), null, null, this.game.prodigy.localization.getString("WINTERFEST_SIGN_TITLE"), {
				modifyProperty: [{
					element: "contentText",
					property: "horizontalAlignment",
					value: "center"
				}]
			})), a.animations.add("sway", ["event-sign-1", "event-sign-2", "event-sign-3", "event-sign-4", "event-sign-5", "event-sign-6", "event-sign-7", "event-sign-8", "event-sign-9", "event-sign-10", "event-sign-11", "event-sign-12", "event-sign-13", "event-sign-14", "event-sign-15", "event-sign-16"], 10, !0, !1), a.animations.play("sway");
			for (var s = new Prodigy.Container.HowardCornelius(this.game, e.content, 1025, 550), r = 0; r < s.sprite.children.length; r++) s.sprite.children[r].inputEnabled = !0, s.sprite.children[r].events.onInputDown.add(this.talkToShopkeeper, this)
		}
		var n = this.game.prodigy.player.state.get("zone-lamplight");
		Util.isDefined(n) && Util.isDefined(n.quest) && n.quest.ID > 1 && this.placeDaily(e, i)
	},
	talkToShopkeeper: function() {
		var e = this.game.prodigy.player.data[this.daily],
			t = this.game.prodigy.event.create();
		Util.isDefined(e) && 1 === e[this.intro] ? (t.text(0, this.shopkeeperTag), t.text(1, this.shopkeeperTag), t.text(2, this.shopkeeperTag)) : (t.text(3, this.shopkeeperTag), t.text(4, this.shopkeeperTag), t.text(5, this.shopkeeperTag), t.function(this.setIntroState.bind(this, this.game.prodigy.player, 1))), t.function(this.openStore.bind(this, this.game.prodigy.stores.SHOPS.WINTERFEST_SHOP)), t.start()
	},
	revealDailyMonster: function(e, t) {
		for (var i, a = 0; a < this.dailyPlacements.length; ++a)
			if (!Util.isNullOrUndefined(this.dailyPlacements[a][t])) {
				i = this.dailyPlacements[a].pathOffset;
				break
			} Prodigy.GameEvent.prototype.revealDailyMonster.call(this, e, t, i)
	}
}), Prodigy.MagicParticle = function(e) {
	Prodigy.Skin.call(this, e, [], ["forest-A3", "forest-A4", "forest-A5", "forest-B5", "forest-B6", "forest-B7", "forest-B8", "forest-C4", "forest-C7", "forest-C8", "forest-D3"])
}, Prodigy.extends(Prodigy.MagicParticle, Prodigy.Skin, {
	constructor: Prodigy.MagicParticle,
	init: function(e) {
		Prodigy.Skin.prototype.init.call(this, e), this.initListeners();
		var t = e.foreground;
		this.magicParticle = [], this.count = 0;
		for (var i = 0; 5 > i; i++) this.magicParticle.push(t.add(this.game.prodigy.create.sprite(Math.floor(1280 * Math.random()), Math.floor(720 * Math.random()), "core", "sparkle-yellow-1")))
	},
	initListeners: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.GameObj.UPDATE, this.update.bind(this), this, this.game)
	},
	stopListeners: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.GameObj.UPDATE, this, this.game)
	},
	randomizePosition: function() {
		for (var e = 0; e < this.magicParticle.length; e++) this.magicParticle[e].x = Math.floor(1280 * Math.random()), this.magicParticle[e].y = Math.floor(720 * Math.random())
	},
	update: function() {
		for (var e = 0; e < this.magicParticle.length; e++) this.magicParticle[e].y -= 1;
		this.count++, this.count > 180 && (this.randomizePosition(), this.count = 0)
	}
}), Prodigy.Underwater = function(e) {
	Prodigy.Skin.call(this, e, [], ["shipwreck_shore-A2", "shipwreck_shore-A3", "shipwreck_shore-A5", "shipwreck_shore-A7", "shipwreck_shore-B5", "shipwreck_shore-B6", "shipwreck_shore-B7", "shipwreck_shore-B8", "shipwreck_shore-B10", "shipwreck_shore-B13", "shipwreck_shore-C6", "shipwreck_shore-C7", "shipwreck_shore-C8", "shipwreck_shore-C9"])
}, Prodigy.extends(Prodigy.Underwater, Prodigy.Skin, {
	constructor: Prodigy.Underwater,
	init: function(e) {
		Prodigy.Skin.prototype.init.call(this, e), this.bubbles = [];
		for (var t = 0; 5 > t; t++) {
			var i = e.foreground.add(this.game.prodigy.create.sprite(Prodigy.Random.integerInRange(0, 1280), Prodigy.Random.integerInRange(720), "skin-underwater", "tiny-bubble"));
			this.initBubble(i, !0), this.bubbles.push(i)
		}
	},
	initBubble: function(e, t) {
		if (Util.isDefined(this.game)) {
			var i = 5e3 + Prodigy.Random.integerInRange(0, 2e3);
			e.x = Prodigy.Random.integerInRange(0, 1280), t ? (e.y = Prodigy.Random.integerInRange(70, 770), i -= Math.floor(i / 770 * e.y)) : e.y = 770, this.game.add.tween(e).to({
				x: "-10"
			}, 1e3, Phaser.Easing.Sinusoidal.InOut).to({
				x: "+10"
			}, 1e3, Phaser.Easing.Sinusoidal.InOut).loop().start();
			var a = this.game.add.tween(e).to({
				y: -50
			}, i, Phaser.Easing.Linear.None);
			a.onComplete.addOnce(this.initBubble.bind(this, e, !1)), a.start()
		}
	}
}), Prodigy.SkinningRelay = function(e) {
	this.game = e, this.active = [new Prodigy.Winterfest(e), new Prodigy.Snow(e), new Prodigy.MagicParticle(e), new Prodigy.Underwater(e)]
}, Prodigy.SkinningRelay.prototype = {
	constructor: Prodigy.SkinningRelay,
	getButtons: function() {
		for (var e = [], t = 0; t < this.active.length; t++) e = e.concat(this.active[t].getButtons());
		return e
	},
	getAssets: function(e) {
		for (var t = [], i = 0; i < this.active.length; i++) this.active[i].active(e) && (t = t.concat(this.active[i].getAssets(e)));
		return t
	},
	init: function(e) {
		for (var t = {}, i = 0; i < this.active.length; i++) this.active[i].active(e.saveTag) && Object.assign(t, this.active[i].init(e));
		return t
	},
	apply: function(e) {
		for (var t = 0; t < this.active.length; t++) this.active[t].active(e.saveTag) && this.active[t].apply(e)
	}
}, Prodigy.Zone = function(e) {
	this.game = e, this.util = null, this.states = [], this.maps = {}, this.quests = {}, this.store = {}, this.disabledLayers = [], this.bgm = "bgm-intro", this.debugBounties = !1
}, Prodigy.Zone.prototype = {
	getMap: function(e) {
		return this.maps[e]
	},
	getScene: function(e) {
		return this.scenes[e]
	},
	isLayerEnabled: function(e) {
		return -1 === this.disabledLayers.indexOf(e)
	},
	enableLayer: function(e, t) {
		var i = this.disabledLayers.indexOf(e);
		t ? -1 !== i && this.disabledLayers.splice(i, 1) : -1 === i && (this.disabledLayers.push(e), this.disabledLayers.sort(function(e, t) {
			return e - t
		}))
	},
	teleport: function(e, t, i, a, s) {
		var r = null;
		if (Util.isDefined(this.game.prodigy.world.currentZone) && (r = this.game.prodigy.world.currentZone, this.game.prodigy.world.previousZone = this.game.prodigy.world.currentZone), this.game.prodigy.world.currentZone = this.ID + "-" + e, e = this.getMap(e), Util.isDefined(e)) {
			this.game.state.states.TileScreen.initMap(e, this, t, i, a), s = s || {}, s.assets = s.assets || [], s.assets = s.assets.concat(["map-pathing"]).concat(e.assets), s.assets = s.assets.concat(this.game.prodigy.skin.getAssets(e._zoneName));
			var n = this.getCurrentQuest();
			Util.isDefined(n) && (s.assets = s.assets.concat(n.assets)), s.title = s.title || e.getName(), s.x = t, s.y = i, this.game.prodigy.start("TileScreen", s), Util.isDefined(r) && r === this.game.prodigy.world.getCurrentMap() || this.game.prodigy.network.sendZoneEvent("map-enter")
		}
	},
	playScene: function(e) {
		if (e = this.getScene(e), Util.isDefined(e)) {
			this.game.state.states.TileScreen.initScene(e, this);
			var t = e._loadingData;
			t.assets = [], t.assets = t.assets.concat(["map-pathing"]).concat(e.assets), t.title = e._name, this.game.prodigy.start("TileScreen", t)
		}
	},
	init: function() {},
	setup: function(e, t, i) {
		var a = this.getCurrentQuest();
		return i._questParams = {}, Util.isDefined(a) && !i._isScene ? a.setup(e, t, i) : null
	},
	start: function(e, t, i) {
		var a = this.getCurrentQuest();
		Util.isDefined(a) && a.start(e, t, i)
	},
	update: function(e, t, i) {
		var a = this.getCurrentQuest();
		Util.isDefined(a) && a.update(e, t, i)
	},
	cleanup: function() {},
	process: function(e, t, i) {
		if (Util.isDefined(this.monsters)) {
			Util.isDefined(this.getState("daily")) ? Util.getDate() !== this.getState("daily").date && this.setState("daily", {
				date: Util.getDate(),
				flags: [1, 1, 1, 1, 1],
				rewards: this.getState("daily").rewards
			}) : this.setState("daily", {
				date: Util.getDate(),
				flags: [1, 1, 1, 1, 1],
				rewards: 0
			});
			var a = [],
				s = [],
				r = new Prodigy.SeededRandomGenerator(this.getState("daily").date);
			for (var n in this.maps) "shiverchill" === this.ID ? Util.isDefined(this.maps[n].daily_coords) && s.push(n) : s.push(n);
			for (var o = 0; 5 > o; o++) a.push(s[Math.floor(r.jumpFromStart(o) * (s.length - 1))])
		}
		var h = this.getCurrentQuest();
		Util.isDefined(h) && h.process(e, t, i)
	},
	getQuest: function(e) {
		return this.quests[e]
	},
	getCurrentQuest: function() {
		var e = this.getQuestState();
		return Util.isDefined(e) ? this.getQuest(e.ID) : null
	},
	getState: function(e) {
		var t = -1;
		if ("quest" !== e) {
			for (var i = 0; i < this.states.length; i++) this.states[i] === e && (t = i);
			if (-1 === t) return null
		} else t = e;
		return this.game.prodigy.player.state.get("zone-" + this.ID + "-" + t)
	},
	setState: function(e, t) {
		var i = -1;
		if ("quest" !== e)
			for (var a = 0; a < this.states.length; a++) this.states[a] === e && (i = a);
		else i = e; - 1 !== i && this.game.prodigy.player.state.set("zone-" + this.ID + "-" + i, t)
	},
	getQuestState: function() {
		return this.getState("quest")
	},
	getRemainingQuestAreas: function(e) {
		var t = this.getQuestState(),
			i = this.getQuest(e);
		if (Util.isDefined(t) && Util.isDefined(i)) {
			if (Util.isDefined(i.getRemainingQuestAreas)) return i.getRemainingQuestAreas();
			if (Util.isDefined(i.collectionMaps)) {
				var a = [];
				for (var s in i.collectionMaps) {
					var r = i.collectionMaps[s].filter(function(e) {
						return !Util.isDefined(t.state[e]) || 1 !== t.state[e]
					});
					r.length > 0 && a.push(this.ID + "-" + s)
				}
				return a
			}
			return i.area
		}
	},
	setQuestVar: function(e, t) {
		Util.isDefined(this.getQuestState()) && (this.getQuestState().state[e] = t)
	},
	getQuestVar: function(e) {
		var t = this.getQuestState();
		return Util.isDefined(t) ? t.state[e] : null
	},
	startQuest: function(e) {
		var t = this.getQuestState();
		if (Util.isDefined(t) || (t = {
				ID: 1
			}), t.ID === e) {
			var i = this.getQuest(t.ID);
			return t.req = Util.copyObject(i.req), t.state = Util.copyObject(i.state) || {}, t.seq = 0, this.game.prodigy.player.state.set("zone-" + this.ID + "-quest", t), this.game.prodigy.friendsListNetworkHandler.broadcastQuestUpdateToFriends(), i
		}
	},
	isQuestStarted: function(e) {
		var t = this.getQuestState();
		return !(!Util.isDefined(t) || !Util.isDefined(t.req) || t.ID !== e)
	},
	isQuestComplete: function(e) {
		if (!this.isQuestStarted(e)) return !1;
		var t = this.getQuestState(),
			i = t.req,
			a = this.getQuest(e);
		return this.getQuestState().ID !== e ? !1 : "pet" === i.type && i.N > 0 ? !1 : "clear" === i.type && i.N > 0 ? !1 : Util.inArray(["item", "weapon", "hat", "outfit", "boots", "key"], i.type) && this.game.prodigy.player.backpack.hasItem(i.type, i.ID) < i.N ? !1 : "state" === i.type && this.game.prodigy.player.state.get(i.state) !== i.target ? !1 : "zone" === i.type && this.game.prodigy.player.data.zone !== a.area[0] ? !1 : "zstate" === i.type && i.N !== this.getState(i.ID) ? !1 : "zgteState" === i.type && this.getState(i.ID) < i.N ? !1 : !("seq" === i.type && i.N !== t.seq)
	},
	completeQuest: function(e) {
		if (!this.isQuestStarted(e)) return !1;
		var t = this.getQuestState();
		if (t.ID === e) {
			var i = t.req;
			"item" !== i.type || i.K || this.game.prodigy.player.backpack.consume(i.type, i.ID, i.N), this.game.prodigy.player.state.set("zone-" + this.ID + "-quest", {
				ID: t.ID + 1
			}), this.game.prodigy.network.sendZoneEvent("quest-complete", String(e)), this.game.prodigy.friendsListNetworkHandler.broadcastQuestUpdateToFriends()
		}
	},
	isQuestProc: function(e) {
		return this.isQuestStarted(e) && this.isQuestComplete(e) && this.getQuestState().proc
	},
	procQuest: function(e) {
		this.isQuestStarted(e) && this.isQuestComplete(e) && this.game.prodigy.player.state.set("zone-" + this.ID + "-quest-proc", 1)
	},
	isOnQuest: function(e) {
		var t = this.getQuestState();
		return Util.isDefined(t) && t.ID === e
	},
	wasQuestCompleted: function(e) {
		var t = this.getQuestState();
		return Util.isDefined(t) && t.ID > e
	},
	getCurrentQuestID: function() {
		var e = this.getQuestState();
		return Util.isDefined(e) ? e.ID : 0
	},
	defeatMonster: function(e, t, i) {
		var a = this.getQuestState();
		if (Util.isDefined(a) && Util.isDefined(a.req)) {
			var s = a.req,
				r = Util.isDefined(s.U) && s.U;
			"pet" === s.type && s.ID === e && r === i ? (s.N--, i && (a.state[t] = 1), this.game.prodigy.player.state.updated = !0) : "clear" === s.type && r === i && (s.N--, i && (a.state[t] = 1), this.game.prodigy.player.state.updated = !0)
		}
	},
	isOnSequence: function(e, t) {
		var i = this.getQuestState();
		return !(!Util.isDefined(i) || i.ID !== e || !Util.isDefined(i.req) || i.seq !== t)
	},
	isSequenceComplete: function(e, t) {
		var i = this.getQuestState();
		return Util.isDefined(i) && i.ID === e && i.seq > t
	},
	completeSequence: function(e, t) {
		var i = this.getQuestState();
		Util.isDefined(i) && i.ID === e && Util.isDefined(i.req) && i.seq === t && (i.seq++, this.game.prodigy.player.state.updated = !0)
	},
	undoSequence: function(e, t) {
		var i = this.getQuestState();
		Util.isDefined(i) && i.ID === e && Util.isDefined(i.req) && i.seq === t && (i.seq--, this.game.prodigy.player.state.updated = !0)
	},
	getDailyMaps: function() {
		var e = [];
		for (var t in this.maps) e.push(t);
		return e
	},
	hasDaily: function(e) {
		if (Util.isDefined(this.getState("daily"))) {
			var t = new Prodigy.SeededRandomGenerator(this.getState("daily").date),
				i = this.getDailyMaps();
			if (Util.isDefined(i))
				for (var a = 0; 5 > a; a++)
					if (i[Math.floor(t.jumpFromStart(a) * (i.length - 1))] === e._tag && 0 !== this.getState("daily").flags[a]) return !0
		}
		return !1
	},
	testQuest: function(e, t, i) {
		this.game.prodigy.player.state.data.zone[this.ID] = {};
		for (var a = 1; e > a; a++) this.startQuest(a), this.completeQuest(a);
		t && this.startQuest(e);
		for (var a = 0; i > a; a++) this.completeSequence(e, a)
	}
}, Prodigy.Zone.prototype.constructor = Prodigy.Zone, Prodigy.Map = function(e, t, i, a, s, r, n) {
	this._tag = t, this._name = i, this._zoneName = e.ID + "-" + t, this._x = a, this._y = s, this._file = "map-" + this._zoneName.toLowerCase(), this._onFaint = e.onFaint, this._zone = e, this._battleBG = e.battleBG, this.isQuestHub = e.questHub.indexOf(t) >= 0, this.assets = [this._file, "tileset-core"].concat(n), this._monsters = {}, this._locations = r, this._questParams = {}, this._animatedSprites = [], this._disabledLayers = [""], this.dynamicSprites = [], this.dynamicLayerContainers = {}, this.tempCollisionData = null
}, Prodigy.Map.prototype = {
	getLocation: function() {
		return this._zoneName
	},
	setup: function(e, t, i) {
		this._questParams = i || {};
		var a = e.prodigy.bounty.hasBounty(this._zone.ID, this._tag);
		a && e.prodigy.bounty.placeBounty(a, t, this), this._zone.debugBounties && this.showAllBounties(e, t), this._zone.hasDaily(this) && Util.isDefined(this._zone.monsters) && this._zone.placeDaily(this, e, t), this.game = e, this.screen = t, this.game.broadcaster.addAppListener(Prodigy.Events.Map.ENABLE_DYNAMIC_LAYER, this.toggleDynamicLayer.bind(this), this, null, !0)
	},
	start: function(e, t, i) {
		Device.isTablet() || Device.iPadMini() || 1 == Util.getUrlVariable("iosApp") || !i && !this._zone.bgm || (e.prodigy.audio.playBGM(i || this._zone.bgm, !0, !0), e.prodigy.audio.resumeBGM())
	},
	process: function() {},
	update: function() {},
	getTag: function() {
		return this._tag
	},
	getName: function() {
		return this._name
	},
	cleanup: function() {},
	processAnimations: function(e, t) {
		for (var i = 0; i < this._animatedSprites.length; i++) {
			var a = this._animatedSprites[i];
			a.isAbove ? t.above.add(a) : t.below.add(a)
		}
	},
	processDynamicLayers: function(e, t) {
		for (var i = 0; i < this.dynamicSprites.length; i++) {
			var a = this.dynamicSprites[i];
			Util.isDefined(a.collisionTile) && a.collisionTile ? a.destroy() : a.isAbove ? (t.above.bringToTop(this.dynamicLayerContainers["element-" + a.dynamicToggle].above), this.dynamicLayerContainers["element-" + a.dynamicToggle].above.add(a)) : (t.below.bringToTop(this.dynamicLayerContainers["element-" + a.dynamicToggle].below), this.dynamicLayerContainers["element-" + a.dynamicToggle].below.add(a))
		}
	},
	addAreaEvent: function(e, t, i, a, s, r, n, o, h, l) {
		return i.target = a, Util.isDefined(n) || (n = e.prodigy.world.teleport.bind(e.prodigy.world, a, s, r)), t.addAreaEvent(i, n, o, h, l)
	},
	addHealStone: function(e, t, i, a) {
		return t.addHealStone(i, a)
	},
	addQuestNPC: function(e, t, i, a, s, r, n) {
		return t.addQuestNPC(i, a, s, r, n)
	},
	addConstructedQuestNPC: function(e, t, i, a, s, r, n) {
		return t.addConstructedQuestNPC(i, a, s, r, n)
	},
	addClickableEvent: function(e, t, i, a, s, r, n, o, h, l) {
		return t.addClickableEvent(i, a, s, r, n, o, h, l)
	},
	addClickableMoveEvent: function(e, t, i, a, s, r, n, o, h, l, d, c) {
		return t.addClickableMoveEvent(i, a, s, r, n, o, h, l, d, c)
	},
	addFireflyEvent: function(e, t, i, a, s, r, n, o, h) {
		return t.addFireflyEvent(i, a, s, r, n, o, h)
	},
	addChest: function(e, t, i, a, s, r, n, o) {
		return !Util.isDefined(this._questParams.enableChests) || this._questParams.enableChests ? t.addChest(i, a, s, r, n, o) : void 0
	},
	addMimic: function(e, t, i, a, s, r) {
		return e.addMimic(t, i, a, s, r, this._zoneName)
	},
	addCollect: function(e, t, i, a, s, r) {
		t.addCollect(i, a, s, r)
	},
	addMonster: function(e, t, i, a, s, r, n, o, h, l) {
		var d = GameConstants.get("GameConstants.Debug.MONSTERS_ENABLED");
		if (!(Util.isDefined(d) && !d || Util.isDefined(this._questParams.enableMonsters) && !this._questParams.enableMonsters || Util.isDefined(this._questParams.overrideMonsterIDWithPippet) && i === this._questParams.overrideMonsterIDWithPippet)) {
			if (n = Util.copyObject(n), Util.isDefined(this._monsters[i]) || (this._monsters[i] = {}), !o && this._monsters[i].respawn > (new Date).getTime()) return null;
			n.onEnd = n.onEnd || this._zoneName, n.onFaint = n.onFaint || this._onFaint, n.screen = n.screen || this._battleBG;
			var c = function(e, t) {
				e[t].data = null, e[t].monsterData = null, e[t].respawn = (new Date).getTime() + 12e4, Util.isDefined(n.onEnc) && n.onEnc()
			};
			Util.isDefined(this._monsters[i].data) && !l && (n.encounter = [this._monsters[i].data]);
			var p = t.addMonster(i, a, s, r, n, c.bind(this, this._monsters, i), Util.isDefined(this._monsters[i].respawn), h);
			return this._monsters[i].data = p.monsterData, delete this._monsters[i].respawn, p
		}
	},
	addPippet: function(e, t, i, a, s) {
		var r = this._questParams.enableMonsters || !1;
		Util.isDefined(e.prodigy.world.pippetEncounterSpawn) && this._zoneName === e.prodigy.world.pippetEncounterSpawn.location && !r && (this._questParams.overrideMonsterIDWithPippet = i || 1, t.addPippet(i, a, s))
	},
	addBounty: function(e, t, i, a, s, r, n, o) {
		if (n = Util.copyObject(n), Util.isDefined(this._monsters[i]) || (this._monsters[i] = {}), o || !(this._monsters[i].respawn > (new Date).getTime())) {
			n.onEnd = n.onEnd || this._zoneName, n.onFaint = n.onFaint || this._onFaint, n.screen = n.screen || this._battleBG;
			var h = function(e, t) {
				e[t].monsterData = null, e[t].respawn = (new Date).getTime() + 5e3
			};
			Util.isDefined(this._monsters[i].monsterData) && (n.encounter = [this._monsters[i].monsterData]);
			var l = t.addBounty(i, a, s, r, n, h.bind(this, this._monsters, i), Util.isDefined(this._monsters[i].respawn));
			return this._monsters[i].data = l.monsterData, delete this._monsters[i].respawn, l
		}
	},
	addWizard: function(e, t, i, a, s, r) {
		return !GameConstants.get("GameConstants.Debug.WIZARDS_ENABLED") || Util.isDefined(this._questParams.enableWizards) && !this._questParams.enableWizards ? void 0 : (r.onEnd = r.onEnd || this._zoneName, r.onFaint = r.onFaint || this._onFaint, r.screen = r.screen || this._battleBG, t.addWizard(i, a, s, r))
	},
	addNPC: function(e, t, i, a, s, r, n, o) {
		return t.addNPC(i, a, s, r, n, o)
	},
	addConstructedNPC: function(e, t, i, a, s, r, n, o) {
		return Util.isDefined(this._questParams.hiddenNPCs) && this._questParams.hiddenNPCs.indexOf(s) > -1 ? null : t.addConstructedNPC(i, a, s, r, n, o)
	},
	addGnome: function(e, t, i, a, s, r, n, o) {
		return t.addGnome(i, a, s, r, n, o)
	},
	addBlock: function(e, t, i, a, s) {
		return t.addBlock(i, a, s)
	},
	addCollisionZone: function(e, t, i, a, s) {
		var r = e.path.size,
			n = Math.floor(a / r),
			o = Math.floor(s / r),
			h = Math.floor(t / r),
			l = Math.floor(i / r);
		for (t = h; h + n > t; t++)
			for (i = l; l + o > i; i++) e.path.area[i][t] = 0
	},
	init: function(e, t, i, a) {
		this.dynamicSprites = [], this.dynamicLayerContainers = {};
		var s = null;
		this.above = i, this.below = t;
		for (var r = 0; r < e.prodigy.skin.active.length; r++) {
			var n = null;
			s = e.prodigy.skin.active[r], s.active(this._zoneName) && (n = s.getOverrideName(this._zoneName), Util.isDefined(n) && (this._file = n))
		}
		for (var o = e.cache.getJSON(this._file), h = e.cache.getJSON("map-pathing").tilesets, l = [], r = 0; 36 > r; r++) {
			l.push([]);
			for (var d = 0; 64 > d; d++) l[r][d] = 1
		}
		var c, p, g = null,
			u = "";
		for (r = 0; r < o.layers.length; r++) {
			g = o.layers[r], u = g.name.toUpperCase(), c = g.visible, p = !1;
			for (var y = !1, m = 0; m < this._disabledLayers.length; m++) g.name === this._disabledLayers[m] && (y = !0);
			if (y === !0 && (c = !1), Util.isDefined(g.properties))
				if (p = Util.isDefined(g.properties.isAbove), Util.isDefined(g.properties.toggle) || Util.isDefined(g.properties.dynamicToggle)) {
					var f = Util.isDefined(g.properties.toggle) ? g.properties.toggle : g.properties.dynamicToggle;
					for (d = 0; d < this._zone.disabledLayers.length; d++) f == this._zone.disabledLayers[d] && (c = !1)
				} else Util.isDefined(g.properties.reference) && (c = !1);
			if (Util.isDefined(g.properties) && Util.isDefined(g.properties.dynamicToggle)) {
				if (Util.isDefined(this.dynamicLayerContainers["element-" + g.properties.dynamicToggle]) || (this.dynamicLayerContainers["element-" + g.properties.dynamicToggle] = {}, this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].above = e.prodigy.create.element(a.above, 0, 0), this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].below = e.prodigy.create.element(a.below, 0, 0)), p ? this.initLayer(e, this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].above, g, o.tilesets, h, null) : (this.tempCollisionData = [], this.initLayer(e, this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].below, g, o.tilesets, h, l)), this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].above.alpha = c ? 1 : 0, this.dynamicLayerContainers["element-" + g.properties.dynamicToggle].below.alpha = c ? 1 : 0, Util.isDefined(this.tempCollisionData)) {
					for (Util.isDefined(this.dynamicLayerContainers["collision-" + g.properties.dynamicToggle]) || (this.dynamicLayerContainers["collision-" + g.properties.dynamicToggle] = []), d = 0; d < this.tempCollisionData.length; d++) this.dynamicLayerContainers["collision-" + g.properties.dynamicToggle].push(this.tempCollisionData[d]), c || (l[this.tempCollisionData[d].y][this.tempCollisionData[d].x] = 1);
					this.tempCollisionData = null
				}
			} else c && (p ? this.initLayer(e, i, g, o.tilesets, h, null) : this.initLayer(e, t, g, o.tilesets, h, l))
		}
		return this.screen = a, l
	},
	initLayer: function(e, t, i, a, s, r) {
		return Util.isDefined(i) ? Util.isDefined(i.objects) ? this.initObjectLayer(e, t, i, a, s, r) : this.initTiledLayer(e, t, i, a, s, r) : void 0
	},
	initTiledLayer: function(e, t, i, a, s, r) {
		var n = 0,
			o = 0,
			h = null,
			l = !Util.isNullOrUndefined(i.properties) && !Util.isNullOrUndefined(i.properties.useAnimDuration) && i.properties.useAnimDuration;
		for (n; 32 > n; n++)
			for (var d = 0; 18 > d; d++) {
				var c = 32 * d + n;
				o = i.data[c], h = this.getTile(e, o, 40 * n, 40 * d, s, r, a, null, l), Util.isDefined(h) && this.addSpriteToLayer(h, t, i)
			}
		return t
	},
	initObjectLayer: function(e, t, i, a, s, r) {
		var n = 0,
			o = 0,
			h = null,
			l = null;
		for (n; n < i.objects.length; n++) l = i.objects[n], o = l.gid, h = this.getTile(e, o, l.x, l.y, s, r, a, null), Util.isDefined(h) && (h.anchor.setTo(.5, .5), h.x = parseInt(l.x + 20), h.y = parseInt(l.y - 20), this.addSpriteToLayer(h, t, i));
		return t
	},
	addSpriteToLayer: function(e, t, i) {
		Util.isDefined(i.properties) && Util.isDefined(i.properties.dynamicToggle) ? (this.dynamicSprites.push(e), e.isAbove = Util.isDefined(i.properties) && Util.isDefined(i.properties.isAbove), e.dynamicToggle = i.properties.dynamicToggle) : e.isAnimatedSprite ? (this._animatedSprites.push(e), e.isAbove = Util.isDefined(i.properties) && Util.isDefined(i.properties.isAbove)) : t.addChild(e)
	},
	getTileset: function(e, t) {
		for (var i = 0; i < e.length; i++) {
			var a = e[i];
			if (t >= a.firstgid && t < a.firstgid + a.tilecount) return a
		}
		return null
	},
	getTileProperties: function(e, t, i) {
		for (var a = 0; a < i.length; a++)
			if (i[a].name === e.name && Util.isDefined(i[a].tileproperties)) return i[a].tileproperties[t];
		return null
	},
	getTile: function(e, t, i, a, s, r, n, o, h) {
		Util.isDefined(n) || (n = e.cache.getJSON(this._file).tilesets);
		var l = 2147483648,
			d = 1073741824,
			c = 536870912,
			p = t & l,
			g = t & d,
			u = t & c;
		t &= ~(l | d | c);
		var y = this.getTileset(n, t);
		if (!Util.isDefined(y) || !Util.isDefined(t)) return null;
		t -= y.firstgid;
		var m = this.getTileProperties(y, t, s);
		if (Util.isDefined(m)) var f = m.x;
		var b = null;
		b = Util.isDefined(y.tiles) && Util.isDefined(y.tiles[t]) ? e.prodigy.create.sprite(i, a, y.name, t) : new Phaser.Image(e, i, a, y.name, t), (u || g || p) && (b.anchor.setTo(.5, .5), b.x += 20, b.y += 20);
		var v;
		if (u ? (b.angle = -90, Util.isDefined(m) && (v = m.x[1], v += m.x[3], v += m.x[0], v += m.x[2], m.x = v), b.scale.x = -1, Util.isDefined(m) && (v = m.x[1], v += m.x[0], v += m.x[3], v += m.x[2], m.x = v), p && (b.scale.y = -b.scale.y, Util.isDefined(m) && (v = m.x[2], v += m.x[3], v += m.x[0], v += m.x[1], m.x = v)), g && (b.scale.x = -b.scale.x, Util.isDefined(m) && (v = m.x[1], v += m.x[0], v += m.x[3], v += m.x[2], m.x = v))) : (p && (b.scale.x = -b.scale.x, Util.isDefined(m) && (v = m.x[1], v += m.x[0], v += m.x[3], v += m.x[2], m.x = v)), g && (b.scale.y = -b.scale.y, Util.isDefined(m) && (v = m.x[2], v += m.x[3], v += m.x[0], v += m.x[1], m.x = v))), Util.isDefined(r) && Util.isDefined(m) && Util.isDefined(m.x)) {
			var P = m.x,
				w = Math.floor(i / 40),
				x = Math.floor(a / 40);
			1 == P[0] && (r[2 * x][2 * w] = 0, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w,
				y: 2 * x,
				value: 0
			}), b.visible = !1, b.collisionTile = !0)), 1 == P[1] && (r[2 * x][2 * w + 1] = 0, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w + 1,
				y: 2 * x,
				value: 0
			}), b.visible = !1, b.collisionTile = !0)), 1 == P[2] && (r[2 * x + 1][2 * w] = 0, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w,
				y: 2 * x + 1,
				value: 0
			}), b.visible = !1, b.collisionTile = !0)), 1 == P[3] && (r[2 * x + 1][2 * w + 1] = 0, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w + 1,
				y: 2 * x + 1,
				value: 0
			}), b.visible = !1, b.collisionTile = !0)), 6 == P[0] && (r[2 * x][2 * w] = 6, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w,
				y: 2 * x,
				value: 6
			}), b.visible = !1, b.collisionTile = !0)), 6 == P[1] && (r[2 * x][2 * w + 1] = 6, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w + 1,
				y: 2 * x,
				value: 6
			}), b.visible = !1, b.collisionTile = !0)), 6 == P[2] && (r[2 * x + 1][2 * w] = 6, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w,
				y: 2 * x + 1,
				value: 6
			}), b.visible = !1, b.collisionTile = !0)), 6 == P[3] && (r[2 * x + 1][2 * w + 1] = 6, Util.isDefined(this.tempCollisionData) && (this.tempCollisionData.push({
				x: 2 * w + 1,
				y: 2 * x + 1,
				value: 6
			}), b.visible = !1, b.collisionTile = !0))
		}
		if (Util.isDefined(m) && Util.isDefined(f) && (m.x = f), Util.isDefined(r) && o)
			for (var w = 0; 2 > w; w++)
				for (var x = 0; 2 > x; x++) r[a / 40 * 2 + w][i / 40 * 2 + x] = 1;
		return this.processTileAnimations(e, b, y, t, h), b
	},
	processTileAnimations: function(e, t, i, a, s) {
		if (!(Util.isNullOrUndefined(i.tiles) || Util.isNullOrUndefined(i.tiles[a]) || Util.isNullOrUndefined(i.tiles[a].animation) || i.tiles[a].animation <= 0)) {
			var r, n = i.tiles[a].animation,
				o = [];
			for (r = 0; r < n.length; r++) o.push(n[r].tileid);
			var h = t.animations.add("tileAnimation", o, 4, !0, !0);
			if (s) {
				var l = [],
					d = null;
				for (r = 0; r < n.length; r++) d = n[r], l.push(d.duration);
				h.enableUpdate = !0, h.delay = 1 % l.length, h.onUpdate.add(function(e) {
					var t = e._frameIndex + 1;
					t %= l.length, e.delay = l[t]
				}, null)
			}
			t.isAnimatedSprite = !0, t.animations.play("tileAnimation")
		}
	},
	validPathTo: function(e, t, i, a) {
		var s = e.prodigy.event.create();
		s.validPath(t.user, t.path, i, a), s.start()
	},
	pathTo: function(e, t, i, a) {
		var s = e.prodigy.event.create();
		s.path(t.user, [{
			x: i,
			y: a
		}]), s.start()
	},
	playPortalEffectExit: function(e, t, i, a, s) {
		var r = this._zone.game.prodigy.event.create();
		if (this.portalActive === !1) {
			this.landedOnPortal = !0, r.enableInput(!1), r.portalEffect(e, t, !1);
			var n = 640 - e,
				o = 360 - t,
				h = 80,
				l = Math.sqrt(n * n + o * o);
			0 === l && (l = 1, n = 1), r.path(this.screen.user, [{
				x: h * n / l + e,
				y: h * o / l + t
			}]), r.set(this, "landedOnPortal", !1), r.set(this, "portalActive", !0), r.function(this.addAreaEvent.bind(this, this.game, this.screen, {
				x: e,
				y: t,
				w: 100,
				h: 80
			}, i, a, s, this.playPortalEffectExit.bind(this, e, t, i, a, s))), r.enableInput(!0)
		} else r.enableInput(!1), r.path(this.screen.user, [{
			x: e,
			y: t
		}]), r.portalEffect(e, t, !1), r.enableInput(!0), r.function(this._zone.game.prodigy.world.teleport.bind(this._zone.game.prodigy.world, i, a, s));
		r.start()
	},
	playPortalEffectEnter: function(e, t, i, a) {
		var s = this._zone.game.prodigy.event.create();
		this.portalActive === !1 && (s.enableInput(!1), s.portalEffect(e, t, !1), Util.isNullOrUndefined(i) || Util.isNullOrUndefined(a) || s.path(this.screen.user, [{
			x: i,
			y: a
		}]), s.set(this, "landedOnPortal", !1), s.set(this, "portalActive", !0), s.enableInput(!0), s.start())
	},
	showAllBounties: function(e, t) {
		if (Util.isDefined(this.coord))
			for (var i = 0; i < this.coord.length; i++) {
				var a = {
					ID: 84,
					seed: Math.floor(100 * Math.random()),
					complete: !1
				};
				e.prodigy.bounty.placeBountyHere(a, t, this, i)
			}
	},
	toggleDynamicLayer: function(e, t, i, a) {
		if (Util.isDefined(this.dynamicLayerContainers)) {
			var s = i ? 1 : 0;
			Util.isDefined(this.dynamicLayerContainers["element-" + t]) && (e.add.tween(this.dynamicLayerContainers["element-" + t].above).to({
				alpha: s
			}, a || 1, Phaser.Easing.Linear.None).start(), e.add.tween(this.dynamicLayerContainers["element-" + t].below).to({
				alpha: s
			}, a || 1, Phaser.Easing.Linear.None).start()), Util.isDefined(this.dynamicLayerContainers["collision-" + t]) && (this.dynamicLayerContainers["collision-" + t].forEach(function(e) {
				this.screen.area[e.y][e.x] = i ? e.value : 1
			}.bind(this)), this.screen.path.init(this.screen.area, this.screen.tileSize))
		}
	}
}, Prodigy.Map.prototype.constructor = Prodigy.Map, Prodigy.Scene = function(e, t, i) {
	Prodigy.Map.call(this, e, t, "Pet Park", 0, 0, [], i), this._zoneName = null, this._isScene = !0, this._loadingData = {
		fadeIn: !0,
		time: 1,
		fadeOut: !0,
		save: !1
	}
}, Prodigy.extends(Prodigy.Scene, Prodigy.Map, {
	constructor: Prodigy.Scene,
	setup: function(e, t, i) {
		this._zone.util.hideHex(e, t), e.prodigy.player.saveEnabled = !1, t.walkEnabled = !1, t.user.clickEnabled = !1, t.menuBar.show(!1), Prodigy.Map.prototype.setup.call(this, e, t, i)
	},
	start: function(e, t, i) {
		Prodigy.Map.prototype.start.call(this, e, t, i)
	},
	end: function() {},
	enterScene: function(e, t, i) {
		this.sceneTop = t.menus.add(new Phaser.TileSprite(e, 0, -50, 1280, 50, "core", "overlay-small")), this.sceneBot = t.menus.add(new Phaser.TileSprite(e, 0, 720, 1280, 50, "core", "overlay-small"));
		var a = e.add.tween(this.sceneTop).to({
			y: 0
		}, 1e3, Phaser.Easing.Quadratic.Out).start();
		Util.isDefined(i) && a.onComplete.add(i), e.add.tween(this.sceneBot).to({
			y: 670
		}, 1e3, Phaser.Easing.Quadratic.Out).start()
	},
	exitScene: function(e, t, i) {
		var a = e.add.tween(this.sceneTop).to({
			y: -50
		}, 1e3, Phaser.Easing.Quadratic.Out).start();
		Util.isDefined(i) && a.onComplete.add(i), e.add.tween(this.sceneBot).to({
			y: 720
		}, 1e3, Phaser.Easing.Quadratic.Out).start()
	}
}), Prodigy.World = function(e) {
	this.game = e, this.zones = {
		forest: new Prodigy.Forest(e),
		shiverchill: new Prodigy.Shiverchill(e),
		skywatch: new Prodigy.Skywatch(e),
		lamplight: new Prodigy.Lamplight(e),
		dyno: new Prodigy.Dyno(e),
		bonfire_spire: new Prodigy.Bonfire_Spire(e),
		house: new Prodigy.House(e),
		toyzone: new Prodigy.Toyzone(e),
		shipwreck_shore: new Prodigy.Shipwreck_Shore(e),
		activity_zone: new Prodigy.Activity_Zone(e),
		darktower: new Prodigy.Darktower(e)
	}, this.states = ["bounties"], this.pippetEncounterDaily = null, this.pippetEncounterSpawn = null
}, Prodigy.World.prototype = {
	enter: function() {
		if (this.pippetEncounterDaily = new Prodigy.PippetEncounter(this.game, this.game.prodigy.player), !this.pippetEncounterDaily.isInitialized() || this.pippetEncounterDaily.hasDateIdChanged() ? (this.pippetEncounterDaily.init(), this.pippetEncounterSpawn = this.pippetEncounterDaily.getSpawn()) : this.pippetEncounterDaily.isComplete() || (this.pippetEncounterSpawn = this.pippetEncounterDaily.getSpawn()), Util.isDefined(this.zones.house.getQuestState())) {
			var e = this.game.prodigy.player.data.zone;
			Util.isDefined(e) && e.indexOf("-") > 0 ? this.teleport(e) : this.teleport("house")
		} else this.teleport("house")
	},
	isValidLocation: function(e) {
		var t = e.split("-"),
			i = this.zones[t[0]],
			a = i.maps[t[1]];
		return Util.isDefined(i) && Util.isDefined(a)
	},
	teleport: function(e, t, i, a, s) {
		this.process(), e = e.replace("tower-0", "darktower-A1"), s = s || {}, s.assets = s.assets || [], s.assets = s.assets.concat("sfx-world");
		var r = e.split("-");
		if ("house" === e) this.zones.house.teleport("house", t, i, a, s);
		else if (Util.isDefined(this.zones[r[0]]) && this.isValidLocation(e)) this.zones[r[0]].teleport(r[1], t, i, a, s);
		else {
			var n;
			switch (Util.isDefined(t) && Util.isDefined(i) && (n = {
					playerPosition: {
						x: t,
						y: i
					}
				}), e) {
				case "dino-1":
					this.game.prodigy.start("Museum", s, n);
					break;
				case "town-2":
					this.game.prodigy.start("Arena", s, n);
					break;
				case "tech-0":
					this.game.prodigy.start("Tech", s, n);
					break;
				default:
					this.zones.house.teleport("house", t, i, a, s)
			}
		}
	},
	playScene: function(e) {
		this.process();
		var t = e.split("-");
		Util.isDefined(this.zones[t[0]]) && this.zones[t[0]].playScene(t[1])
	},
	getCurrentMap: function() {
		return this.currentZone
	},
	getState: function(e) {
		return this.game.prodigy.player.state.get("world-" + e)
	},
	setState: function(e, t) {
		this.game.prodigy.player.state.set("world-" + e, t)
	},
	getZone: function(e) {
		return this.zones[e]
	},
	process: function() {
		this.getDate() !== this.getTownState("bounty") && (this.game.prodigy.bounty.generateBounties(this.getDate()), this.setTownState(this.getDate(), "bounty"))
	},
	getTownState: function(e) {
		var t = this.getZone("lamplight");
		return t.getState(e)
	},
	setTownState: function(e, t) {
		var i = this.getZone("lamplight");
		i.setState(t, e)
	},
	getDate: function() {
		var e = new Date,
			t = e.getDate(),
			i = e.getMonth() + 1,
			a = e.getFullYear();
		return 10 > t && (t = "0" + t), 10 > i && (i = "0" + i), i + "" + t + a
	}
}, Prodigy.World.prototype.constructor = Prodigy.World, Prodigy.Quest = function(e, t, i, a, s, r, n, o, h, l, d) {
	this.zone = e, this.assets = t, this.ID = i, this.desc = a, this.descCache = a, this.req = s, this.area = r, this.areaCache = r, this.onStart = n, this.onProc = o, this.onComplete = h, this.reward = l, this.chain = d || !1
}, Prodigy.Quest.prototype = {
	setup: function() {
		return {}
	},
	start: function() {},
	process: function() {},
	update: function() {}
}, Prodigy.Quest.prototype.constructor = Prodigy.Quest, Prodigy.AdvancedQuest = function(e, t, i, a, s, r, n, o, h, l, d, c, p, g) {
	Prodigy.Quest.call(this, e, t, i, a, s, r, n, o, h, l, d), this.questGiver = c, this.questReceiver = p, this.alternateOnStart = g
}, Prodigy.extends(Prodigy.AdvancedQuest, Prodigy.Quest, {
	constructor: Prodigy.AdvancedQuest
}), Prodigy.ZoneUtil = function(e, t) {
	this._game = e, this._zone = t
}, Prodigy.ZoneUtil.prototype = {
	constructor: Prodigy.ZoneUtil,
	getBattle: function(e, t, i, a, s) {
		var r = {
			intro: t,
			"catch": !1,
			run: !1,
			screen: e._zone.battleBG
		};
		Util.isDefined(i.starMod) && (r.starMod = i.starMod), Util.isDefined(i.drops) && (r.drops = i.drops), Util.isDefined(i.difficulty) && (r.difficulty = i.difficulty), Util.isDefined(i.events) && (r.events = i.events), Util.isDefined(i.opponent) ? (r.opponent = i.opponent, r.pets = i.pets) : Util.isDefined(i.boss) ? r.boss = i.boss : r.pets = i.pets;
		var n = function(e, t) {
			e.prodigy.battle.start(r, null, a, null, t)
		};
		return Util.isNullOrUndefined(s) && (s = this._zone.onFaint), n.bind(this, this._game, s)
	},
	patrol: function(e, t, i) {
		e instanceof MonsterEvent && e.encountered !== !1 || e.setPath(t, this.patrol.bind(this, e, t, i), i)
	},
	doorLocked: function(e, t) {
		var i = e.prodigy.event.create();
		i.popup(t), i.start()
	},
	openDoor: function(e, t, i, a, s) {
		var r = e.prodigy.event.create();
		r.path(t.user, i, 1, !1);
		var n = function(e, t, i) {
			Util.isDefined(i) && i.length > 0 ? e.prodigy.open.message(e.prodigy.open, i) : t()
		};
		r.function(n.bind(this, e, a, s)), r.start()
	},
	enterGate: function(e, t, i, a, s, r) {
		var n = e.prodigy.event.create();
		n.path(t.user, [{
			x: i,
			y: a
		}]), n.function(this._zone.completeSequence.bind(this._zone, r, 1)), Util.isDefined(s) && n.function(s), n.start()
	},
	hideHex: function(e, t) {
		t.addFollow(e.prodigy.player.userID)
	},
	doneTutorial: function() {
		var e = this._game.prodigy.player.state.get("zone-lamplight");
		return Util.log(e, 2), Util.isDefined(e) && Util.isDefined(e.quest) && e.quest.ID > 2
	},
	hasDailyQuestExpired: function() {
		return Util.isDefined(this._zone.getState("dailyQuest")) ? this._zone.getState("dailyQuest").dateId !== Util.getDateId() : !0
	},
	startNewDailyQuest: function(e, t) {
		for (var i = [], a = 0; t > a; a++) i.push(!1);
		this._zone.setState("dailyQuest", {
			questId: e,
			dateId: Util.getDateId(),
			questState: i
		}), this._game.prodigy.player.getUpdatedData()
	},
	isDailyQuestComplete: function() {
		if (!Util.isDefined(this._zone.getState("dailyQuest"))) return !1;
		if (this._zone.getState("dailyQuest").dateId !== Util.getDateId()) return !1;
		for (var e = this._zone.getState("dailyQuest").questState, t = !0, i = 0; i < e.length; i++)
			if (e[i] === !1) {
				t = !1;
				break
			} return t
	},
	updateDailyQuest: function(e) {
		if (Util.isDefined(this._zone.getState("dailyQuest"))) {
			var t = this._zone.getState("dailyQuest").questId,
				i = this._zone.getState("dailyQuest").dateId,
				a = this._zone.getState("dailyQuest").questState;
			a[e] = !0, this._zone.setState("dailyQuest", {
				questId: t,
				dateId: i,
				questState: a
			})
		}
	},
	getRemainingQuestObjectives: function() {
		for (var e = 0, t = this._zone.getState("dailyQuest").questState, i = 0; i < t.length; i++) t[i] === !1 && e++;
		return e
	},
	generateQuestId: function() {
		return 0
	},
	getDailyQuestData: function() {
		return {
			description: "Complete today's quest",
			source: "",
			frame: ""
		}
	}
}, Prodigy.Forest = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Firefly Forest", this.ID = "forest", this.battleBG = "bg-battle-forest", this.onFaint = "forest-C8", this.questHub = "forest-C8", this.states = ["chest1", "chest2", "chest3", "chest4", "wizard1", "wizard2", "wizard3", "wizard4", "daily", "hasdaily", "fakeMonsterDefeated"], this.util = new Prodigy.ZoneUtil(e, this), this.monsters = [25, 29, 32, 52, 55, 59, 69, 81];
	var t = ["tileset-firefly-new", "npc-sprite-wizard", "zone-forest", "tileset-collisions"];
	this.maps = {
		A3: new Forest_A3(this, t),
		A4: new Forest_A4(this, t),
		A5: new Forest_A5(this, t),
		B5: new Forest_B5(this, t),
		B6: new Forest_B6(this, t),
		B7: new Forest_B7(this, t),
		B8: new Forest_B8(this, t),
		C4: new Forest_C4(this, t),
		C7: new Forest_C7(this, t),
		C8: new Forest_C8(this, t),
		D3: new Forest_D3(this, t)
	}, this.quests = {
		1: new Prodigy.Forest_Q1(this, t),
		2: new Prodigy.Forest_Q2(this, t),
		3: new Prodigy.Forest_Q3(this, t),
		4: new Prodigy.Forest_Q4(this, t),
		5: new Prodigy.Forest_Q5(this, t),
		6: new Prodigy.Forest_Q6(this, t),
		7: new Prodigy.Forest_Q7(this, t),
		8: new Prodigy.Forest_Q8(this, t),
		9: new Prodigy.Forest_Q9(this, t),
		10: new Prodigy.Forest_Q10(this, t),
		11: new Prodigy.Forest_Q11(this, t),
		12: new Prodigy.Forest_Q12(this, t)
	}
}, Prodigy.extends(Prodigy.Forest, Prodigy.Zone, {
	constructor: Prodigy.Forest,
	placeDaily: function(e, t, i) {
		(1 === this.getState("hasdaily") || Util.isDefined(this.getQuestState()) && this.getQuestState().ID > 1 && this.getQuestState().ID > 1) && t.prodigy.player.backpack.hasItem("item", 78) < 99 && (this.firefly = e.addFireflyEvent(t, i, 1260 * Math.random(), 700 * Math.random(), 100, 100, this.fireflyOnClick.bind(this, t, i, e), null))
	},
	placeAllDailies: function() {},
	fireflyOnClick: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.validPath(t.user, t.path, this.firefly.x, this.firefly.y + 100), a.set(t.user, "evtProc", !0), a.function(this.interactFirefly.bind(this, e, t, i)), a.set(t.user, "evtProc", !1), a.start()
	},
	interactFirefly: function(e, t, i) {
		if (0 === this.firefly.moving && Math.abs(t.user.x - this.firefly.x) < 100 && Math.abs(this.firefly.y + 100 - t.user.y) < 100) {
			this.firefly.destroy(), this.game.prodigy.open.gotItem([{
				type: "item",
				ID: 78
			}], null, null, "firefly");
			var a = [];
			for (var s in this.maps) a.push(s);
			for (var r = new Prodigy.SeededRandomGenerator(this.getState("daily").date), n = 0; 5 > n; n++)
				if (a[Math.floor(r.jumpFromStart(n) * (a.length - 1))] === i._tag) {
					var o = this.getState("daily").flags;
					o[n] = 0, this.setState("daily", {
						date: this.getState("daily").date,
						flags: o,
						rewards: this.getState("daily").rewards
					})
				}
		}
	}
}), Forest_A3 = function(e, t) {
	Prodigy.Map.call(this, e, "A3", "Mountain Gate", 1080, 630, ["forest-A4"], t)
}, Prodigy.extends(Forest_A3, Prodigy.Map, {
	constructor: Forest_A3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 320,
			h: 80
		}, "forest-A4", 1080, 90), this.addHealStone(e, t, 270, 435)
	}
}), Forest_A4 = function(e, t) {
	Prodigy.Map.call(this, e, "A4", "Mountain Pass", 1080, 520, ["forest-A3", "forest-A5", "forest-B5"], t), this.coord = [{
		x: 150,
		y: 430
	}, {
		x: 755,
		y: 400
	}]
}, Prodigy.extends(Forest_A4, Prodigy.Map, {
	constructor: Forest_A4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1080,
			y: 40,
			w: 320,
			h: 80
		}, "forest-A3", 1080, 630), this.addAreaEvent(e, t, {
			x: 1280,
			y: 720,
			r: 200
		}, "forest-B5", 200, 200), this.addAreaEvent(e, t, {
			x: 220,
			y: 680,
			w: 280,
			h: 80
		}, "forest-A5", 220, 90);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 59
			}, {
				ID: 52
			}, {
				ID: 36
			}]
		};
		this.addMonster(e, t, 1, 590, 500, !1, a);
		var a = {
			opponent: [{
				data: {
					level: 9
				},
				appearance: {
					name: "Lucky Jack",
					gender: "male",
					hair: {
						style: 16,
						color: 3
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 8,
					outfit: 16,
					weapon: 24
				}
			}],
			pets: [{
				ID: 36,
				level: 5
			}, {
				ID: 69,
				level: 3
			}, {
				ID: 61,
				level: 5
			}]
		};
		this.addWizard(e, t, 1046, 208, "wizard4", a).flip()
	}
}), Forest_A5 = function(e, t) {
	Prodigy.Map.call(this, e, "A5", "Firefly Crossing", 220, 90, ["forest-A4"], t), this.coord = [{
		x: 200,
		y: 600
	}, {
		x: 900,
		y: 510
	}, {
		x: 100,
		y: 420
	}]
}, Prodigy.extends(Forest_A5, Prodigy.Map, {
	constructor: Forest_A5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 220,
			y: 40,
			w: 280,
			h: 80
		}, "forest-A4", 220, 630);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 32
			}, {
				ID: 52
			}, {
				ID: 55
			}, {
				ID: 59
			}, {
				ID: 69
			}, {
				ID: 36
			}]
		};
		this.addMonster(e, t, 1, 414, 482, !1, a), this.addMonster(e, t, 2, 697, 343, !1, a), this.addMonster(e, t, 3, 755, 601, !1, a), this.addChest(e, t, "chest3", 810, 280, [{
			type: "outfit",
			ID: 12
		}])
	}
}), Forest_B5 = function(e, t) {
	Prodigy.Map.call(this, e, "B5", "The Crossroads", 1100, 630, ["forest-A4", "forest-C4", "forest-B6"], t), this.coord = [{
		x: 1e3,
		y: 180
	}, {
		x: 200,
		y: 200
	}, {
		x: 690,
		y: 125
	}]
}, Prodigy.extends(Forest_B5, Prodigy.Map, {
	constructor: Forest_B5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 0,
			y: 0,
			r: 200
		}, "forest-A4", 1080, 520), this.addAreaEvent(e, t, {
			x: 1280,
			y: 0,
			r: 200
		}, "forest-C4", 200, 520), this.addAreaEvent(e, t, {
			x: 1100,
			y: 680,
			w: 280,
			h: 80
		}, "forest-B6", 1100, 90);
		var a = {
			opponent: [{
				data: {
					level: 4
				},
				appearance: {
					name: "Woodsman Mike",
					gender: "male",
					hair: {
						style: 19,
						color: 2
					},
					skinColor: 2,
					eyeColor: 3
				},
				equipment: {
					hat: 7,
					outfit: 12,
					weapon: 1
				}
			}],
			pets: [{
				ID: 32,
				level: 3
			}]
		};
		this.addWizard(e, t, 335, 371, "wizard2", a)
	}
}), Forest_B6 = function(e, t) {
	Prodigy.Map.call(this, e, "B6", "Grassy Clearing", 200, 630, ["forest-B5", "forest-B7"], t.concat("npc-sprite-pippet")), this.coord = [{
		x: 210,
		y: 390
	}, {
		x: 300,
		y: 130
	}, {
		x: 540,
		y: 260
	}]
}, Prodigy.extends(Forest_B6, Prodigy.Map, {
	constructor: Forest_B6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1100,
			y: 40,
			w: 280,
			h: 80
		}, "forest-B5", 1100, 630), this.addAreaEvent(e, t, {
			x: 200,
			y: 680,
			w: 320,
			h: 80
		}, "forest-B7", 200, 90), this.heal = this.addHealStone(e, t, 980, 443), this.showMonsters(e, t)
	},
	showMonsters: function(e, t) {
		var i = {
			randDir: !0,
			encounter: [{
				ID: 29
			}, {
				ID: 32
			}, {
				ID: 59
			}, {
				ID: 81
			}]
		};
		this.addMonster(e, t, 1, 369, 152, !1, i), this.addMonster(e, t, 2, 819, 218, !1, i), this.addMonster(e, t, 3, 558, 416, !1, i)
	}
}), Forest_B7 = function(e, t) {
	Prodigy.Map.call(this, e, "B7", "Fisherman's Pond", 1190, 240, ["forest-B6", "forest-C7"], t.concat("npc-sprite-pippet")), this.coord = [{
		x: 955,
		y: 690
	}, {
		x: 130,
		y: 530
	}, {
		x: 255,
		y: 680
	}]
}, Prodigy.extends(Forest_B7, Prodigy.Map, {
	constructor: Forest_B7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 40,
			w: 320,
			h: 80
		}, "forest-B6", 200, 630), this.addAreaEvent(e, t, {
			x: 1240,
			y: 240,
			w: 80,
			h: 280
		}, "forest-C7", 90, 240), this.addPippet(e, t, 2, 200, 546);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 29
			}, {
				ID: 32
			}, {
				ID: 59
			}, {
				ID: 81
			}]
		};
		this.addMonster(e, t, 1, 253, 288, !1, a), this.addMonster(e, t, 2, 200, 546, !1, a), this.addMonster(e, t, 3, 632, 542, !1, a), this.addChest(e, t, "chest1", 780, 230, [{
			type: "weapon",
			ID: 1
		}])
	}
}), Forest_B8 = function(e, t) {
	Prodigy.Map.call(this, e, "B8", "Firefly Clearing", 1190, 480, ["forest-C8"], t.concat("npc-sprite-merchant")), this.coord = [{
		x: 490,
		y: 570
	}, {
		x: 785,
		y: 270
	}, {
		x: 440,
		y: 200
	}]
}, Prodigy.extends(Forest_B8, Prodigy.Map, {
	constructor: Forest_B8,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 480,
			w: 80,
			h: 200
		}, "forest-C8", 90, 480), this.npc = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", this.chatWithMerchant.bind(this, e)), this.npc.flip(), this.npc.animate("stand"), this.npcIcon = t.foreground.add(e.prodigy.create.sprite(350, 150, "icons", "map-quest")), this.floatTween = e.add.tween(this.npcIcon).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "20"
		}, 1400, Phaser.Easing.Quadratic.InOut).loop(), this.floatTween.start(), this.addChest(e, t, "chest4", 1136, 264, [{
			type: "gold",
			N: 500
		}])
	},
	start: function(e, t, i) {
		if (Prodigy.Map.prototype.start.call(this, e, t, i), this._zone.isQuestComplete(1) && !Util.isDefined(this._zone.getState("hasdaily"))) {
			this._zone.setState("hasdaily", 1);
			var a = e.prodigy.event.create();
			a.text(33, "merchant"), a.text(34, "merchant"), a.start()
		}
	},
	chatWithMerchant: function(e) {
		var t = e.prodigy.event.create();
		this._zone.isOnQuest(1) && !this._zone.isQuestComplete(1) ? t.text(1, "merchant") : e.prodigy.player.backpack.hasItem("item", 78) ? e.prodigy.player.backpack.hasItem("item", 78) < 5 ? (t.text(18, "merchant"), t.text(19, "merchant"), 4 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 4 && this._zone.getState("daily").rewards < 5 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 5
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "item",
			ID: 77,
			N: 5
		}])), t.enableSave(!0), t.text(20, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 4 && e.prodigy.player.backpack.hasItem("item", 78) < 10 && this._zone.getState("daily").rewards > 4 ? (t.text(18, "merchant"), t.text(20, "merchant"), 9 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 9 && this._zone.getState("daily").rewards < 10 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 10
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "item",
			ID: 76,
			N: 10
		}])), t.enableSave(!0), t.text(21, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 9 && e.prodigy.player.backpack.hasItem("item", 78) < 25 && this._zone.getState("daily").rewards > 9 ? (t.text(18, "merchant"), t.text(21, "merchant"), 24 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 24 && this._zone.getState("daily").rewards < 25 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 25
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "hat",
			ID: 64
		}])), t.enableSave(!0), t.text(22, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 24 && e.prodigy.player.backpack.hasItem("item", 78) < 50 && this._zone.getState("daily").rewards > 24 ? (t.text(18, "merchant"), t.text(22, "merchant"), 49 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 49 && this._zone.getState("daily").rewards < 50 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 50
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "outfit",
			ID: 55
		}])), t.enableSave(!0), t.text(23, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 49 && e.prodigy.player.backpack.hasItem("item", 78) < 75 && this._zone.getState("daily").rewards > 49 ? (t.text(18, "merchant"), t.text(23, "merchant"), 74 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 74 && this._zone.getState("daily").rewards < 75 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 75
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "item",
			ID: 77,
			N: 5
		}])), t.enableSave(!0), t.text(24, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 74 && e.prodigy.player.backpack.hasItem("item", 78) < 99 && this._zone.getState("daily").rewards > 74 ? (t.text(18, "merchant"), t.text(24, "merchant"), 98 === e.prodigy.player.backpack.hasItem("item", 78) && t.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 78) > 98 && this._zone.getState("daily").rewards < 99 ? (t.text(26, "merchant"), t.enableSave(!1), t.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 99
		})), t.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "weapon",
			ID: 80
		}])), t.enableSave(!0)) : t.text(36, "merchant") : (t.text(18, "merchant"), t.text(28, "merchant"), t.text(29, "merchant")), t.start()
	}
}), Forest_C4 = function(e, t) {
	Prodigy.Map.call(this, e, "C4", "The Old Road", 200, 520, ["forest-B5", "forest-D3"], t.concat(["npc-sprite-merchant"])), this.coord = [{
		x: 400,
		y: 580
	}, {
		x: 820,
		y: 500
	}, {
		x: 800,
		y: 330
	}]
}, Prodigy.extends(Forest_C4, Prodigy.Map, {
	constructor: Forest_C4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 200
		}, "forest-B5", 1080, 200), this.addAreaEvent(e, t, {
			x: 1280,
			y: 0,
			r: 200
		}, "forest-D3", 200, 520), this.npc = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", Util.isDefined(i) && Util.isDefined(i.onInputDownCallback) ? i.onInputDownCallback : this.chatWithMerchant.bind(this, e, t)), this.npc.flip(), this.npc.animate("stand");
		var a = {
			randDir: !0,
			encounter: [{
				ID: 29
			}, {
				ID: 55
			}, {
				ID: 69
			}]
		};
		this.addMonster(e, t, 1, 608, 488, !1, a), this.addMonster(e, t, 2, 787, 200, !1, a);
		var a = {
			opponent: [{
				data: {
					level: 7
				},
				appearance: {
					name: "Caleb Forestmaster",
					gender: "male",
					hair: {
						style: 21,
						color: 3
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 15,
					outfit: 29,
					weapon: 8
				}
			}],
			pets: [{
				ID: 55,
				level: 5
			}, {
				ID: 29,
				level: 7
			}]
		};
		this.addWizard(e, t, 1040, 450, "wizard3", a).flip(), this.addChest(e, t, "chest2", 300, 400, [{
			type: "gold",
			N: 250
		}])
	},
	chatWithMerchant: function(e) {
		var t = e.prodigy.event.create();
		t.text(6, "merchant"), t.start()
	}
}), Forest_C7 = function(e, t) {
	Prodigy.Map.call(this, e, "C7", "Stonefish Beach", 200, 630, ["forest-B7", "forest-C8"], t), this.coord = [{
		x: 640,
		y: 500
	}, {
		x: 330,
		y: 170
	}, {
		x: 220,
		y: 260
	}]
}, Prodigy.extends(Forest_C7, Prodigy.Map, {
	constructor: Forest_C7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 220,
			w: 80,
			h: 200
		}, "forest-B7", 1190, 240), this.addAreaEvent(e, t, {
			x: 200,
			y: 680,
			w: 240,
			h: 80
		}, "forest-C8", 200, 90), this.addCollect(e, t, 1, 980, 520, {
			type: "item",
			ID: "51"
		});
		var a = {
			opponent: [{
				data: {
					level: 2
				},
				appearance: {
					name: "Milly",
					gender: "female",
					hair: {
						style: 1,
						color: 3
					},
					skinColor: 1,
					eyeColor: 2
				},
				equipment: {
					hat: 12
				}
			}],
			pets: []
		};
		this.addWizard(e, t, 406, 344, "wizard1", a)
	}
}), Forest_C8 = function(e, t) {
	Prodigy.Map.call(this, e, "C8", "The Big Tree", 1190, 520, ["forest-C7", "forest-B8", "tutorial-D8"], t.concat("npc-sprite-flora", "npc-sprite-merchant"))
}, Prodigy.extends(Forest_C8, Prodigy.Map, {
	constructor: Forest_C8,
	setup: function(e, t, i) {
		e.prodigy.world.getZone("lamplight").completeQuest(2), Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 40,
			w: 240,
			h: 80
		}, "forest-C7", 200, 630), this.addAreaEvent(e, t, {
			x: 40,
			y: 480,
			w: 80,
			h: 200
		}, "forest-B8", 1190, 480), this.addAreaEvent(e, t, {
			x: 1240,
			y: 520,
			w: 80,
			h: 240
		}, "lamplight-B1", 120, 480), this.addHealStone(e, t, 148, 286);
		var a = function(e) {
			var t = e.prodigy.event.create();
			t.text(39, "flora"), t.start()
		};
		this.addConstructedQuestNPC(e, t, 620, 300, "flora", !0, a.bind(this, e)), t.createStoreNPC(1130, 390, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.FIREFLY_OUTFITTERS)), new Prodigy.Container.ToyMerchant(e, t.content, 920, 390)
	}
}), Forest_D3 = function(e, t) {
	Prodigy.Map.call(this, e, "D3", "Old Road Remains", 200, 520, ["forest-C4"], t.concat("boss-gerald")), this.coord = [{
		x: 500,
		y: 640
	}, {
		x: 750,
		y: 120
	}, {
		x: 1100,
		y: 450
	}], this._tween = [], this._wakeUp = !1
}, Prodigy.extends(Forest_D3, Prodigy.Map, {
	constructor: Forest_D3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.game = e, this._wakeUp = !1, this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 200
		}, "forest-C4", 1080, 200);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 52
			}, {
				ID: 55
			}, {
				ID: 69
			}, {
				ID: 81
			}, {
				ID: 61
			}]
		};
		this.addMonster(e, t, 1, 481, 239, !1, a), this.addMonster(e, t, 2, 634, 428, !1, a), this.addMonster(e, t, 3, 926, 230, !1, a), this.addMonster(e, t, 4, 940, 533, !1, a);
		var s = e.cache.getJSON(this._file),
			r = e.cache.getJSON("map-pathing").tilesets,
			n = null;
		for (o = 0; o < s.layers.length; o++) "gerald" === s.layers[o].name && (n = s.layers[o]);
		if (this.sprite = this.game.prodigy.create.element(this.sprites, 760, 160), this._geraldHead = t.foreground.add(this.game.prodigy.create.sprite(760, 160, "boss-gerald", "Gerald-head1")), this._sleepTween = [], this._sleepTween.push(new Prodigy.TweenController(this.game, this._geraldHead)), this._sleepTween[0].set("frameName", ["Gerald-head1", "Gerald-head2", "Gerald-head3", "Gerald-head2", "Gerald-head1"], 300, 9999), this._sleepTween[0].end(this.wakeUpGerald.bind(this)), this._tween = this._sleepTween, this._wakeUpTween = [], this._wakeUpTween.push(new Prodigy.TweenController(this.game, this._geraldHead)), this._wakeUpTween[0].set("frameName", ["Gerald-head4", "Gerald-head5", "Gerald-head4", "Gerald-head1", "Gerald-head5"], 150, 9999), this._wakeUpTween[0].end(this.stayAwake.bind(this)), this._awakeTween = [], this._awakeTween.push(new Prodigy.TweenController(this.game, this._geraldHead)), this._awakeTween[0].set("frameName", ["Gerald-head5"], 150, 9999), this._zone.getQuestState().ID > 8 && !this._zone.isQuestComplete(12)) {
			this.initLayer.call(this, e, this.above, n, s.tilesets, r, null);
			for (var o = 0; o < this._tween.length; o++) this._tween[o].start()
		} else this._geraldHead.visible = !1
	},
	checkForGerald: function() {
		this._zone.getQuestState().ID > 8 && !this._zone.isQuestComplete(12) ? (this._zone.enableLayer(0, !0), this._zone.enableLayer(1, !0)) : (this._zone.enableLayer(0, !1), this._zone.enableLayer(1, !1))
	},
	init: function(e, t, i) {
		return this.checkForGerald.call(this), Prodigy.Map.prototype.init.call(this, e, t, i)
	},
	wakeUpGerald: function() {
		if (this._wakeUp === !0) {
			this._tween = this._wakeUpTween;
			for (var e = 0; e < this._tween.length; e++) this._tween[e].start()
		}
	},
	stayAwake: function() {
		this._tween = this._awakeTween;
		for (var e = 0; e < this._tween.length; e++) this._tween[e].start()
	},
	initListeners: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.GameObj.UPDATE, this.update.bind(this), this, this.game)
	},
	update: function() {
		for (var e = 0; e < this._tween.length; e++) this._tween[e].update();
		Prodigy.Map.prototype.update.call(this)
	}
}), Prodigy.Forest_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "", {
		type: "pet",
		ID: 81,
		N: 2,
		U: !0
	}, ["forest-B8"], [0, 1, 2, 3], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q1, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q1,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i), "B8" === i.getTag() && this.spawnMonsters(e, t, i)
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "B8" === i.getTag() && this.zone.isOnSequence(1, 0) && this.saveMerchant(e, i)
	},
	saveMerchant: function(e, t) {
		var i = e.prodigy.event.create();
		i.function(t.npc.chat.bind(t.npc, 1, 80)), i.function(t.chatWithMerchant.bind(t, e)), i.function(this.zone.completeSequence.bind(this.zone, 1, 0))
	},
	spawnMonsters: function(e, t, i) {
		var a = {
			run: !1,
			encounter: [{
				ID: 81
			}]
		};
		i.addMonster(e, t, 1, 384, 463, !0, a), i.addMonster(e, t, 2, 554, 338, !0, a)
	}
}), Prodigy.Forest_Q2 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 2, "", {
		type: "weapon",
		ID: 1,
		N: 1
	}, ["forest-B7"], [4, 5, 6], [], [7], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q2, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q2
}), Prodigy.Forest_Q3 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 3, "", {
		type: "pet",
		ID: 52,
		N: 3
	}, ["forest-B6"], [8, 9, 10], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q3, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q3,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t), "B6" !== i.getTag() || this.zone.isQuestComplete(3) ? null : (this.placeMonsters(e, t, i), {
			enableMonsters: !1
		})
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "B6" === i.getTag() && this.zone.isOnSequence(3, 0) && this.chatWithNoot(e, t, i)
	},
	placeMonsters: function(e, t, i) {
		var a = {
			randDir: !0,
			randRange: 200,
			encounter: [{
				ID: 52
			}]
		};
		i.addMonster(e, t, 1, 369, 152, !1, a), i.addMonster(e, t, 2, 819, 218, !1, a), i.addMonster(e, t, 3, 558, 416, !1, a)
	},
	chatWithNoot: function(e) {
		var t = e.prodigy.event.create();
		t.text(53, "noot"), t.start(), this.zone.completeSequence(3, 0)
	}
}), Prodigy.Forest_Q4 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 4, "", {
		type: "item",
		ID: 66,
		N: 3
	}, ["forest-B5"], [11, 12, 13], [], [39], [{
		type: "spell",
		ID: 13
	}, {
		type: "item",
		ID: 67
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q4, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q4,
	collectionMaps: {
		B5: [1, 2, 3]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t), "B5" !== i.getTag() || this.zone.isQuestComplete(4) || this.placeItems(e, t, i)
	},
	placeItems: function(e, t, i) {
		var a = {
			type: "item",
			ID: 66
		};
		i.addCollect(e, t, 1, 426, 472, a), i.addCollect(e, t, 2, 904, 472, a), i.addCollect(e, t, 3, 696, 241, a);
		var s = {
			randDir: !0,
			randRange: 200,
			encounter: [{
				ID: 81
			}]
		};
		i.addMonster(e, t, 1, 899, 297, !1, s), i.addMonster(e, t, 2, 562, 307, !1, s)
	}
}), Prodigy.Forest_Q5 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 5, "Talk to Merchant", {
		type: "seq",
		N: 1
	}, ["forest-C4"], [14, 15], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q5, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q5,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t), "C4" !== i.getTag() || this.zone.isQuestComplete(5) ? null : {
			onInputDownCallback: this.chatWithMerchant.bind(this, e, t, i)
		}
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "C4" !== i.getTag() || this.zone.isQuestComplete(5) || this.highlightNPC(i)
	},
	highlightNPC: function(e) {
		e.npc.highlight(!0, -120, -130)
	},
	chatWithMerchant: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.function(i.npc.highlight.bind(i.npc, !1)), a.text(3, "merchant"), a.enableInput(!1), a.function(i.npc.chat.bind(i.npc, 7, 100)), a.delay(2e3), a.function(i.npc.chat.bind(i.npc, 1, 100)), a.delay(500), a.enableInput(!0), a.text(4, "merchant"), a.text(5, "merchant"), a.function(this.zone.completeSequence.bind(i._zone, 5, 0)), a.function(t.process.bind(t)), a.start()
	}
}), Prodigy.Forest_Q6 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 6, "", {
		type: "item",
		ID: 24,
		N: 1
	}, ["forest-D3"], [16, 17], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q6, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q6,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t), "D3" !== i.getTag() || this.zone.isQuestComplete(6) ? null : (this.placeMonsters(e, t, i), {
			enableMonsters: !1
		})
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "D3" === i.getTag() && this.zone.isOnSequence(6, 0) && this.chatWithNoot(i, e)
	},
	placeMonsters: function(e, t, i) {
		var a = {
			randDir: !0,
			encounter: [{
				ID: 32,
				drops: [{
					type: "item",
					ID: 24,
					R: .5
				}]
			}]
		};
		i.addMonster(e, t, 1, 481, 239, !1, a), i.addMonster(e, t, 2, 634, 428, !1, a), i.addMonster(e, t, 3, 926, 230, !1, a), i.addMonster(e, t, 4, 940, 533, !1, a)
	},
	chatWithNoot: function(e, t) {
		var i = t.prodigy.event.create();
		i.text(54, "noot"), i.text(55, "noot"), i.function(this.zone.completeSequence.bind(e._zone, 6, 0)), i.start()
	}
}), Prodigy.Forest_Q7 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 7, "", {
		type: "item",
		ID: 24,
		N: 5
	}, ["forest-A4", "forest-A5"], [18, 19, 20], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q7, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q7,
	collectionMaps: {
		A4: [1, 2],
		A5: [3, 4, 5]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t), "A4" !== i.getTag() || this.zone.isQuestComplete(7) ? "A5" !== i.getTag() || this.zone.isQuestComplete(7) || this.placeMandrakes_A5(e, t, i) : this.placeMandrakes_A4(e, t, i)
	},
	placeMandrakes_A5: function(e, t, i) {
		var a = {
			type: "item",
			ID: 24
		};
		i.addCollect(e, t, 3, 154, 511, a), i.addCollect(e, t, 4, 1e3, 380, a), i.addCollect(e, t, 5, 552, 210, a)
	},
	placeMandrakes_A4: function(e, t, i) {
		var a = {
			type: "item",
			ID: 24
		};
		i.addCollect(e, t, 1, 270, 460, a), i.addCollect(e, t, 2, 780, 314, a)
	}
}), Prodigy.Forest_Q8 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 8, "Defeat the Trio!", {
		type: "seq",
		N: 2
	}, ["forest-A3"], [21, 22, 23], [], [39], [{
		type: "spell",
		ID: 14
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q8, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q8,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "A3" === i.getTag() && (this.zone.isOnSequence(8, 0) ? this.tripTropBattle(e, t, i) : this.zone.isOnSequence(8, 1) && this.chatWithNoot(e, t, i))
	},
	endBattle: function(e) {
		this.zone.completeSequence(8, 0), e.prodigy.world.teleport("forest-A3", 640, 400)
	},
	tripTropBattle: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "TripTrop Trio!", {
				drops: [{
					ID: 69,
					type: "item"
				}],
				pets: [{
					ID: 59,
					nickname: "TripTrop Ted"
				}, {
					ID: 59,
					nickname: "TripTrop Tom"
				}, {
					ID: 59,
					nickname: "TripTrop Tak"
				}]
			}, this.endBattle.bind(this, e, i)),
			s = i.addMonster(e, t, 1, 640, 330, !1, {
				encounter: [{
					ID: 59
				}]
			});
		s.flip();
		var r = i.addMonster(e, t, 2, 540, 360, !1, {
			encounter: [{
				ID: 59
			}]
		});
		r.flip();
		var n = i.addMonster(e, t, 3, 740, 360, !1, {
			encounter: [{
				ID: 59
			}]
		});
		n.flip(), t.user.evtProc = !0;
		var o = e.prodigy.event.create();
		o.enableInput(!1), o.path(t.user, [{
			x: 910,
			y: 480
		}]), o.delay(100), o.function(s.chat.bind(s, 1, 80)), o.hop(s, 200), o.function(s.flip.bind(s)), o.function(r.chat.bind(r, 1, 80)), o.hop(r, 200), o.function(r.flip.bind(r)), o.function(n.chat.bind(n, 1, 80)), o.hop(n, 200), o.function(n.flip.bind(n)), o.enableInput(!0), o.text(56, "noot"), o.function(a), o.start()
	},
	chatWithNoot: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.text(57, "noot"), a.function(this.zone.completeSequence.bind(i._zone, 8, 1)), a.function(t.process.bind(t)), a.start()
	}
}), Prodigy.Forest_Q9 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 9, "Find Gerald", {
		type: "seq",
		N: 1
	}, ["forest-D3"], [24, 25], [], [26], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q9, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q9,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "D3" === i.getTag() && this.zone.isOnSequence(9, 0) && this.chatWithNoot(e, t, i)
	},
	chatWithNoot: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.text(59, "noot"), a.function(this.zone.completeSequence.bind(i._zone, 9, 0)), a.function(t.process.bind(t)), a.start()
	}
}), Prodigy.Forest_Q10 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 10, "Fix the Flute", {
		type: "seq",
		N: 1
	}, ["forest-A5"], [27, 28, 29], [], [30], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q10, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q10,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.start.call(this), "A5" === i.getTag() ? {
			enableMonsters: !1
		} : null
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isQuestComplete(10) || "A5" !== i.getTag() || this.chatWithNoot(e, t, i)
	},
	chatWithNoot: function(e, t, i) {
		var a = e.prodigy.create.element(t.content, 490, 340),
			s = a.add(e.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		s.alpha = 0, s.width = 110, s.height = 80, a.highlight(!0, 0, -20), s.inputEnabled = !0, s.events.onInputDown.add(this.clickStump.bind(this, i, e, t, a))
	},
	clickStump: function(e, t, i, a) {
		e._questParams = {};
		var s = i.content.add(t.prodigy.icon.createIcon(540, 380, "icon-item-69"));
		s.anchor.setTo(.5, 1), t.add.tween(s).to({
			y: 370
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), s.visible = !1;
		var r = i.content.add(t.prodigy.icon.createIcon(540, 380, "icon-item-70"));
		r.anchor.setTo(.5, 1), t.add.tween(r).to({
			y: 370
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), r.visible = !1;
		var n = e.addMonster(t, i, 4, 982, 626, !1, {
			encounter: [{
				ID: 69
			}]
		});
		n.visible = !1;
		var o = t.prodigy.event.create();
		o.function(a.highlight.bind(a, !1)), o.enableInput(!1), o.path(i.user, [{
			x: 537,
			y: 460
		}]), o.set(i.user, "evtProc", !0), o.function(t.prodigy.player.backpack.consume.bind(t.prodigy.player.backpack, "item", 69, 1)), o.delay(100), o.set(s, "visible", !0), o.delay(500), o.explode(505, 325, 80, 80, 3), o.set(s, "visible", !1), o.set(r, "visible", !0), o.delay(500), o.set(n, "visible", !0), o.path(n, [{
			x: 708,
			y: 383
		}], 1), o.hop(n, 500, -140, 100), o.set(r, "visible", !1), o.function(i.user.chat.bind(i.user, 1, 80)), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), o.hop(n, 500, -160, 100), o.path(n, [{
			x: 218,
			y: 0
		}], 2), o.set(n, "visible", !1), o.enableInput(!0), o.text(60, "noot"), o.function(a.destroy.bind(a)), o.function(this.zone.completeSequence.bind(e._zone, 10, 0)), o.set(i.user, "evtProc", !1), o.function(i.process.bind(i)), o.start()
	}
}), Prodigy.Forest_Q11 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 11, "", {
		type: "item",
		ID: 70,
		N: 1
	}, ["forest-A3", "forest-D3"], [31, 32], [], [39], [{
		type: "gold",
		N: 200
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q11, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q11,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t), this.fakeMonster = null, "A3" === i.getTag() && this.placeThief(e, t, i), "D3" !== i.getTag() || this.zone.isQuestComplete(11) || this.placeDecoyThief(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i), "D3" === i.getTag() && Util.isDefined(this.fakeMonster) && this.fakeMonster.highlight(!0, -40, -90)
	},
	placeThief: function(e, t, i) {
		var a = {
			"catch": !1,
			drops: [{
				ID: 70,
				type: "item"
			}],
			encounter: [{
				ID: 69,
				nickname: "Forest Thief"
			}]
		};
		i.addMonster(e, t, 4, 384, 463, !0, a)
	},
	placeDecoyThief: function(e, t, i) {
		var a = {
			"catch": !1,
			encounter: [{
				ID: 69
			}],
			onEnc: function() {
				this.zone.setState("fakeMonsterDefeated", !0)
			}.bind(this)
		};
		this.fakeMonster = i.addMonster(e, t, 5, 484, 463, !0, a)
	},
	getRemainingQuestAreas: function() {
		var e = ["forest-A3"];
		return Util.isDefined("fakeMonsterDefeated") && this.zone.getState("fakeMonsterDefeated") || e.push("forest-D3"), e
	}
}), Prodigy.Forest_Q12 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 12, "Wake up Gerald", {
		type: "seq",
		N: 1
	}, ["forest-D3"], [33, 34], [], [35], [{
		type: "spell",
		ID: 15
	}, {
		type: "key",
		ID: 3
	}], !1)
}, Prodigy.extends(Prodigy.Forest_Q12, Prodigy.Quest, {
	constructor: Prodigy.Forest_Q12,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.start.call(this), "D3" === i.getTag() ? {
			enableMonsters: !1
		} : null
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isQuestComplete(12) || "D3" !== i.getTag() || this.bossBattle(e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Boss Battle!", {
			boss: {
				ID: 10,
				element: "earth",
				attacks: [13, 14, 15, 16],
				name: "Gerald",
				starBonus: 40,
				tag: "forest",
				scale: !0
			}
		}, this.endBattle.bind(this, e, i));
		if (this.zone.isOnSequence(12, 0)) {
			var s = e.prodigy.event.create();
			s.enableInput(!1), s.path(t.user, [{
				x: 572,
				y: 342
			}]), s.enableInput(!0), s.text(61, "noot"), s.set(i, "_wakeUp", !0), s.text(62, "noot"), s.text(63, "noot"), s.function(a), s.start()
		}
	},
	endBattle: function(e) {
		this.zone.setState("gerald", null), this.zone.completeSequence(12, 0), e.prodigy.world.teleport("forest-D3", 572, 342)
	},
	update: function(e, t, i) {
		"D3" === i.getTag() && i.update.call(i)
	}
}), Prodigy.Toyzone = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Toyzone", this.ID = "toyzone", this.battleBG = "bg-battle-forest", this.onFaint = "toyzone-B1", this.questHub = "toyzone-B1", this.states = ["firstVisit", "dragonsVisited", "epicsVisited", "goldRecieved"], this.util = new Prodigy.ZoneUtil(e, this);
	var t = ["tileset-toyzone", "tileset-toyzone-dragons", "tileset-cloud", "tileset-forest-new", "tileset-toy-ruins-test", "tileset-generic", "tileset-outside", "tileset-collisions", "core", "core-2", "icons", "zone-toyzone"];
	this.maps = {
		A1: new Prodigy.Toyzone_A1(this, t),
		B1: new Prodigy.Toyzone_B1(this, t),
		B2: new Prodigy.Toyzone_B2(this, t)
	}
}, Prodigy.extends(Prodigy.Toyzone, Prodigy.Zone, {
	constructor: Prodigy.Toyzone
}), Prodigy.Toyzone_A1 = function(e, t) {
	Prodigy.Map.call(this, e, "A1", "Dragon Lair", 640, 360, ["toyzone-B1"], t), this.TOY_SPAWN_DATA = [{
		ID: 130,
		toy: {
			x: 880,
			y: 260
		},
		portal: {
			x: 830,
			y: 195
		},
		path: {
			x: 885,
			y: 250
		},
		effect: {
			x: 883,
			y: 232
		}
	}, {
		ID: 131,
		toy: {
			x: 400,
			y: 260
		},
		portal: {
			x: 350,
			y: 195
		},
		path: {
			x: 395,
			y: 250
		},
		effect: {
			x: 400,
			y: 232
		}
	}, {
		ID: 132,
		toy: {
			x: 910,
			y: 430
		},
		portal: {
			x: 870,
			y: 365
		},
		path: {
			x: 923,
			y: 420
		},
		effect: {
			x: 921,
			y: 391
		}
	}, {
		ID: 133,
		toy: {
			x: 355,
			y: 430
		},
		portal: {
			x: 305,
			y: 355
		},
		path: {
			x: 355,
			y: 420
		},
		effect: {
			x: 362,
			y: 391
		}
	}], this.TOY_DIALOGUE_DATA = {
		130: 14,
		131: 15,
		132: 16,
		133: 17
	}
}, Prodigy.extends(Prodigy.Toyzone_A1, Prodigy.Map, {
	constructor: Prodigy.Toyzone_A1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.portalActive = !1, this.landedOnPortal = !1, new Prodigy.Container.ToyMerchant(e, t.content, 640, 200), this.addAreaEvent(e, t, {
			x: 640,
			y: 320,
			w: 100,
			h: 80
		}, "toyzone-B1", 400, 240, this.playPortalEffectEnter.bind(this, 640, 310, 770, 345)), this.addClickableEvent(e, t, 580, 270, 120, 100, this.playPortalEffectExit.bind(this, 640, 310, "toyzone-B1", 400, 350), null), setTimeout(this.reactivatePortals.bind(this), 1e3), this.spawnToys(e, t), Util.isDefined(this._zone.getState("dragonsVisited")) && this._zone.getState("dragonsVisited") !== !1 || this._zone.setState("dragonsVisited", !0)
	},
	spawnToys: function(e, t) {
		for (var i = 0; i < this.TOY_SPAWN_DATA.length; ++i) {
			var a = this.TOY_SPAWN_DATA[i];
			if (e.prodigy.player.kennel.hasPet(a.ID)) this.addClickableEvent(e, t, a.portal.x, a.portal.y, 100, 90, this.clickedPortal.bind(this, e, t, a));
			else {
				var s = new Prodigy.Container.MonsterContainer(e, t.content, new Monster({
					ID: a.ID
				}), 1, a.toy.x, a.toy.y, !1, this.clickedToy.bind(this, e, a.ID));
				a.toy.x > 640 && (s.scale.x = -1), s.startLoad()
			}
		}
	},
	clickedPortal: function(e, t, i) {
		this.portalActive = !1;
		var a = e.prodigy.event.create();
		a.path(t.user, [{
			x: i.path.x,
			y: i.path.y
		}]), a.yesNoText(8, "toy"), a.function(this.playPortalEffectEnter.bind(this, i.effect.x, i.effect.y)), a.delay(800), a.enableInput(!0), a.function(e.prodigy.battle.startEpicArena.bind(e.prodigy.battle, i.ID, 1, !0)), a.start()
	},
	clickedToy: function(e, t) {
		e.prodigy.network.sendAnalytics("click-epic-statue", "click-epic-statue-" + t, "Events");
		var i = e.prodigy.event.create();
		i.text(this.TOY_DIALOGUE_DATA[t], "toy"), i.yesNoText(8, "toy"), i.function(e.prodigy.open.buyToy.bind(e.prodigy.open, t, !1)), i.start()
	},
	reactivatePortals: function() {
		this.portalActive = this.landedOnPortal === !1
	}
}), Prodigy.Toyzone_B1 = function(e, t) {
	Prodigy.Map.call(this, e, "B1", "Mystic Rotunda", 640, 360, ["toyzone-A1", "toyzone-B2"], t)
}, Prodigy.extends(Prodigy.Toyzone_B1, Prodigy.Map, {
	constructor: Prodigy.Toyzone_B1,
	start: function(e, t, i) {
		Prodigy.Map.prototype.start.call(this, e, t, i);
		var a = this._zone.getState("firstVisit");
		if (!Util.isDefined(a) || a === !1) {
			var s = e.prodigy.event.create();
			s.text(10, "toy"), s.text(13, "toy"), s.text(11, "toy"), s.function(this._zone.setState.bind(this._zone, "firstVisit", !0)), s.start()
		}
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.portalActive = !1, this.landedOnPortal = !1, t.content.add(this.game.prodigy.create.element(this.sprites, 0, 0)), t.content.add(this._zone.game.prodigy.create.sprite(960, 320, "zone-toyzone", "pillar-large", !0)), t.content.add(this._zone.game.prodigy.create.sprite(320, 320, "zone-toyzone", "pillar-large", !0)), t.content.add(this._zone.game.prodigy.create.sprite(800, 480, "zone-toyzone", "pillar-small", !0));
		new Prodigy.Container.ToyMerchant(e, t.content, 640, 200);
		this.addAreaEvent(e, t, {
			x: 640,
			y: 360,
			w: 100,
			h: 80
		}, "toyzone-B2", 640, 360, this.playPortalEffectEnter.bind(this, 640, 340)), this.addAreaEvent(e, t, {
			x: 400,
			y: 370,
			w: 100,
			h: 80
		}, "toyzone-A1", 640, 360, this.playPortalEffectExit.bind(this, 400, 350, "toyzone-A1", 640, 310));
		var a = this._zone.getState("dragonsVisited");
		Util.isDefined(a) && a !== !1 || this.animateHand(t, 400, 280), this.addAreaEvent(e, t, {
			x: 880,
			y: 370,
			w: 100,
			h: 80
		}, "toyzone-B2", 640, 360, this.playPortalEffectExit.bind(this, 880, 350, "toyzone-B2", 640, 310));
		var s = this._zone.getState("epicsVisited");
		Util.isDefined(s) && s !== !1 || this.animateHand(t, 880, 280);
		var r = this._zone.getState("goldRecieved");
		if (a === !0 && s === !0 && (!Util.isDefined(r) || r === !1)) {
			var n = e.prodigy.event.create();
			n.text(9, "toy"), n.function(this.getGold.bind(this, e, 500)), n.function(this._zone.setState.bind(this._zone, "goldRecieved", !0)), n.start()
		}
		setTimeout(this.reactivatePortals.bind(this), 1e3)
	},
	getGold: function(e, t) {
		e.prodigy.open.gotItem([{
			type: "gold",
			N: t
		}], null, null, "toyzone")
	},
	reactivatePortals: function() {
		this.portalActive = this.landedOnPortal === !1
	},
	animateHand: function(e, t, i) {
		var a = e.foreground.add(this._zone.game.prodigy.create.sprite(t, i, "core", "area-pointer", {
			x: .5,
			y: 0
		}));
		a.angle = 180, this._zone.game.add.tween(a).to({
			y: a.y + 30
		}, 400, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), a.inputEnabled = !0, a.events.onInputDown.add(this.onHandClick.bind(this, e, t, i))
	},
	onHandClick: function(e, t, i) {
		e.user.setValidPath(e.path, t, i)
	}
}), Prodigy.Toyzone_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Epic Zone", 640, 360, ["toyzone-B1"], t), this.TOY_SPAWN_DATA = [{
		ID: 125,
		toy: {
			x: 640,
			y: 515
		},
		portal: {
			x: 590,
			y: 440
		},
		path: {
			x: 635,
			y: 500
		},
		effect: {
			x: 640,
			y: 473
		}
	}, {
		ID: 126,
		toy: {
			x: 400,
			y: 260
		},
		portal: {
			x: 350,
			y: 195
		},
		path: {
			x: 395,
			y: 250
		},
		effect: {
			x: 400,
			y: 232
		}
	}, {
		ID: 127,
		toy: {
			x: 355,
			y: 430
		},
		portal: {
			x: 305,
			y: 355
		},
		path: {
			x: 355,
			y: 420
		},
		effect: {
			x: 362,
			y: 391
		}
	}, {
		ID: 128,
		toy: {
			x: 880,
			y: 260
		},
		portal: {
			x: 830,
			y: 195
		},
		path: {
			x: 885,
			y: 250
		},
		effect: {
			x: 883,
			y: 232
		}
	}, {
		ID: 129,
		toy: {
			x: 920,
			y: 430
		},
		portal: {
			x: 870,
			y: 365
		},
		path: {
			x: 923,
			y: 420
		},
		effect: {
			x: 921,
			y: 391
		}
	}], this.TOY_DIALOGUE_DATA = {
		125: 5,
		126: 4,
		127: 3,
		128: 7,
		129: 6
	}
}, Prodigy.extends(Prodigy.Toyzone_B2, Prodigy.Map, {
	constructor: Prodigy.Toyzone_B2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.portalActive = !1, this.landedOnPortal = !1, new Prodigy.Container.ToyMerchant(e, t.content, 640, 200), this.addAreaEvent(e, t, {
			x: 640,
			y: 320,
			w: 100,
			h: 80
		}, "toyzone-B1", 640, 360, this.playPortalEffectEnter.bind(this, 640, 310, 770, 345)), this.addClickableEvent(e, t, 580, 270, 120, 100, this.playPortalEffectExit.bind(this, 640, 310, "toyzone-B1", 880, 350), null), setTimeout(this.reactivatePortals.bind(this), 1e3), this.spawnToys(e, t), Util.isDefined(this._zone.getState("epicsVisited")) && this._zone.getState("epicsVisited") !== !1 || this._zone.setState("epicsVisited", !0)
	},
	spawnToys: function(e, t) {
		for (var i = 0; i < this.TOY_SPAWN_DATA.length; ++i) {
			var a = this.TOY_SPAWN_DATA[i];
			if (e.prodigy.player.kennel.hasPet(a.ID)) this.addClickableEvent(e, t, a.portal.x, a.portal.y, 100, 90, this.clickedPortal.bind(this, e, t, a));
			else {
				var s = new Prodigy.Container.MonsterContainer(e, t.content, new Monster({
					ID: a.ID
				}), 1, a.toy.x, a.toy.y, !1, this.clickedToy.bind(this, e, a.ID));
				a.toy.x > 640 && (s.scale.x = -1), s.startLoad()
			}
		}
	},
	clickedPortal: function(e, t, i) {
		this.portalActive = !1;
		var a = e.prodigy.event.create();
		a.path(t.user, [{
			x: i.path.x,
			y: i.path.y
		}]), a.yesNoText(8, "toy"), a.function(this.playPortalEffectEnter.bind(this, i.effect.x, i.effect.y)), a.delay(800), a.enableInput(!0), a.function(e.prodigy.battle.startEpicArena.bind(e.prodigy.battle, i.ID, 1, !0)), a.start()
	},
	clickedToy: function(e, t) {
		e.prodigy.network.sendAnalytics("click-epic-statue", "click-epic-statue-" + t, "Events");
		var i = e.prodigy.event.create();
		i.text(this.TOY_DIALOGUE_DATA[t], "toy"), i.yesNoText(8, "toy"), i.function(e.prodigy.open.buyToy.bind(e.prodigy.open, t, !1)), i.start()
	},
	reactivatePortals: function() {
		this.portalActive = this.landedOnPortal === !1
	}
}), Prodigy.Shiverchill = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Shiverchill Mountains", this.ID = "shiverchill", this.battleBG = "bg-battle-mountain", this.onFaint = "shiverchill-A10", this.questHub = "shiverchill-A10", this.states = ["chest1", "chest2", "chest3", "chest4", "chest5", "wizard1", "wizard2", "wizard3", "wizard4", "furnace", "chest6", "daily"], this.util = new Prodigy.ZoneUtil(e, this), this.monsters = [16, 50, 122, 78, 87];
	var t = ["tileset-icecave-new", "tileset-collisions"];
	this.maps = {
		A11: new Prodigy.Shiverchill_A11(this, t),
		A10: new Prodigy.Shiverchill_A10(this, t),
		A9: new Prodigy.Shiverchill_A9(this, t),
		A7: new Prodigy.Shiverchill_A7(this, t),
		A6: new Prodigy.Shiverchill_A6(this, t),
		A5: new Prodigy.Shiverchill_A5(this, t),
		B3: new Prodigy.Shiverchill_B3(this, t),
		B6: new Prodigy.Shiverchill_B6(this, t),
		B7: new Prodigy.Shiverchill_B7(this, t),
		B8: new Prodigy.Shiverchill_B8(this, t),
		B9: new Prodigy.Shiverchill_B9(this, t),
		B10: new Prodigy.Shiverchill_B10(this, t),
		A4: new Prodigy.Shiverchill_A4(this, t),
		A2: new Prodigy.Shiverchill_A2(this, t),
		A3: new Prodigy.Shiverchill_A3(this, t),
		B2: new Prodigy.Shiverchill_B2(this, t),
		B1: new Prodigy.Shiverchill_B1(this, t)
	}, this.quests = {
		1: new Prodigy.Shiverchill_Q1(this, []),
		2: new Prodigy.Shiverchill_Q2(this, []),
		3: new Prodigy.Shiverchill_Q3(this, []),
		4: new Prodigy.Shiverchill_Q4(this, []),
		5: new Prodigy.Shiverchill_Q5(this, []),
		6: new Prodigy.Shiverchill_Q6(this, []),
		7: new Prodigy.Shiverchill_Q7(this, []),
		8: new Prodigy.Shiverchill_Q8(this, []),
		9: new Prodigy.Shiverchill_Q9(this, []),
		10: new Prodigy.Shiverchill_Q10(this, []),
		11: new Prodigy.Shiverchill_Q11(this, []),
		12: new Prodigy.Shiverchill_Q12(this, []),
		13: new Prodigy.Shiverchill_Q13(this, []),
		14: new Prodigy.Shiverchill_Q14(this, []),
		15: new Prodigy.Shiverchill_Q15(this, [])
	}
}, Prodigy.extends(Prodigy.Shiverchill, Prodigy.Zone, {
	constructor: Prodigy.Shiverchill,
	placeDaily: function(e, t, i) {
		if (Util.isDefined(this.getQuestState()) && this.getQuestState().ID > 6 && t.prodigy.player.backpack.hasItem("item", 80) < 99) {
			for (var a = this.getDailyMaps(), s = new Prodigy.SeededRandomGenerator(this.getState("daily").date), r = 0; 5 > r; r++)
				if (a[Math.floor(s.jumpFromStart(r) * (a.length - 1))] === e._tag) {
					var n = this.getState("daily").flags;
					if (Util.isDefined(n[r].x)) var o = n[r].x,
						h = n[r].y
				} if (!Util.isDefined(o))
				for (var l = e.daily_coords[Math.floor(Math.random() * e.daily_coords.length)], o = l.x, h = l.y, r = 0; 5 > r; r++)
					if (a[Math.floor(s.jumpFromStart(r) * (a.length - 1))] === e._tag) {
						var n = this.getState("daily").flags;
						n[r] = {
							x: o,
							y: h
						}, this.setState("daily", {
							date: this.getState("daily").date,
							flags: n,
							rewards: this.getState("daily").rewards
						})
					} this.ice = e.addClickableEvent(t, i, o, h, 60, 60, this.frozenSomethingOnClick.bind(this, t, i, e), null), this.ice.add(t.prodigy.create.sprite(-10, -10, "zone-shiverchill", "frozen-something"))
		}
	},
	frozenSomethingOnClick: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.validPath(t.user, t.path, this.ice.x + 20, this.ice.y + 40), a.set(t.user, "evtProc", !0), a.function(this.interactFrozenSomething.bind(this, i)), a.set(t.user, "evtProc", !1), a.start()
	},
	interactFrozenSomething: function(e) {
		var t = this.getDailyMaps();
		this.ice.destroy(), this.game.prodigy.open.gotItem([{
			type: "item",
			ID: 79
		}]);
		for (var i = new Prodigy.SeededRandomGenerator(this.getState("daily").date), a = 0; 5 > a; a++)
			if (t[Math.floor(i.jumpFromStart(a) * (t.length - 1))] === e._tag) {
				var s = this.getState("daily").flags;
				s[a] = 0, this.setState("daily", {
					date: this.getState("daily").date,
					flags: s,
					rewards: this.getState("daily").rewards
				})
			}
	},
	getDailyMaps: function() {
		var e = [];
		for (var t in this.maps) Util.isDefined(this.maps[t].daily_coords) && e.push(t);
		return e
	},
	smoke: function(e, t, i, a) {
		for (var s = 0; 4 > s; s++) {
			var r = e.prodigy.create.sprite(40 * i + 20, 40 * a + 20, "core-2", "smoke");
			t.foreground.add(r), r.anchor.setTo(.5, .5), r.scale.x = r.scale.y = .1, r.alpha = 1, e.add.tween(r).to({
				y: r.y - 150,
				alpha: 0
			}, 2e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(500 * s).start(), e.add.tween(r.scale).to({
				x: .75,
				y: .75
			}, 2e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(500 * s).start()
		}
	},
	placeAllDailies: function(e, t, i) {
		if (this.ice = [], Util.isDefined(e.daily_coords))
			for (var a = function(e, t) {
					var a = function(e, t) {
							this.getDailyMaps();
							this.ice[t].destroy(), this.game.prodigy.open.gotItem([{
								type: "item",
								ID: 79
							}])
						},
						s = e.prodigy.event.create();
					s.validPath(i.user, i.path, this.ice[t].x + 20, this.ice[t].y + 40), s.set(i.user, "evtProc", !0), s.function(a.bind(this, e, t)), s.set(i.user, "evtProc", !1), s.start()
				}, s = 0; s < e.daily_coords.length; s++) this.ice.push(e.addClickableEvent(t, i, e.daily_coords[s].x, e.daily_coords[s].y, 60, 60, a.bind(this, t, s), null)), this.ice[s].add(t.prodigy.create.sprite(-10, -10, "zone-shiverchill", "frozen-something"))
	}
}), Prodigy.Shiverchill_A11 = function(e, t) {
	Prodigy.Map.call(this, e, "A11", "Borderland", 1100, 220, ["shiverchill-A10"], t.concat(["npc-sprite-wizard", "tileset-generic-snow"])), this.coord = [{
		x: 640,
		y: 560
	}, {
		x: 785,
		y: 230
	}, {
		x: 350,
		y: 400
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A11, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A11,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1100,
			y: 130,
			w: 160,
			h: 100
		}, "shiverchill-A10", 125, 650, null, AreaEvent.UP);
		var a = {
			opponent: [{
				data: {
					level: 15
				},
				appearance: {
					name: "Ivira of the Greenwood",
					gender: "female",
					hair: {
						style: 1,
						color: 3
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 1,
					outfit: 3,
					weapon: 1
				}
			}],
			pets: [{
				ID: 25,
				level: 15
			}, {
				ID: 33,
				level: 15
			}, {
				ID: 53,
				level: 15
			}]
		};
		this.addWizard(e, t, 474, 414, "wizard1", a)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_A10 = function(e, t) {
	Prodigy.Map.call(this, e, "A10", "Bok's Cave", 125, 650, ["shiverchill-B10", "shiverchill-A11", "shiverchill-A9"], t.concat(["npc-sprite-merchant", "npc-sprite-bok", "tileset-shiverchill"]))
}, Prodigy.extends(Prodigy.Shiverchill_A10, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A10,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 120,
			y: 520,
			r: 80
		}, "shiverchill-A11", 1100, 220, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 220,
			y: 0,
			w: 300,
			h: 200
		}, "shiverchill-A9", 200, 550, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1140,
			y: 150,
			w: 100,
			h: 80,
			rect: !0
		}, "shiverchill-B10", 235, 575, null, AreaEvent.UP), this.addClickableEvent(e, t, 1120, 40, 80, 120, this.doorClick.bind(this, e, t));
		var a = function(e) {
			var t = e.prodigy.event.create();
			t.text(0, "bok"), t.start()
		};
		this.addQuestNPC(e, t, 680, 390, "bok", 0, a.bind(this, e)), t.createStoreNPC(400, 350, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.SNOWDAY_SALES)), this.addHealStone(e, t, 800, 596), new Prodigy.Container.ToyMerchant(e, t.content, 932, 365)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	doorClick: function(e, t) {
		t.user.setValidPath(t.path, 1160, 160)
	}
}), Prodigy.Shiverchill_A9 = function(e, t) {
	Prodigy.Map.call(this, e, "A9", "Treasure Room", 200, 550, ["shiverchill-A10", "shiverchill-B8"], t.concat(["zone-shiverchill", "tileset-minecarts", "npc-sprite-pippet"])), this.daily_coords = [{
		x: 125,
		y: 510
	}, {
		x: 925,
		y: 260
	}, {
		x: 620,
		y: 340
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A9, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A9,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 720,
			w: 280,
			h: 200
		}, "shiverchill-A10", 221, 200, null, AreaEvent.DOWN), this.setupFrozenLoot(e, t);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 122
			}, {
				ID: 78
			}]
		};
		this.addMonster(e, t, 1, 490, 510, !1, a), this.addMonster(e, t, 2, 720, 200, !1, a), this.addMonster(e, t, 3, 1150, 460, !1, a), this.addMonster(e, t, 4, 200, 230, !1, a), this.checkFurnace(e, t)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	doorClick: function(e, t) {
		t.user.setValidPath(t.path, 200, 100)
	},
	setupFrozenLoot: function(e, t) {
		var i = t.content.add(new Phaser.Image(e, 1050, 550, "zone-shiverchill", "frozen-loot"));
		i.anchor.setTo(.5, 1), i.visible = !1, this._zone.getState("furnace") >= 4 ? (this._zone.smoke(e, t, 22, 12), this._zone.smoke(e, t, 16, 14), this.addChest(e, t, "chest6", 1050, 550, [{
			type: "weapon",
			ID: 73
		}])) : i.visible = !0
	},
	checkFurnace: function(e, t) {
		this._zone.getState("furnace") >= 1 && (this._zone.smoke(e, t, 31, 4), this.addAreaEvent(e, t, {
			x: 1120,
			y: 130,
			w: 150,
			h: 80
		}, "shiverchill-B8", 100, 550, null, AreaEvent.UP)), this.addClickableEvent(e, t, 160, 40, 80, 80, this.doorClick.bind(this, e, t)), this._zone.getState("furnace") >= 2 && (this._zone.smoke(e, t, 12, 7), this.addAreaEvent(e, t, {
			x: 150,
			y: 75,
			w: 100,
			h: 80,
			rect: !0
		}, "shiverchill-A6", 980, 335, null, AreaEvent.UP)), this._zone.getState("furnace") <= 1 && (this.addBlock(e, t, 150, 150, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addCollisionZone(t, 80, 0, 120, 80)), this._zone.getState("furnace") < 1 && (this.addBlock(e, t, 1070, 250, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addBlock(e, t, 1155, 285, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addCollisionZone(t, 1e3, 80, 180, 140))
	}
}), Prodigy.Shiverchill_A7 = function(e, t) {
	Prodigy.Map.call(this, e, "A7", "Ruined Entrance", 189, 650, ["shiverchill-B7", "shiverchill-B8"], t.concat(["npc-sprite-merchant", "zone-shiverchill", "tileset-minecarts"])), this.coord = [{
		x: 1e3,
		y: 360
	}, {
		x: 720,
		y: 600
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A7, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 160,
			y: 520,
			r: 100
		}, "shiverchill-B8", 1100, 200, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1280,
			y: 250,
			w: 120,
			h: 280
		}, "shiverchill-B7", 110, 220), this.setupNPC(e, t);
		var a = this._zone.getQuestState();
		Util.isDefined(this._zone) && (!Util.isDefined(a) || a.ID < 7 && !this._zone.isQuestComplete(6)) && (this.block = this.addBlock(e, t, 385, 325, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small",
			content: !0
		}), this.addCollisionZone(t, 340, 280, 100, 60)), this.addHealStone(e, t, 780, 550)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	setupNPC: function(e, t) {
		this.npc = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", this.chatWithMerchant.bind(this, e, t), "Miner"), this.npc.flip(), this.npc.animate("stand"), this.npc.showName(!0), this.npcIcon = t.content.add(e.prodigy.create.sprite(350, 100, "icons", "map-quest")), this.floatTween = e.prodigy.animation.float(this.npcIcon, 20, 1400, !0, !0)
	},
	chatWithMerchant: function(e, t) {
		var i = e.prodigy.event.create();
		this._zone.isOnQuest(4) || this._zone.isOnQuest(5) ? (i.enableInput(!1), i.validPath(t.user, t.path, 324, 348), i.enableInput(!0), this._zone.isOnSequence(4, 1) ? (i.function(this.npc.highlight.bind(this.npc, !1)), i.text(7, "merchant"), i.text(8, "merchant"), i.function(this._zone.completeSequence.bind(this._zone, 4, 1)), i.function(t.process.bind(t))) : i.text(8, "merchant")) : this._zone.isOnQuest(6) ? i.text(12, "merchant") : this._zone.getQuestState().ID >= 6 && (e.prodigy.player.backpack.hasItem("item", 80) ? e.prodigy.player.backpack.hasItem("item", 80) < 5 ? (i.text(27, "merchant"), i.text(19, "merchant"), 4 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 4 && this._zone.getState("daily").rewards < 5 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 5
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "item",
			ID: 76,
			N: 5
		}], function() {
			i.text(20, "merchant"), i.start()
		})), i.enableSave(!0)) : e.prodigy.player.backpack.hasItem("item", 80) > 4 && e.prodigy.player.backpack.hasItem("item", 80) < 10 && this._zone.getState("daily").rewards > 4 ? (i.text(27, "merchant"), i.text(20, "merchant"), 9 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 9 && this._zone.getState("daily").rewards < 10 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 10
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "item",
			ID: 77,
			N: 10
		}], function() {
			i.text(21, "merchant"), i.start()
		})), i.enableSave(!0)) : e.prodigy.player.backpack.hasItem("item", 80) > 9 && e.prodigy.player.backpack.hasItem("item", 80) < 25 && this._zone.getState("daily").rewards > 9 ? (i.text(27, "merchant"), i.text(21, "merchant"), 24 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 24 && this._zone.getState("daily").rewards < 25 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 25
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "hat",
			ID: 10
		}], function() {
			i.text(22, "merchant"), i.start()
		})), i.enableSave(!0)) : e.prodigy.player.backpack.hasItem("item", 80) > 24 && e.prodigy.player.backpack.hasItem("item", 80) < 50 && this._zone.getState("daily").rewards > 24 ? (i.text(27, "merchant"), i.text(22, "merchant"), 49 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 49 && this._zone.getState("daily").rewards < 50 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 50
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "outfit",
			ID: 6
		}], function() {
			i.text(23, "merchant"), i.start()
		})), i.enableSave(!0)) : e.prodigy.player.backpack.hasItem("item", 80) > 49 && e.prodigy.player.backpack.hasItem("item", 80) < 75 && this._zone.getState("daily").rewards > 49 ? (i.text(27, "merchant"), i.text(23, "merchant"), 74 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 74 && this._zone.getState("daily").rewards < 75 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 75
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "weapon",
			ID: 13
		}], function() {
			i.text(24, "merchant"), i.start()
		})), i.enableSave(!0)) : e.prodigy.player.backpack.hasItem("item", 80) > 74 && e.prodigy.player.backpack.hasItem("item", 80) < 99 && this._zone.getState("daily").rewards > 74 ? (i.text(27, "merchant"), i.text(24, "merchant"), 98 === e.prodigy.player.backpack.hasItem("item", 80) && i.text(25, "merchant")) : e.prodigy.player.backpack.hasItem("item", 80) > 98 && this._zone.getState("daily").rewards < 99 ? (i.text(26, "merchant"), i.enableSave(!1), i.function(this._zone.setState.bind(this._zone, "daily", {
			date: this._zone.getState("daily").date,
			flags: this._zone.getState("daily").flags,
			rewards: 99
		})), i.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
			type: "hat",
			ID: 56
		}])), i.enableSave(!0)) : i.text(36, "merchant") : (i.text(27, "merchant"), i.text(30, "merchant"), i.text(31, "merchant"), i.text(32, "merchant"))), i.start()
	}
}), Prodigy.Shiverchill_A6 = function(e, t) {
	Prodigy.Map.call(this, e, "A6", "Rail Ruins", 1170, 400, ["shiverchill-A5", "shiverchill-B6"], t.concat(["zone-shiverchill", "tileset-minecarts", "tileset-iceruins", "npc-sprite-wizard"])), this.coord = [{
		x: 645,
		y: 230
	}, {
		x: 920,
		y: 555
	}], this.daily_coords = [{
		x: 1010,
		y: 480
	}, {
		x: 300,
		y: 480
	}, {
		x: 520,
		y: 220
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A6, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1280,
			y: 400,
			w: 120,
			h: 280
		}, "shiverchill-B6", 110, 400);
		var a = {
			type: "item",
			ID: 71
		};
		this.addCollect(e, t, 1, 674, 245, a);
		var s = {
			encounter: [{
				ID: 90,
				R: 1
			}, {
				ID: 92,
				R: 15
			}]
		};
		this.addMonster(e, t, 1, 770, 415, !1, s);
		var s = {
			opponent: [{
				data: {
					level: 15
				},
				appearance: {
					name: "Rutherford Aguafencer",
					gender: "male",
					hair: {
						style: 16,
						color: 3
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 1,
					outfit: 3,
					weapon: 1
				}
			}],
			pets: [{
				ID: 99,
				level: 15
			}, {
				ID: 56,
				level: 15
			}, {
				ID: 67,
				level: 15
			}]
		};
		this.addWizard(e, t, 350, 370, "wizard2", s), this.checkFurnaces(e, t)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	doorClick: function(e, t) {
		t.user.setValidPath(t.path, 1e3, 260)
	},
	doorClick2: function(e, t) {
		t.user.setValidPath(t.path, 160, 260)
	},
	checkFurnaces: function(e, t) {
		this._zone.getState("furnace") >= 2 ? (this._zone.smoke(e, t, 12, 13), this.addClickableEvent(e, t, 120, 160, 120, 80, this.doorClick2.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 160,
			y: 170,
			w: 80,
			h: 190,
			rect: !0
		}, "shiverchill-A5", 1180, 650, null, AreaEvent.UP), this.addClickableEvent(e, t, 960, 200, 80, 80, this.doorClick.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 980,
			y: 240,
			w: 70,
			h: 72,
			rect: !0
		}, "shiverchill-A9", 145, 170, null, AreaEvent.UP)) : (this.addBlock(e, t, 160, 300, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addBlock(e, t, 983, 327, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addCollisionZone(t, 80, 80, 160, 200), this.addCollisionZone(t, 920, 200, 100, 100))
	}
}), Prodigy.Shiverchill_A5 = function(e, t) {
	Prodigy.Map.call(this, e, "A5", "Mountain Valley", 1180, 650, ["shiverchill-A4", "shiverchill-A6"], t.concat(["tileset-generic-snow"])), this.coord = [{
		x: 100,
		y: 540
	}, {
		x: 700,
		y: 350
	}, {
		x: 1025,
		y: 150
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A5, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1160,
			y: 530,
			r: 60
		}, "shiverchill-A6", 160, 330, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 130,
			y: 100,
			w: 100,
			h: 90
		}, "shiverchill-A4", 1160, 610, null, AreaEvent.UP), this.addChest(e, t, "chest4", 560, 320, [{
			type: "outfit",
			ID: 48
		}]);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 50,
				"catch": !1
			}]
		};
		this.addMonster(e, t, 1, 490, 510, !1, a)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_B7 = function(e, t) {
	Prodigy.Map.call(this, e, "B7", "Ruined Passage", 110, 220, ["shiverchill-A7", "shiverchill-B6"], t), this.coord = [{
		x: 320,
		y: 260
	}, {
		x: 380,
		y: 620
	}], this.daily_coords = [{
		x: 370,
		y: 540
	}, {
		x: 955,
		y: 400
	}, {
		x: 1190,
		y: 330
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B7, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1150,
			y: 0,
			w: 280,
			h: 120
		}, "shiverchill-B6", 1060, 610), this.addAreaEvent(e, t, {
			x: 0,
			y: 250,
			w: 120,
			h: 280
		}, "shiverchill-A7", 1170, 220);
		var a = {
			encounter: [{
				ID: 90
			}]
		};
		this.addMonster(e, t, 1, 674, 283, !1, a);
		var s = this.addMonster(e, t, 2, 95, 645, !1, a);
		if (Util.isDefined(s)) {
			t.user.evtProc = !0;
			var r = e.add.tween(s).to({
				x: 268
			}, 1500, Phaser.Easing.Linear.None).delay(2e3).start();
			e.add.tween(s).to({
				y: 450
			}, 750, Phaser.Easing.Quadratic.Out).delay(2e3).to({
				y: 500
			}, 750, Phaser.Easing.Quadratic.In).start(), r.onComplete.add(this.startPath.bind(this, t, s))
		}
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	startPath: function(e, t) {
		Util.isDefined(t) && t.patrol([{
			x: 270,
			y: 480
		}, {
			x: 1070,
			y: 480
		}]), e.user.evtProc = !1
	}
}), Prodigy.Shiverchill_B6 = function(e, t) {
	Prodigy.Map.call(this, e, "B6", "Ruined Steps", 1060, 610, ["shiverchill-A6", "shiverchill-B7"], t.concat(["tileset-minecarts", "tileset-iceruins"])), this.coord = [{
		x: 315,
		y: 635
	}, {
		x: 650,
		y: 600
	}, {
		x: 1100,
		y: 230
	}], this.daily_coords = [{
		x: 1100,
		y: 420
	}, {
		x: 1015,
		y: 110
	}, {
		x: 185,
		y: 400
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B6, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1e3,
			y: 720,
			w: 280,
			h: 120
		}, "shiverchill-B7", 1060, 110), this.addAreaEvent(e, t, {
			x: 0,
			y: 400,
			w: 170,
			h: 280
		}, "shiverchill-A6", 1170, 400), this.addChest(e, t, "chest1", 545, 280, [{
			type: "item",
			ID: 73
		}, {
			type: "gold",
			N: 250
		}], {
			type: "item",
			ID: 75
		});
		var a = {
			randDir: !1,
			encounter: [{
				ID: 90
			}]
		};
		this.addMonster(e, t, 1, 420, 400, !1, a);
		var s = this.addMonster(e, t, 2, 700, 160, !1, a);
		this.startPath(t, s)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	startPath: function(e, t) {
		Util.isDefined(t) && t.patrol([{
			x: 700,
			y: 160
		}, {
			x: 980,
			y: 160
		}, {
			x: 1148,
			y: 423
		}, {
			x: 980,
			y: 160
		}])
	}
}), Prodigy.Shiverchill_B3 = function(e, t) {
	Prodigy.Map.call(this, e, "B3", "Royal Passage", 110, 280, ["shiverchill-B1", "shiverchill-A3", "shiverchill-B2"], t.concat(["zone-shiverchill", "npc-sprite-noot", "tileset-iceruins", "tileset-minecarts"])), this.daily_coords = [{
		x: 980,
		y: 250
	}, {
		x: 970,
		y: 400
	}, {
		x: 255,
		y: 490
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B3, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 0,
			y: 350,
			w: 150,
			h: 275
		}, "shiverchill-A3", 1160, 230), this.checkFurnaces(e, t)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	doorClick: function(e, t) {
		t.user.setValidPath(t.path, 560, 370)
	},
	checkFurnaces: function(e, t) {
		this._zone.getState("furnace") >= 3 ? (this._zone.smoke(e, t, 1, 16), this._zone.smoke(e, t, 27, 16), this._zone.smoke(e, t, 26, 12), this.addClickableEvent(e, t, 520, 270, 80, 120, this.doorClick.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 520,
			y: 285,
			w: 90,
			h: 80,
			rect: !0
		}, "shiverchill-B2", 640, 500, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1160,
			y: 90,
			w: 120,
			h: 50
		}, "shiverchill-B1", 200, 630, null, AreaEvent.UP)) : (this.addBlock(e, t, 520, 368, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addBlock(e, t, 1160, 175, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addCollisionZone(t, 460, 60, 160, 220), this.addCollisionZone(t, 1060, 40, 180, 120))
	}
}), Prodigy.Shiverchill_B8 = function(e, t) {
	Prodigy.Map.call(this, e, "B8", "Mountain Pass", 100, 550, ["shiverchill-A9", "shiverchill-A7"], t.concat(["zone-shiverchill", "tileset-generic-snow"])), this.coord = [{
		x: 1200,
		y: 530
	}, {
		x: 820,
		y: 400
	}, {
		x: 445,
		y: 280
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B8, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B8,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 90,
			y: 410,
			r: 80
		}, "shiverchill-A9", 1125, 225, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1090,
			y: 100,
			w: 100,
			h: 70
		}, "shiverchill-A7", 189, 650, null, AreaEvent.UP), this.addChest(e, t, "chest2", 850, 300, [{
			type: "hat",
			ID: 55
		}]);
		var a = {
			encounter: [{
				ID: 16,
				R: 1
			}, {
				ID: 61,
				R: 25
			}]
		};
		this.addMonster(e, t, 1, 729, 220, !1, a), this.addMonster(e, t, 2, 1018, 622, !1, a)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_B10 = function(e, t) {
	Prodigy.Map.call(this, e, "B10", "Furnace Room", 235, 575, ["shiverchill-A10"], t.concat(["tileset-minecarts", "npc-sprite-pippet"]))
}, Prodigy.extends(Prodigy.Shiverchill_B10, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B10,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 700,
			r: 120
		}, "shiverchill-A10", 1160, 230), this.addAreaEvent(e, t, {
			x: 660,
			y: 200,
			w: 60,
			h: 72,
			rect: !0
		}, "shiverchill-B9", 645, 500);
		for (var a = [
				[200, 120],
				[440, 240],
				[720, 200],
				[1e3, 240]
			], s = [], r = 0; r < a.length; r++) s.push(this.addClickableEvent(e, t, a[r][0], a[r][1], 120, 120, this.furnaceClick.bind(this, e, t, r + 1)));
		e.prodigy.player.backpack.hasItem("item", 71) && this.highlightFurnace(e, t, s), this.processFurnaces(e, t)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	highlightFurnace: function(e, t, i) {
		var a = this._zone.getState("furnace");
		Util.isDefined(a) ? a < i.length && i[a].highlight(!0) : i[0].highlight(!0)
	},
	furnaceClick: function(e, t, i, a) {
		var s = this._zone.getState("furnace");
		s === i - 1 || Util.isDefined(s) || 1 === i || (s = 0);
		var r = e.prodigy.event.create();
		r.validPath(t.user, t.path, a.x + 10, a.y + 170);
		var n = function(e, t, i) {
			var a = t.content.add(e.prodigy.icon.createIcon(t.user.x, t.user.y, i));
			a.anchor.setTo(.5, 1), e.add.tween(a).to({
				x: "+70"
			}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 10, Phaser.Easing.Linear.None).start(), e.add.tween(a).to({
				y: "-200"
			}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: "+100"
			}, 1e3, Phaser.Easing.Quadratic.In).start()
		};
		if (s >= i)
			if (e.prodigy.player.backpack.hasItem("item", 79)) {
				for (var o = [{
						type: "item",
						ID: 1
					}, {
						type: "item",
						ID: 2
					}, {
						type: "item",
						ID: 3
					}], h = .5 * Math.random() + .5, l = [], d = Math.floor(1.5 * Math.random() + 1), c = 0; d > c; c++) Math.random() < h ? l.push({
					type: "item",
					ID: 80
				}) : l.push(o[Math.floor(Math.random() * o.length)]);
				r.enableInput(!1), r.enableSave(!1), r.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 79, 1)), r.function(n.bind(this, e, t, "icon-item-79")), r.delay(2200), r.function(e.prodigy.open.gotItem.bind(e.prodigy.open, l)), r.enableInput(!0), r.enableSave(!0)
			} else r.popup("This furnace is already lit!");
		else i > s + 1 ? r.popup("You must light the furnaces in order!") : e.prodigy.player.backpack.hasItem("item", 71) ? (r.enableInput(!1), r.enableSave(!1), r.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 71, 1)), r.function(this._zone.setState.bind(this._zone, "furnace", i)), r.function(a.highlight.bind(a, !1)), r.function(n.bind(this, e, t, "icon-item-71")), r.delay(2e3), r.function(this.processFurnaces.bind(this, e, t)), r.enableSave(!0), r.enableInput(!0), r.function(t.process.bind(t))) : r.popup("This furnace needs some kind of fuel source...");
		r.start()
	},
	processFurnaces: function(e, t) {
		var i = this._zone.getState("furnace");
		if (Util.isDefined(i))
			for (var a = [
					[5, 4],
					[11, 7],
					[18, 6],
					[25, 7]
				], s = 0; s < a.length; s++) {
				var r = a[s][0],
					n = a[s][1];
				i >= s + 1 && (t.floor.add(this.getTile(e, 1042, 40 * r, 40 * n, t.path, t.area, null, !0)), t.floor.add(this.getTile(e, 1043, 40 * (r + 1), 40 * n, t.path, t.area, null, !0)), t.floor.add(this.getTile(e, 2147484690, 40 * (r + 2), 40 * n, t.path, t.area, null, !0)))
			}
	}
}), Prodigy.Shiverchill_A3 = function(e, t) {
	Prodigy.Map.call(this, e, "A3", "Frozen Pass", 200, 630, ["shiverchill-A2", "shiverchill-A4", "shiverchill-B3"], t.concat(["zone-shiverchill", "tileset-minecarts"])), this.coord = [{
		x: 700,
		y: 380
	}, {
		x: 1150,
		y: 130
	}], this.daily_coords = [{
		x: 1100,
		y: 210
	}, {
		x: 485,
		y: 240
	}, {
		x: 390,
		y: 540
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A3, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1275,
			y: 235,
			w: 150,
			h: 240
		}, "shiverchill-B3", 100, 290), this.addAreaEvent(e, t, {
			x: 222,
			y: 700,
			w: 240,
			h: 75
		}, "shiverchill-A4", 220, 80);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 87
			}, {
				ID: 122
			}]
		};
		this.addMonster(e, t, 1, 200, 300, !1, a), this.addMonster(e, t, 3, 960, 360, !1, a), this.checkFurnaces(e, t)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	checkFurnaces: function(e, t) {
		this._zone.getState("furnace") >= 3 ? (this._zone.smoke(e, t, 13, 3), this.addAreaEvent(e, t, {
			x: 120,
			y: 100,
			w: 150,
			h: 150
		}, "shiverchill-A2", 1150, 360)) : (this.addBlock(e, t, 135, 240, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-cubes"
		}), this.addCollisionZone(t, 60, 60, 120, 100))
	}
}), Prodigy.Shiverchill_A4 = function(e, t) {
	Prodigy.Map.call(this, e, "A4", "Wyrm's Rest", 1160, 610, ["shiverchill-A3", "shiverchill-A5"], t.concat(["zone-shiverchill"]))
}, Prodigy.extends(Prodigy.Shiverchill_A4, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 220,
			y: 0,
			w: 240,
			h: 75
		}, "shiverchill-A3", 220, 650), this.addAreaEvent(e, t, {
			x: 1160,
			y: 510,
			r: 60
		}, "shiverchill-A5", 160, 200, null, AreaEvent.UP);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 87
			}, {
				ID: 122
			}]
		};
		this.addMonster(e, t, 1, 200, 300, !1, a), this.addMonster(e, t, 2, 900, 405, !1, a), this.addMonster(e, t, 3, 500, 500, !1, a)
	}
}), Prodigy.Shiverchill_A2 = function(e, t) {
	Prodigy.Map.call(this, e, "A2", "The Chasm", 1150, 360, ["shiverchill-A3"], t.concat(["tileset-generic-snow", "npc-sprite-wizard"])), this.daily_coords = [{
		x: 840,
		y: 320
	}, {
		x: 565,
		y: 450
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A2, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1130,
			y: 280,
			r: 80
		}, "shiverchill-A3", 100, 230, null, AreaEvent.UP), this.addChest(e, t, "chest3", 530, 370, [{
			type: "item",
			ID: 71
		}]);
		var a = {
			opponent: [{
				data: {
					level: 25
				},
				appearance: {
					name: "Firia the Chandragon",
					gender: "female",
					hair: {
						style: 4,
						color: 12
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 8,
					outfit: 34,
					weapon: 56
				}
			}],
			pets: [{
				ID: 82,
				level: 25
			}, {
				ID: 48,
				level: 25
			}, {
				ID: 61,
				level: 25
			}, {
				ID: 37,
				level: 24
			}]
		};
		this.addWizard(e, t, 460, 360, "wizard4", a)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Throne Room", 640, 500, ["shiverchill-B3"], t)
}, Prodigy.extends(Prodigy.Shiverchill_B2, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 675,
			y: 625,
			w: 250,
			h: 100,
			rect: !0
		}, "shiverchill-B3", 560, 415, null, AreaEvent.DOWN)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_B1 = function(e, t) {
	Prodigy.Map.call(this, e, "B1", "Shiverchill Gate", 200, 630, ["shiverchill-B3"], t.concat(["npc-sprite-wizard", "tileset-generic-snow"]))
}, Prodigy.extends(Prodigy.Shiverchill_B1, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 130,
			y: 420,
			r: 80
		}, "shiverchill-B3", 1160, 230, null, AreaEvent.UP), this.addHealStone(e, t, 455, 480);
		var a = {
			opponent: [{
				data: {
					level: 20
				},
				appearance: {
					name: "Gerome of the North",
					gender: "male",
					hair: {
						style: 19,
						color: 12
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 25,
					outfit: 33,
					weapon: 31
				}
			}],
			pets: [{
				ID: 92,
				level: 20
			}, {
				ID: 17,
				level: 20
			}, {
				ID: 18,
				level: 20
			}]
		};
		this.addWizard(e, t, 960, 500, "wizard3", a).flip()
	}
}), Prodigy.Shiverchill_B9 = function(e, t) {
	Prodigy.Map.call(this, e, "B9", "Hidden Room", 645, 500, ["shiverchill-B10"], t.concat(["zone-shiverchill"])), this.daily_coords = [{
		x: 680,
		y: 250
	}, {
		x: 280,
		y: 320
	}, {
		x: 945,
		y: 380
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B9, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B9,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 645,
			y: 650,
			r: 140
		}, "shiverchill-B10", 670, 250, null, AreaEvent.DOWN), this.addChest(e, t, "chest5", 530, 370, [{
			type: "item",
			ID: 2
		}, {
			type: "item",
			ID: 5
		}, {
			type: "item",
			ID: 6
		}, {
			type: "item",
			ID: 7
		}, {
			type: "item",
			ID: 15
		}])
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Shiverchill_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "", {
		type: "pet",
		ID: 122,
		N: 3,
		U: !0
	}, ["shiverchill-B10"], [3, 4, 5, 6], [], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q1, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q1,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "B10" === i.getTag() && this.placeMonsters(e, t, i)
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), "B10" === i.getTag() && this.zone.isOnSequence(1, 0) && this.chatWithNoot(e, t, i)
	},
	placeMonsters: function(e, t, i) {
		var a = {
			randDir: !0,
			encounter: [{
				ID: 122
			}]
		};
		i.addMonster(e, t, 1, 128, 255, !0, a), i.addMonster(e, t, 2, 1150, 480, !0, a), i.addMonster(e, t, 3, 417, 408, !0, a)
	},
	chatWithNoot: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.text(67, "noot"), a.function(this.zone.completeSequence.bind(i._zone, 1, 0)), a.start()
	}
}), Prodigy.Shiverchill_Q2 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 2, "", {
		type: "item",
		N: 1,
		ID: 71,
		K: !0
	}, ["shiverchill-A9"], [7, 2, 8, 9], [], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q2, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q2,
	setup: function(e, t, i) {
		if (Prodigy.Quest.prototype.setup.call(this, e, t), "A9" === i.getTag()) {
			if (!this.zone.isQuestComplete(2)) return this.placeMonsters(e, t, i), {
				enableMonsters: !1
			};
			this.removeDropFromMonsters()
		}
		return null
	},
	placeMonsters: function(e, t, i) {
		var a = {
			randDir: !0,
			highlight: !0,
			encounter: [{
				ID: 122,
				drops: [{
					type: "item",
					ID: 71,
					R: .3
				}]
			}, {
				ID: 78,
				drops: [{
					type: "item",
					ID: 71,
					R: .2
				}]
			}]
		};
		this.monsters = [], this.monsters.push(i.addMonster(e, t, 1, 490, 510, !1, a)), this.monsters.push(i.addMonster(e, t, 2, 720, 200, !1, a)), this.monsters.push(i.addMonster(e, t, 3, 1150, 460, !1, a)), this.monsters.push(i.addMonster(e, t, 4, 200, 230, !1, a))
	},
	removeDropFromMonsters: function() {
		if (Util.isDefined(this.monsters))
			for (var e = 0; e < this.monsters.length; e++) Util.isDefined(this.monsters[e]) && Util.isDefined(this.monsters[e].monsterData.drops) && delete this.monsters[e].monsterData.drops
	}
}), Prodigy.Shiverchill_Q3 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 3, "Activate Furnace", {
		type: "zgteState",
		ID: "furnace",
		N: 1
	}, ["shiverchill-B10"], [10, 11], [], [0, 1], [{
		type: "spell",
		ID: 19
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q3, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q3
}), Prodigy.Shiverchill_Q4 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 4, "Explore Caves", {
		type: "seq",
		N: 2
	}, ["shiverchill-A7"], [12, 13], [69], [14, 15, 2, 16], [{
		type: "gold",
		N: 100
	}, {
		type: "item",
		ID: 75
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q4, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q4,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isOnSequence(4, 0) && "B8" === i.getTag() ? this.earthquake(e, t, i) : "A7" === i.getTag() && this.completeQuest(i)
	},
	earthquake: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.path(t.user, [{
			x: 250,
			y: 640
		}]), a.function(t.user.chat.bind(t.user, 1, 100)), a.shake(0, 3e3, 10, "v"), a.enableInput(!0), a.text(68, "noot"), a.function(this.zone.completeSequence.bind(i._zone, 4, 0)), a.start()
	},
	completeQuest: function(e) {
		this.zone.isQuestComplete(4) || e.npc.highlight(!0, -60, -100)
	}
}), Prodigy.Shiverchill_Q5 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 5, "Find the Shovel", {
		type: "item",
		ID: 73,
		N: 1
	}, ["shiverchill-B6"], [17], [70], [18, 2, 19], [{
		type: "gold",
		N: 100
	}, {
		type: "item",
		ID: 72
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q5, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q5
}), Prodigy.Shiverchill_Q6 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 6, "Help the Miner", {
		type: "seq",
		N: 2
	}, ["shiverchill-A7"], [20], [], [0], [{
		type: "hat",
		ID: 54
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q6, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q6,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isOnSequence(6, 0) && "A7" === i.getTag() ? this.ambush(e, t, i) : this.zone.isOnSequence(6, 1) && "A7" === i.getTag() && this.talkToMerchant(e, t, i)
	},
	endBattle: function(e) {
		this.zone.completeSequence(6, 0), e.prodigy.world.teleport("shiverchill-A7", 328, 343)
	},
	ambush: function(e, t, i) {
		var a = i.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			s = i.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			r = i.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			n = function(e, t, i) {
				i.x = e, i.y = t
			},
			o = this.zone.util.getBattle(i, "Snowball Fight!!", {
				pets: [{
					ID: 87,
					nickname: "Chilly"
				}, {
					ID: 87,
					nickname: "Frosty"
				}, {
					ID: 87,
					nickname: "Freezy"
				}]
			}, this.endBattle.bind(this, e, i)),
			h = e.prodigy.event.create();
		h.enableInput(!1), h.set(t.user, "evtProc", !0), h.path(t.user, [{
			x: 450,
			y: 550
		}, {
			x: 430,
			y: 600
		}]), h.delay(500), h.function(n.bind(i, 900, 600, a)), h.function(n.bind(i, 950, 650, s)), h.function(n.bind(i, 950, 550, r)), h.function(t.user.chat.bind(t.user, 1, 80)), h.path(a, [{
			x: 600,
			y: 333
		}], 1, !0), h.path(s, [{
			x: 650,
			y: 333
		}], 1, !0), h.path(r, [{
			x: 600,
			y: 283
		}], 1, !1), h.hop(a, 575, -140, 100, !0), h.hop(s, 575, -140, 100, !0), h.hop(r, 575, -140, 100, !1), h.enableInput(!0), h.function(o), h.start()
	},
	talkToMerchant: function(e, t, i) {
		Util.isDefined(i.block) && (i.block.visible = !1);
		var a = e.prodigy.event.create();
		a.text(9, "merchant"), a.text(), a.text(71, "noot"), a.text(), a.text(10, "merchant"), a.text(11, "merchant"), a.text(), a.text(72, "noot"), a.text(), a.text(12, "merchant"), a.text(35, "merchant"), a.text(30, "merchant"), a.text(31, "merchant"), a.text(32, "merchant"), a.enableSave(!1), a.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 72, 1)), a.function(this.zone.completeSequence.bind(i._zone, 6, 1)), a.enableSave(!0), a.function(t.process.bind(t)), a.start()
	}
}), Prodigy.Shiverchill_Q7 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("spine-boss-shiverchill"), 7, "???", {
		type: "seq",
		N: 1
	}, ["shiverchill-B8"], [21, 22], [69], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q7, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q7,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isOnSequence(7, 0) && "B8" === i.getTag() && this.bossBattle(e, t, i)
	},
	endBattle: function(e) {
		this.zone.completeSequence(7, 0), e.prodigy.world.teleport("shiverchill-B8", 480, 320)
	},
	bossBattle: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Scary Wyrm Battle!", {
				boss: {
					ID: 11,
					level: 20,
					element: "ice",
					attacks: [19, 20, 21],
					name: "???",
					starBonus: 30,
					tag: "shiverchill"
				}
			}, this.endBattle.bind(this, e, i)),
			s = function() {
				var i = e.add.spine(605, 315, "spine-boss-shiverchill", void 0, t.content);
				i.scale.setTo(.65, .65), i.setAnimationByName(0, "idle", !0)
			},
			r = e.prodigy.event.create();
		r.enableInput(!1), r.path(t.user, [{
			x: 425,
			y: 326
		}, {
			x: 420,
			y: 530
		}, {
			x: 290,
			y: 640
		}]), r.shake(0, 3e3, 10, "v", !0), r.function(t.user.chat.bind(t.user, 1, 100)), r.explode(540, 250, 150, 150, 1, !0), r.delay(700), r.explode(540, 100, 150, 250, 2, !0), r.delay(1e3), r.function(s), r.explode(540, 250, 150, 150, 1), r.delay(1500), r.enableInput(!0), r.text(73, "noot"), r.function(a), r.start()
	}
}), Prodigy.Shiverchill_Q8 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 8, "", {
		type: "pet",
		ID: 90,
		N: 3
	}, ["shiverchill-B7", "shiverchill-B6"], [23, 24, 2, 25], [], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q8, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q8
}), Prodigy.Shiverchill_Q9 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 9, "", {
		type: "item",
		ID: 71,
		N: 1,
		K: !0
	}, ["shiverchill-A6"], [26], [], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q9, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q9
}), Prodigy.Shiverchill_Q10 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 10, "Activate Furnace", {
		type: "zgteState",
		ID: "furnace",
		N: 2
	}, ["shiverchill-B10"], [10, 11], [], [0, 1], [{
		type: "spell",
		ID: 20
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q10, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q10
}), Prodigy.Shiverchill_Q11 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("spine-boss-shiverchill"), 11, "Check Throne", {
		type: "seq",
		N: 1
	}, ["shiverchill-B3"], [27, 28], [], [29], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q11, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q11,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isOnSequence(11, 0) && "B3" === i.getTag() && this.cutscene(e, t, i)
	},
	cutscene: function(e, t, i) {
		i.boss = e.add.spine(930, 440, "spine-boss-shiverchill", void 0, t.content), i.boss.visible = !1, i.boss.scale.setTo(.65, .65), i.boss.setAnimationByName(0, "idle", !0), i.crystal = t.content.add(e.prodigy.icon.createIcon(770, 400, "icon-item-71"));
		var a = i.addNPC(e, t, 250, 400, "npc-sprite-noot");
		a.visible = !1, a.float(!0);
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.path(t.user, [{
			x: 250,
			y: 400
		}]), s.set(a, "visible", !0), s.hop(a, 300, 50, 50), s.enableInput(!0), s.text(74, "noot"), s.enableInput(!1), s.delay(500), s.function(a.chat.bind(a, 1, 100)), s.delay(500), s.path(a, [{
			x: 550,
			y: 450
		}]), s.enableInput(!0), s.text(75, "noot"), s.enableInput(!1), s.path(a, [{
			x: 750,
			y: 500
		}]), s.shake(0, 3e3, 10, "v", !0), s.function(a.chat.bind(a, 1, 100)), s.explode(810, 350, 200, 150, 1, !0), s.delay(500), s.hop(a, 110, -140, 100, !0), s.delay(700), s.explode(810, 200, 200, 250, 2, !0), s.delay(1e3), s.set(i.boss, "visible", !0), s.explode(810, 350, 150, 150, 1), s.delay(1e3), s.shake(0, 3e3, 10, "v", !0), s.explode(810, 350, 200, 150, 1, !0), s.delay(700), s.explode(810, 200, 200, 250, 2, !0), s.delay(700), s.set(i.boss, "visible", !1), s.set(i.crystal, "visible", !1), s.explode(810, 350, 150, 150, 1), s.enableInput(!0), s.text(76, "noot"), s.enableInput(!1), s.path(a, [{
			x: 300,
			y: 400
		}]), s.hop(a, 300, -50, 50), s.set(a, "visible", !1), s.enableInput(!0), s.function(this.zone.completeSequence.bind(i._zone, 11, 0)), s.function(t.process.bind(t)), s.start()
	}
}), Prodigy.Shiverchill_Q12 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 12, "", {
		type: "item",
		ID: 74,
		N: 5,
		K: !0
	}, ["shiverchill-A3", "shiverchill-B3"], [30, 2, 31, 32, 33], [], [0], [{
		type: "outfit",
		ID: 47
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q12, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q12,
	collectionMaps: {
		A3: [1, 2, 3],
		B3: [4, 5]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t), "B3" === i.getTag() ? this.createItems_B3(e, t, i) : "A3" === i.getTag() && this.createItems_A3(e, t, i)
	},
	createItems_B3: function(e, t, i) {
		var a = {
			type: "item",
			ID: 74
		};
		i.addCollect(e, t, 4, 530, 550, a), i.addCollect(e, t, 5, 860, 525, a)
	},
	createItems_A3: function(e, t, i) {
		var a = {
			type: "item",
			ID: 74
		};
		i.addCollect(e, t, 1, 980, 160, a), i.addCollect(e, t, 2, 180, 450, a), i.addCollect(e, t, 3, 670, 370, a)
	}
}), Prodigy.Shiverchill_Q13 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("spine-boss-shiverchill"), 13, "Defeat Ice Wyrm", {
		type: "seq",
		N: 1
	}, ["shiverchill-A4"], [34, 2, 35], [], [0], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q13, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q13,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.start.call(this), "A4" === i.getTag() ? {
			enableMonsters: !1
		} : null
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this), this.zone.isOnSequence(13, 0) && "A4" === i.getTag() && (this.zone.util.hideHex(e, t), this.bossBattle(e, t, i))
	},
	endBattle: function(e) {
		this.zone.completeSequence(13, 0), e.prodigy.world.teleport("shiverchill-A4", 300, 460)
	},
	bossBattle: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Boss Battle!", {
				boss: {
					element: "ice",
					attacks: [19, 20, 21],
					name: "Ice Wyrm",
					starBonus: 50,
					tag: "shiverchill"
				},
				drops: [{
					ID: 71,
					type: "item"
				}]
			}, this.endBattle.bind(this, e, i)),
			s = function(e, t, i) {
				var a = t.background.add(e.prodigy.create.sprite(t.user.x, t.user.y, "icons", "crystal"));
				a.anchor.setTo(.5, 1), e.add.tween(a).to({
					x: i
				}, 500, Phaser.Easing.Linear.None).start(), e.add.tween(a).to({
					y: "-50"
				}, 250, Phaser.Easing.Quadratic.Out).to({
					y: "+50"
				}, 250, Phaser.Easing.Quadratic.In).start()
			},
			r = function() {
				var i = e.add.spine(450, 510, "spine-boss-shiverchill", void 0, t.content);
				i.scale.setTo(.65, .65), i.setAnimationByName(0, "idle", !0)
			},
			n = e.prodigy.event.create();
		n.set(t.user, "evtProc", !0), n.enableInput(!1), n.path(t.user, [{
			x: 640,
			y: 530
		}]), n.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 74, 5)), n.function(s.bind(i, e, t, "-50")), n.delay(500), n.path(t.user, [{
			x: 310,
			y: 600
		}]), n.function(s.bind(i, e, t, "-50")), n.delay(500), n.path(t.user, [{
			x: 200,
			y: 430
		}]), n.function(s.bind(i, e, t, "-50")), n.delay(500), n.path(t.user, [{
			x: 250,
			y: 340
		}]), n.function(s.bind(i, e, t, "+50")), n.delay(500), n.path(t.user, [{
			x: 470,
			y: 380
		}]), n.function(s.bind(i, e, t, "+50")), n.delay(500), n.path(t.user, [{
			x: 300,
			y: 460
		}]), n.path(t.user, [{
			x: 301,
			y: 460
		}]), n.delay(500), n.shake(0, 3e3, 10, "v", !0), n.function(t.user.chat.bind(t.user, 1, 100)), n.explode(360, 410, 150, 150, 1, !0), n.delay(700), n.explode(360, 260, 150, 250, 2, !0), n.delay(1e3), n.function(r), n.explode(360, 410, 150, 150, 1), n.delay(1500), n.enableInput(!0), n.function(a), n.start()
	}
}), Prodigy.Shiverchill_Q14 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 14, "Activate Furnace", {
		type: "zgteState",
		ID: "furnace",
		N: 3
	}, ["shiverchill-B10"], [10, 11], [], [0, 1], [{
		type: "spell",
		ID: 21
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q14, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q14
}), Prodigy.Shiverchill_Q15 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 15, "", {
		type: "key",
		N: 1,
		K: !0,
		ID: 4
	}, ["shiverchill-B2"], [36, 37], [], [0], [{
		type: "weapon",
		ID: 74
	}], !1)
}, Prodigy.extends(Prodigy.Shiverchill_Q15, Prodigy.Quest, {
	constructor: Prodigy.Shiverchill_Q15,
	collectionMaps: {
		B2: [1]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i), "B2" === i.getTag() && this.placeItem(e, t, i)
	},
	placeItem: function(e, t, i) {
		var a = {
			type: "key",
			ID: 4
		};
		i.addCollect(e, t, 1, 640, 350, a)
	}
}), Prodigy.Skywatch = function(e) {
	Prodigy.Zone.call(this, e), this.util = new Prodigy.SkywatchUtil(e, this), this.name = "Skywatch", this.ID = "skywatch", this.battleBG = "bg-battle-cloud", this.onFaint = "skywatch-A1", this.questHub = "skywatch-A1", this.states = ["chest1", "chest2", "chest3", "chest4", "chest5", "wizard1", "wizard2", "daily", "windowBroken", "plug-D3", "plug-B3", "plug-C4", "eugene_A1", "vines-D1", "vines-D2", "vines-D3", "vines-B3", "vines-C4"], this.monsters = [13, 15, 18, 20, 35, 40, 43, 56, 72, 84, 113, 115, 120];
	var t = ["npc-sprite-wizard", "tileset-town-new", "zone-skywatch", "npc-sprite-benni", "npc-sprite-broccolina", "npc-sprite-eugene", "sfx-skywatch", "tileset-skywatch", "tileset-skywatch-buildings", "tileset-collisions", "tileset-skywatch-factory", "tileset-generic-snow", "tileset-icecave-new", "tileset-cloud-new", "tileset-cloud", "tileset-interior", "tileset-town"];
	this.maps = {
		A0: new Prodigy.Skywatch_A0(this, t),
		A1: new Prodigy.Skywatch_A1(this, t),
		B1: new Prodigy.Skywatch_B1(this, t),
		B2: new Prodigy.Skywatch_B2(this, t),
		B3: new Prodigy.Skywatch_B3(this, t),
		C1: new Prodigy.Skywatch_C1(this, t),
		C2: new Prodigy.Skywatch_C2(this, t),
		C3: new Prodigy.Skywatch_C3(this, t),
		C4: new Prodigy.Skywatch_C4(this, t),
		D1: new Prodigy.Skywatch_D1(this, t),
		D2: new Prodigy.Skywatch_D2(this, t),
		D3: new Prodigy.Skywatch_D3(this, t),
		E1: new Prodigy.Skywatch_E1(this, t),
		E2: new Prodigy.Skywatch_E2(this, t),
		E3: new Prodigy.Skywatch_E3(this, t),
		E4: new Prodigy.Skywatch_E4(this, t),
		E5: new Prodigy.Skywatch_E5(this, t)
	}, this.quests = {
		1: new Prodigy.Skywatch_Q1(this, t),
		2: new Prodigy.Skywatch_Q2(this, t),
		3: new Prodigy.Skywatch_Q3(this, t),
		4: new Prodigy.Skywatch_Q4(this, t),
		5: new Prodigy.Skywatch_Q5(this, t),
		6: new Prodigy.Skywatch_Q6(this, t),
		7: new Prodigy.Skywatch_Q7(this, t),
		8: new Prodigy.Skywatch_Q8(this, t),
		9: new Prodigy.Skywatch_Q9(this, t),
		10: new Prodigy.Skywatch_Q10(this, t),
		11: new Prodigy.Skywatch_Q11(this, t),
		12: new Prodigy.Skywatch_Q12(this, t),
		13: new Prodigy.Skywatch_Q13(this, t)
	}
}, Prodigy.extends(Prodigy.Skywatch, Prodigy.Zone, {
	constructor: Prodigy.Skywatch,
	placeDaily: function() {},
	getDailyMaps: function() {
		var e = [];
		for (var t in this.maps) Util.isDefined(this.maps[t].daily_coors) && e.push(t);
		return e
	},
	process: function() {
		Prodigy.Zone.prototype.process.call(this)
	}
}), Prodigy.SkywatchUtil = function(e, t) {
	Prodigy.ZoneUtil.call(this, e, t)
}, Prodigy.extends(Prodigy.SkywatchUtil, Prodigy.ZoneUtil, {
	constructor: Prodigy.SkywatchUtil,
	interactTrolley: function(e, t, i, a) {
		var s = e.prodigy.event.create();
		s.validPath(t.user, t.path, i[0].x, i[0].y), s.function(this.hideHex.bind(this, e, t)), s.path(t.user, [{
			x: i[1].x,
			y: i[1].y
		}]), s.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "machines"), s.function(this.animateTrolley.bind(this, e, t, a.trolley, a.x, a.y, a.duration, a.target, a.targetX, a.targetY)), s.start()
	},
	animateTrolley: function(e, t, i, a, s, r, n, o, h) {
		e.add.tween(i).to({
			x: a,
			y: s
		}, r, Phaser.Easing.Linear.None).start(), e.add.tween(t.user).to({
			x: a,
			y: s
		}, r, Phaser.Easing.Linear.None).start();
		var l = e.prodigy.event.create();
		l.enableInput(!1), l.delay(3e3), l.enableInput(!0), l.function(e.prodigy.world.teleport.bind(e.prodigy.world, n, o, h)), l.start()
	},
	shrinkVines: function(e, t) {
		t.toggleDynamicLayer(e, 2, !1, 3e3)
	},
	animateFan: function(e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "zone-lamplight", "fan1", !0));
		s.anchor.setTo(.5, .5), s.animations.add("stand", ["fan1", "fan2", "fan3", "fan4"], 10, !0, !1), s.animations.play("stand")
	},
	elevator: function(e, t, i, a, s) {
		var r = e.prodigy.event.create();
		r.validPath(t.user, t.path, i[0].x, i[0].y), r.function(this.hideHex.bind(this, e, t)), r.delay(200), r.enableInput(!1), r.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "elevator"), r.function(this.animateElevatorOpen.bind(this, e, t.content, a.x, a.y)), r.delay(1e3), r.path(t.user, [{
			x: i[1].x,
			y: i[1].y
		}]), r.delay(1e3), r.function(this.animateElevatorClose.bind(this, e, t.foreground, a.x, a.y)), r.set(t.user.name, "visible", !1), r.delay(1e3), r.enableInput(!0), r.function(e.prodigy.world.teleport.bind(e.prodigy.world, s.target, s.x, s.y)), r.start()
	},
	animateElevatorOpen: function(e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "zone-skywatch", "elevator-0", !0));
		s.anchor.setTo(0, 0), s.animations.add("stand", ["elevator-0", "elevator-1", "elevator-2", "elevator-3", "elevator-4"], 10, !1, !1), s.animations.play("stand")
	},
	animateElevatorClose: function(e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "zone-skywatch", "elevator-2", !0));
		s.anchor.setTo(0, 0), s.animations.add("stand", ["elevator-4", "elevator-3", "elevator-2", "elevator-1", "elevator-0"], 10, !1, !1), s.animations.play("stand")
	},
	createVines: function(e, t, i) {
		i.toggleDynamicLayer(e, 2, !0)
	},
	changePosition: function(e, t, i) {
		e.prodigy.animation.float(t, 20, 1400, !0, !0), e.prodigy.animation.float(i, 20, 1400, !0, !0)
	}
}), Prodigy.Skywatch_A0 = function(e, t) {
	Prodigy.Map.call(this, e, "A0", "Lower Bean-o-vator", 1100, 450, ["skywatch-A1", "shiverchill-B1"], t)
}, Prodigy.extends(Prodigy.Skywatch_A0, Prodigy.Map, {
	constructor: Prodigy.Skywatch_A0,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1020,
			y: 410,
			w: 1,
			h: 1,
			rect: !0
		}, "skywatch-A1", 650, 360, null, AreaEvent.UP, !1, !1), this.addChest(e, t, "chest1", 720, 360, [{
			type: "gold",
			N: 200
		}]), this.addClickableEvent(e, t, 953, 320, 134, 140, this._zone.util.elevator.bind(this._zone.util, e, t, [{
			x: 1020,
			y: 460
		}, {
			x: 1020,
			y: 440
		}], {
			x: 960,
			y: 320
		}, {
			target: "skywatch-A1",
			x: null,
			y: null
		}), null, 0);
		var a = {
			opponent: [{
				data: {
					level: 45
				},
				appearance: {
					name: "Mary Moss",
					gender: "female",
					hair: {
						style: 2,
						color: 2
					},
					skinColor: 2,
					eyeColor: 3
				},
				equipment: {
					hat: 2,
					outfit: 2,
					weapon: 2
				}
			}],
			pets: [{
				ID: 20,
				level: 37
			}, {
				ID: 43,
				level: 38
			}, {
				ID: 56,
				level: 40
			}]
		};
		this.addWizard(e, t, 240, 340, "wizard1", a)
	}
}), Prodigy.Skywatch_A1 = function(e, t) {
	Prodigy.Map.call(this, e, "A1", "Upper Bean-o-vator", 620, 350, ["skywatch-A0", "skywatch-B1", "skywatch-C1", "skywatch-D1"], t.concat(["zone-lamplight", "npc-sprite-broccolina", "npc-sprite-merchant"]))
}, Prodigy.extends(Prodigy.Skywatch_A1, Prodigy.Map, {
	constructor: Prodigy.Skywatch_A1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 50,
			y: 50,
			r: 120
		}, "skywatch-B1", 1140, 560, null, AreaEvent.UP_LEFT, !1), this.addAreaEvent(e, t, {
			x: 110,
			y: 600,
			w: 220,
			h: 100,
			rect: !0
		}, "skywatch-C1", 1120, 160, null, AreaEvent.LEFT, !1), this.addHealStone(e, t, 850, 370), this.questNPC = this.addConstructedQuestNPC(e, t, 760, 500, "benni", !1, this.zoneComplete.bind(this, e)), this.trolley = t.content.add(e.prodigy.create.sprite(1110, 336, "zone-skywatch", "cart-horizontal")), this.addAreaEvent(e, t, {
			x: 1100,
			y: 440,
			w: 1,
			h: 1
		}, "skywatch-D1", 0, 0, null, AreaEvent.RIGHT, !1, !0), this.addAreaEvent(e, t, {
			x: 653,
			y: 187,
			w: 1,
			h: 1,
			rect: !0
		}, "skywatch-A0", 650, 360, null, AreaEvent.DOWN, !1, !0), t.createStoreNPC(430, 360, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.SKY_HIGH_VALUES), !0), this.addClickableEvent(e, t, 1115, 400, 80, 80, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 1140,
			y: 480
		}, {
			x: 1165,
			y: 460
		}], {
			trolley: this.trolley,
			x: "+200",
			y: "0",
			duration: 3e3,
			target: "skywatch-D1",
			targetX: null,
			targetY: null
		}), null, 0), this.addClickableEvent(e, t, 593, 200, 134, 140, this._zone.util.elevator.bind(this._zone.util, e, t, [{
			x: 660,
			y: 340
		}, {
			x: 660,
			y: 320
		}], {
			x: 600,
			y: 200
		}, {
			target: "skywatch-A0",
			x: 1100,
			y: 450
		}), null, 0);
		var a = this.addConstructedNPC(e, t, 440, 500, "npc-sprite-broccolina", this.questNPC.process.bind(this.questNPC, this._zone, null, !0), "Broccolina");
		Util.isDefined(a) && (a.flip(), a.name.x -= 55), Util.isDefined(this._zone.getState("eugene_A1")) && this.addConstructedNPC(e, t, 685, 390, "npc-sprite-eugene", this.questNPC.process.bind(this.questNPC, this._zone, null, !0), "Eugene")
	},
	zoneComplete: function(e) {
		var t = e.prodigy.event.create();
		t.text(1, "benni"), t.text(0, "benni"), t.text(45, "benni"), t.start()
	}
}), Prodigy.Skywatch_B1 = function(e, t) {
	Prodigy.Map.call(this, e, "B1", "Gardener's Hut: Exterior", 1140, 549, ["skywatch-A1", "skywatch-B2", "skywatch-B3"], t.concat("npc-sprite-pippet")), this.coord = [{
		x: 460,
		y: 530
	}, {
		x: 200,
		y: 560
	}]
}, Prodigy.extends(Prodigy.Skywatch_B1, Prodigy.Map, {
	constructor: Prodigy.Skywatch_B1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1150,
			y: 710,
			r: 120
		}, "skywatch-A1", 120, 190, null, AreaEvent.DOWN), this.addAreaEvent(e, t, {
			x: 740,
			y: 340,
			w: 80,
			h: 80,
			rect: !0
		}, "skywatch-B2", 640, 510, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 150,
			y: 0,
			r: 120
		}, "skywatch-B3", 1030, 560, null, AreaEvent.UP), this.addPippet(e, t, 1, 775, 500);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 18
			}, {
				ID: 20
			}, {
				ID: 72
			}]
		};
		this.addMonster(e, t, 1, 640, 565, !1, a), this.addMonster(e, t, 2, 200, 400, !1, a), this.addClickableEvent(e, t, 700, 240, 80, 120, this.validPathTo.bind(this, e, t, 740, 370), null), this.addChest(e, t, "chest2", 620, 420, [{
			type: "outfit",
			ID: 41
		}]), new Prodigy.Container.ToyMerchant(e, t.content, 1144, 443)
	}
}), Prodigy.Skywatch_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Gardener's Hut: Inner", 640, 510, ["skywatch-B1"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Skywatch_B2, Prodigy.Map, {
	constructor: Prodigy.Skywatch_B2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 660,
			y: 550,
			w: 130,
			h: 70,
			rect: !0
		}, "skywatch-B1", 760, 390, null, AreaEvent.DOWN)
	}
}), Prodigy.Skywatch_B3 = function(e, t) {
	Prodigy.Map.call(this, e, "B3", "The Great Graters", 1030, 560, ["skywatch-B1"], t.concat(["boss-12"])), this.iceIndex = 0
}, Prodigy.extends(Prodigy.Skywatch_B3, Prodigy.Map, {
	constructor: Prodigy.Skywatch_B3,
	init: function(e, t, i, a) {
		return Util.isDefined(this._zone.getState("plug-B3")) ? this.plugOut(e, a) : (this.plugIn(e, a), this.createIceBlocks(e, a)), a.zone.enableLayer(2, Util.isDefined(this._zone.getState("vines-B3"))), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1035,
			y: 710,
			r: 130
		}, "skywatch-B1", 170, 150, null, AreaEvent.DOWN)
	},
	plugIn: function(e, t) {
		t.zone.enableLayer(0, !1), t.zone.enableLayer(1, !0)
	},
	plugOut: function(e, t) {
		t.zone.enableLayer(1, !1), t.zone.enableLayer(0, !0)
	},
	createIceBlocks: function(e, t) {
		var i = e.prodigy.event.create();
		i.delay(Math.floor(3e3 * Math.random())), i.function(this.createIceBlock.bind(this, e, t, 0)), i.delay(Math.floor(3e3 * Math.random())), i.function(this.createIceBlock.bind(this, e, t, 1)), i.delay(Math.floor(3e3 * Math.random())), i.function(this.createIceBlock.bind(this, e, t, 2)), i.delay(Math.floor(3e3 * Math.random())), i.function(this.createIceBlock.bind(this, e, t, 3)), i.start()
	},
	createIceBlock: function(e, t, i) {
		var a = [{
				start: {
					x: 483,
					y: 105
				},
				path: [{
					x: 483,
					y: 320
				}, {
					x: 560,
					y: 320
				}],
				end: {
					x: 715,
					y: 380
				},
				angle: "+20"
			}, {
				start: {
					x: 322,
					y: 105
				},
				path: [{
					x: 322,
					y: 320
				}, {
					x: 240,
					y: 320
				}],
				end: {
					x: 80,
					y: 380
				},
				angle: "-20"
			}, {
				start: {
					x: 483,
					y: 740
				},
				path: [{
					x: 483,
					y: 440
				}, {
					x: 560,
					y: 440
				}],
				end: {
					x: 715,
					y: 500
				},
				angle: "+20"
			}, {
				start: {
					x: 322,
					y: 740
				},
				path: [{
					x: 322,
					y: 440
				}, {
					x: 240,
					y: 440
				}],
				end: {
					x: 80,
					y: 500
				},
				angle: "-20"
			}],
			s = [{
				x: 575,
				y: 430
			}, {
				x: 90,
				y: 430
			}, {
				x: 575,
				y: 550
			}, {
				x: 90,
				y: 550
			}],
			r = [],
			n = e.prodigy.event.create();
		n.delay(2e3 + Math.floor(5e3 * Math.random())), n.function(this.createIceBlock.bind(this, e, t, i)), n.start();
		var o = a[i],
			h = t.foreground.add(e.prodigy.create.sprite(o.start.x, o.start.y, "zone-skywatch", "ice-cube"));
		h.anchor.setTo(.5, 1), h.alpha = 0, r.push(e.add.tween(h).to({
			x: o.path[0].x,
			y: o.path[0].y
		}, 3e3, Phaser.Easing.Linear.None).to({
			x: o.path[1].x,
			y: o.path[1].y
		}, 1500, Phaser.Easing.Linear.None).to({
			x: o.end.x,
			y: o.end.y
		}, 3e3, Phaser.Easing.Linear.None)), r.push(e.add.tween(h.scale).to({
			x: .1,
			y: .1
		}, 3e3, Phaser.Easing.Linear.None, null, 4900)), r.push(e.add.tween(h).to({
			alpha: 1
		}, 250, Phaser.Easing.Linear.None, null)), r.push(e.add.tween(h).to({
			angle: o.angle
		}, 500, Phaser.Easing.Linear.None, null, 4700)), r[1].onComplete.add(this.makeSnow.bind(this, e, t, s[i].x, s[i].y)), r[1].onComplete.add(h.destroy.bind(h));
		for (var l = 0; l < r.length; l++) r[l].start()
	},
	makeSnow: function(e, t, i, a) {
		var s = t.background;
		if (!Util.isDefined(this.snows)) {
			this.snows = [];
			for (var r = 0; 20 > r; r++) this.snows[r] = s.add(e.prodigy.create.sprite(i, a, "font-general", "42-30"))
		}
		for (var r = 0; 20 > r; r++) this.snows[r].x = i, this.snows[r].y = a, this.newFlake(e, this.snows[r], !0, i, a)
	},
	newFlake: function(e, t, i, a, s) {
		if (Util.isDefined(e)) {
			var r = 2e3 + Math.floor(2e3 * Math.random());
			t.frameName = Math.random() < .5 ? "42-16" : "42-30", t.x = a + Math.floor(140 * Math.random()), i ? r -= Math.floor(r / 720 * t.y) : t.y = s, e.prodigy.animation.translate(t, t.x, 720, r, null, null, !0)
		}
	},
	cleanup: function() {
		for (var e = 0; e < Util.isDefined(this.snows) ? this.snows.length : 0; e++) this.snows[e].destroy();
		this.snows = null, Prodigy.Map.prototype.cleanup.call(this)
	}
}), Prodigy.Skywatch_C1 = function(e, t) {
	Prodigy.Map.call(this, e, "C1", "The Screwball Shack", 1120, 160, ["skywatch-A1", "skywatch-C2", "skywatch-C3"], t.concat(["zone-lamplight"])), this.coord = [{
		x: 370,
		y: 580
	}, {
		x: 590,
		y: 350
	}]
}, Prodigy.extends(Prodigy.Skywatch_C1, Prodigy.Map, {
	constructor: Prodigy.Skywatch_C1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1205,
			y: 160,
			w: 150,
			h: 100,
			rect: !0
		}, "skywatch-A1", 240, 610, null, AreaEvent.RIGHT), this.addAreaEvent(e, t, {
			x: 115,
			y: 620,
			w: 100,
			h: 200,
			rect: !0
		}, "skywatch-C3", 1160, 210, null, AreaEvent.DOWN), this.addAreaEvent(e, t, {
			x: 220,
			y: 268,
			w: 90,
			h: 140,
			rect: !0
		}, "skywatch-C2", 625, 520, null, AreaEvent.UP);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 56
			}, {
				ID: 84
			}, {
				ID: 13
			}]
		};
		this.addMonster(e, t, 2, 870, 320, !1, a), this.addClickableEvent(e, t, 180, 190, 80, 120, this.validPathTo.bind(this, e, t, 195, 320), null)
	}
}), Prodigy.Skywatch_C2 = function(e, t) {
	Prodigy.Map.call(this, e, "C2", "The Screwball Shack: Inner", 625, 520, ["skywatch-C1"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Skywatch_C2, Prodigy.Map, {
	constructor: Prodigy.Skywatch_C2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 620,
			y: 560,
			w: 160,
			h: 70,
			rect: !0
		}, "skywatch-C1", 200, 360, null, AreaEvent.DOWN)
	}
}), Prodigy.Skywatch_C3 = function(e, t) {
	Prodigy.Map.call(this, e, "C3", "Cloudy Pass", 1160, 210, ["skywatch-C1", "skywatch-C4"], t.concat("npc-sprite-pippet"))
}, Prodigy.extends(Prodigy.Skywatch_C3, Prodigy.Map, {
	constructor: Prodigy.Skywatch_C3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1155,
			y: 100,
			w: 100,
			h: 200,
			rect: !0
		}, "skywatch-C1", 115, 510, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 120,
			y: 100,
			w: 100,
			h: 200,
			rect: !0
		}, "skywatch-C4", 1160, 540, null, AreaEvent.UP);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 56
			}, {
				ID: 84
			}, {
				ID: 13
			}]
		};
		this.addMonster(e, t, 1, 400, 400, !1, a), this.addMonster(e, t, 2, 870, 320, !1, a), this.addChest(e, t, "chest3", 800, 220, [{
			type: "gold",
			N: 500
		}])
	}
}), Prodigy.Skywatch_C4 = function(e, t) {
	Prodigy.Map.call(this, e, "C4", "Sky Shower", 1160, 550, ["skywatch-C3"], t.concat(["npc-sprite-noot", "npc-sprite-flora", "boss-12"]))
}, Prodigy.extends(Prodigy.Skywatch_C4, Prodigy.Map, {
	constructor: Prodigy.Skywatch_C4,
	init: function(e, t, i, a) {
		return this.plugIn(e, a, !Util.isDefined(this._zone.getState("plug-C4"))), a.zone.enableLayer(2, Util.isDefined(this._zone.getState("vines-C4"))), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		if (Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
				x: 1150,
				y: 660,
				w: 100,
				h: 200,
				rect: !0
			}, "skywatch-C3", 120, 210, null, AreaEvent.DOWN), !this._zone.isOnSequence(2, 3) && !this._zone.isOnQuest(9)) {
			var a = {
				randDir: !0,
				encounter: [{
					ID: 56
				}, {
					ID: 84
				}, {
					ID: 13
				}]
			};
			this.addMonster(e, t, 1, 250, 460, !1, a), this.addMonster(e, t, 2, 700, 560, !1, a)
		}
	},
	plugIn: function(e, t, i) {
		t.zone.enableLayer(0, !i), t.zone.enableLayer(1, i)
	}
}), Prodigy.Skywatch_D1 = function(e, t) {
	Prodigy.Map.call(this, e, "D1", "Factory Entrance", 189, 549, ["skywatch-A1", "skywatch-D2", "skywatch-E1"], t.concat("npc-sprite-noot")), this.coord = [{
		x: 400,
		y: 540
	}, {
		x: 780,
		y: 570
	}]
}, Prodigy.extends(Prodigy.Skywatch_D1, Prodigy.Map, {
	constructor: Prodigy.Skywatch_D1,
	init: function(e, t, i, a) {
		return a.zone.enableLayer(2, !Util.isDefined(this._zone.getState("vines-D1"))), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		if (Prodigy.Map.prototype.setup.call(this, e, t, i), e.prodigy.player.backpack.hasItem("item", 81)) this.addAreaEvent(e, t, {
			x: 620,
			y: 280,
			w: 120,
			h: 80,
			rect: !0
		}, "skywatch-E1", 1120, 560, null, AreaEvent.UP), this.addClickableEvent(e, t, 580, 140, 80, 140, this.validPathTo.bind(this, e, t, 680, 290), null);
		else {
			var a = function(e) {
				var t = e.prodigy.event.create();
				t.popup("The door is locked. You require the Factory Key."), t.start()
			};
			this.addClickableEvent(e, t, 580, 140, 80, 140, a.bind(this, e))
		}
		this.addAreaEvent(e, t, {
			x: 190,
			y: 420,
			w: 1,
			h: 1
		}, "skywatch-A1", 0, 0, null, AreaEvent.LEFT, !1, !0), this.addAreaEvent(e, t, {
			x: 1075,
			y: 440,
			w: 1,
			h: 1
		}, "skywatch-D2", 0, 0, null, AreaEvent.RIGHT, !1, !0), this.trolley = t.content.add(e.prodigy.create.sprite(75, 296, "zone-skywatch", "cart-horizontal")), this.trolley2 = t.content.add(e.prodigy.create.sprite(1075, 296, "zone-skywatch", "cart-horizontal")), this.trolley2.alpha = 0, Util.isDefined(this._zone.getState("vines-D1")) && (this.trolley2.alpha = 1, this.addClickableEvent(e, t, 1080, 360, 80, 80, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 1130,
			y: 450
		}, {
			x: 1120,
			y: 420
		}], {
			trolley: this.trolley2,
			x: "+200",
			y: "0",
			duration: 3e3,
			target: "skywatch-D2",
			targetX: 140,
			targetY: 290
		}), null, 0)), this.addClickableEvent(e, t, 80, 360, 80, 80, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 130,
			y: 450
		}, {
			x: 120,
			y: 420
		}], {
			trolley: this.trolley,
			x: "-200",
			y: "0",
			duration: 3e3,
			target: "skywatch-A1",
			targetX: 1100,
			targetY: 500
		}), null, 0);
		var s = {
			randDir: !0,
			encounter: [{
				ID: 40
			}, {
				ID: 43
			}]
		};
		this.addMonster(e, t, 1, 400, 425, !1, s)
	}
}), Prodigy.Skywatch_D2 = function(e, t) {
	Prodigy.Map.call(this, e, "D2", "Breezy Pass", 140, 290, ["skywatch-D1", "skywatch-D3"], t.concat(["zone-lamplight"])), this.coord = [{
		x: 280,
		y: 450
	}, {
		x: 780,
		y: 330
	}]
}, Prodigy.extends(Prodigy.Skywatch_D2, Prodigy.Map, {
	constructor: Prodigy.Skywatch_D2,
	init: function(e, t, i, a) {
		return a.zone.enableLayer(2, !Util.isDefined(this._zone.getState("vines-D2"))), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 210,
			y: 182,
			w: 1,
			h: 1
		}, "skywatch-D1", 0, 0, null, AreaEvent.LEFT, !1, !1), this.addAreaEvent(e, t, {
			x: 1e3,
			y: 575,
			w: 1,
			h: 1
		}, "skywatch-D3", 0, 0, null, AreaEvent.LEFT, !1, !1), this.trolley = t.content.add(e.prodigy.create.sprite(100, 96, "zone-skywatch", "cart-horizontal")), this.trolley2 = t.content.add(e.prodigy.create.sprite(1e3, 515, "zone-skywatch", "cart-vertical")), this.trolley2.scale.x = -this.trolley2.scale.x, this.addClickableEvent(e, t, 105, 160, 80, 80, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 145,
			y: 250
		}, {
			x: 155,
			y: 220
		}], {
			trolley: this.trolley,
			x: "-300",
			y: "0",
			duration: 3e3,
			target: "skywatch-D1",
			targetX: 1100,
			targetY: 540
		})), Util.isDefined(this._zone.getState("vines-D2")) && this.addClickableEvent(e, t, 925, 555, 90, 90, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 1040,
			y: 600
		}, {
			x: 965,
			y: 600
		}], {
			trolley: this.trolley2,
			x: "0",
			y: "+300",
			duration: 3e3,
			target: "skywatch-D3",
			targetX: 300,
			targetY: 250
		}));
		var a = {
			randDir: !0,
			encounter: [{
				ID: 40
			}, {
				ID: 43
			}]
		};
		this.addMonster(e, t, 1, 500, 300, !1, a), this.addMonster(e, t, 2, 940, 250, !1, a), this.addChest(e, t, "chest4", 640, 200, [{
			type: "weapon",
			ID: 69
		}])
	}
}), Prodigy.Skywatch_D3 = function(e, t) {
	Prodigy.Map.call(this, e, "D3", "The Wind Tunnel", 270, 250, ["skywatch-D2"], t.concat(["zone-lamplight", "boss-12"]))
}, Prodigy.extends(Prodigy.Skywatch_D3, Prodigy.Map, {
	constructor: Prodigy.Skywatch_D3,
	init: function(e, t, i, a) {
		return a.zone.enableLayer(2, Util.isDefined(this._zone.getState("vines-D3"))), Util.isDefined(this._zone.getState("plug-D3")) ? this.unplug(e, a) : this.plugIn(e, a), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 260,
			y: 240,
			w: 1,
			h: 1
		}, "skywatch-D2", 0, 0, null, AreaEvent.LEFT, !1, !0), this.trolley = t.content.add(e.prodigy.create.sprite(240, 175, "zone-skywatch", "cart-vertical")), this.trolley.scale.x = -this.trolley.scale.x, this.addClickableEvent(e, t, 160, 210, 100, 100, this._zone.util.interactTrolley.bind(this._zone.util, e, t, [{
			x: 265,
			y: 280
		}, {
			x: 200,
			y: 270
		}], {
			trolley: this.trolley,
			x: "0",
			y: "-300",
			duration: 3e3,
			target: "skywatch-D2",
			targetX: 1020,
			targetY: 580
		}));
		var a = {
			randDir: !0,
			encounter: [{
				ID: 40
			}, {
				ID: 43
			}]
		};
		this.addMonster(e, t, 1, 450, 400, !1, a)
	},
	displayStationaryFanribbons: function(e, t) {
		t.zone.enableLayer(2, !1), this.toggleDynamicLayer(e, 2, !1)
	},
	plugIn: function(e, t) {
		t.zone.enableLayer(0, !1), this.toggleDynamicLayer(e, 0, !1), t.zone.enableLayer(1, !0), this.toggleDynamicLayer(e, 1, !0)
	},
	unplug: function(e, t) {
		t.zone.enableLayer(1, !1), this.toggleDynamicLayer(e, 1, !1), t.zone.enableLayer(0, !0), this.toggleDynamicLayer(e, 0, !0)
	}
}), Prodigy.Skywatch_E1 = function(e, t) {
	Prodigy.Map.call(this, e, "E1", "Factory: Main Hall", 1120, 560, ["skywatch-D1", "skywatch-E2", "skywatch-E3"], t)
}, Prodigy.extends(Prodigy.Skywatch_E1, Prodigy.Map, {
	constructor: Prodigy.Skywatch_E1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1100,
			y: 720,
			r: 120
		}, "skywatch-D1", 680, 360, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 160,
			y: 0,
			r: 120
		}, "skywatch-E3", 1060, 560, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1102,
			y: 320,
			w: 100,
			h: 80,
			rect: !0
		}, "skywatch-E2", 200, 560, null, AreaEvent.UP, !1), this.addClickableEvent(e, t, 1060, 200, 80, 120, this.validPathTo.bind(this, e, t, 1120, 350));
		var a = {
			randDir: !0,
			encounter: [{
				ID: 113
			}, {
				ID: 115
			}, {
				ID: 120
			}]
		};
		this.addMonster(e, t, 1, 800, 400, !0, a, !1), this.addMonster(e, t, 2, 400, 400, !0, a, !1)
	}
}), Prodigy.Skywatch_E2 = function(e, t) {
	Prodigy.Map.call(this, e, "E2", "Factory: Old Man's Room", 200, 560, ["skywatch-E1"], t.concat(["npc-sprite-eugene"]))
}, Prodigy.extends(Prodigy.Skywatch_E2, Prodigy.Map, {
	constructor: Prodigy.Skywatch_E2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 720,
			r: 120
		}, "skywatch-E1", 1120, 370, null, AreaEvent.DOWN, !1);
		var a = {
			opponent: [{
				data: {
					level: 60
				},
				appearance: {
					name: "Barry Boss",
					gender: "male",
					hair: {
						style: 16,
						color: 3
					},
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 3,
					outfit: 3,
					weapon: 3
				}
			}],
			pets: [{
				ID: 113,
				level: 52
			}, {
				ID: 115,
				level: 53
			}, {
				ID: 120,
				level: 55
			}]
		};
		this.addWizard(e, t, 965, 530, "wizard2", a).flip()
	}
}), Prodigy.Skywatch_E3 = function(e, t) {
	Prodigy.Map.call(this, e, "E3", "Blast Doors", 1060, 560, ["skywatch-E1", "skywatch-E4"], t)
}, Prodigy.extends(Prodigy.Skywatch_E3, Prodigy.Map, {
	constructor: Prodigy.Skywatch_E3,
	setup: function(e, t, i) {
		if (Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
				x: 1120,
				y: 720,
				r: 120
			}, "skywatch-E1", 160, 160, null, AreaEvent.DOWN, !1), this.addHealStone(e, t, 430, 550), e.prodigy.player.backpack.hasItem("item", 83)) this.addAreaEvent(e, t, {
			x: 620,
			y: 360,
			w: 120,
			h: 80,
			rect: !0
		}, "skywatch-E4", 640, 380, null, AreaEvent.UP, !1), this.addClickableEvent(e, t, 560, 240, 120, 160, this.validPathTo.bind(this, e, t, 620, 390));
		else {
			var a = function(e) {
				var t = e.prodigy.event.create();
				t.popup("The door is locked. You require the Master Key."), t.start()
			};
			this.addClickableEvent(e, t, 520, 200, 160, 120, a.bind(this, e))
		}
		this.addChest(e, t, "chest5", 900, 400, [{
			type: "hat",
			ID: 45
		}]);
		var s = {
			randDir: !0,
			encounter: [{
				ID: 113
			}, {
				ID: 115
			}, {
				ID: 120
			}]
		};
		this.addMonster(e, t, 0, 725, 480, !0, s, !1)
	}
}), Prodigy.Skywatch_E4 = function(e, t) {
	Prodigy.Map.call(this, e, "E4", "End Chamber", 640, 380, ["skywatch-E3", "skywatch-E5"], t.concat(["boss-12"]))
}, Prodigy.extends(Prodigy.Skywatch_E4, Prodigy.Map, {
	constructor: Prodigy.Skywatch_E4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 640,
			y: 500,
			w: 160,
			h: 40,
			rect: !0
		}, "skywatch-E3", 600, 480, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 340,
			y: 340,
			w: 80,
			h: 40,
			rect: !0
		}, "skywatch-E5", 999, 555, null, AreaEvent.UP, !1), this.addClickableEvent(e, t, 300, 200, 80, 120, this.validPathTo.bind(this, e, t, 360, 340))
	}
}), Prodigy.Skywatch_E5 = function(e, t) {
	this.insideTrigger = !1, this.lasFrameInsideTrigger = !1, this.user = null, Prodigy.Map.call(this, e, "E5", "Skywatch Outskirts", 999, 555, ["skywatch-E4"], t)
}, Prodigy.extends(Prodigy.Skywatch_E5, Prodigy.Map, {
	constructor: Prodigy.Skywatch_E5,
	init: function(e, t, i, a) {
		return a.zone.enableLayer(3, !1), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1010,
			y: 720,
			r: 120
		}, "skywatch-E4", 360, 380, null, AreaEvent.DOWN, !1), this.user = t.user
	},
	update: function(e) {
		Util.isDefined(this.user) && (this.insideTrigger = Phaser.Math.distance(this.user.x, this.user.y, 430, 490) <= 100, this.insideTrigger !== this.lasFrameInsideTrigger && this.toggleDynamicLayer.call(this, e, 3, this.insideTrigger, 500), this.lasFrameInsideTrigger = this.insideTrigger), Prodigy.Map.prototype.update.call(this, e)
	}
}), Prodigy.Skywatch_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "", {
		type: "pet",
		ID: 72,
		N: 3,
		U: !0
	}, ["skywatch-B2"], [2, 3, 4, 5, 6, 7], [], [0, 8], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q1, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q1,
	setup: function(e, t, i) {
		if (Prodigy.Quest.prototype.setup.call(this, e, t, i), "B2" === i._tag) {
			var a = {
				randDir: !0,
				encounter: [{
					ID: 72
				}]
			};
			return i.addMonster(e, t, 0, 400, 400, !0, a, !1), i.addMonster(e, t, 1, 810, 360, !0, a, !1), i.addMonster(e, t, 2, 920, 415, !0, a, !1), {
				enableMonsters: !1
			}
		}
		return null
	}
}), Prodigy.Skywatch_Q2 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 2, "Get the Device", {
		type: "item",
		ID: 93,
		N: 1
	}, ["skywatch-C2"], [9, 10, 11, 12], [], [1], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q2, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q2,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i);
		var a = i.getTag();
		if ("C2" === a && this.zone.isOnSequence(2, 0)) this.thiefStealsTheWeatherometre(e, t, i);
		else if ("C1" === a && this.zone.isOnSequence(2, 1)) this.thiefFlees(e, t, i, 115, 560, 115, 800, "skywatch-C3", 1);
		else if ("C3" === a && this.zone.isOnSequence(2, 2)) this.thiefFlees(e, t, i, 120, 210, 120, -20, "skywatch-C4", 2);
		else if ("C4" === a && this.zone.isOnSequence(2, 3)) return this.thiefFailsEscape(e, t, i), {
			enableMonsters: !1
		}
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		return "A1" === a && this.zone.isOnSequence(2, 4) ? {
			hiddenNPCs: ["npc-sprite-broccolina"]
		} : void 0
	},
	process: function() {
		this.area = this.zone.isOnSequence(2, 0) ? ["skywatch-C2"] : this.zone.isOnSequence(2, 1) ? ["skywatch-C1"] : this.zone.isOnSequence(2, 2) ? ["skywatch-C3"] : this.zone.isOnSequence(2, 3) ? ["skywatch-C4"] : this.area
	},
	thiefStealsTheWeatherometre: function(e, t, i) {
		var a = {
			randDir: !1,
			encounter: [{
				ID: 84
			}]
		};
		this.thief = i.addMonster(e, t, 0, 688, 335, !1, a), this.thief.visible = !0;
		var s = t.content.add(e.prodigy.icon.createIcon(695, 275, "icon-item-93")),
			r = i.addNPC(e, t, 600, 550, "npc-sprite-noot");
		r.visible = !1, r.float(!0);
		var n = e.prodigy.event.create();
		n.enableInput(!1), n.set(r, "visible", !0), n.hop(r, 300, -55, 50), n.enableInput(!0), n.function(this.thief.chat.bind(this.thief, 1, 100)), n.delay(1500), n.set(s, "visible", !1), n.enableInput(!1), n.delay(500), n.path(this.thief, [{
			x: 800,
			y: 230
		}], 1), n.function(this.breakWindow.bind(this)), n.set(this.thief, "visible", !1), n.enableInput(!0), n.function(r.chat.bind(r, 1, 100)), n.text(95, "noot"), n.enableInput(!1), n.hop(r, 300, 55, 50), n.set(r, "visible", !1), n.enableInput(!0), n.set(this, "area", ["skywatch-C1"]), n.function(this.zone.completeSequence.bind(this.zone, 2, 0)), n.function(t.process.bind(t)), n.set(this.thief, "visible", !1), n.start()
	},
	breakWindow: function() {
		this.zone.states.windowBroken = !0
	},
	thiefFlees: function(e, t, i, a, s, r, n, o, h) {
		var l = {
			randDir: !1,
			encounter: [{
				ID: 84
			}]
		};
		this.thief = i.addMonster(e, t, 0, a, s, !1, l), this.thief.visible = !0;
		var d = e.prodigy.event.create();
		d.enableInput(!1), d.set(t.user, "evtProc", !0), d.path(this.thief, [{
			x: r,
			y: n
		}], 1, !1), d.set(this.thief, "visible", !1), d.set(t.user, "evtProc", !1), d.enableInput(!0), d.set(this, "area", [o]), d.function(this.zone.completeSequence.bind(this.zone, 2, h)), d.function(t.process.bind(t)), d.start()
	},
	thiefFailsEscape: function(e, t, i) {
		var a = {
			randDir: !1,
			encounter: [{
				ID: 84
			}]
		};
		this.thief = i.addMonster(e, t, 0, 850, 500, !1, a), this.thief.visible = !1;
		var s = i.addNPC(e, t, 959, 500, "npc-sprite-noot");
		s.flip(), s.visible = !1, s.float(!0);
		var r = e.prodigy.event.create();
		r.validPath(t.user, t.path, 1159, 550), r.set(t.user, "evtProc", !0), r.enableInput(!1), r.set(this.thief, "visible", !0), r.path(this.thief, [{
			x: 700,
			y: 500
		}], 1, !0), r.path(t.user, [{
			x: 1e3,
			y: 520
		}], 1.2), r.set(s, "visible", !0), r.hop(s, 300, -55, 50), r.enableInput(!0), r.text(96, "noot"), r.enableInput(!1), r.delay(500), r.enableInput(!0), r.function(this.thiefBattle.bind(this, e)), r.start()
	},
	thiefBattle: function(e) {
		var t = {
			intro: "Recover the Weather O Meter!",
			"catch": !1,
			run: !1,
			screen: "bg-battle-cloud",
			pets: [{
				ID: 84,
				nickname: "Thief"
			}],
			drops: [{
				type: "item",
				ID: 87
			}]
		};
		e.prodigy.battle.start(t, null, this.thiefDefeated.bind(this, e, !0), null, this.zone.onFaint)
	},
	thiefDefeated: function(e) {
		this.zone.setState("quest", {
			ID: 2,
			req: {
				type: "item",
				ID: 87,
				N: 1
			},
			seq: 4,
			state: {}
		}), this.zone.completeSequence(2, 3), e.prodigy.world.teleport("skywatch-C4", 1160, 540)
	}
}), Prodigy.Skywatch_Q3 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 3, "Find Broccolina", {
		type: "seq",
		N: 2
	}, ["skywatch-B2"], [13, 14, 15], [], [1], [{
		type: "gold",
		N: 200
	}, {
		type: "key",
		ID: 8
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q3, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q3,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		if ("B2" === a && this.zone.isOnSequence(3, 0)) this.nootFindsTheNote(e, t, i);
		else if ("A0" === a && this.zone.isOnSequence(3, 1)) this.foundBroccolina(e, t, i);
		else if ("A1" === a && !this.zone.isQuestComplete(3)) return {
			hiddenNPCs: ["npc-sprite-broccolina"]
		}
	},
	process: function() {
		this.area = this.zone.isOnSequence(3, 0) ? ["skywatch-B2"] : this.zone.isOnSequence(3, 1) ? ["skywatch-A0"] : this.area
	},
	nootFindsTheNote: function(e, t, i) {
		var a = i.addNPC(e, t, 640, 535, "npc-sprite-noot");
		a.visible = !1, a.float(!0);
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.set(a, "visible", !0), s.hop(a, 300, -55, 50), s.enableInput(!1), s.path(a, [{
			x: 540,
			y: 365
		}]), s.enableInput(!0), s.text(97, "noot"), s.enableInput(!1), s.path(a, [{
			x: 585,
			y: 535
		}]), s.hop(a, 300, 55, 50), s.set(a, "visible", !1), s.set(this.zone.quests["3"], "area", ["skywatch-A0"]), s.function(this.zone.completeSequence.bind(this.zone, 3, 0)), s.function(t.process.bind(t)), s.enableInput(!0), s.start()
	},
	foundBroccolina: function(e, t, i) {
		var a = i.addConstructedNPC(e, t, 440, 500, "npc-sprite-broccolina", null, "Broccolina");
		a.name.x += 60;
		var s = e.prodigy.event.create();
		s.text(0, "broccolina"), s.function(this.zone.completeSequence.bind(this.zone, 3, 1)), s.function(t.process.bind(t)), s.start()
	}
}), Prodigy.Skywatch_Q4 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 4, "Trim the Vines", {
		type: "seq",
		N: 3
	}, ["skywatch-D1"], [16, 17, 18], [], [1, 46], [{
		type: "spell",
		ID: 25
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q4, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q4,
	setup: function(e, t) {
		Prodigy.Quest.prototype.setup.call(this, e, t)
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), this.zone.isOnSequence(4, 2) && "skywatch-D3" === i._zoneName ? this.cutscene_D3(e, t, i) : this.zone.isOnSequence(4, 1) && "skywatch-D2" === i._zoneName ? this.highlight_D2(e, t, i) : this.zone.isOnSequence(4, 0) && "skywatch-D1" === i._zoneName && this.highlight_D1(e, t, i)
	},
	process: function() {
		this.area = this.zone.isOnSequence(4, 0) ? ["skywatch-D1"] : this.zone.isOnSequence(4, 1) ? ["skywatch-D2"] : this.zone.isOnSequence(4, 2) ? ["skywatch-D3"] : this.area
	},
	cutscene_D3: function(e, t, i) {
		this.boss = t.content.add(e.prodigy.create.sprite(850, -100, "boss-12", "ice_cloud", !0)), this.eyes = t.foreground.add(e.prodigy.create.sprite(840, -150, "boss-12", "med_face_0", !0));
		var a = e.prodigy.event.create();
		a.set(this, "desc", "Inspect Machine"), a.enableInput(!1), a.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), a.delay(2e3), a.function(this.boss4Enter.bind(this, e)), a.enableInput(!0), a.delay(600), a.text(98, "noot"), a.enableInput(!1), a.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), a.function(this.zone.setState.bind(this.zone, "vines-D3", 1)), a.function(this.zone.setState.bind(this.zone, "vines-B3", 1)), a.function(this.zone.setState.bind(this.zone, "vines-C4", 1)), a.function(this.zone.setState.bind(this.zone, "plug-D3", 1)), a.function(this.zone.setState.bind(this.zone, "plug-B3", 1)), a.function(this.zone.setState.bind(this.zone, "plug-C4", 1)), a.function(this.boss4Exit.bind(this, e, t, i)), a.explode(670, 60, 200, 200, 3, !0), a.delay(2e3), a.function(this.zone.util.createVines.bind(this, e, t, i)), a.enableInput(!0), a.delay(600), a.text(99, "noot"), a.function(this.zone.completeSequence.bind(this.zone, 4, 2)), a.function(t.process.bind(t)), a.start()
	},
	boss4Enter: function(e) {
		e.add.tween(this.boss).to({
			x: 850,
			y: 200
		}, 2e3, Phaser.Easing.Linear.None).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "+20"
		}, 1400, Phaser.Easing.Quadratic.InOut).start(), e.add.tween(this.eyes).to({
			x: 840,
			y: 150
		}, 2e3, Phaser.Easing.Linear.None).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "+20"
		}, 1400, Phaser.Easing.Quadratic.InOut).start()
	},
	boss4Exit: function(e, t, i) {
		i.unplug(e, t), i.displayStationaryFanribbons(e, t);
		var a = e.add.tween(this.boss).to({
			x: 950,
			y: -200
		}, 1400, Phaser.Easing.Linear.None).start();
		if (e.add.tween(this.eyes).to({
				x: 940,
				y: -250
			}, 1400, Phaser.Easing.Linear.None).start(), Util.isDefined(i.fanRibbons))
			for (var s = 0; s < i.fanRibbons.length; s++) i.fanRibbons[s].destroy();
		var r = function() {
			this.boss.visible = !1, this.eyes.visible = !1
		};
		a.onComplete.add(r.bind(this))
	},
	clearVines_D2: function(e, t, i) {
		if (this.zone.isOnSequence(4, 1)) {
			var a = e.prodigy.event.create();
			a.validPath(t.user, t.path, 1150, 550), a.fire(990, 415, 200, 300, 2, !0, !0), a.function(this.zone.util.shrinkVines.bind(this.zone.util, e, i)), a.function(this.element.highlight.bind(this.element, !1)), a.function(this.zone.completeSequence.bind(this.zone, 4, 1)), a.function(this.zone.setState.bind(this.zone, "vines-D2", "off")), a.set(this.zone.quests["4"], "area", ["skywatch-D3"]), a.enableInput(!0), a.function(i.addClickableEvent.bind(i, e, t, 925, 555, 90, 90, this.zone.util.interactTrolley.bind(this.zone.util, e, t, [{
				x: 1040,
				y: 600
			}, {
				x: 965,
				y: 600
			}], {
				trolley: i.trolley2,
				x: "0",
				y: "+300",
				duration: 3e3,
				target: "skywatch-D3",
				targetX: 300,
				targetY: 250
			}))), a.function(t.process.bind(t)), a.start()
		}
	},
	highlight_D2: function(e, t, i) {
		Util.isDefined(this.zone.getState("vines-D2")) || (this.element = e.prodigy.create.element(t.foreground, 1020, 500), this.element.highlight(!0), this.vineClick = i.addClickableEvent(e, t, 1e3, 410, 100, 260, this.clearVines_D2.bind(this, e, t, i), null))
	},
	clearVines_D1: function(e, t, i) {
		if (this.zone.isOnSequence(4, 0)) {
			var a = e.prodigy.event.create();
			a.validPath(t.user, t.path, 915, 440), a.enableInput(!1), a.fire(960, 330, 230, 185, 2, !0, !0), a.function(this.enableD1Trolley2.bind(this, e, i)), a.function(this.element.highlight.bind(this.element, !1)), a.function(this.zone.completeSequence.bind(this.zone, 4, 0)), a.function(this.zone.setState.bind(this.zone, "plug-B3", "off")), a.function(this.zone.setState.bind(this.zone, "plug-C4", "off")), a.function(this.zone.setState.bind(this.zone, "vines-D1", "off")), a.set(this.zone.quests["4"], "area", ["skywatch-D2"]), a.function(i.addClickableEvent.bind(i, e, t, 1080, 360, 80, 80, this.zone.util.interactTrolley.bind(this.zone.util, e, t, [{
				x: 1130,
				y: 450
			}, {
				x: 1120,
				y: 420
			}], {
				trolley: i.trolley2,
				x: "+200",
				y: "0",
				duration: 3e3,
				target: "skywatch-D2",
				targetX: 140,
				targetY: 290
			}), null, 0)), a.function(t.process.bind(t)), a.enableInput(!0), a.start()
		}
	},
	enableD1Trolley2: function(e, t) {
		this.zone.util.shrinkVines(e, t);
		var i = e.add.tween(t.trolley2).to({
			alpha: 1
		}, 3e3, Phaser.Easing.Linear.None);
		i.start()
	},
	highlight_D1: function(e, t, i) {
		this.element = e.prodigy.create.element(t.foreground, 1020, 390), this.element.highlight(!0), i.addClickableEvent(e, t, 950, 320, 260, 190, this.clearVines_D1.bind(this, e, t, i), null, 0)
	}
}), Prodigy.Skywatch_Q5 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 5, "", {
		type: "item",
		ID: 56,
		N: 3
	}, ["skywatch-B3", "skywatch-C3", "skywatch-D2"], [19, 20, 21, 22], [], [1], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q5, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q5,
	collectionMaps: {
		B3: [0],
		C3: [1],
		D2: [2]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		"B3" === a ? i.addCollect(e, t, 0, 900, 380, {
			type: "item",
			ID: 56
		}) : "C3" === a ? i.addCollect(e, t, 1, 260, 450, {
			type: "item",
			ID: 56
		}) : "D2" === a && i.addCollect(e, t, 2, 1150, 530, {
			type: "item",
			ID: 56
		})
	}
}), Prodigy.Skywatch_Q6 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 6, "Get the Key", {
		type: "seq",
		N: 1
	}, ["skywatch-D1"], [23, 24], [], [1], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q6, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q6,
	setup: function(e, t, i) {
		if (Prodigy.Quest.prototype.setup.call(this, e, t, i), "D1" === i.getTag() && this.zone.isOnSequence(6, 0)) {
			var a = {
				randDir: !1,
				encounter: [{
					ID: 120
				}]
			};
			this.ambusher1 = i.addMonster(e, t, 0, 560, -50, !1, a), this.ambusher2 = i.addMonster(e, t, 4, 500, -50, !1, a), this.ambusher3 = i.addMonster(e, t, 2, 830, -50, !1, a), this.ambusher4 = i.addMonster(e, t, 3, 870, -50, !1, a), this.ambusher1.visible = !1, this.ambusher2.visible = !1, this.ambusher3.visible = !1, this.ambusher4.visible = !1, this.addKeyClickable(e, t, i)
		}
	},
	addKeyClickable: function(e, t, i) {
		i.quest6_KeyElement = e.prodigy.create.element(t.content, 700, 190), i.quest6_KeyElement.highlight(!0), i.addClickableEvent(e, t, 700, 190, 80, 80, this.ambush.bind(this, e, t, i), null, 0)
	},
	ambush: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Defeat the Ambushers!", {
				pets: [{
					ID: 120
				}, {
					ID: 120
				}, {
					ID: 120
				}, {
					ID: 120
				}]
			}, this.endBattle.bind(this, e)),
			s = e.prodigy.event.create();
		s.validPath(t.user, t.path, 740, 350), s.reward([{
			type: "item",
			ID: 81
		}]), s.enableInput(!1), s.set(t.user, "evtProc", !0), s.function(this.zone.util.hideHex.bind(this, e, t)), s.set(this.ambusher1, "visible", !0), s.set(this.ambusher2, "visible", !0), s.set(this.ambusher3, "visible", !0), s.set(this.ambusher4, "visible", !0), s.path(this.ambusher1, [{
			x: 640,
			y: 350
		}], 1, !0), s.path(this.ambusher2, [{
			x: 690,
			y: 390
		}], 1, !0), s.path(this.ambusher3, [{
			x: 800,
			y: 390
		}], 1, !0), s.path(this.ambusher4, [{
			x: 730,
			y: 420
		}], 1), s.delay(1e3), s.enableInput(!0), s.function(a), s.start()
	},
	endBattle: function(e) {
		this.zone.completeSequence(6, 0), e.prodigy.world.teleport("skywatch-D1", 640, 360)
	}
}), Prodigy.Skywatch_Q7 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 7, "", {
		type: "item",
		ID: 49,
		N: 5
	}, ["skywatch-E1", "skywatch-E3"], [25], [], [1], [{
		type: "gold",
		N: 200
	}, {
		type: "key",
		ID: 9
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q7, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q7,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t);
		var a = {
				randDir: !0,
				encounter: [{
					ID: 120,
					drops: [{
						type: "item",
						ID: 49,
						R: .71
					}]
				}]
			},
			s = i.getTag();
		if (!this.zone.isQuestComplete(7) || !Util.isDefined(this.monsters)) return this.monsters = [], "E1" === s ? (this.monsters.push(i.addMonster(e, t, 1, 942, 400, !0, a, !1)), this.monsters.push(i.addMonster(e, t, 2, 400, 400, !0, a, !1))) : "E3" === s && this.monsters.push(i.addMonster(e, t, 0, 725, 480, !0, a, !1)), {
			enableMonsters: !1
		};
		for (var r = 0; r < this.monsters.length; r++) Util.isDefined(this.monsters[r]) && Util.isDefined(this.monsters[r].monsterData.drops) && delete this.monsters[r].monsterData.drops
	}
}), Prodigy.Skywatch_Q8 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 8, "Trim the Vines", {
		type: "seq",
		N: 1
	}, ["skywatch-B3"], [26, 27, 28], [], [1], [{
		type: "gold",
		N: 200
	}, {
		type: "outfit",
		ID: 5
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q8, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q8,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), this.zone.isOnSequence(8, 0) && "skywatch-B3" === i._zoneName && this.bossBattle(e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = function(e, t) {
			var a = t.content.add(e.prodigy.create.sprite(1045, -100, "boss-12", "water_cloud", !0)),
				s = t.foreground.add(e.prodigy.create.sprite(1035, -150, "boss-12", "med_face_1", !0)),
				r = function(e, t) {
					var a = function(e, t, i) {
							this.zone.completeSequence(8, 0), this.zone.setState("plug-B3", null), this.zone.setState("vines-B3", null), e.prodigy.world.teleport("skywatch-B3", t, i)
						},
						s = this.zone.util.getBattle(i, "Cloud Battle!", {
							boss: {
								ID: 12,
								level: 50,
								element: "water",
								attacks: [7, 8, 9, 10],
								name: "Rainy Storm",
								starBonus: 30,
								tag: "skywatch"
							}
						}, a.bind(this, e, t.user.x, t.user.y)),
						r = e.prodigy.event.create();
					r.enableInput(!1), r.delay(2e3), r.enableInput(!0), r.function(s), r.start()
				},
				n = function(e, t) {
					var i = e.prodigy.animation.translate(a, 1045, 200, 2e3, null, null, !0);
					e.prodigy.animation.translate(s, 1035, 150, 2e3, null, null, !0), i.onComplete.add(this.zone.util.changePosition.bind(this.zone.util, e, a, s)), i.onComplete.add(r.bind(this, e, t))
				},
				o = e.prodigy.event.create();
			o.validPath(t.user, t.path, 860, 270), o.validPath(t.user, t.path, 861, 270), o.enableInput(!1), o.fire(935, 45, 290, 290, 2, !1, !0), o.function(i.element.highlight.bind(i.element, !1)), o.function(this.zone.util.shrinkVines.bind(this.zone.util, e, i)), o.delay(3e3), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), o.function(n.bind(this, e, t)), o.start()
		};
		i.element = e.prodigy.create.element(t.foreground, 1020, 140), i.element.highlight(!0), i.addClickableEvent(e, t, 920, 20, 290, 260, a.bind(this, e, t), null, 0)
	}
}), Prodigy.Skywatch_Q9 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 9, "Trim the Vines", {
		type: "seq",
		N: 1
	}, ["skywatch-C4"], [29], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q9, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q9,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), this.zone.isOnSequence(9, 0) && "skywatch-C4" === i._zoneName && this.bossBattle(e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = function(e, t) {
			var a = t.content.add(e.prodigy.create.sprite(150, -100, "boss-12", "earth_cloud", !0)),
				s = t.foreground.add(e.prodigy.create.sprite(140, -150, "boss-12", "med_face_2", !0)),
				r = function(e, t) {
					var a = function(e, t, i) {
							this.zone.completeSequence(9, 0), this.zone.setState("plug-C4", null), this.zone.setState("vines-C4", null), e.prodigy.world.teleport("skywatch-C4", t, i)
						},
						s = this.zone.util.getBattle(i, "Cloud Battle!", {
							boss: {
								ID: 12,
								level: 50,
								element: "earth",
								attacks: [13, 14, 15, 16],
								name: "Sandy Storm",
								starBonus: 30,
								tag: "skywatch"
							}
						}, a.bind(this, e, t.user.x, t.user.y)),
						r = e.prodigy.event.create();
					r.enableInput(!1), r.delay(2e3), r.enableInput(!0), r.function(s), r.start()
				},
				n = function(e, t) {
					var i = e.add.tween(a).to({
						x: 150,
						y: 300
					}, 2e3, Phaser.Easing.Linear.None).start();
					e.add.tween(s).to({
						x: 140,
						y: 250
					}, 2e3, Phaser.Easing.Linear.None).start(), i.onComplete.add(this.zone.util.changePosition.bind(this.zone.util, e, a, s)), i.onComplete.add(r.bind(this, e, t))
				},
				o = e.prodigy.event.create();
			o.validPath(t.user, t.path, 220, 400), o.enableInput(!1), o.fire(115, 165, 290, 290, 2, !1, !0), o.function(i.element.highlight.bind(i.element, !1)), o.function(this.zone.util.shrinkVines.bind(this, e, i)), o.delay(3e3), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), o.function(n.bind(this, e, t)), o.start()
		};
		i.element = e.prodigy.create.element(t.foreground, 160, 220), i.element.highlight(!0), i.addClickableEvent(e, t, 90, 120, 270, 280, a.bind(this, e, t), null)
	}
}), Prodigy.Skywatch_Q10 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 10, "Trim the Vines", {
		type: "seq",
		N: 1
	}, ["skywatch-D3"], [30], [], [1, 46], [{
		type: "spell",
		ID: 26
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q10, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q10,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t), "skywatch-D3" === i._zoneName ? {
			enableMonsters: !1
		} : void 0
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), this.zone.isOnSequence(10, 0) && "skywatch-D3" === i._zoneName && this.bossBattle(e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = function(e, t) {
			var a = t.content.add(e.prodigy.create.sprite(850, -100, "boss-12", "ice_cloud", !0)),
				s = t.foreground.add(e.prodigy.create.sprite(840, -150, "boss-12", "med_face_0", !0)),
				r = function(e, t) {
					var a = function(e, t, i) {
							this.zone.completeSequence(10, 0), this.zone.setState("plug-D3", null), this.zone.setState("vines-D3", null), e.prodigy.world.teleport("skywatch-D3", t, i)
						},
						s = this.zone.util.getBattle(i, "Cloud Battle!", {
							boss: {
								ID: 12,
								level: 50,
								element: "ice",
								attacks: [19, 20, 21, 22],
								name: "Frosty Storm",
								starBonus: 30,
								tag: "skywatch"
							}
						}, a.bind(this, e, t.user.x, t.user.y)),
						r = e.prodigy.event.create();
					r.enableInput(!1), r.delay(2e3), r.enableInput(!0), r.function(s), r.start()
				},
				n = function(e, t) {
					var i = e.prodigy.animation.translate(a, 850, 200, 2e3, 0, null, !0);
					e.prodigy.animation.translate(s, 840, 150, 2e3, 0, null, !0), i.onComplete.add(this.zone.util.changePosition.bind(this.zone.util, e, a, s, 850, 200)), i.onComplete.add(r.bind(this, e, t))
				},
				o = e.prodigy.event.create();
			o.validPath(t.user, t.path, 580, 270), o.enableInput(!1), o.fire(655, 45, 290, 290, 2, !1, !0), o.function(i.element.highlight.bind(i.element, !1)), o.function(this.zone.util.shrinkVines.bind(this.zone.util, e, i)), o.delay(3e3), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), o.function(n.bind(this, e, t)), o.start()
		};
		i.element = e.prodigy.create.element(t.foreground, 740, 140), i.element.highlight(!0), i.addClickableEvent(e, t, 630, 30, 250, 250, a.bind(this, e, t), null, 0)
	}
}), Prodigy.Skywatch_Q11 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 11, "Find Eugene", {
		type: "seq",
		N: 2
	}, ["skywatch-E2"], [31, 32, 33], [], [1], [{
		type: "gold",
		N: 200
	}, {
		type: "hat",
		ID: 8
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q11, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q11,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t, i), "skywatch-E2" === i._zoneName ? (i.addConstructedNPC(e, t, 710, 415, "npc-sprite-eugene", null, "Eugene"), this.zone.isOnSequence(11, 0) ? this.monstersAmbushEugene(e, t, i) : this.zone.isOnSequence(11, 1) && this.rescuedEugene(e, t), {
			enableMonsters: !1
		}) : null
	},
	monstersAmbushEugene: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Save Eugene!", {
				pets: [{
					ID: 115
				}, {
					ID: 115
				}, {
					ID: 115
				}, {
					ID: 115
				}]
			}, this.endBattle.bind(this, e)),
			s = e.prodigy.event.create();
		i.addMonster(e, t, 1, 380, 380, !1, {
			encounter: [{
				ID: 115
			}]
		}), i.addMonster(e, t, 3, 520, 515, !1, {
			encounter: [{
				ID: 115
			}]
		});
		var r = i.addMonster(e, t, 2, 900, 380, !1, {
				encounter: [{
					ID: 115
				}]
			}),
			n = i.addMonster(e, t, 4, 750, 515, !1, {
				encounter: [{
					ID: 115
				}]
			});
		r.flip(), n.flip(), s.enableInput(!1), s.delay(500), s.enableInput(!0), s.text(0, "eugene"), s.text(), s.text(100, "noot"), s.enableInput(!1), s.set(t.user, "evtProc", !0), s.function(t.user.chat.bind(t.user, 1, 80)), s.delay(1e3), s.path(t.user, [{
			x: 635,
			y: 560
		}]), s.path(t.user, [{
			x: 640,
			y: 420
		}]), s.delay(500), s.enableInput(!0), s.function(a), s.start()
	},
	endBattle: function(e) {
		this.zone.completeSequence(11, 0), e.prodigy.world.teleport("skywatch-E2", 640, 420)
	},
	rescuedEugene: function(e, t) {
		var i = e.prodigy.event.create();
		i.text(1, "eugene"), i.text(2, "eugene"), i.text(3, "eugene"), i.text(4, "eugene"), i.text(5, "eugene"), i.text(6, "eugene"), i.function(this.zone.completeSequence.bind(this.zone, 11, 1)), i.function(t.process.bind(t)), i.start()
	}
}), Prodigy.Skywatch_Q12 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 12, "", {
		type: "item",
		ID: 82,
		N: 2
	}, ["skywatch-C3", "skywatch-D3"], [34, 35, 36], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "item",
		ID: 83
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q12, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q12,
	collectionMaps: {
		C3: [1],
		D3: [2]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		if ("C3" === a) i.addCollect(e, t, 1, 260, 450, {
			type: "item",
			ID: 82
		});
		else if ("D3" === a) return i.addCollect(e, t, 2, 640, 350, {
			type: "item",
			ID: 82
		}), {
			enableMonsters: !1
		}
	}
}), Prodigy.Skywatch_Q13 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 13, "Defeat the Boss", {
		type: "seq",
		N: 1
	}, ["skywatch-E4"], [37, 38], [], [39, 40, 41], [{
		type: "spell",
		ID: 27
	}, {
		type: "key",
		ID: 10
	}])
}, Prodigy.extends(Prodigy.Skywatch_Q13, Prodigy.Quest, {
	constructor: Prodigy.Skywatch_Q13,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), this.zone.isOnSequence(13, 0) && "skywatch-E4" === i._zoneName && this.bossBattle(e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = t.content.add(e.prodigy.create.sprite(1045, -100, "boss-12", "main_cloud", !0)),
			s = t.foreground.add(e.prodigy.create.sprite(1035, -150, "boss-12", "main_eyes_1", !0)),
			r = this.zone.util.getBattle(i, "Boss Battle!", {
				boss: {
					ID: 12,
					level: 60,
					element: "storm",
					attacks: [25, 26, 27, 28],
					name: "Stormy Storm",
					starBonus: 50,
					tag: "skywatch"
				},
				drops: [{
					type: "weapon",
					ID: 23
				}],
				difficulty: 7
			}, this.endBattle.bind(this, e, i)),
			n = function(e) {
				var t = e.prodigy.animation.translate(a, 800, 400, 2e3, 0, null, !0);
				e.prodigy.animation.translate(s, 790, 350, 2e3, 0, null, !0), t.onComplete.add(this.zone.util.changePosition.bind(this.zone.util, e, a, s, 800, 400))
			},
			o = e.prodigy.event.create();
		o.enableInput(!1), o.validPath(t.user, t.path, 399, 400), o.validPath(t.user, t.path, 400, 400), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.SKYWATCH, "wind"), o.function(n.bind(this, e, t)), o.delay(5e3), o.enableInput(!0), o.function(r), o.start()
	},
	endBattle: function(e) {
		this.zone.completeSequence(13, 0), this.zone.setState("eugene_A1", 1), e.prodigy.world.teleport("skywatch-E4")
	}
}), Prodigy.Bonfire_Spire = function(e) {
	Prodigy.Zone.call(this, e), this.util = new Prodigy.Bonfire_SpireUtil(e, this), this.name = "Bonfire Spire", this.ID = "bonfire_spire", this.battleBG = "bg-battle-volcano", this.onFaint = "bonfire_spire-B1", this.questHub = "bonfire_spire-B1", this.states = ["chest1", "chest2", "chest3", "chest4", "chest5", "chest6", "chestGuardian", "wizard1", "wizard2", "lever1", "lever2", "lever3", "turnip1", "turnip2", "minigametut"], this.monster = [7, 23, 27, 34, 37, 38, 39, 45, 48, 63, 75, 94];
	var t = ["tileset-bonfire", "tileset-cloud", "tileset-cloud-new", "tileset-volcano", "tileset-volcano-new", "tileset-generic", "npc-sprite-wizard", "tileset-town", "zone-bonfire", "tileset-collisions"];
	this.maps = {
		A1: new Prodigy.Bonfire_Spire_A1(this, t),
		A4: new Prodigy.Bonfire_Spire_A4(this, t),
		B1: new Prodigy.Bonfire_Spire_B1(this, t),
		B2: new Prodigy.Bonfire_Spire_B2(this, t),
		B4: new Prodigy.Bonfire_Spire_B4(this, t),
		B5: new Prodigy.Bonfire_Spire_B5(this, t),
		C1: new Prodigy.Bonfire_Spire_C1(this, t),
		C2: new Prodigy.Bonfire_Spire_C2(this, t),
		C3: new Prodigy.Bonfire_Spire_C3(this, t),
		C4: new Prodigy.Bonfire_Spire_C4(this, t),
		C6: new Prodigy.Bonfire_Spire_C6(this, t),
		D1: new Prodigy.Bonfire_Spire_D1(this, t),
		D2: new Prodigy.Bonfire_Spire_D2(this, t),
		D3: new Prodigy.Bonfire_Spire_D3(this, t),
		D4: new Prodigy.Bonfire_Spire_D4(this, t),
		D5: new Prodigy.Bonfire_Spire_D5(this, t),
		D6: new Prodigy.Bonfire_Spire_D6(this, t),
		E5: new Prodigy.Bonfire_Spire_E5(this, t),
		E6: new Prodigy.Bonfire_Spire_E6(this, t)
	}, this.quests = {
		1: new Prodigy.Bonfire_Spire_Q1(this, t),
		2: new Prodigy.Bonfire_Spire_Q2(this, t),
		3: new Prodigy.Bonfire_Spire_Q3(this, t),
		4: new Prodigy.Bonfire_Spire_Q4(this, t),
		5: new Prodigy.Bonfire_Spire_Q5(this, []),
		6: new Prodigy.Bonfire_Spire_Q6(this, []),
		7: new Prodigy.Bonfire_Spire_Q7(this, t),
		8: new Prodigy.Bonfire_Spire_Q8(this, t),
		9: new Prodigy.Bonfire_Spire_Q9(this, t),
		10: new Prodigy.Bonfire_Spire_Q10(this, t),
		11: new Prodigy.Bonfire_Spire_Q11(this, t),
		12: new Prodigy.Bonfire_Spire_Q12(this, t),
		13: new Prodigy.Bonfire_Spire_Q13(this, t),
		14: new Prodigy.Bonfire_Spire_Q14(this, [])
	}
}, Prodigy.extends(Prodigy.Bonfire_Spire, Prodigy.Zone, {
	constructor: Prodigy.Bonfire_Spire
}), Prodigy.Bonfire_SpireUtil = function(e, t) {
	Prodigy.ZoneUtil.call(this, e, t)
}, Prodigy.extends(Prodigy.Bonfire_SpireUtil, Prodigy.ZoneUtil, {
	constructor: Prodigy.Bonfire_SpireUtil,
	processLeverRequirements: function(e, t, i) {
		this.enableLeverElement(!1);
		for (var a, s = this._zone.getCurrentQuest(), r = 0; 3 > r; r++) {
			var n = this._zone.getState("lever" + (r + 1));
			if (Util.isDefined(i[r]) && i[r] !== n) {
				a = r + 1, Util.log("Required Lever: lever" + a);
				break
			}
		}
		var o, h = "Pull the Lever";
		switch (a) {
			case 1:
				o = ["bonfire_spire-D1"], this.highlightLever(e, t, "D1", 960, 203);
				break;
			case 2:
				o = ["bonfire_spire-C2"], this.highlightLever(e, t, "C2", 320, 80);
				break;
			case 3:
				o = ["bonfire_spire-D4"], this.highlightLever(e, t, "D4", 1080, 190);
				break;
			default:
				h = s.descCache, o = s.areaCache
		}
		var l = s.area;
		l !== o && (s.area = o, s.desc = h, Util.isDefined(this.toggle) && this.toggle && (this.toggle = !1, Util.log("Toggled"), e.process())), Util.log("Quest Target Area: " + s.area)
	},
	enableLeverElement: function(e) {
		Util.isDefined(this.leverGuideHand) && (this.leverGuideHand.visible = e)
	},
	highlightLever: function(e, t, i, a, s) {
		var r = t.getTag() === i;
		r && (this.leverGuideHand = Util.hilightObjectOnLayer(this._game, a, s, null, e.content), this.enableLeverElement(!0))
	},
	isLeverLocked: function(e) {
		return this._zone.getCurrentQuestID() > 14 ? !1 : 1 === this._zone.getState("lever" + (e + 1)) ? !0 : !1
	},
	toggleLever: function(e, t, i, a) {
		if (!this.isLeverLocked(t)) {
			var s = this._game.prodigy.event.create();
			s.validPath(e.user, e.path, a.x, a.y, !1);
			var r = function() {
				e.user.isFacingLeft() && e.user.flip()
			};
			s.function(r.bind(this));
			var n = function() {
				var e = 1 !== this._zone.getState("lever" + (t + 1)),
					a = e ? t + 1 : t;
				this._zone.setState("lever1", null), this._zone.setState("lever2", null), this._zone.setState("lever3", null);
				var s;
				for (s = 0; a > s; s++) {
					var r = "lever" + (s + 1);
					this._zone.setState(r, 1)
				}
				this.toggle = !0, this.skipFrame = !0, i.toggleDynamicLayer(this._game, 3, e), i.toggleDynamicLayer(this._game, 4, !e), e && Util.isDefined(this.leverGuideHand) && (this.leverGuideHand.visible = !1)
			};
			s.enableInput(!1), s.function(n.bind(this)), s.shake(0, 3e3, 10, "v"), s.enableInput(!0), s.function(e.process.bind(e)), s.start()
		}
	},
	processLeverQuest: function(e, t) {
		var i = this._zone.getState("lever" + t);
		1 === i && this._zone.isOnSequence(t, 0) && (this._zone.completeSequence(t, 0), e.process())
	},
	addBubble: function(e, t, i) {
		var a = e.content.add(this._game.prodigy.create.sprite(t, i, "zone-bonfire", "bubble_0"));
		a.anchor.setTo(.5, 1);
		var s = .7 * Math.random() + .2;
		a.scale.x = s, a.scale.y = s, a.animations.add("pop", ["bubble_0", "bubble_1", "bubble_2", "bubble_3", "bubble_4", "bubble_5", "bubble_6"], 5, !0, !1), a.animations.play("pop")
	},
	processLavaLayers: function(e) {
		var t = [this._zone.getState("lever1"), this._zone.getState("lever2"), this._zone.getState("lever3")];
		if (!Util.isNullOrUndefined(e.leverNumber)) {
			var i = !(1 === t[e.leverNumber - 1]),
				a = this._game.prodigy.player.backpack.hasItem("key", 12) > 0;
			this._zone.enableLayer(0, !i), this._zone.enableLayer(1, i && !a), this._zone.enableLayer(2, i)
		}
	}
}), Prodigy.Bonfire_Spire_A1 = function(e, t) {
	Prodigy.Map.call(this, e, "A1", "Volcano Entrance", 865, 482, ["bonfire_spire-B1"], t), this.leverNumber = 1
}, Prodigy.extends(Prodigy.Bonfire_Spire_A1, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_A1,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 995,
			y: 420,
			w: 120,
			h: 150,
			rect: !0
		}, "bonfire_spire-B1", 160, 307.5, null, AreaEvent.DOWN_RIGHT, !1), this.addClickableMoveEvent(e, t, 920, 322, 235, 235, 1052, 506), this.addChest(e, t, "chest1", 774, 308, [{
			type: "gold",
			N: 200
		}])
	}
}), Prodigy.Bonfire_Spire_A4 = function(e, t) {
	Prodigy.Map.call(this, e, "A4", "Pitfall Terrace", 1020, 400, ["bonfire_spire-B4"], t.concat("npc-sprite-worker-slime")), this.leverNumber = 3, this.wasInsideTriggerLastFrame = !1
}, Prodigy.extends(Prodigy.Bonfire_Spire_A4, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_A4,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), this.user = a.user, Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1080,
			y: 315,
			w: 200,
			h: 210,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-B4", 140, 200, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1186, 492), this.addChest(e, t, "chestGuardian", 742, 236, [{
			type: "key",
			ID: 12
		}], {
			type: "item",
			ID: 92
		}), this.toggleDynamicLayer(e, 6, !1)
	},
	update: function(e) {
		if (Util.isDefined(this.user)) {
			var t = Phaser.Math.distance(this.user.x, this.user.y, 100, 380) <= 80;
			t !== this.wasInsideTriggerLastFrame && this.toggleDynamicLayer(e, 6, t, 500), this.wasInsideTriggerLastFrame = t
		}
		Prodigy.Map.prototype.update.call(this, e)
	}
}), Prodigy.Bonfire_Spire_B1 = function(e, t) {
	Prodigy.Map.call(this, e, "B1", "Volcano Village", 160, 307, ["bonfire_spire-C1", "bonfire_spire-B2", "bonfire_spire-A1"], t.concat(["npc-sprite-slurpy", "npc-sprite-slime_queen", "npc-sprite-slime_guard", "npc-sprite-merchant"])), this.leverNumber = 1
}, Prodigy.extends(Prodigy.Bonfire_Spire_B1, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_B1,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1216,
			y: 240,
			w: 64,
			h: 260
		};
		if (this.addAreaEvent(e, t, {
				x: a.x + .5 * a.w,
				y: a.y + .5 * a.h,
				w: a.w,
				h: a.h,
				rect: !0
			}, "bonfire_spire-C1", 170, 417.5, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1265, 385), 1 === this._zone.getState("lever1")) {
			var s = {
				x: 126,
				y: 660,
				w: 145,
				h: 60
			};
			this.addAreaEvent(e, t, {
				x: s.x + .5 * s.w,
				y: s.y + .5 * s.h,
				w: s.w,
				h: s.h,
				rect: !0
			}, "bonfire_spire-B2", 180, 117.5, null, AreaEvent.DOWN, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 200, 700)
		}
		var r = {
			x: 0,
			y: 162,
			w: 96,
			h: 230
		};
		this.addAreaEvent(e, t, {
			x: r.x + .5 * r.w,
			y: r.y + .5 * r.h,
			w: r.w,
			h: r.h,
			rect: !0
		}, "bonfire_spire-A1", 865, 482, null, AreaEvent.UP_LEFT, !1), this.addClickableMoveEvent(e, t, r.x, r.y, r.w, r.h, 28, 255), this.questNPC = this.addQuestNPC(e, t, 750, 530, "slurpy", !1, this.onComplete.bind(this, e)), this.addHealStone(e, t, 1030, 500), t.createStoreNPC(360, 310, this.game.prodigy.stores.getStore(e.prodigy.stores.SHOPS.HOT_HOT_THREADS), !0), new Prodigy.Container.ToyMerchant(e, t.content, 1054, 275)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	onComplete: function(e) {
		var t = e.prodigy.event.create();
		t.text(0, "slurpy"), t.start()
	}
}), Prodigy.Bonfire_Spire_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Volcanic Cavern", 180, 117.5, ["bonfire_spire-B1", "bonfire_spire-C3", "bonfire_spire-B4"], t), this.leverNumber = 2
}, Prodigy.extends(Prodigy.Bonfire_Spire_B2, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_B2,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 126,
			y: 0,
			w: 145,
			h: 78
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-B1", 180, 532.5, null, AreaEvent.UP, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 200, 28);
		var s = {
			x: 1216,
			y: 190,
			w: 64,
			h: 180
		};
		if (this.addAreaEvent(e, t, {
				x: s.x + .5 * s.w,
				y: s.y + .5 * s.h,
				w: s.w,
				h: s.h,
				rect: !0
			}, "bonfire_spire-C3", 160, 417.5, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 1262, 282), 1 === this._zone.getState("lever2")) {
			var r = {
				x: 1048,
				y: 560,
				w: 145,
				h: 160
			};
			this.addAreaEvent(e, t, {
				x: r.x + .5 * r.w,
				y: r.y + .5 * r.h,
				w: r.w,
				h: r.h,
				rect: !0
			}, "bonfire_spire-B4", 1040, 117.5, null, AreaEvent.DOWN, !1), this.addClickableMoveEvent(e, t, r.x, r.y, r.w, r.h, 1120, 700)
		}
		var n = {
			randDir: !0,
			encounter: [{
				ID: 7
			}, {
				ID: 23
			}, {
				ID: 27
			}, {
				ID: 39
			}, {
				ID: 45
			}, {
				ID: 63
			}]
		};
		this.addMonster(e, t, 1, 600, 340, !1, n)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Bonfire_Spire_B4 = function(e, t) {
	Prodigy.Map.call(this, e, "B4", "Volcanic Junction", 1080, 117.5, ["bonfire_spire-A4", "bonfire_spire-B2", "bonfire_spire-C4", "bonfire_spire-B5"], t), this.leverNumber = 3
}, Prodigy.extends(Prodigy.Bonfire_Spire_B4, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_B4,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1080,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "bonfire_spire-B2", 1100, 509.5, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1250,
			y: 280,
			w: 80,
			h: 160,
			arrowOffsetY: -20,
			rect: !0
		}, "bonfire_spire-C4", 130, 360, null, AreaEvent.RIGHT, !1), 1 === this._zone.getState("lever3") && this.addAreaEvent(e, t, {
			x: 160,
			y: 675,
			w: 160,
			h: 90,
			rect: !0
		}, "bonfire_spire-B5", 160, 237.5, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 25,
			y: 180,
			w: 50,
			h: 160,
			rect: !0
		}, "bonfire_spire-A4", 1020, 400, null, AreaEvent.LEFT, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 34
			}, {
				ID: 48
			}, {
				ID: 75
			}]
		};
		this.addMonster(e, t, 1, 440, 230, !1, a), this.addMonster(e, t, 2, 820, 310, !1, a)
	}
}), Prodigy.Bonfire_Spire_B5 = function(e, t) {
	Prodigy.Map.call(this, e, "B5", "Red-Hot River", 150, 210, ["bonfire_spire-B4", "bonfire_spire-C6"], t)
}, Prodigy.extends(Prodigy.Bonfire_Spire_B5, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_B5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 80,
			y: 0,
			w: 160,
			h: 120
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-B4", 160, 527.5, null, AreaEvent.UP, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 160, 100);
		var s = {
			x: 1180,
			y: 390,
			w: 100,
			h: 180
		};
		this.addAreaEvent(e, t, {
			x: s.x + .5 * s.w,
			y: s.y + .5 * s.h,
			w: s.w,
			h: s.h,
			rect: !0
		}, "bonfire_spire-C6", 250, 400, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 1200, 480);
		var r = {
			randDir: !0,
			encounter: [{
				ID: 37
			}, {
				ID: 38
			}, {
				ID: 94
			}]
		};
		this.addMonster(e, t, 1, 740, 300, !1, r), this.addMonster(e, t, 2, 490, 210, !1, r), this.addChest(e, t, "chest4", 740, 520, [{
			type: "gold",
			N: 200
		}])
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Bonfire_Spire_C1 = function(e, t) {
	Prodigy.Map.call(this, e, "C1", "Firewatch Road", 180, 417.5, ["bonfire_spire-D1", "bonfire_spire-D2", "bonfire_spire-B1"], t.concat("npc-sprite-pippet")), this.leverNumber = 1
}, Prodigy.extends(Prodigy.Bonfire_Spire_C1, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_C1,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1184,
			y: 84,
			w: 96,
			h: 230
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-D1", 300, 360, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1256, 180);
		var s = {
			x: 1228,
			y: 515,
			w: 52,
			h: 205
		};
		this.addAreaEvent(e, t, {
			x: s.x + .5 * s.w,
			y: s.y + .5 * s.h,
			w: s.w,
			h: s.h,
			rect: !0
		}, "bonfire_spire-D2", 260, 382.5, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 1256, 602);
		var r = {
			x: 0,
			y: 315,
			w: 62,
			h: 200
		};
		this.addAreaEvent(e, t, {
			x: r.x + .5 * r.w,
			y: r.y + .5 * r.h,
			w: r.w,
			h: r.h,
			rect: !1
		}, "bonfire_spire-B1", 1120, 417.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, r.x, r.y, r.w, r.h, 22, 416), this.addPippet(e, t, 1, 490, 350);
		var n = {
			randDir: !0,
			encounter: [{
				ID: 7
			}, {
				ID: 23
			}, {
				ID: 39
			}, {
				ID: 63
			}]
		};
		this.addMonster(e, t, 1, 490, 350, !1, n), this.addMonster(e, t, 2, 880, 330, !1, n)
	}
}), Prodigy.Bonfire_Spire_C2 = function(e, t) {
	Prodigy.Map.call(this, e, "C2", "Palm Path", 1100, 597.5, ["bonfire_spire-C3"], t), this.leverNumber = 2
}, Prodigy.extends(Prodigy.Bonfire_Spire_C2, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_C2,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1008,
			y: 640,
			w: 145,
			h: 80
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C3", 1100, 200, null, AreaEvent.DOWN, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1080, 704), this.toggleDynamicLayer(e, 3, 1 === this._zone.getState("lever2")), this.toggleDynamicLayer(e, 4, 1 !== this._zone.getState("lever2")), this.addClickableEvent(e, t, 200, 120, 120, 100, this._zone.util.toggleLever.bind(this._zone.util, t, 1, this, {
			x: 260,
			y: 250
		}), null, 0)
	}
}), Prodigy.Bonfire_Spire_C3 = function(e, t) {
	Prodigy.Map.call(this, e, "C3", "Slime Shanty", 160, 417.5, ["bonfire_spire-C2", "bonfire_spire-D3", "bonfire_spire-B2"], t), this.leverNumber = 2
}, Prodigy.extends(Prodigy.Bonfire_Spire_C3, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_C3,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1045,
			y: 0,
			w: 145,
			h: 120
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C2", 1100, 597.5, null, AreaEvent.UP, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1120, 20);
		var s = {
			x: 1256,
			y: 440,
			w: 24,
			h: 158
		};
		this.addAreaEvent(e, t, {
			x: s.x + .5 * s.w,
			y: s.y + .5 * s.h,
			w: s.w,
			h: s.h,
			rect: !0
		}, "bonfire_spire-D3", 180, 377.5, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 1270, 520);
		var r = {
			x: 0,
			y: 312,
			w: 64,
			h: 210
		};
		this.addAreaEvent(e, t, {
			x: r.x + .5 * r.w,
			y: r.y + .5 * r.h,
			w: r.w,
			h: r.h,
			rect: !0
		}, "bonfire_spire-B2", 1120, 342.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, r.x, r.y, r.w, r.h, 22, 414);
		var n = {
			randDir: !0,
			encounter: [{
				ID: 23
			}, {
				ID: 27
			}, {
				ID: 39
			}, {
				ID: 45
			}, {
				ID: 63
			}]
		};
		this.addMonster(e, t, 2, 480, 350, !1, n)
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Bonfire_Spire_C4 = function(e, t) {
	Prodigy.Map.call(this, e, "C4", "Lava Pits", 110, 397.5, ["bonfire_spire-D4", "bonfire_spire-B4"], t), this.leverNumber = 3
}, Prodigy.extends(Prodigy.Bonfire_Spire_C4, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_C4,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1230,
			y: 330,
			w: 100,
			h: 280,
			rect: !0
		}, "bonfire_spire-D4", 220, 467.5, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 360,
			w: 80,
			h: 150,
			arrowOffsetY: -20,
			rect: !0
		}, "bonfire_spire-B4", 1150, 280, null, AreaEvent.LEFT, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 34
			}, {
				ID: 48
			}, {
				ID: 75
			}]
		};
		this._zone.isOnQuest(11) || (this.addMonster(e, t, 3, 520, 480, !1, a), this.addMonster(e, t, 4, 740, 170, !1, a))
	}
}), Prodigy.Bonfire_Spire_C6 = function(e, t) {
	Prodigy.Map.call(this, e, "C6", "Throne Room: Entrance", 250, 400, ["bonfire_spire-D5", "bonfire_spire-D6", "bonfire_spire-B5"], t.concat(["npc-sprite-cebollini", "npc-sprite-slime_guard"]))
}, Prodigy.extends(Prodigy.Bonfire_Spire_C6, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_C6,
	init: function(e, t, i, a) {
		var s = e.prodigy.player.backpack.hasItem("key", 12) > 0;
		return this._zone.enableLayer(1, !s), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1250,
			y: 510,
			w: 60,
			h: 300,
			rect: !0
		}, "bonfire_spire-D6", 350, 557.5, null, AreaEvent.RIGHT, !1);
		var a = {
			x: 0,
			y: 276,
			w: 200,
			h: 250,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-B5", 1120, 527.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 160, 380);
		var s = {
			x: 785,
			y: 116,
			w: 190,
			h: 190,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: s.x + .5 * s.w,
			y: s.y + .5 * s.h,
			w: s.w,
			h: s.h,
			rect: !0
		}, "bonfire_spire-D5", 180, 550, null, AreaEvent.UP, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 880, 305), this.addChest(e, t, "chest5", 400, 290, [{
			type: "weapon",
			ID: 21
		}])
	}
}), Prodigy.Bonfire_Spire_D1 = function(e, t) {
	Prodigy.Map.call(this, e, "D1", "Palm Terrace", 260, 382.5, ["bonfire_spire-C1"], t), this.leverNumber = 1
}, Prodigy.extends(Prodigy.Bonfire_Spire_D1, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D1,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 0,
			y: 242,
			w: 200,
			h: 235
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C1", 1120, 237.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 98, 420), this.toggleDynamicLayer(e, 3, 1 === this._zone.getState("lever1")), this.toggleDynamicLayer(e, 4, 1 !== this._zone.getState("lever1")), this.addClickableEvent(e, t, 840, 240, 120, 100, this._zone.util.toggleLever.bind(this._zone.util, t, 0, this, {
			x: 800,
			y: 300
		}), null, 0)
	}
}), Prodigy.Bonfire_Spire_D2 = function(e, t) {
	Prodigy.Map.call(this, e, "D2", "Volcanic Sanctum", 180, 292.5, ["bonfire_spire-C1"], t), this.leverNumber = 2
}, Prodigy.extends(Prodigy.Bonfire_Spire_D2, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D2,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 0,
			y: 125,
			w: 120,
			h: 235
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C1", 1145, 657.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 52, 280);
		var s = {
				opponent: [{
					data: {
						level: 60
					},
					appearance: {
						name: "Mary Fire",
						gender: "female",
						hair: {
							style: 1,
							color: 2
						},
						skinColor: 3,
						eyeColor: 4
					},
					equipment: {
						hat: 9,
						outfit: 10,
						weapon: 9
					}
				}],
				pets: [{
					ID: 7,
					level: 57
				}, {
					ID: 23,
					level: 58
				}, {
					ID: 63,
					level: 60
				}]
			},
			r = this.addWizard(e, t, 640, 360, "wizard1", s);
		r.flip(), this.addChest(e, t, "chest2", 732, 374, [{
			type: "hat",
			ID: 34
		}])
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Bonfire_Spire_D3 = function(e, t) {
	Prodigy.Map.call(this, e, "D3", "Molten Enclave", 180, 377.5, ["bonfire_spire-C3"], t), this.leverNumber = 2
}, Prodigy.extends(Prodigy.Bonfire_Spire_D3, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D3,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 0,
			y: 205,
			w: 120,
			h: 235
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C3", 1100, 515, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 52, 360);
		var s = {
				opponent: [{
					data: {
						level: 70
					},
					appearance: {
						name: "Blaze",
						gender: "male",
						hair: {
							style: 17,
							color: 3
						},
						skinColor: 4,
						eyeColor: 5
					},
					equipment: {
						hat: 11,
						outfit: 8,
						weapon: 22
					}
				}],
				pets: [{
					ID: 27,
					level: 57
				}, {
					ID: 45,
					level: 58
				}, {
					ID: 39,
					level: 60
				}]
			},
			r = this.addWizard(e, t, 740, 400, "wizard2", s);
		r.flip(), this.addChest(e, t, "chest3", 840, 415, [{
			type: "outfit",
			ID: 27
		}])
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	}
}), Prodigy.Bonfire_Spire_D4 = function(e, t) {
	Prodigy.Map.call(this, e, "D4", "Outer Slimeburbia", 220, 467.5, ["bonfire_spire-C4"], t.concat(["zone-lamplight"])), this.leverNumber = 3
}, Prodigy.extends(Prodigy.Bonfire_Spire_D4, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D4,
	init: function(e, t, i, a) {
		return this._zone.util.processLavaLayers(this), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 0,
			y: 316,
			w: 200,
			h: 210,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-C4", 1120, 367.5, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 102, 500), this.toggleDynamicLayer(e, 3, 1 === this._zone.getState("lever3")), this.toggleDynamicLayer(e, 4, 1 !== this._zone.getState("lever3")), this.addClickableEvent(e, t, 960, 260, 120, 80, this._zone.util.toggleLever.bind(this._zone.util, t, 2, this, {
			x: 920,
			y: 320
		}), null, 0)
	}
}), Prodigy.Bonfire_Spire_D5 = function(e, t) {
	Prodigy.Map.call(this, e, "D5", "Throne Room", 180, 550, ["bonfire_spire-E6", "bonfire_spire-C6"], t.concat(["npc-sprite-slurpy", "npc-sprite-slime_queen", "npc-sprite-slime_guard", "npc-sprite-cebollini", "npc-sprite-worker-slime"]))
}, Prodigy.extends(Prodigy.Bonfire_Spire_D5, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1080,
			y: 396,
			w: 200,
			h: 210,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-E6", 180, 547.5, null, AreaEvent.RIGHT, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1210, 580), this.addAreaEvent(e, t, {
			x: 65,
			y: 695,
			r: 160
		}, "bonfire_spire-C6", 900, 355, null, AreaEvent.DOWN_LEFT, !1);
		var s = this.addNPC(e, t, 570, 430, "npc-sprite-slime_guard", this.talkToGuard.bind(this, e), "Guard Slime");
		s.animate(), this.queen = this.addNPC(e, t, 645, 282, "npc-sprite-slime_queen", this.talkToQueen.bind(this, e), "Queen Goo-lia"), this.queen.animate(), this.addHealStone(e, t, 320, 400)
	},
	talkToGuard: function(e) {
		var t = e.prodigy.event.create();
		t.text(5, "slime_guard"), t.start()
	},
	talkToQueen: function(e) {
		var t = e.prodigy.event.create();
		t.text(10, "slime_queen"), t.text(), t.text(5, "slime_guard"), t.start()
	}
}), Prodigy.Bonfire_Spire_D6 = function(e, t) {
	Prodigy.Map.call(this, e, "D6", "Garden Getaway", 330, 510, ["bonfire_spire-C6"], t.concat(["zone-lamplight", "npc-sprite-cebollini"]))
}, Prodigy.extends(Prodigy.Bonfire_Spire_D6, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_D6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 70,
			y: 500,
			w: 140,
			h: 250,
			rect: !0
		}, "bonfire_spire-C6", 1080, 480, null, AreaEvent.LEFT, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 37
			}, {
				ID: 38
			}, {
				ID: 94
			}]
		};
		this.addMonster(e, t, 1, 430, 275, !1, a), this.addMonster(e, t, 2, 770, 500, !1, a)
	}
}), Prodigy.Bonfire_Spire_E5 = function(e, t) {
	Prodigy.Map.call(this, e, "E5", "Fiery Alcove", 115, 510, ["bonfire_spire-E6"], t.concat(["zone-lamplight"]))
}, Prodigy.extends(Prodigy.Bonfire_Spire_E5, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_E5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 160,
			y: 655,
			w: 160,
			h: 130,
			rect: !0
		}, "bonfire_spire-E6", 1160, 162.5, null, AreaEvent.DOWN, !1), this.addChest(e, t, "chest6", 800, 368, [{
			type: "gold",
			N: 200
		}])
	}
}), Prodigy.Bonfire_Spire_E6 = function(e, t) {
	Prodigy.Map.call(this, e, "E6", "Royal Kitchen", 180, 547.5, ["bonfire_spire-E5", "bonfire_spire-D5"], t.concat(["npc-sprite-cebollini"]))
}, Prodigy.extends(Prodigy.Bonfire_Spire_E6, Prodigy.Map, {
	constructor: Prodigy.Bonfire_Spire_E6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 1080,
			y: 0,
			w: 160,
			h: 130,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !0
		}, "bonfire_spire-E5", 120, 512.5, null, AreaEvent.UP, !1), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 1180, 120);
		var s = {
			x: 0,
			y: 415,
			w: 100,
			h: 170,
			rect: !0
		};
		this.addAreaEvent(e, t, {
			x: s.x + .5 * s.w,
			y: s.y + .5 * s.h,
			w: s.w,
			h: s.h,
			guideHandPathToX: 100,
			guideHandPathToY: 480,
			rect: !0
		}, "bonfire_spire-D5", 1020, 500, null, AreaEvent.LEFT, !1), this.addClickableMoveEvent(e, t, s.x, s.y, s.w, s.h, 100, 480);
		var r = {
			randDir: !0,
			encounter: [{
				ID: 37,
				R: 1
			}, {
				ID: 38,
				R: 1
			}, {
				ID: 94,
				R: 1
			}, {
				ID: 97,
				R: 57
			}]
		};
		this.addMonster(e, t, 1, 400, 430, !1, r), this.addMonster(e, t, 2, 980, 330, !1, r)
	}
}), Prodigy.Bonfire_Spire_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "Pull the Lever", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-D1"], [2, 3, 4, 5], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q1, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q1,
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i), this.zone.isQuestComplete(1) || (this.zone.util.processLeverRequirements(t, i, [1, null, null]), this.zone.util.processLeverQuest(t, 1))
	}
}), Prodigy.Bonfire_Spire_Q2 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 2, "Pull the Lever", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-C2"], [6, 7], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q2, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q2,
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i), this.zone.isQuestComplete(2) || (this.zone.util.processLeverRequirements(t, i, [1, 1, null]), this.zone.util.processLeverQuest(t, 2))
	}
}), Prodigy.Bonfire_Spire_Q3 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 3, "Pull the Lever", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-D4"], [8, 9], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "hat",
		ID: 65
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q3, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q3,
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i), this.zone.isQuestComplete(3) || (this.zone.util.processLeverRequirements(t, i, [1, 1, 1]), this.zone.util.processLeverQuest(t, 3))
	}
}), Prodigy.Bonfire_Spire_Q4 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 4, "", {
		type: "item",
		ID: 88,
		N: 1,
		K: !0
	}, ["bonfire_spire-C3"], [10, 11, 12], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q4, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q4,
	collectionMaps: {
		C3: [0]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i), "C3" === i.getTag() && i.addCollect(e, t, 0, 635, 340, {
			type: "item",
			ID: 88,
			showLoading: !1
		})
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	}
}), Prodigy.Bonfire_Spire_Q5 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat(["sfx-bonfire-spire-q5"]), 5, "Add Ingredient", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-E6"], [13, 14], [], [0, 1], [{
		type: "spell",
		ID: 1
	}]), this.potButtonIconOffsets = {
		x: -40,
		y: -200
	}
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q5, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q5,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t, i), "E6" !== i.getTag() || this.zone.isQuestComplete(5) ? void 0 : (this.food = t.foreground.add(e.prodigy.create.sprite(650, 180, "icon-item-88")), this.food.visible = !1, this.cebollini = i.addConstructedNPC(e, t, 580, 370, "npc-sprite-cebollini", null, "Cebollini"), this.cebollini2 = i.addConstructedNPC(e, t, this.cebollini.x, this.cebollini.y, "npc-sprite-cebollini", null, "Cebollini"), this.cebollini2.visible = !1, this.caught = !1, this.foodPlaced = !1, this.hover = !1, this.target = t.content.add(e.prodigy.create.sprite(740, 234, "zone-bonfire", "pot")), this.target.anchor.setTo(.5, 1), this.target.inputEnabled = !0, this.target.events.onInputDown.add(this.potClick.bind(this, e, t, i)), this.element = Util.hilightObjectOnLayer(e, 810, 130, null, t.content), i.toggleDynamicLayer(e, 5, !0), this.visionCone = t.background.add(e.prodigy.create.sprite(this.cebollini.x, this.cebollini.y - 25, "zone-bonfire", "visioncone")), this.visionCone.anchor.setTo(.5, .5), this.button = t.content.add(e.prodigy.create.sprite(t.user.x + this.potButtonIconOffsets.x, t.user.y + this.potButtonIconOffsets.y, "icons", "icon-base-active")), this.button.inputEnabled = !0, this.button.events.onInputDown.add(this.hideButtonClick.bind(this, e, t), this), this.button_icon = t.content.add(e.prodigy.create.sprite(t.user.x + this.potButtonIconOffsets.x, t.user.y + this.potButtonIconOffsets.y, "zone-bonfire", "cauldron-icon")), this.button.events.onInputOver.add(this.onOver, this), this.button.events.onInputOut.add(this.onOut, this), this.pot = t.content.add(e.prodigy.create.sprite(t.user.x, t.user.y, "zone-bonfire", "cauldron")), this.pot.anchor.setTo(.5, 1), this.pot.visible = !1, {
			enableMonsters: !1
		})
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "E6" !== i.getTag() || this.zone.isQuestComplete(5) || (this.tutorial(e), this.pathCebollini(e, t, i))
	},
	update: function(e, t, i) {
		if ("E6" === i.getTag())
			if (this.zone.isQuestComplete(5)) Util.isDefined(this.visionCone) && (this.visionCone.visible = !1, delete this.visionCone, Util.isDefined(this.button) && this.button.destroy(), Util.isDefined(this.button_icon) && this.button_icon.destroy());
			else {
				this.button.x = t.user.x + this.potButtonIconOffsets.x, this.button.y = t.user.y + this.potButtonIconOffsets.y, this.button_icon.y = this.hover === !0 ? t.user.y + this.potButtonIconOffsets.y + 13 - 3 : t.user.y + this.potButtonIconOffsets.y + 13, this.button_icon.x = t.user.x + this.potButtonIconOffsets.x + 13, this.caught ? this.visionCone.visible = !1 : (this.visionCone.visible = !0, this.visionCone.x = this.cebollini.x, this.visionCone.y = this.cebollini.y - 25), (this.pot.x !== t.user.x || this.pot.y !== t.user.y) && (this.pot.visible = !1, this.button.visible = !0, this.button_icon.visible = !0, t.user.visible = !0, this.pot.x = t.user.x, this.pot.y = t.user.y);
				var a = (t.user.x - (this.cebollini.x - 5)) * (t.user.x - (this.cebollini.x - 5)) + (t.user.y - (this.cebollini.y - 25)) * (t.user.y - (this.cebollini.y - 25));
				if (this.caught && (this.foodPlaced === !1 && (this.cebollini.visible = !1, this.cebollini2.visible === !1 && (this.cebollini2.scale.x = this.cebollini.scale.x, this.cebollini2.x = this.cebollini.x, this.cebollini2.y = this.cebollini.y, this.cebollini2.visible = !0)), this.visionCone.visible = !1), 22500 > a && !this.pot.visible) {
					var s = e.prodigy.event.create();
					this.caught || (this.caught = !0, this.foodPlaced || (s.enableInput(!1), s.validPath(t.user, t.path, t.user.x, t.user.y), s.enableInput(!0), s.text(0, "cebollini"), s.function(e.prodigy.world.teleport.bind(e.prodigy.world, "bonfire_spire-E6")))), s.start()
				}
			}
	},
	onOver: function() {
		this.hover = !0
	},
	onOut: function() {
		this.hover = !1
	},
	tutorial: function(e) {
		if (!Util.isDefined(this.zone.getState("minigametut"))) {
			this.zone.setState("minigametut", 1);
			var t = e.prodigy.event.create();
			t.text(112, "noot"), t.text(113, "noot"), t.text(114, "noot"), t.text(115, "noot"), t.text(116, "noot"), t.start()
		}
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	hideButtonClick: function(e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, t.user.x, t.user.y), i.delay(50), i.function(e.prodigy.audio.playSFX.bind(e.prodigy.audio, Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop")), i.set(this.pot, "visible", !0), i.set(t.user, "visible", !1), i.set(this.button, "visible", !1), i.set(this.button_icon, "visible", !1), i.start()
	},
	pathCebollini: function() {
		this.zone.util.patrol(this.cebollini, [{
			x: 920,
			y: 260
		}, {
			x: 680,
			y: 400
		}, {
			x: 930,
			y: 450
		}, {
			x: 790,
			y: 300
		}, {
			x: 720,
			y: 490
		}, {
			x: 640,
			y: 300
		}], .5)
	},
	potClick: function(e, t) {
		if (!this.foodPlaced) {
			var i = e.prodigy.event.create();
			i.validPath(t.user, t.path, 700, 240), i.enableInput(!1), i.set(this.food, "visible", !0), i.set(this, "foodPlaced", !0), i.set(this.button, "visible", !1), i.set(this.button_icon, "visible", !1), i.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, this.food, "50", "-200", "+100", 2e3, !0, !0)), i.function(this.element.destroy.bind(this.element)), i.delay(2350), i.sound(Prodigy.Controller.AudioController.SFX_PACKS.BONFIRE_SPIRE_Q5, "plop"), i.sound(Prodigy.Controller.AudioController.SFX_PACKS.BONFIRE_SPIRE_Q5, "cooking"), i.enableInput(!0), i.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 88, 1)), i.function(this.zone.completeSequence.bind(this.zone, 5, 0)), i.function(t.process.bind(t)), i.start()
		}
	}
}), Prodigy.Bonfire_Spire_Q6 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("sfx-bonfire-spire-q6-and-q14"), 6, "Attend Dinner", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-D5"], [15, 16], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q6, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q6,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "D5" === i.getTag() && this.zone.isOnSequence(6, 0) && this.cutscene(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	cutscene: function(e, t, i) {
		var a = t.foreground.add(e.prodigy.create.sprite(690, 250, "zone-bonfire", "food"));
		a.visible = !1;
		var s = i.addConstructedNPC(e, t, 720, 490, "npc-sprite-worker-slime-red", null, "Worker Slime"),
			r = i.addConstructedNPC(e, t, 500, 330, "npc-sprite-cebollini", null, "Cebollini", t.foreground),
			n = e.prodigy.event.create();
		n.text(0, "slime_guard"), n.function(i.queen.flip.bind(i.queen)), n.enableInput(!1), n.path(s, [{
			x: 730,
			y: 350
		}], 1, !0), n.delay(1e3), n.enableInput(!0), n.text(0, "slime_queen"), n.enableInput(!1), n.enableInput(!0), n.text(1, "cebollini"), n.enableInput(!1), n.set(a, "visible", !0), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, a, "-80", "-200", "+100", 2e3, !0, !0)), n.delay(2e3), n.sound(Prodigy.Controller.AudioController.SFX_PACKS.BONFIRE_SPIRE_Q6_AND_Q14, "eating"), n.delay(2e3), n.enableInput(!0), n.text(1, "slime_queen"), n.function(i.queen.flip.bind(i.queen)), n.text(2, "slime_queen"), n.enableInput(!1), n.set(a, "alpha", 1), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, a, "-90", "-50", "+150", 600, !0, !0)), n.delay(1e3), n.enableInput(!0), n.text(2, "cebollini"), n.text(), n.text(3, "slime_queen"), n.text(4, "slime_queen"), n.text(), n.text(3, "cebollini"), n.enableInput(!1), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+200", "-100", "+220", 1e3, !1, !0), !0), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+100", "-100", "+150", 1e3, !1, !0), !0), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+150", "-100", "+100", 1e3, !1, !0), !0), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+200", "-200", "+230", 1e3, !1, !0), !0), n.enableInput(!0), n.text(4, "cebollini"), n.enableInput(!1), n.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+60", "-100", "+200", 1e3, !0, !0), !0), n.enableInput(!0), n.text(103, "noot"), n.function(this.zone.completeSequence.bind(i._zone, 6, 0)), n.function(t.process.bind(t)), n.start()
	}
}), Prodigy.Bonfire_Spire_Q7 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 7, "", {
		type: "item",
		ID: 89,
		N: 3
	}, ["bonfire_spire-D1", "bonfire_spire-C2", "bonfire_spire-D4"], [17, 18, 19, 20, 21], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "outfit",
		ID: 56
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q7, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q7,
	collectionMaps: {
		D1: [0],
		C2: [1],
		D4: [2]
	},
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		"D1" === a ? i.addCollect(e, t, 0, 640, 480, {
			type: "item",
			ID: 89,
			showLoading: !1
		}, "D1") : "C2" === a ? i.addCollect(e, t, 1, 670, 265, {
			type: "item",
			ID: 89,
			showLoading: !1
		}, "C2") : "D4" === a && i.addCollect(e, t, 2, 640, 360, {
			type: "item",
			ID: 89,
			showLoading: !1
		}, "D4")
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	}
}), Prodigy.Bonfire_Spire_Q8 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 8, "Talk to Guards", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-C6"], [22, 23, 24], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q8, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q8,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "C6" === i.getTag() && this.zone.isOnSequence(8, 0) && this.cutscene(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	cutscene: function(e, t, i) {
		var a = e.prodigy.event.create(),
			s = i.addNPC(e, t, 430, 380, "npc-sprite-slime_guard", null, "Hank"),
			r = i.addNPC(e, t, 650, 520, "npc-sprite-slime_guard", null, "Mike");
		s.animate(), r.animate(), a.hop(s, 100, 0, 20, !1), a.hop(s, 100, 0, 20, !0), a.text(1, "slime_guard"), a.hop(r, 100, 0, 20, !1), a.hop(r, 100, 0, 20, !0), a.text(2, "slime_guard"), a.hop(s, 100, 0, 20, !1), a.hop(s, 100, 0, 20, !0), a.text(3, "slime_guard"), a.hop(r, 100, 0, 20, !1), a.hop(r, 100, 0, 20, !0), a.text(4, "slime_guard"), a.function(this.zone.completeSequence.bind(i._zone, 8, 0)), a.function(t.process.bind(t)), a.start()
	}
}), Prodigy.Bonfire_Spire_Q9 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 9, "Save Gatherers", {
		type: "item",
		ID: 90,
		N: 2
	}, ["bonfire_spire-A4"], [25, 26], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "item",
		ID: 91,
		N: 1
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q9, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q9,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i), this.npc = [], this.highlights = [];
		var a = {
			encounter: [{
				ID: 48
			}],
			ignorePathfindingForAlert: !0
		};
		if ("A4" === i.getTag()) {
			this.npc.push(i.addConstructedNPC(e, t, 885, 205, "npc-sprite-worker-slime", this.interactSlime.bind(this, e, t, 0), "Worker Slime"));
			var s = 70,
				r = -120;
			if (this.zone.getState("turnip1")) this.npc[0].radish.destroy(), this.npc[0].idle();
			else {
				this.highlights[0] = Util.hilightObjectOnLayer(e, s, r, this.npc[0], t.foreground);
				var n = i.addMonster(e, t, 3, 995, 190, !0, a);
				Util.isNullOrUndefined(n) || n.flip()
			}
			if (this.npc.push(i.addConstructedNPC(e, t, 370, 440, "npc-sprite-worker-slime", this.interactSlime.bind(this, e, t, 1), "Worker Slime")), this.zone.getState("turnip2")) this.npc[1].radish.destroy(), this.npc[1].idle();
			else {
				this.highlights[1] = Util.hilightObjectOnLayer(e, s, r, this.npc[1], t.content);
				var o = i.addMonster(e, t, 4, 480, 425, !0, a);
				Util.isNullOrUndefined(o) || o.flip()
			}
		}
	},
	start: function(e, t, i) {
		"A4" === i.getTag() && this.zone.isOnSequence(9, 0) && (this.zone.completeSequence(9, 0), this.cutscene(e, t))
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	cutscene: function(e) {
		var t = e.prodigy.event.create();
		t.text(0, "slime_worker"), t.start()
	},
	interactSlime: function(e, t, i) {
		if (!this.zone.getState(0 === i ? "turnip1" : "turnip2")) {
			var a = e.prodigy.event.create();
			a.validPath(t.user, t.path, this.npc[i].x + 80 + 1, this.npc[i].y), a.validPath(t.user, t.path, this.npc[i].x + 80, this.npc[i].y), a.function(this.zone.setState.bind(this.zone, 0 === i ? "turnip1" : "turnip2", 1)), a.text(1, "slime_worker"), a.function(this.highlights[i].destroy.bind(this.highlights[i])), a.function(this.npc[i].radish.destroy.bind(this.npc[i].radish)), a.function(this.npc[i].idle.bind(this.npc[i])), a.function(e.prodigy.open.gotItem.bind(e.prodigy.open, [{
				type: "item",
				ID: 90,
				N: 1
			}], t.process.bind(t))), a.start()
		}
	}
}), Prodigy.Bonfire_Spire_Q10 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 10, "Offer the Dish", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-C6"], [27, 28], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q10, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q10,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "C6" === i.getTag() && this.zone.isOnSequence(10, 0) && this.cutscene(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	cutscene: function(e, t, i) {
		var a = i.addConstructedNPC(e, t, 885, 340, "npc-sprite-cebollini", null, "Cebollini");
		a.visible = !1;
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.set(t.user, "evtProc", !0), s.validPath(t.user, t.path, 650, 420), s.enableInput(!0), s.text(5, "cebollini"), s.set(a, "visible", !0), s.text(6, "cebollini"), s.text(7, "cebollini"), s.enableInput(!1), s.validPath(a, t.path, 650, 420), s.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 91, 1)), s.path(a, [{
			x: 1280,
			y: 510
		}]), s.set(a, "visible", !1), s.enableInput(!0), s.text(104, "noot"), s.text(105, "noot"), s.text(106, "noot"), s.function(this.zone.completeSequence.bind(i._zone, 10, 0)), s.function(t.process.bind(t)), s.set(t.user, "evtProc", !1), s.start()
	}
}), Prodigy.Bonfire_Spire_Q11 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("npc-sprite-noot"), 11, "Find the Key", {
		type: "item",
		ID: 92,
		N: 1,
		K: 1
	}, ["bonfire_spire-C4"], [29, 30, 31, 32, 33, 34], [], [0, 1], [{
		type: "spell",
		ID: 2
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q11, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q11,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = {
				randDir: !0,
				encounter: [{
					ID: 75,
					drops: [{
						type: "item",
						ID: 92,
						R: .25
					}]
				}]
			},
			s = i.getTag();
		if ("C4" === s && !this.zone.isQuestComplete(11)) return i.addMonster(e, t, 1, 480, 480, !1, a, !0), i.addMonster(e, t, 2, 840, 240, !1, a, !0), {
			enableMonsters: !1
		};
		if ("A4" === s) {
			var r = function() {
					var t = e.prodigy.event.create();
					t.text(111, "noot"), t.start()
				},
				n = i.addChest(e, t, "chestGuardian", 742, 236, [{
					type: "key",
					ID: 12
				}], {
					type: "item",
					ID: 92
				});
			return n.sprite.events.onInputDown.removeAll(), n.sprite.events.onInputDown.add(r), {
				enableChests: !1
			}
		}
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	}
}), Prodigy.Bonfire_Spire_Q12 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 12, "Unlock the Chest", {
		type: "key",
		ID: 12,
		N: 1
	}, ["bonfire_spire-A4"], [35, 36, 37], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q12, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q12,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = i.getTag();
		return "A4" === a && this.zone.isOnQuest(12) ? (this.zone.isOnSequence(12, 0) ? (this.sprite = t.content.add(e.prodigy.create.sprite(800, 225, "tileset-core", "chest-B-1")), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.openTheChest.bind(this, e, t, i), this), this.sprite.anchor.setTo(.5, 1), this.chestElement = e.prodigy.create.element(t.foreground, 745, 135), Util.isDefined(this.chestElement) && (this.chestElement.highlight(!0), this.chestElement.visible = !0)) : this.zone.isOnSequence(12, 1) && i.addChest(e, t, "chestGuardian", 800, 225, [{
			type: "key",
			ID: 12
		}], {
			type: "item",
			ID: 92
		}), {
			enableChests: !1
		}) : void 0
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	openTheChest: function(e, t, i) {
		var a = {
			randDir: !1,
			encounter: [{
				ID: 65
			}]
		};
		this.guardian = i.addMonster(e, t, 0, 725, 250, !1, a), this.guardian.visible = !1, this.guardian.alpha = 0;
		var s = e.prodigy.event.create();
		s.validPath(t.user, t.path, 800, 250), s.enableInput(!1), s.set(t.user, "evtProc", !0);
		var r = function(e) {
			this.guardian.visible = !0, e.add.tween(this.guardian).to({
				alpha: 1
			}, 1e3, Phaser.Easing.Linear.None).start()
		};
		s.set(this.guardian, "alpha", 0), s.function(r.bind(this, e)), s.delay(2e3), s.enableInput(!0), s.function(this.fightTheGuardian.bind(this, e, i)), s.set(t.user, "evtProc", !1), s.start()
	},
	fightTheGuardian: function(e) {
		var t = {
			intro: "Defeat the Guardian!",
			"catch": !1,
			run: !1,
			screen: "bg-battle-volcano",
			pets: [{
				ID: 65,
				nickname: "Guardian"
			}]
		};
		e.prodigy.battle.start(t, null, this.defeatedTheGuardian.bind(this, e), null, this.zone.onFaint)
	},
	defeatedTheGuardian: function(e) {
		this.zone.completeSequence(12, 0), e.prodigy.world.teleport("bonfire_spire-A4", 800, 270)
	}
}), Prodigy.Bonfire_Spire_Q13 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 13, "Defeat the Chef!", {
		type: "seq",
		N: 2
	}, ["bonfire_spire-D6"], [38, 39, 40], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "weapon",
		ID: 81
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q13, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q13,
	setup: function(e, t, i) {
		return Prodigy.Quest.prototype.setup.call(this, e, t, i), "D6" === i.getTag() ? (this.boss = i.addConstructedNPC(e, t, 850, 400, "npc-sprite-cebollini", this.chatWithCebollini.bind(this, e), "Cebollini"), this.boss.flip(), {
			enableMonsters: !1
		}) : void 0
	},
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "D6" === i.getTag() && this.zone.isOnSequence(13, 0) ? this.bossBattle(e, t, i) : "D6" === i.getTag() && this.zone.isOnSequence(13, 1) && this.postBattle(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	bossBattle: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Boss Battle!", {
				boss: {
					ID: 13,
					level: 80,
					element: "fire",
					attacks: [1, 2, 3, 4, 5],
					name: "Cebollini",
					starBonus: 50,
					tag: "bonfire"
				},
				drops: [{
					type: "weapon",
					ID: 16
				}],
				difficulty: 7,
				events: [{
					action: "turn",
					value: 0,
					callback: function(e, t) {
						var i = e.prodigy.dialogue.create();
						i.setText(10), i.start("cebollini", !1, t)
					}
				}]
			}, this.endBattle.bind(this, e, i)),
			s = e.prodigy.event.create();
		s.enableInput(!1), s.validPath(t.user, t.path, 399, 400), s.validPath(t.user, t.path, 400, 400), s.enableInput(!0), s.text(8, "cebollini"), s.text(9, "cebollini"), s.function(a), s.start()
	},
	endBattle: function(e) {
		var t = e.prodigy.event.create();
		t.function(this.zone.completeSequence.bind(this.zone, 13, 0)), t.function(e.prodigy.world.teleport.bind(e.prodigy.world, "bonfire_spire-D6")), t.start()
	},
	postBattle: function(e, t) {
		var i = e.prodigy.event.create();
		i.text(13, "cebollini"), i.text(14, "cebollini"), i.text(), i.text(107, "noot"), i.text(), i.text(15, "cebollini"), i.function(this.zone.completeSequence.bind(this.zone, 13, 1)), i.function(t.process.bind(t)), i.start()
	},
	chatWithCebollini: function(e) {
		var t = e.prodigy.event.create();
		t.text(14, "cebollini"), t.text(15, "cebollini"), t.start()
	}
}), Prodigy.Bonfire_Spire_Q14 = function(e, t) {
	Prodigy.Quest.call(this, e, t.concat("sfx-bonfire-spire-q6-and-q14"), 14, "Talk to Queen", {
		type: "seq",
		N: 1
	}, ["bonfire_spire-D5"], [41, 42], [], [45, 46, 1, 47], [{
		type: "spell",
		ID: 3
	}, {
		type: "key",
		ID: 11
	}])
}, Prodigy.extends(Prodigy.Bonfire_Spire_Q14, Prodigy.Quest, {
	constructor: Prodigy.Bonfire_Spire_Q14,
	start: function(e, t, i) {
		Prodigy.Quest.prototype.start.call(this, e, t, i), "D5" === i.getTag() && this.zone.isOnSequence(14, 0) && this.cutscene(e, t, i)
	},
	process: function(e, t, i) {
		Prodigy.Quest.prototype.process.call(this, e, t, i)
	},
	cutscene: function(e, t, i) {
		var a = t.foreground.add(e.prodigy.create.sprite(690, 250, "zone-bonfire", "food"));
		a.visible = !1;
		var s = i.addConstructedNPC(e, t, 720, 490, "npc-sprite-worker-slime-red", null, "Worker Slime"),
			r = i.addNPC(e, t, 530, 310, "npc-sprite-slurpy", null, "Slurpy", t.foreground),
			n = i.addConstructedNPC(e, t, 835, 390, "npc-sprite-cebollini", null, "Cebollini");
		n.flip(), r.animate();
		var o = e.prodigy.event.create();
		o.text(108, "noot"), o.text(), o.text(5, "slime_queen"), o.text(), o.text(16, "cebollini"), o.text(), o.function(i.queen.flip.bind(i.queen)), o.text(6, "slime_queen"), o.enableInput(!1), o.path(s, [{
			x: 730,
			y: 350
		}], 1, !0), o.delay(1e3), o.set(a, "visible", !0), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, a, "-70", "-200", "+100", 2e3, !0, !0)), o.delay(2e3), o.sound(Prodigy.Controller.AudioController.SFX_PACKS.BONFIRE_SPIRE_Q6_AND_Q14, "eating"), o.delay(2e3), o.enableInput(!0), o.text(7, "slime_queen"), o.function(n.chat.bind(n, 1, 100)), o.function(i.queen.flip.bind(i.queen)), o.text(8, "slime_queen"), o.text(), o.text(43, "slurpy"), o.text(44, "slurpy"), o.enableInput(!1), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "+100", "-100", "+250", 1e3, !1, !0), !0), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "-100", "-100", "+200", 1e3, !1, !0), !0), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "-150", "-100", "+100", 1e3, !1, !0), !0), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "-120", "-150", "+150", 1e3, !1, !0), !0), o.animation(e.prodigy.animation.hop.bind(e.prodigy.animation, r, "-180", "-150", "+300", 1e3, !0, !0), !0), o.enableInput(!0), o.text(), o.function(i.queen.flip.bind(i.queen)), o.text(17, "cebollini"), o.text(18, "cebollini"), o.text(), o.text(9, "slime_queen"), o.text(), o.text(19, "cebollini"), o.function(this.zone.completeSequence.bind(i._zone, 14, 0)), o.function(t.process.bind(t)), o.start()
	}
}), Prodigy.Dyno = function(e) {
	Prodigy.Zone.call(this, e), this.store = {
		name: "Sky-High Values",
		items: [{
			ID: 41,
			type: "hat"
		}, {
			ID: 67,
			type: "weapon"
		}, {
			ID: 37,
			type: "outfit"
		}, {
			ID: 15,
			type: "pet"
		}, {
			ID: 35,
			type: "pet"
		}]
	}, this.name = "Dyno", this.ID = "dyno", this.bgm = "bgm-intro", this.battleBG = "bg-battle-dino", this.onFaint = "dyno-A0", this.questHub = "dyno-A0", this.states = ["daily"];
	var t = ["tileset-generic", "tileset-outsidesnow", "npc-sprite-wizard", "tileset-town", "zone-skywatch", "tileset-volcano"];
	this.maps = {
		A0: new Prodigy.Dyno_A0(this, t)
	}
}, Prodigy.extends(Prodigy.Dyno, Prodigy.Zone, {
	constructor: Prodigy.Dyno,
	placeDaily: function() {},
	getDailyMaps: function() {}
}), Prodigy.Dyno_A0 = function(e, t) {
	Prodigy.Map.call(this, e, "A0", "Dyno Dig Oasis", 280, 440, [], t.concat(["npc-sprite-scoog", "tileset-collisions"]))
}, Prodigy.extends(Prodigy.Dyno_A0, Prodigy.Map, {
	constructor: Prodigy.Dyno_A0,
	setup: function(e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), new Prodigy.Container.QuestNPC(e, t.content, 800, 450, Prodigy.Dyno.DATA, {
			name: "Professor Scoog",
			atlas: "scoog"
		}, null, !0), this.addClickableEvent(e, t, 295, 200, 50, 80, this.toMuseum.bind(this, e, t), null, 0), this.digBtn = e.prodigy.create.element(t.content, 975, 150);
		var i = this.digBtn.add(e.prodigy.create.sprite(40, 40, "icons", "star2"));
		i.anchor.setTo(.5, .5), i.inputEnabled = !0, i.angle = -20, i.events.onInputDown.add(this.toDynoDig, this), this.digBtn.add(e.prodigy.create.sprite(0, 10, "icon-key-1")), e.prodigy.create.font(this.digBtn, -20, 0, "Dyno Dig", {
			width: 120,
			size: 20,
			align: "center"
		}), e.add.tween(i).to({
			angle: 20
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0);
		var a = new Prodigy.Container.ToyMerchant(e, t.content, 160, 400);
		a.flip()
	},
	start: function(e, t) {
		Prodigy.Map.prototype.start.call(this, e, t)
	},
	toMuseum: function(e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 320, 300), i.set(e.state.states.Museum, "startX", 634), i.set(e.state.states.Museum, "startY", 560), i.function(e.prodigy.start.bind(e.prodigy, "Museum")), i.start()
	},
	toDynoDig: function() {
		this.game.prodigy.start("DinoDig", {}, {
			playerPosition: this.screen.user.position
		})
	}
}), Prodigy.Dyno.AUDIO = [{
	tag: "voice-9",
	s: 0,
	d: 3
}, {
	tag: "voice-9",
	s: 3,
	d: 2
}, {
	tag: "voice-9",
	s: 5,
	d: 2
}, {
	tag: "voice-9",
	s: 7,
	d: 2
}, {
	tag: "voice-9",
	s: 9,
	d: 2
}, {
	tag: "voice-9",
	s: 11,
	d: 3
}], Prodigy.Dyno.DATA = {
	ID: 6,
	tag: "dyno-A0",
	zoneName: "zone-dino",
	atlas: "zone-dino",
	fullName: "Dyno Dig Oasis",
	icon: "icon-fossil-1",
	battle: {
		screen: "bg-battle-dino",
		encounter: [{
			ID: 105
		}, {
			ID: 106
		}, {
			ID: 107
		}, {
			ID: 108
		}, {
			ID: 109
		}, {
			ID: 110
		}, {
			ID: 111
		}, {
			ID: 112
		}]
	},
	dialogue: [{
		text: "Ponduberous! You certainly are helpful, young chap!",
		face: 1,
		audio: Prodigy.Dyno.AUDIO[1],
		anim: 2
	}, {
		text: "Let's get to it, then! Ready to help OINC?",
		face: 0,
		audio: Prodigy.Dyno.AUDIO[3]
	}, {
		text: "Well now, what have we here? A young explorer in training, perhaps?",
		face: 2,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "Oh, but where are my manners? I, my young friend, am Professor Scoog...perhaps you've heard of me?",
		face: 1,
		audio: Prodigy.Dyno.AUDIO[0]
	}, {
		text: "...no?",
		face: 3
	}, {
		text: "Hm, well that's quite alright. I am the leader of the Oasis Institute of Natural Creatures! Or, OINC, for short.",
		face: 2,
		audio: Prodigy.Dyno.AUDIO[4],
		anim: 3
	}, {
		text: "Right now we're in the middle of a very important dig, and we sure could use your help!",
		face: 1
	}, {
		text: "First, let's see what you're made of! We've been overrun by Scallys the last few days...makes it hard to dig. Go challenge a few for me, will you?",
		face: 0
	}, {
		text: "You did it, young wizard! As a token of my gratitude, take this shovel!",
		face: 1,
		audio: Prodigy.Dyno.AUDIO[1],
		anim: 2
	}, {
		text: "The shovel will allow you to help us dig for fossils! To do so, just click the spinning star nearby!",
		face: 0,
		audio: Prodigy.Dyno.AUDIO[5]
	}, {
		text: "Now then, OINC has chosen this site for its greatest quest - the search for Dynos!",
		face: 1,
		anim: 2
	}, {
		text: "Dynos are monsters that are long extinct, and have left their fossilized remains here in the oasis.",
		face: 0
	}, {
		text: "We want to learn more about them, so we work hard to dig them up!",
		face: 0
	}, {
		text: "Now that you have a shovel, you can help! Try digging for a Terrosaur bone, or challenge some monsters who carry them.",
		face: 0
	}, {
		text: "While you were away, a monster came and STOLE MY HAT! Be a dear and go fetch it for me, will you?",
		anim: 1,
		face: 2,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "THAT'S IT! Ah, my lucky hat...though truth is, I do have quite a few lucky hats...",
		anim: 2,
		face: 1,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "...",
		face: 2
	}, {
		text: "WHAT!?!?!",
		face: 3
	}, {
		text: "YOU SAW A DYNO?!?! PONDUBEROUS!",
		face: 1,
		anim: 3,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "You know what? Keep the hat! Consider yourself an honorary member of OINC!",
		anim: 4,
		face: 1
	}, {
		text: "A real dyno! Oh my...we have much to do! First, we must ensure that these Dynos are safe!",
		face: 1,
		audio: Prodigy.Dyno.AUDIO[4]
	}, {
		text: "Defeat a few fire monsters for me...fire monsters in a dry forest are BAD NEWS!",
		face: 3
	}, {
		text: "Well now, I think it is time to find our new dyno friends! First, let's see if you can track down some Terromites! Let's see how they battle!",
		face: 1,
		anim: 4
	}, {
		text: "Oh, and bring back anything they might be carrying!",
		face: 0
	}, {
		text: "OH NO! This item you brought me is an animal tag...this can only mean one thing...",
		face: 3,
		anim: 1
	}, {
		text: "This animal tag proves that someone has been mistreating these Dynos...and only one man would do such a thing...",
		face: 2
	}, {
		text: "PROFESSOR MOOG!",
		face: 3,
		anim: 4
	}, {
		text: "Moog is a despicable dastardly deviant, who believes that monsters are meant to be kept in cages. Preposterous!",
		face: 3,
		anim: 1,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "We must help the Dynos! Go out there and remove all the tags you can find!",
		face: 2
	}, {
		text: "Good work! Here's a new shovel...it will help you dig faster when looking for fossils!",
		face: 0,
		anim: 4,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "We've slowed down Moog for now, but his men are probably out there right now, capturing these Dynos...",
		face: 3,
		anim: 1,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "I have an idea! Go find Moog's men, and challenge them. Perhaps one of them will have a written copy of Moog's evil scheme.",
		face: 1,
		anim: 4
	}, {
		text: "Moog is dastardly, but he isn't the sharpest tool in the shed...",
		face: 1
	}, {
		text: "According to this novel, Moog plans to capture the Dynos and put them in some kind of dyno theme park...",
		face: 2
	}, {
		text: "...",
		face: 3
	}, {
		text: "That's not very original at all.",
		face: 3,
		audio: Prodigy.Dyno.AUDIO[4]
	}, {
		text: "Regardless, we must stop him at all costs! Go out there and find his head assistant, Spokes. If you defeat him, maybe he and his men will leave.",
		face: 0,
		anim: 4
	}, {
		text: "It looks like Spokes and his men have left...for now. But they will be back, I assure you!",
		face: 0
	}, {
		text: "For now, we have other matters. A new dyno has been stealing equipment from the dig site...see if you can bring it back.",
		face: 2
	}, {
		text: "Ponduberous! That's 3 Dynos you've found now, alive and well! Oh, how I would love to study them in their natural habitat.",
		face: 1,
		anim: 2,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "Alas, the world of science must wait. With Moog still out there, the Dynos will never be safe.",
		face: 3
	}, {
		text: "According to his novel, he next plans to steal dyno eggs. The audacity!",
		face: 3,
		anim: 1,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "We must act quickly! Go out there, face his egg collectors, and bring back the eggs!",
		face: 0
	}, {
		text: "You're doing great work, my friend! We're stopping Moog at every turn!",
		face: 1,
		anim: 2,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "But all is not well in the natural world. Some pterrotell have been attacking anyone who comes near...perhaps something has them spooked?",
		face: 2
	}, {
		text: "Find and challenge them for me...perhaps the battle will sooth these Dynos.",
		face: 0
	}, {
		text: "OH NO! It looks like one of Moog's men have captured a team of Dynos!",
		face: 3,
		anim: 2,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "You'd better defeat him and release those poor Dynos!",
		face: 3,
		anim: 4
	}, {
		text: "Enough is enough! It's time to get rid of Moog once and for all!",
		face: 3,
		anim: 2,
		audio: Prodigy.Dyno.AUDIO[2]
	}, {
		text: "I have a theory about Dynos...I believe that a large group of Dynos is run by a single dyno, which I call the Primo Dyno.",
		face: 2
	}, {
		text: "This dyno would be big! And mean! And scary! Scary enough to frighten off Moog forever!",
		face: 1
	}, {
		text: "So, I say we track down this Primo Dyno! First, you'll need to find the nest. Defeat a few Dynos, and they should lead us there.",
		face: 0
	}, {
		text: "Good! I think we know where the nest is! No sign of the Primo Dyno, so we may have to lure it back somehow...",
		face: 2
	}, {
		text: "I know! The digging equipment! The loud noises must have disrupted the Dynos...that's why they were stealing it!",
		face: 1,
		anim: 4
	}, {
		text: "I'll turn on the equipment now...you may have to defeat a few larger Dynos before the Primo Dyno gets here...",
		face: 2,
		audio: Prodigy.Dyno.AUDIO[4]
	}, {
		text: "I hear something coming! It must be the Primo Dyno!",
		face: 3,
		anim: 4,
		audio: Prodigy.Dyno.AUDIO[4]
	}, {
		text: "...what's that on his back...?",
		face: 2
	}, {
		text: "No...IT CAN'T BE!",
		face: 3,
		anim: 4
	}, {
		text: "PROFESSOR MOOG!",
		face: 3,
		anim: 2
	}, {
		text: "You did it!",
		face: 1,
		anim: 4,
		audio: Prodigy.Dyno.AUDIO[1]
	}, {
		text: "It appears that Professor Moog wasn't riding the Primo Dyno after all...he was a captive himself! Oh, the irony!",
		face: 1
	}, {
		text: "Well my friend, I don't think Moog will be bothering these Dynos anymore, and we have you to thank!",
		face: 0
	}, {
		text: "Here, take this shovel - it's the strongest one we have! As a member of OINC, keep up the digging! Who knows what you might find!",
		face: 1,
		anim: 2,
		audio: Prodigy.Dyno.AUDIO[5]
	}],
	quests: [{
		coords: [110, 0],
		name: "Welcome to OINC",
		desc: "Scallys are causing problems for OINC, challenge a few of them to help out",
		start: [2, 3, 4, 5, 6, 7],
		during: [],
		complete: [8, 9],
		encounter: [{
			ID: 81
		}],
		req: [{
			type: "pet",
			ID: 81,
			N: 2
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 1
		}]
	}, {
		coords: [335, 0],
		name: "Can You Dig It?",
		desc: "The Professor wants you to bring him a Terrosaur bone",
		start: [10, 11, 12, 13],
		during: [],
		complete: [0],
		encounter: [{
			ID: 31
		}, {
			ID: 29
		}, {
			nickname: "Bone-carrying Luminite",
			ID: 20,
			drops: [{
				ID: 1,
				type: "fossil",
				R: 1
			}]
		}],
		req: [{
			type: "fossil",
			ID: 1,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 60],
		name: "Hats Off",
		desc: "Find the monster with the Professor's hat and defeat it",
		start: [14],
		during: [],
		mods: {
			"catch": !1
		},
		complete: [15, 16, 17, 18, 19],
		encounter: [{
			ID: 20,
			R: .4
		}, {
			ID: 29,
			R: .4
		}, {
			ID: 111,
			drops: [{
				ID: 61,
				type: "item",
				R: 1
			}],
			R: .2
		}],
		req: [{
			type: "item",
			ID: 61,
			N: 1
		}],
		reward: [{
			type: "hat",
			ID: 43
		}]
	}, {
		coords: [110, 110],
		name: "Getting Hot in Here",
		desc: "Defeat fire monsters to save the oasis from roasting",
		start: [20, 21],
		during: [],
		complete: [0],
		encounter: [{
			ID: 27,
			R: .5
		}, {
			ID: 38,
			R: .5
		}],
		req: [{
			type: "pet",
			ID: 27,
			N: 2
		}, {
			type: "pet",
			ID: 38,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 75],
		name: "Learning Experience",
		desc: "Find and defeat Terromites to learn about their behaviour",
		start: [22, 23],
		during: [],
		complete: [0, 24],
		encounter: [{
			ID: 111,
			R: .5,
			drops: [{
				ID: 60,
				type: "item",
				R: .25
			}]
		}],
		req: [{
			type: "pet",
			ID: 111,
			N: 4
		}, {
			type: "item",
			ID: 60,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 225],
		name: "TAG! You're it!",
		desc: "Collect tags from Dynos",
		start: [25, 26, 27, 28],
		during: [],
		complete: [29],
		encounter: [{
			ID: 35,
			R: .25
		}, {
			ID: 52,
			R: .25
		}, {
			ID: 111,
			R: .25,
			drops: [{
				ID: 60,
				type: "item",
				R: 1
			}]
		}, {
			ID: 105,
			R: .25,
			drops: [{
				ID: 60,
				type: "item",
				R: 1
			}]
		}],
		req: [{
			type: "item",
			ID: 60,
			N: 6
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 2
		}]
	}, {
		coords: [110, 300],
		name: "Moog's Evil Scheme - A Novel",
		desc: "Track down Moog's men and take a copy of his evil scheme",
		start: [30, 31, 32],
		during: [],
		complete: [0],
		encounter: [{
			nickname: "Moog's Assistant",
			ID: 70,
			R: .5,
			drops: [{
				ID: 62,
				type: "item",
				R: .2
			}]
		}, {
			ID: 55,
			R: .25
		}, {
			ID: 52,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 62,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 300],
		name: "Spoke Too Soon",
		desc: "Find and defeat Moog's head assistant, Spokes",
		start: [33, 34, 35, 36],
		during: [],
		complete: [0],
		encounter: [{
			ID: 71,
			R: .1,
			nickname: "Assistant Spokes"
		}, {
			ID: 105,
			R: .6
		}, {
			ID: 92,
			R: .3
		}],
		req: [{
			type: "pet",
			ID: 71,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 240],
		name: "Crabwalking",
		desc: "Find the Dynos that are stealing equipment from Scoog",
		start: [37, 38],
		during: [],
		complete: [0],
		encounter: [{
			ID: 107,
			R: .5,
			drops: [{
				ID: 63,
				type: "item",
				R: 1
			}]
		}, {
			ID: 32,
			R: .25
		}, {
			ID: 19,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 63,
			N: 6
		}],
		reward: [{
			type: "gold",
			N: 600
		}]
	}, {
		coords: [110, 190],
		name: "Egg Hunt",
		desc: "Collect the eggs from Moog's egg collectors",
		start: [39, 40, 41, 42],
		during: [],
		complete: [0],
		encounter: [{
			ID: 75,
			nickname: "Egg Collector",
			R: .5,
			drops: [{
				ID: 64,
				type: "item",
				R: .5
			}]
		}, {
			ID: 105,
			R: .25
		}, {
			ID: 107,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 64,
			N: 5
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 150],
		name: "The Ptrouble with Pterrotells",
		desc: "Defeat pterrotells for Moog, and discover what has them so cranky",
		start: [43, 44, 45],
		during: [],
		complete: [0],
		encounter: [{
			ID: 109,
			R: .25
		}, {
			ID: 13,
			R: .25
		}, {
			ID: 18,
			R: .25
		}, {
			ID: 40,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 109,
			N: 4
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 190],
		name: "Dyno Force Four",
		desc: "Defeat Moog's henchman and his Dynos!",
		start: [46, 47],
		during: [],
		complete: [0],
		pets: [{
			ID: 91,
			nickname: "Moog's Henchman"
		}, {
			ID: 110,
			nickname: "Rocksy"
		}, {
			ID: 106,
			nickname: "Stampsy"
		}, {
			ID: 108,
			nickname: "Crabbsy"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "outfit",
			ID: 40
		}]
	}, {
		coords: [335, 110],
		name: "Nesting Grounds",
		desc: "Defeat different Dynos, and follow them to the nest",
		start: [48, 49, 50, 51],
		during: [],
		complete: [0],
		encounter: [{
			ID: 105,
			R: .25
		}, {
			ID: 107,
			R: .25
		}, {
			ID: 109,
			R: .25
		}, {
			ID: 111,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 105,
			N: 3
		}, {
			type: "pet",
			ID: 107,
			N: 3
		}, {
			type: "pet",
			ID: 109,
			N: 3
		}, {
			type: "pet",
			ID: 111,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 75],
		name: "The Bigger They Are...",
		desc: "Defeat the incoming Dynos!",
		start: [52, 53, 54],
		during: [],
		complete: [0],
		encounter: [{
			ID: 110,
			R: .1
		}, {
			ID: 106,
			R: .2
		}, {
			ID: 109,
			R: .3
		}, {
			ID: 111,
			R: .4
		}],
		req: [{
			type: "pet",
			ID: 110,
			N: 2
		}, {
			type: "pet",
			ID: 106,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 225],
		name: "Prehistoric Panic",
		desc: "It's Professor Moog and the Primo Dyno! Defeat them!",
		start: [55, 16, 56, 57],
		during: [58],
		complete: [59, 60, 61, 62],
		boss: {
			ID: 8,
			element: "wizard",
			attacks: [3, 4, 9, 11, 18, 16, 34, 33],
			name: "Primo and Moog"
		},
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 3
		}]
	}]
};
var Museum = function() {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA, ["zone-museum"]), this.area = [
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
			[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0],
			[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0],
			[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0],
			[0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0],
			[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
		], this.noSoundButton = !0, this.startX = 640, this.startY = 545
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function() {
		WalkableScreen.prototype.create.call(this, "dino-1"), Util.isDefined(this._screenData) && Util.isDefined(this._screenData.playerPosition) && (this.user.x = Math.floor(this._screenData.playerPosition.x), this.user.y = Math.floor(this._screenData.playerPosition.y))
	}, e.prototype.screenSetup = function() {
		WalkableScreen.prototype.screenSetup.call(this);
		var e = this.content.add(this.game.prodigy.create.sprite(196, 522, "zone-museum", "rail"));
		e.anchor.setTo(0, 1), e = this.content.add(this.game.prodigy.create.sprite(1084, 522, "zone-museum", "rail")), e.anchor.setTo(0, 1), e.scale.x = -1, this.path.addCallback(3, this.toDino.bind(this), !0);
		var t = this.game.prodigy.dialogue.create();
		DinoDig.getNewFossils(this.game.prodigy.player.backpack).length > 0 && t.setText({
			text: "Welcome to the Museum! Be sure to bring all your newly-discovered fossils.",
			face: 0
		});
		for (var i = [{
				ID: 13,
				x: 916,
				y: 506,
				nx: 949,
				ny: 490
			}, {
				ID: 14,
				x: 362,
				y: 511,
				nx: 331,
				ny: 490
			}, {
				ID: 15,
				x: 1192,
				y: 707,
				nx: 1216,
				ny: 690
			}, {
				ID: 16,
				x: 85,
				y: 688,
				nx: 65,
				ny: 690
			}, {
				ID: 17,
				x: 290,
				y: 145
			}, {
				ID: 18,
				x: 390,
				y: 145
			}, {
				ID: 19,
				x: 490,
				y: 145
			}, {
				ID: 20,
				x: 590,
				y: 145
			}, {
				ID: 21,
				x: 690,
				y: 145
			}, {
				ID: 22,
				x: 790,
				y: 145
			}, {
				ID: 23,
				x: 890,
				y: 145
			}, {
				ID: 24,
				x: 990,
				y: 145
			}], a = 0; a < i.length; a++) {
			var s = i[a];
			s.full = this.game.prodigy.create.element(this.content, s.x, s.y), s.empty = this.game.prodigy.create.element(this.content, s.nx || s.x, s.ny || s.y), this.processFossil(s) || this.game.prodigy.player.backpack.canCraft("fossil", s.ID) && (t.setText({
				text: "Ponduberous! You collected enough fossils to create the " + Items.getItemData("fossil", s.ID).name + "! \nLet's see what it looks like!",
				face: 1,
				audio: Prodigy.Dyno.AUDIO[1]
			}), t.setText({
				callback: this.unlockFossil.bind(this, s)
			}), t.setText({
				text: "WOW! That looks great!",
				face: 1,
				anim: 2
			}))
		}
		t.setText({
			callback: this.checkRewards.bind(this)
		}), t.start("scoog")
	}, e.prototype.checkRewards = function() {
		for (var e = !0, t = 13; 24 >= t; t++) this.game.prodigy.player.backpack.hasItem("fossil", t) || (e = !1);
		if (e) {
			var i = [];
			if (this.game.prodigy.player.backpack.hasItem("outfit", 39) || i.push({
					type: "outfit",
					ID: 39
				}), this.game.prodigy.player.backpack.hasItem("hat", 44) || i.push({
					type: "hat",
					ID: 44
				}), i.length > 0) {
				var a = this.game.prodigy.dialogue.create();
				a.setText({
					text: "Ponduberous! You collected all the fossils and completed all the skeletons! Take this as a reward!",
					face: 1,
					audio: Prodigy.Dyno.AUDIO[1]
				}), a.setText({
					callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, i, null, null, "museum")
				}), a.start("scoog")
			}
		}
	}, e.prototype.unlockFossil = function(e) {
		this.game.prodigy.player.backpack.craft("fossil", e.ID), this.processFossil(e, !0)
	}, e.prototype.processFossil = function(e, t) {
		var i = null;
		if (this.game.prodigy.player.backpack.hasItem("fossil", e.ID)) return e.type = "fossil", e.full.removeAll(!0), e.ID < 17 ? (i = e.full.add(this.game.prodigy.create.sprite(0, 0, "zone-museum", e.ID + "")), i.x = -i.width / 2, i.y = -i.height) : i = e.full.add(this.game.prodigy.icon.createFromData(e, 0, 0, {
			x: .5,
			y: 1
		})), e.full.visible = !0, e.empty.visible = !1, t && this.game.add.tween(e.full.scale).to({
			x: 1.2,
			y: 1.2
		}, 500, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 500, Phaser.Easing.Quadratic.In).start(), !0;
		e.empty.removeAll(!0), i = e.empty.add(this.game.prodigy.create.sprite(0, 0, "zone-museum", "empty")), i.x = -i.width / 2, i.y = -i.height;
		var a = Items.getItemData("fossil", e.ID).recipe[0],
			s = this.game.prodigy.player.backpack.hasItem(a.type, a.ID);
		return this.game.prodigy.create.font(e.empty, i.x - 50, i.y + 27, s + "/" + a.N, {
			width: 180,
			align: "center"
		}), e.empty.visible = !0, e.full.visible = !1, !1
	}, e.prototype.toDino = function() {
		this.game.prodigy.world.teleport("dyno-A0")
	}, e
}();
Museum.DATA = {
	tag: "Museum",
	zoneName: "zone-museum",
	atlas: "zone-museum",
	fullName: "Museum"
};
var Arena = function() {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA, ["zone-arena", "npc-sprite-clankboot", "tileset-core", "npc-sprite-gnome"]), this.area = [
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
		], this.noSnow = !0, this.startX = 640, this.startY = 500
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function() {
		WalkableScreen.prototype.create.call(this, "town-2"), Util.isDefined(this._screenData) && Util.isDefined(this._screenData.playerPosition) && (this.user.x = Math.floor(this._screenData.playerPosition.x), this.user.y = Math.floor(this._screenData.playerPosition.y))
	}, e.prototype.screenSetup = function() {
		this.noFade = !0, new Prodigy.Container.QuestNPC(this.game, this.content, 310, 400, null, {
			name: "Clankboot",
			atlas: "clankboot"
		}, this.openArena.bind(this), !0), this.path.addCallback(3, this.toTown.bind(this), !0);
		var e = this.game.prodigy.create.sprite(216, 574, this.screenName, "vase");
		e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(1064, 574, this.screenName, "vase"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), e = this.game.prodigy.create.sprite(311, 515, this.screenName, "vase2"), e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(969, 515, this.screenName, "vase2"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), e = this.game.prodigy.create.sprite(519, 468, this.screenName, "vase3"), e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(761, 468, this.screenName, "vase3"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), new Prodigy.Event.HealStone(this.game, this.content, this.user, this.path, 165, 390), new GnomeEvent(this.game, this.content, this.user, this.path, 944, 376, "Arena Caller", 1, 2, this.openArenaMenu.bind(this)).flip(), new GnomeEvent(this.game, this.content, this.user, this.path, 1135, 430, "Arena Merchant", 2, 4, this.openStore.bind(this)).flip(), WalkableScreen.prototype.screenSetup.call(this)
	}, e.prototype.openStore = function() {
		var e = this.game.prodigy.event.create(),
			t = this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.ARENA_REWARDS);
		t.callback = this.game.prodigy.player.getArenaRank.bind(this.game.prodigy.player), e.yesNoText(14, "merchant"), e.function(this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, t, "arena")), e.start()
	}, e.prototype.openArenaMenu = function() {
		var e = this.game.prodigy.event.create();
		Util.isDefined(this.game.prodigy.player.world) ? (e.yesNoText(15, "merchant"), e.function(this.game.prodigy.open.social.bind(this.game.prodigy.open, 1))) : e.text(16, "merchant"), e.start()
	}, e.prototype.openArena = function() {
		this.game.state.states.Arena.startX = this.user.position.x, this.game.state.states.Arena.startY = this.user.position.y;
		var t = e.DATA.dialogue[0];
		t.yes = this.game.prodigy.open.arena.bind(this.game.prodigy.open);
		var i = this.game.prodigy.dialogue.create();
		i.setText(t), i.start("clankboot")
	}, e.prototype.toTown = function() {
		this.game.state.states.Arena.startX = 640, this.game.state.states.Arena.startY = 500, this.game.prodigy.world.teleport("lamplight-C3", 580, 360)
	}, e
}();
Arena.AUDIO = [{
	tag: "voice-3",
	s: 0,
	d: 1
}], Arena.DATA = {
	tag: "Arena",
	zoneName: "zone-arena",
	atlas: "zone-arena",
	fullName: "Coliseum",
	battle: {
		screen: "bg-battle-arena"
	},
	dialogue: [{
		text: "Do you want to train in the arena?",
		face: 0,
		anim: 4,
		audio: Arena.AUDIO[0]
	}]
}, Prodigy.Lamplight = function(e) {
	Prodigy.Zone.call(this, e), this.store = null, this.monsters = {
		randDir: !0,
		encounter: [{
			ID: 59
		}, {
			ID: 52
		}, {
			ID: 36
		}]
	}, this.util = new Prodigy.LamplightUtil(e, this), this.name = "Lamplight", this.ID = "lamplight", this.game = e, this.bgm = "bgm-lamplight", this.minLevel = 1, this.maxLevel = 4, this.battleBG = "bg-battle-arena", this.onFaint = "lamplight-B3", this.questHub = "lamplight-B3", this.states = ["event", "1stpresent", "bounty", "daily", "firstPotion"];
	var t = ["tileset-generic-new", "tileset-town-new", "tileset-forest-new", "tileset-collisions", "npc-sprite-gnome", "zone-lamplight", "bgm-lamplight", "sfx-lamplight"];
	this.maps = {
		A2: new Prodigy.Lamplight_A2(this, t),
		A3: new Prodigy.Lamplight_A3(this, t),
		A4: new Prodigy.Lamplight_A4(this, t),
		B0: new Prodigy.Lamplight_B0(this, t),
		B1: new Prodigy.Lamplight_B1(this, t),
		B2: new Prodigy.Lamplight_B2(this, t),
		B3: new Prodigy.Lamplight_B3(this, t),
		B4: new Prodigy.Lamplight_B4(this, t),
		B5: new Prodigy.Lamplight_B5(this, t),
		C2: new Prodigy.Lamplight_C2(this, t),
		C3: new Prodigy.Lamplight_C3(this, t),
		C4: new Prodigy.Lamplight_C4(this, t)
	}, this.quests = {
		1: new Prodigy.Lamplight_Q1(this, t),
		2: new Prodigy.Lamplight_Q2(this, t)
	}, this.scenes = {
		pets: new Prodigy.Lamplight_Pets(this, t),
		townSquare: new Prodigy.Lamplight_Town_Square(this, t),
		store1: new Prodigy.Lamplight_Store_Pt1(this, t),
		store1_A3: new Prodigy.Lamplight_Store_Pt1_A3(this, t),
		store2: new Prodigy.Lamplight_Store_Pt2(this, t),
		store2_A3: new Prodigy.Lamplight_Store_Pt2_A3(this, t),
		anotherMonster: new Prodigy.Lamplight_Another_Monster(this, t),
		boss: new Prodigy.Lamplight_Boss(this, t),
		end: new Prodigy.Lamplight_End(this, t)
	}
}, Prodigy.extends(Prodigy.Lamplight, Prodigy.Zone, {
	constructor: Prodigy.Lamplight,
	placeDaily: function() {},
	placeAllDailies: function() {},
	init: function(e, t, i) {
		Prodigy.Zone.prototype.init.call(this, e, t, i), Util.isDefined(this.getCurrentQuest()) || this.startQuest(1)
	}
}), Prodigy.LamplightUtil = function(e, t) {
	Prodigy.ZoneUtil.call(this, e, t)
}, Prodigy.extends(Prodigy.LamplightUtil, Prodigy.ZoneUtil, {
	constructor: Prodigy.LamplightUtil,
	addDoor: function(e, t, i, a, s, r, n, o, h, l) {
		var d = function(e, t, i) {
				i || e.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.LAMPLIGHT, "door"), t()
			},
			c = t.user.setValidPath.bind(t.user, t.path, n, o, d.bind(this, e, h, l));
		t.addClickableArea(i, a, s, r, c)
	},
	addLamp: function() {
		return null
	},
	showPedestals: function(e, t) {
		var i = [];
		i.push(t.content.add(e.prodigy.create.sprite(400, 360, "zone-lamplight", "pedestal"))), i.push(t.content.add(e.prodigy.create.sprite(640, 360, "zone-lamplight", "pedestal"))), i.push(t.content.add(e.prodigy.create.sprite(880, 360, "zone-lamplight", "pedestal"))), i.push(t.content.add(e.prodigy.create.sprite(520, 440, "zone-lamplight", "pedestal"))), i.push(t.content.add(e.prodigy.create.sprite(760, 440, "zone-lamplight", "pedestal")));
		for (var a = 0; a < i.length; a++) i[a].anchor.setTo(.5, 1)
	}
}), Prodigy.Lamplight_A2 = function(e, t) {
	Prodigy.Map.call(this, e, "A2", "Northwest Court", 200, 600, ["lamplight-B2", "lamplight-A3"], t)
}, Prodigy.extends(Prodigy.Lamplight_A2, Prodigy.Map, {
	constructor: Prodigy.Lamplight_A2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 360,
			w: 80,
			h: 160,
			rect: !0
		}, "lamplight-B2", 120, 320, null, AreaEvent.RIGHT);
		var a = Util.isDefined(i) && Util.isDefined(i.distractCallback) ? i.distractCallback : null;
		this.addAreaEvent(e, t, {
			x: 200,
			y: 680,
			w: 240,
			h: 80,
			rect: !0
		}, "lamplight-A3", 180, 180, a, AreaEvent.DOWN), this._zone.util.addLamp(e, t, 402, 137), this._zone.util.addLamp(e, t, 602, 137), this._zone.util.addLamp(e, t, 802, 137)
	}
}), Prodigy.Lamplight_A3 = function(e, t) {
	Prodigy.Map.call(this, e, "A3", "Vendor's Plaza", 1120, 540, ["lamplight-A2", "lamplight-B3", "lamplight-A4"], t.concat("npc-harvey"))
}, Prodigy.extends(Prodigy.Lamplight_A3, Prodigy.Map, {
	constructor: Prodigy.Lamplight_A3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), i = i || {};
		var a = Util.isDefined(i) && Util.isDefined(i.distractCallback) ? i.distractCallback : null,
			s = Util.isDefined(i.blockDirectionCallbacks) ? i.blockDirectionCallbacks : {},
			r = this.addAreaEvent(e, t, {
				x: 180,
				y: 60,
				w: 200,
				h: 120,
				rect: !0
			}, "lamplight-A2", 200, 600, Util.isDefined(s.up) ? s.up : a, AreaEvent.UP);
		r.isBlocked = Util.isDefined(s.up) || Util.isDefined(a), this.addAreaEvent(e, t, {
			x: 1240,
			y: 400,
			w: 80,
			h: 240,
			rect: !0
		}, "lamplight-B3", 120, 417.5, Util.isDefined(s.right) ? s.right : null, AreaEvent.RIGHT), this.addAreaEvent(e, t, {
			x: 1120,
			y: 660,
			w: 160,
			h: 120,
			rect: !0
		}, "lamplight-A4", 1120, 180, Util.isDefined(s.down) ? s.down : null, AreaEvent.DOWN);
		var n = function() {
			e.prodigy.open.titanProgress(!0)
		};
		new Prodigy.Container.Harvey(e, t, 300, 375, !1);
		var o = this.screen.content.add(this.game.prodigy.create.sprite(385, 380, "boss-titan", "harveySign"));
		o.anchor.x = .5, o.anchor.y = 1, o.inputEnabled = !0, o.events.onInputDown.add(n.bind(this));
		var h = {
			shopkeeperTag: "store-stylist",
			shopkeeperFrame: "stylist-npc-portrait",
			Y: 40,
			scaleX: 1,
			scaleY: 1
		};
		this._zone.util.addDoor(e, t, 560, 240, 120, 160, 620, 400, e.prodigy.open.store.bind(e.prodigy.open, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.ACADEMY_CLOTHING_SHOP))), this._zone.util.addDoor(e, t, 1e3, 160, 120, 160, 1060, 320, e.prodigy.open.stylistStore.bind(e.prodigy.open, this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.STYLIST), null, h, null, null, {
			onCreateEvent: {
				action: "Stylist-Interaction",
				label: "Visit-From-Lamplight"
			}
		}))
	}
}), Prodigy.Lamplight_A4 = function(e, t) {
	Prodigy.Map.call(this, e, "A4", "Pet Park", 1120, 180, ["house-exit", "lamplight-A3", "lamplight-B4"], t)
}, Prodigy.extends(Prodigy.Lamplight_A4, Prodigy.Map, {
	constructor: Prodigy.Lamplight_A4,
	setup: function(e, t, i) {
		e.prodigy.world.getZone("house").completeQuest(1);
		var a = Util.isDefined(i) && Util.isDefined(i.distractCallback) ? i.distractCallback : null,
			s = Util.isDefined(i) && Util.isDefined(i.blockDirectionCallbacks) ? i.blockDirectionCallbacks : {};
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 500,
			w: 80,
			h: 160,
			rect: !0
		}, "house-exit", 1160, 380, Util.isDefined(s.left) ? s.left : null, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 1120,
			y: 60,
			w: 160,
			h: 120,
			rect: !0
		}, "lamplight-A3", 1120, 540, Util.isDefined(s.up) ? s.up : null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1240,
			y: 420,
			w: 80,
			h: 200,
			rect: !0
		}, "lamplight-B4", 120, 457.5, Util.isDefined(s.right) ? s.right : a, AreaEvent.RIGHT), this._zone.util.addLamp(e, t, 82, 258), this._zone.util.addLamp(e, t, 562, 258), this._zone.util.addDoor(e, t, 280, 240, 120, 160, 340, 400, this.openStore.bind(this, e)), e.prodigy.player.backpack.hasItem("key", 13) && new Prodigy.Container.ToyMerchant(e, t.content, 900, 400)
	},
	openStore: function(e) {
		e.prodigy.open.store(e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.COMPANION_SHOP))
	}
}), Prodigy.Lamplight_B0 = function(e, t) {
	Prodigy.Map.call(this, e, "B0", "Academy Entrance", 160, 600, ["lamplight-B1"], t.concat("zone-lamplight"))
}, Prodigy.extends(Prodigy.Lamplight_B0, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B0,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 160,
			y: 680,
			w: 240,
			h: 80,
			rect: !0
		}, "lamplight-B1", 160, 120, null, AreaEvent.DOWN), this._zone.util.showPedestals(e, t)
	}
}), Prodigy.Lamplight_B1 = function(e, t) {
	Prodigy.Map.call(this, e, "B1", "Academy Crossroads", 160, 600, ["forest-C8", "lamplight-B0", "lamplight-B2"], t)
}, Prodigy.extends(Prodigy.Lamplight_B1, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), i = i || {}, this.addAreaEvent(e, t, {
			x: 160,
			y: 40,
			w: 240,
			h: 80,
			rect: !0
		}, "lamplight-B0", 160, 600, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1100,
			y: 680,
			w: 240,
			h: 80,
			rect: !0
		}, "lamplight-B2", 640, 260, null, AreaEvent.DOWN);
		var a = Util.isDefined(i) && Util.isDefined(i.distractCallback) ? i.distractCallback : null;
		this.addAreaEvent(e, t, {
			x: 40,
			y: 480,
			w: 80,
			h: 240,
			rect: !0
		}, "forest-C8", 1160, 520, a, AreaEvent.LEFT)
	}
}), Prodigy.Lamplight_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Lamplight Outskirts", 640, 220, ["lamplight-A2", "lamplight-B1", "lamplight-C2"], t)
}, Prodigy.extends(Prodigy.Lamplight_B2, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B2,
	setup: function(e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 640,
			y: 40,
			w: 240,
			h: 200,
			rect: !0
		}, "lamplight-B1", 1100, 600, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1240,
			y: 320,
			w: 80,
			h: 160,
			rect: !0
		}, "lamplight-C2", 120, 320, null, AreaEvent.RIGHT), this.addAreaEvent(e, t, {
			x: 40,
			y: 320,
			w: 80,
			h: 160,
			rect: !0
		}, "lamplight-A2", 1160, 360, null, AreaEvent.LEFT), this._zone.util.addLamp(e, t, 162, 58), this._zone.util.addLamp(e, t, 442, 58), this._zone.util.addLamp(e, t, 802, 58), this._zone.util.addLamp(e, t, 1082, 58)
	}
}), Prodigy.Lamplight_B3 = function(e, t) {
	Prodigy.Map.call(this, e, "B3", "Town Square", 120, 417.5, ["lamplight-A3", "lamplight-C3"], t.concat("zone-lamplight", "npc-sprite-merchant"))
}, Prodigy.extends(Prodigy.Lamplight_B3, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B3,
	init: function(e, t, i, a) {
		return Util.isNightTime() ? (a.zone.enableLayer(1, !0), a.zone.enableLayer(0, !1)) : (a.zone.enableLayer(1, !1), a.zone.enableLayer(0, !0)), Prodigy.Map.prototype.init.call(this, e, t, i)
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 380,
			w: 80,
			h: 200,
			rect: !0
		}, "lamplight-C3", 120, 437.5, null, AreaEvent.RIGHT), this.addAreaEvent(e, t, {
			x: 40,
			y: 380,
			w: 80,
			h: 200,
			rect: !0
		}, "lamplight-A3", 1160, 437.5, null, AreaEvent.LEFT);
		var a = Prodigy.Component.Wheel.Twilight_WHEEL_CONFIG;
		this._zone.util.addDoor(e, t, a.wheelPosition.x, a.wheelPosition.y, a.wheelDimensions.w, a.wheelDimensions.h, a.wheelTarget.x, a.wheelTarget.y, this.openTwilightWheel.bind(this, e, t, a), !0), this.addGnome(e, t, a.npcPosition.x, a.npcPosition.y, a.npcName, a.npcHead, a.npcHat, this.openTwilightWheel.bind(this, e, t, a)), a = Prodigy.Component.Wheel.DAY_WHEEL_CONFIG, this._zone.util.addDoor(e, t, a.wheelPosition.x, a.wheelPosition.y, a.wheelDimensions.w, a.wheelDimensions.h, a.wheelTarget.x, a.wheelTarget.y, this.openDayWheel.bind(this, e, t), !0), this.addGnome(e, t, a.npcPosition.x, a.npcPosition.y, a.npcName, a.npcHead, a.npcHat, this.openDayWheel.bind(this, e, t)).flip()
	},
	openTwilightWheel: function(e, t, i) {
		Util.isNightTime() ? new Prodigy.Component.TwilightWheel(e, t.foreground, t) : this.game.prodigy.open.messageBoxOkay(i.npcDialogue[0].text, "okay", null)
	},
	openDayWheel: function(e, t) {
		new Wheel(e, t.foreground, e.prodigy.player, t)
	}
}), Prodigy.Lamplight_B4 = function(e, t) {
	Prodigy.Map.call(this, e, "B4", "Lower Intersection", 160, 600, ["lamplight-A4", "lamplight-C4", "lamplight-B5"], t)
}, Prodigy.extends(Prodigy.Lamplight_B4, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 420,
			w: 80,
			h: 200,
			rect: !0
		}, "lamplight-C4", 180, 457.5, null, AreaEvent.RIGHT), this.addAreaEvent(e, t, {
			x: 40,
			y: 420,
			w: 80,
			h: 200,
			rect: !0
		}, "lamplight-A4", 1160, 457.5, null, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 160,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "lamplight-B5", 200, 120, null, AreaEvent.DOWN);
		var a = e.prodigy.start.bind(e.prodigy, "DanceDance");
		this._zone.util.addDoor(e, t, 600, 240, 120, 160, 660, 400, a), this._zone.util.addLamp(e, t, 3, 27), this._zone.util.addLamp(e, t, 83, 27), this._zone.util.addLamp(e, t, 240, 23), this._zone.util.addLamp(e, t, 1080, 23), e.prodigy.network.sendAnalytics("potion-store-activity", "see-scientist", "Events");
		var s = !Util.isDefined(this._zone.getState("firstPotion")) || this._zone.getState("firstPotion") === !0;
		new Prodigy.Container.ScientistSlimerella(e, t.content, 340, 480, s, this._zone)
	}
}), Prodigy.Lamplight_B5 = function(e, t) {
	Prodigy.Map.call(this, e, "B5", "Southern Dock", 200, 120, ["lamplight-B4"], t.concat("npc-sir-vey"))
}, Prodigy.extends(Prodigy.Lamplight_B5, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "lamplight-B4", 160, 600, null, AreaEvent.UP), new Prodigy.Container.SirVey(e, t, 600, 380)
	}
}), Prodigy.Lamplight_C2 = function(e, t) {
	Prodigy.Map.call(this, e, "C2", "History District", 200, 600, ["lamplight-B2", "lamplight-C3"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Lamplight_C2, Prodigy.Map, {
	constructor: Prodigy.Lamplight_C2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 320,
			w: 80,
			h: 160,
			rect: !0
		}, "lamplight-B2", 1160, 320, null, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 200,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "lamplight-C3", 200, 240, null, AreaEvent.DOWN);
		var a = e.prodigy.open.message.bind(e.prodigy.open, 'A message on the door says "Coming Soon!"', null, "star", "Locked!");
		this._zone.util.addDoor(e, t, 520, 240, 120, 160, 580, 400, a, !0);
		var a = e.prodigy.open.message.bind(e.prodigy.open, 'A message on the door says "Coming Soon!"', null, "star", "Locked!");
		this._zone.util.addDoor(e, t, 920, 240, 120, 160, 980, 400, a, !0), this._zone.util.addLamp(e, t, 2, 98), this._zone.util.addLamp(e, t, 242, 98), this._zone.util.addLamp(e, t, 2, 458), this._zone.util.addLamp(e, t, 2, 658), this._zone.util.addLamp(e, t, 280, 223), this._zone.util.addLamp(e, t, 1246, 223)
	}
}), Prodigy.Lamplight_C3 = function(e, t) {
	Prodigy.Map.call(this, e, "C3", "Coliseum", 160, 540, ["lamplight-B3", "lamplight-C2", "lamplight-C4"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Lamplight_C3, Prodigy.Map, {
	constructor: Prodigy.Lamplight_C3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 400,
			w: 80,
			h: 240,
			rect: !0
		}, "lamplight-B3", 1160, 417.5, null, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 200,
			y: 80,
			w: 160,
			h: 160,
			rect: !0
		}, "lamplight-C2", 200, 600, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 160,
			y: 660,
			w: 160,
			h: 120,
			rect: !0
		}, "lamplight-C4", 200, 180, null, AreaEvent.DOWN), this._zone.util.addDoor(e, t, 520, 200, 120, 160, 580, 360, e.prodigy.start.bind(e.prodigy, "Arena")), this.addHealStone(e, t, 1100, 200), new Prodigy.Component.BountyBoard(e, t, t.data)
	}
}), Prodigy.Lamplight_C4 = function(e, t) {
	Prodigy.Map.call(this, e, "C4", "Market", 200, 180, ["lamplight-B4", "lamplight-C3"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Lamplight_C4, Prodigy.Map, {
	constructor: Prodigy.Lamplight_C4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i);
		var a = Util.isDefined(i) && Util.isDefined(i.distractCallback) ? i.distractCallback : null;
		this.addAreaEvent(e, t, {
			x: 60,
			y: 420,
			w: 120,
			h: 200,
			rect: !0
		}, "lamplight-B4", 1160, 457.5, a, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 200,
			y: 60,
			w: 160,
			h: 120,
			rect: !0
		}, "lamplight-C3", 160, 540, null, AreaEvent.UP), this._zone.util.addDoor(e, t, 840, 280, 120, 160, 900, 440, e.prodigy.open.store.bind(e.prodigy.open, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.ACADEMY_WAND_SHOP))), this._zone.util.addLamp(e, t, 562, 298), this._zone.util.addLamp(e, t, 1202, 298)
	}
}), Prodigy.Lamplight_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "", {
		type: "seq",
		N: 7
	}, ["lamplight-B0"], [], [], [0], [], !1)
}, Prodigy.extends(Prodigy.Lamplight_Q1, Prodigy.Quest, {
	constructor: Prodigy.Lamplight_Q1,
	setup: function(e, t, i) {
		Prodigy.Quest.prototype.setup.call(this, e, t, i);
		var a = {},
			s = !(this.zone.isOnSequence(1, 5) || this.zone.isOnSequence(1, 6)),
			r = i.getTag(),
			n = 0;
		if (Util.isDefined(e.prodigy.player.data.useOldTutorialPath) || (e.prodigy.player.data.useOldTutorialPath = !this.zone.isOnSequence(1, 0), e.prodigy.player.updated = !0), "A4" === r) {
			if (this.zone.isOnSequence(1, 0)) return e.prodigy.world.playScene("lamplight-pets"), {
				quit: !0
			};
			s && (e.prodigy.player.data.useOldTutorialPath ? a.distractCallback = this.nootDistracts.bind(this, e, t) : a.blockDirectionCallbacks = {
				left: this.nootDistracts.bind(this, e, t),
				right: this.nootDistracts.bind(this, e, t)
			})
		} else if ("B3" === r) {
			if (this.zone.isOnSequence(1, 1)) return e.prodigy.world.playScene("lamplight-townSquare"), {
				quit: !0
			}
		} else if ("C3" === r) {
			for (n = 0; 2 > n; n++) this.zone.isSequenceComplete(1, n) || this.zone.completeSequence(1, n);
			if (this.zone.isOnSequence(1, 2)) return e.prodigy.world.playScene("lamplight-store1"), {
				quit: !0
			};
			if (this.zone.isOnSequence(1, 3)) return e.prodigy.world.playScene("lamplight-store2"), {
				quit: !0
			}
		} else if ("C2" === r) {
			if (this.zone.isOnSequence(1, 4)) return e.prodigy.world.playScene("lamplight-anotherMonster"), {
				quit: !0
			}
		} else if ("B0" === r) {
			if (this.zone.isOnSequence(1, 5)) return e.prodigy.world.playScene("lamplight-boss"), {
				quit: !0
			}
		} else if ("B1" === r) {
			if (this.zone.isOnSequence(1, 6)) return e.prodigy.world.playScene("lamplight-end"), {
				quit: !0
			};
			a.distractCallback = this.nootDistracts.bind(this, e, t)
		} else if ("A3" === r && s)
			if (e.prodigy.player.data.useOldTutorialPath) a.distractCallback = this.nootDistracts.bind(this, e, t);
			else {
				if (this.zone.isOnSequence(1, 2)) return e.prodigy.world.playScene("lamplight-store1_A3"), {
					quit: !0
				};
				if (this.zone.isOnSequence(1, 3)) return e.prodigy.world.playScene("lamplight-store2_A3"), {
					quit: !0
				};
				a.blockDirectionCallbacks = {
					right: this.nootDistracts.bind(this, e, t),
					down: this.nootDistracts.bind(this, e, t)
				}
			}
		else "A2" === r && s ? a.distractCallback = this.nootDistracts.bind(this, e, t) : "C4" === r && s && (a.distractCallback = this.nootDistracts.bind(this, e, t));
		var o = [{
			map: "A2",
			x: 650,
			y: 540,
			ID: 35
		}, {
			map: "A3",
			x: 780,
			y: 500,
			ID: 32
		}, {
			map: "A3",
			x: 220,
			y: 480,
			ID: 40
		}, {
			map: "B2",
			x: 640,
			y: 400,
			ID: 52
		}, {
			map: "B3",
			x: 640,
			y: 440,
			ID: 55
		}, {
			map: "B4",
			x: 920,
			y: 500,
			ID: 32
		}, {
			map: "B5",
			x: 869,
			y: 333,
			ID: 81
		}, {
			map: "C2",
			x: 190,
			y: 317,
			ID: 13
		}, {
			map: "C4",
			x: 700,
			y: 550,
			ID: 32,
			drops: [{
				type: "weapon",
				ID: 1
			}]
		}];
		for (n = 0; n < o.length; n++) {
			var h = o[n];
			r === h.map && i.addMonster(e, t, n + 1, h.x, h.y, !0, {
				allowMember: !0,
				screen: "bg-battle-academy",
				run: !1,
				drops: h.drops || [],
				invincible: !0,
				randDir: !0,
				encounter: [{
					ID: h.ID
				}]
			})
		}
		return a
	},
	nootDistracts: function(e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, t.user.x, t.user.y), i.text(142, "noot"), i.set(t.user, "evtProc", !1), i.start()
	}
}), Prodigy.Lamplight_Q2 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 2, "", {
		type: "seq",
		N: 1
	}, ["forest-C8"], [], [], [0], [], !1)
}, Prodigy.extends(Prodigy.Lamplight_Q2, Prodigy.Quest, {
	constructor: Prodigy.Lamplight_Q2
}), Prodigy.Lamplight_Pets = function(e, t) {
	Prodigy.Scene.call(this, e, "A4", t.concat(["npc-sprite-noot", "monster-reduced-1", "monster-reduced-4", "monster-reduced-7", "monster-reduced-10", "bgm-fun", "sfx-lamplight-pets"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Pets, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Pets,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = -100, t.user.y = 500, this._zone.util.addLamp(e, t, 82, 258), this._zone.util.addLamp(e, t, 562, 258), this.monsters = [];
		for (var a = 0; 4 > a; a++) {
			var s = this.addMonster(e, t, a + 1, 340, 400, !1, {
				encounter: [{
					ID: 3 * a + 1
				}]
			}, !0, this.choosePet.bind(this, e, t, 3 * a + 1));
			s.alpha = 0, s.walkSpeed = 2, this.monsters.push(s)
		}
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, "bgm-fun"), Prodigy.Menu.PlayAtHome.isRequired(e.prodigy.player) ? e.prodigy.open.playAtHomePrompt(this.petsEscape.bind(this, e, t)) : this.petsEscape(e, t)
	},
	end: function(e, t, i) {
		i && (this._zone.completeSequence(1, 0), e.prodigy.player.data.useOldTutorialPath || this._zone.completeSequence(1, 1), e.prodigy.world.teleport("lamplight-A4", 150, 500, null, {
			fadeIn: !0,
			time: 500,
			fadeOut: !0
		}))
	},
	petsEscape: function(e, t) {
		var i = this.addNPC(e, t, 150, 500, "npc-sprite-noot");
		i.float(!0), i.visible = !1;
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.function(this.enterScene.bind(this, e, t)), a.delay(1e3), a.validPath(t.user, t.path, 150, 500), a.set(i, "visible", !0), a.hop(i, 500, 100, 100), a.delay(300), a.enableInput(!0), a.text(132, "noot"), a.text(133, "noot"), a.text(134, "noot"), a.text(135, "noot"), a.text(136, "noot"), a.enableInput(!1), a.function(t.user.chat.bind(t.user, 1)), a.function(i.chat.bind(i, 1)), a.sound(Prodigy.Controller.AudioController.SFX_PACKS.LAMPLIGHT_PETS, "window", !0), a.sound(Prodigy.Controller.AudioController.SFX_PACKS.LAMPLIGHT, "door");
		for (var s = 0; 4 > s; s++) a.set(this.monsters[s], "alpha", 1), a.validPath(this.monsters[s], t.path, 640 + 120 * s, 500, !0), a.delay(300);
		a.enableInput(!0), a.text(137, "noot"), a.enableInput(!1), a.delayUntil(this.monsters[3], "x", 1e3);
		for (var s = 0; 4 > s; s++) a.function(this.monsters[s].chat.bind(this.monsters[s], 1)), a.hop(this.monsters[s], 200, 0, 30, !0), a.function(this.monsters[s].flip.bind(this.monsters[s])), a.delay(50);
		a.enableInput(!0), a.text(138, "noot"), a.set(t.user, "evtProc", !0);
		for (var s = 0; 4 > s; s++) a.function(this.monsters[s].highlight.bind(this.monsters[s], !0, -70, -80));
		a.start()
	},
	choosePet: function(e, t, i) {
		e.prodigy.open.choosePet(i, this.petsLeave.bind(this, e, t, i))
	},
	petsLeave: function(e, t, i) {
		var a = e.prodigy.event.create();
		a.enableInput(!1);
		var s;
		for (s = 0; 4 > s; s++) a.function(this.monsters[s].highlight.bind(this.monsters[s], !1));
		var r = (i - 1) / 3;
		for (s = 0; 4 > s; s++) r !== s && (a.path(this.monsters[s], [{
			x: 340,
			y: 400
		}], 4, !1), a.set(this.monsters[s], "alpha", 0));
		a.validPath(this.monsters[r], t.path, 320, 500, !1), a.hop(this.monsters[r], 0, 0, 50, !1), a.delay(300), a.enableInput(!0), a.function(this.end.bind(this, e, t, !0)), a.start()
	}
}), Prodigy.Lamplight_Town_Square = function(e, t) {
	Prodigy.Scene.call(this, e, "B3", t.concat(["npc-sprite-noot"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Town_Square, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Town_Square,
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t);
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.enableInput(!0), i.text(139, "noot"), i.text(140, "noot"), i.function(this.end.bind(this, e, t, !0)), i.start()
	},
	end: function(e, t, i) {
		i && (this._zone.completeSequence(1, 1), e.prodigy.world.teleport("lamplight-B3", 120, 417.5, null, {
			fadeIn: !0,
			time: 500,
			fadeOut: !0
		}))
	}
}), Prodigy.Lamplight_Store_Pt1 = function(e, t) {
	Prodigy.Scene.call(this, e, "C3", t.concat(["npc-sprite-noot", "monster-reduced-20", "monster-reduced-81"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Store_Pt1, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Store_Pt1,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), e.prodigy.player.data.useOldTutorialPath ? (t.user.x = 190, t.user.y = 400) : (t.user.x = 1120, t.user.y = 550, t.user.faceToward(t.user.x - 1)), this._m1 = this.addMonster(e, t, 1, 495, 460, !1, {
			encounter: [{
				ID: 81
			}]
		}, !0), this._gnome = this.addGnome(e, t, 620, 460, "Shopkeeper Figg", 2, 2), this._m2 = this.addMonster(e, t, 2, 745, 460, !1, {
			encounter: [{
				ID: 20
			}]
		}, !0), this._m2.flip()
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t);
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.set(t.user, "evtProc", !0);
		for (var a = 0; 7 > a; a++) i.hop(a % 2 === 0 ? this._m1 : this._m2, 200, 0, 100), i.function(this._gnome.flip.bind(this._gnome));
		i.delay(400), i.function(this._m1.flip.bind(this._m1)), i.delay(300), i.hop(this._m1, 200, 0, 100, !0), i.hop(this._m2, 200, 0, 100, !0), i.function(this._m1.chat.bind(this._m1, 1)), i.function(this._m2.chat.bind(this._m2, 1)), i.delay(2e3), i.enableInput(!0), i.function(this.battle.bind(this, e)), i.start()
	},
	battle: function(e) {
		var t = {
			allowMember: !1,
			run: !1,
			"catch": !1,
			screen: "bg-battle-academy",
			invincible: !0,
			pets: [{
				ID: 20
			}, {
				ID: 81
			}]
		};
		e.prodigy.battle.start(t, this.end.bind(this, e), this.end.bind(this, e), this.end.bind(this, e))
	},
	end: function(e) {
		this._zone.completeSequence(1, 2), e.prodigy.world.teleport(e.prodigy.player.data.useOldTutorialPath ? "lamplight-C3" : "lamplight-A3")
	}
}), Prodigy.Lamplight_Store_Pt1_A3 = function(e, t) {
	Prodigy.Scene.call(this, e, "A3", t.concat(["npc-sprite-noot", "monster-reduced-20", "monster-reduced-81"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Store_Pt1_A3, Prodigy.Lamplight_Store_Pt1, {
	constructor: Prodigy.Lamplight_Store_Pt1_A3
}), Prodigy.Lamplight_Store_Pt2 = function(e, t) {
	Prodigy.Scene.call(this, e, "C3", t.concat(["npc-sprite-noot"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Store_Pt2, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Store_Pt2,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 190, t.user.y = 400, this._gnome = this.addGnome(e, t, 620, 460, "Shopkeeper Figg", 2, 2), this._gnome.flip(), this._zone.util.addLamp(e, t, 322, 58), this._zone.util.addLamp(e, t, 42, 58), this._zone.util.addLamp(e, t, 802, 258), this._zone.util.addLamp(e, t, 843, 67), this._zone.util.addLamp(e, t, 1243, 67), this._zone.util.addLamp(e, t, 923, 147), this._zone.util.addLamp(e, t, 1163, 147)
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t);
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.enableInput(!0), i.text(37, "merchant"), i.text(38, "merchant"), i.set(t, "hideHex", !0), i.reward([{
			ID: 12,
			type: "hat"
		}]), e.prodigy.player.data.useOldTutorialPath ? i.text(39, "merchant") : (i.text(165, "noot"), i.validPath(t.user, t.path, 180, 60)), i.function(this.end.bind(this, e, t)), i.start()
	},
	end: function(e, t) {
		t.hideHex = !1, this._zone.completeSequence(1, 3);
		var i = !e.prodigy.player.data.useOldTutorialPath;
		i && this._zone.completeSequence(1, 4), e.prodigy.world.teleport(i ? "lamplight-B0" : "lamplight-C3", 190, 400, null, {
			fadeIn: !0,
			time: 500,
			fadeOut: !0
		})
	}
}), Prodigy.Lamplight_Store_Pt2_A3 = function(e, t) {
	Prodigy.Scene.call(this, e, "A3", t.concat(["npc-sprite-noot", "monster-reduced-20", "monster-reduced-81"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Store_Pt2_A3, Prodigy.Lamplight_Store_Pt2, {
	constructor: Prodigy.Lamplight_Store_Pt2_A3
}), Prodigy.Lamplight_Another_Monster = function(e, t) {
	Prodigy.Scene.call(this, e, "C2", t.concat(["npc-sprite-noot"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Another_Monster, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Another_Monster,
	start: function(e, t) {
		this.addMonster(e, t, 0, 190, 317, !1, {
			encounter: [{
				ID: 13
			}]
		}, !0), Prodigy.Scene.prototype.start.call(this, e, t);
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.enableInput(!0), i.text(141, "noot"), i.function(this.end.bind(this, e, t, !0)), i.start()
	},
	end: function(e, t, i) {
		i && (this._zone.completeSequence(1, 4), e.prodigy.world.teleport("lamplight-C2", 200, 600, null, {
			fadeIn: !0,
			time: 500,
			fadeOut: !0
		}))
	}
}), Prodigy.Lamplight_Boss = function(e, t) {
	Prodigy.Scene.call(this, e, "B0", t.concat(["npc-sprite-noot", "npc-sprite-puppetmaster", "npc-sprite-pippet", "zone-lamplight", "bgm-puppetmaster"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_Boss, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_Boss,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 150, t.user.y = 800, this._bridge = this.createBridge(e, t), this._gems = this.createGems(e, t), this._bolt = this.createBolt(e, t, 0, 0), this._sparks = this.createSparks(e, t, 400, 490), this._master = new Prodigy.Container.PuppetMaster(e, t.content, 1480, -200), this.pippet = new Prodigy.Container.Pippet(e, t.content, 1480, -200, t.user, t.path, null), this.pippet.flip(), this._master.alpha = this.pippet.alpha = 1, this._zone.util.showPedestals(e, t)
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, null);
		var i = this.addNPC(e, t, 150, 800, "npc-sprite-noot");
		i.float(!0), i.walkSpeed = 2;
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.function(this.enterScene.bind(this, e, t)), a.delay(1e3), a.validPath(t.user, t.path, 290, 490), a.validPath(i, t.path, 400, 490), a.enableInput(!0), a.text(143, "noot"), a.text(144, "noot"), a.enableInput(!1), a.function(i.chat.bind(i, 1)), a.bgm(), a.shake(0, 2e3, 5, "v"), a.enableInput(!0), a.text(145, "noot"), a.text(146, "noot"), a.enableInput(!1), a.bgm("bgm-puppetmaster"), a.hop(t.user, 200, 0, 50, !0), a.hop(i, 200, 0, 50), a.function(i.chat.bind(i, 1)), a.function(t.user.chat.bind(t.user, 1)), a.functionCallback(this.fireBolts.bind(this, e, t, 0)), a.function(this.fireSparks.bind(this, e, t, !0)), a.function(this.fireSparks.bind(this, e, t, !1)), a.enableInput(!0), a.text(147, "noot"), a.text(148, "noot"), a.text(149, "noot"), a.enableInput(!1), a.functionCallback(this.fadeBridge.bind(this, e, t, this._bridge)), a.functionCallback(this.enterBoss.bind(this, e, t, 880, 480)), a.delay(500), a.enableInput(!0), a.text(), a.text(0, "puppetmaster"), a.text(1, "puppetmaster"), a.text(), a.text(150, "noot"), a.text(), a.text(2, "puppetmaster"), a.text(), a.text(151, "noot"), a.text(152, "noot"), a.text(), a.text(3, "puppetmaster"), a.text(4, "puppetmaster"), a.text(), a.function(this.pippet.chat.bind(this.pippet, 1, 100)), a.text(0, "pippet"), a.text(), a.function(this._master.chat.bind(this._master, 7, 200)), a.delay(2e3), a.function(this._master.flip.bind(this._master)), a.function(this._master.chat.bind(this._master, 6, 200)), a.text(5, "puppetmaster"), a.enableInput(!1), a.hop(this._master, 0, 0, 50, !1), a.hop(this._master, 0, 0, 50, !1), a.hop(this._master, 0, 0, 50, !1), a.hop(this._master, 0, 0, 50, !1), a.hop(this._master, 0, 0, 50, !1), a.enableInput(!0), a.function(this._master.chat.bind(this._master, 6, 200)), a.text(6, "puppetmaster"), a.text(), a.function(this.pippet.chat.bind(this.pippet, 11, 100)), a.text(1, "pippet"), a.text(), a.text(7, "puppetmaster"), a.text(), a.text(153, "noot"), a.text(), a.enableInput(!1), a.validPath(t.user, t.path, 75, 820, !1), a.validPath(i, t.path, 120, 820, !1), a.enableInput(!0), a.function(this.pippet.chat.bind(this.pippet, 14, 100)), a.text(2, "pippet"), a.text(), a.function(this._master.chat.bind(this._master, 3, 200)), a.text(8, "puppetmaster"), a.text(9, "puppetmaster"), a.enableInput(!1), a.function(this.pippet.flip.bind(this.pippet)), a.functionCallback(this.enterBoss.bind(this, e, t, 1480, -200)), a.delay(500), a.enableInput(!0), a.function(this.end.bind(this, e, t)), a.start()
	},
	end: function(e) {
		this._zone.completeSequence(1, 5), e.prodigy.world.teleport("lamplight-B1")
	},
	createBridge: function(e, t) {
		var i = e.prodigy.create.element(t.foreground, 500, 0);
		i.add(e.prodigy.create.sprite(0, 0, "zone-lamplight", "rainbowbridge-rail")), i.add(e.prodigy.create.sprite(280, 0, "zone-lamplight", "rainbowbridge-rail")).scale.x = -1;
		for (var a = [], s = 1; 8 >= s; s++) a.push("rainbowbridge-" + s);
		for (var s = 0; 5 > s; s++)
			for (var r = 0; 5 > r; r++) {
				var n = i.add(e.prodigy.create.sprite(40 + 40 * s, 40 * r, "zone-lamplight", "rainbowbridge-1"));
				n.alpha = .7, n.animations.add("glow", a, 10, !0, !1), n.animations.play("glow")
			}
		return i
	},
	fadeBridge: function(e, t, i, a) {
		var s = e.add.tween(i).to({
			alpha: .75
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: 1
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: .5
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: .75
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: .25
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: .5
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: .25
		}, 250, Phaser.Easing.Quadratic.InOut).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.InOut).start();
		s.onComplete.add(a)
	},
	createBolt: function(e, t, i, a) {
		var s = e.prodigy.create.element(t.foreground, i, a),
			r = e.prodigy.create.element(s, 0, 0);
		return r.add(new Phaser.TileSprite(e, 0, 0, 120, 440, "zone-lamplight", "beam-mid")), r.add(e.prodigy.create.sprite(0, 440, "zone-lamplight", "beam-bot")), s.alpha = 0, s
	},
	fireBolts: function(e, t, i, a) {
		if (i >= 5) return a(), void 0;
		var s = e.add.tween(this._bolt).to({
			x: 340 + 120 * i,
			y: -440
		}, 10, Phaser.Easing.Linear.None).to({
			alpha: .3
		}, 10, Phaser.Easing.Linear.None).to({
			y: (i + 1) % 2 * -80
		}, 100, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 100, Phaser.Easing.Quadratic.Out);
		s.start(), s.onComplete.add(this.fireBolts.bind(this, e, t, i + 1, a)), e.add.tween(this._gems[i]).to({
			alpha: 0
		}, 200, Phaser.Easing.Linear.None).delay(500).start()
	},
	createSparks: function(e, t, i, a) {
		var s = t.foreground.add(e.prodigy.create.sprite(i, a, "zone-lamplight", "sparks-0"));
		return s.alpha = 0, s
	},
	fireSparks: function(e, t, i) {
		i ? (this._sparks.animations.add("sparks", ["sparks-0", "sparks-1", "sparks-2", "sparks-3"], 10, !0, !1), this._sparks.animations.play("sparks", 10, !0)) : this._sparks.animations.stop("sparks")
	},
	createGems: function(e, t) {
		for (var i = [], a = ["earth", "ice", "air", "fire", "water"], s = 0; 5 > s; s++) {
			var r = t.foreground.add(e.prodigy.create.sprite(360 + 120 * s, 160 + s % 2 * 80 + 10, "zone-lamplight", "warden-" + a[s]));
			e.add.tween(r).to({
				y: r.y + 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0).start(), i.push(r)
		}
		return i
	},
	enterBoss: function(e, t, i, a, s) {
		e.add.tween(this._master).to({
			x: i,
			y: a
		}, 1e3, Phaser.Easing.Linear.None).start();
		var r = e.add.tween(this.pippet).to({
			x: i + 175,
			y: a + 10
		}, 1e3, Phaser.Easing.Linear.None).delay(1e3).start();
		r.onComplete.add(s)
	}
}), Prodigy.Lamplight_End = function(e, t) {
	Prodigy.Scene.call(this, e, "B1", t.concat(["npc-sprite-noot", "bgm-lamplight"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.Lamplight_End, Prodigy.Scene, {
	constructor: Prodigy.Lamplight_End,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 160, t.user.y = 0, this._noot = this.addNPC(e, t, 160, 0, "npc-sprite-noot"), this._noot.float(!0)
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, "bgm-lamplight");
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.path(t.user, [{
			x: 540,
			y: 430
		}], null, !0), i.path(this._noot, [{
			x: 740,
			y: 430
		}], 2), i.function(this._noot.flip.bind(this._noot)), i.delay(500), i.enableInput(!0), i.text(154, "noot"), i.text(155, "noot"), i.text(156, "noot"), i.enableInput(!1), i.path(this._noot, [{
			x: 840,
			y: 430
		}], 1), i.delay(500), i.enableInput(!0), i.text(157, "noot"), i.enableInput(!1), i.delay(500), i.function(this._noot.chat.bind(this._noot, 1)), i.hop(this._noot, 300, 0, 100), i.path(this._noot, [{
			x: 690,
			y: 430
		}], 2), i.enableInput(!0), i.text(158, "noot"), i.text(159, "noot"), i.functionCallback(e.prodigy.open.nameChange.bind(e.prodigy.open, !1)), i.function(t.user.showName.bind(t.user, !0)), i.text(160, "noot"), i.enableInput(!1), i.enableInput(!0), i.text(161, "noot"), i.text(162, "noot"), i.reward([{
			ID: 13,
			type: "key"
		}]), i.text(163, "noot"), i.text(164, "noot"), i.enableInput(!1), i.hop(this._noot, 300, -150, 100), i.set(this._noot, "visible", !1), i.delay(500), i.enableInput(!0), i.function(this.end.bind(this, e, t)), i.start()
	},
	end: function(e) {
		this._zone.completeQuest(1), this._zone.startQuest(2), e.prodigy.world.teleport("lamplight-B1", 540, 430, null, {
			fadeIn: !0,
			time: 500,
			fadeOut: !0
		})
	}
}), Prodigy.Component.Wheel = function(e, t, i) {
	Prodigy.Control.Element.call(this, e, t, 0, 0), this.player = e.prodigy.player, this.screen = i, this.wheelItems = [], this.config = null, this.dialogue = null
}, Prodigy.extends(Prodigy.Component.Wheel, Prodigy.Control.Element, {
	constructor: Prodigy.Component.Wheel,
	setup: function() {
		this.wasVisible = Util.isDefined(this.screen.questProgress) && this.screen.questProgress.visible, this.wasVisible && (this.screen.questProgress.visible = !1);
		var e = this.game.world.centerX,
			t = this.game.world.centerY,
			i = this.add(this.game.prodigy.create.sprite(e + this.config.wheelFrameOffset.x, this.config.wheelFrameOffset.y, this.config.wheelAtlas, this.config.wheelFrameKey));
		i.anchor.setTo(.5, 0), this.wheel = this.game.prodigy.create.element(this, e + this.config.wheelOffset.x, t + this.config.wheelOffset.y), this.wheelAngle = 18, this.wheel.angle = this.wheelAngle, this.spinAngle = 0;
		var a = this.wheel.add(this.game.prodigy.create.sprite(0, 0, this.config.wheelAtlas, this.config.wheelBigKey));
		a.anchor.setTo(.5, .5);
		for (var s, r = 0; r < this.wheelItems.length; r++) {
			var n = this.game.prodigy.create.element(this.wheel, 0, 0);
			n.scale.setTo(.7, .7);
			var o = (36 * r - (this.wheelAngle - 12)) * (Math.PI / 180);
			s = this.game.prodigy.icon.createIcon(0, 0, this.game.prodigy.icon.iconKey(this.wheelItems[r].item), {
				x: .5,
				y: .5
			}), this.game.prodigy.load.isFileLoaded(this.game.prodigy.icon.iconKey(this.wheelItems[r].item)) ? this.correctIconPostLoad(s, o) : s.onTextureLoaded = this.correctIconPostLoad.bind(this, s, o), s.x = -(.5 * s.width * Math.cos(o) - 2.5 * s.height * Math.sin(o)), s.y = -(.5 * s.width * Math.sin(o) + 2.5 * s.height * Math.cos(o)), n.add(s)
		}
		var h = this.add(this.game.prodigy.create.sprite(i.x + this.config.wheelPointerOffset.x, i.y + this.config.wheelPointerOffset.y, this.config.wheelAtlas, this.config.wheelPointerKey));
		h.anchor.setTo(.5, 0)
	},
	correctIconPostLoad: function(e, t) {
		e.x += .5 * e.width, e.y += .5 * e.height, e.angle = t * (180 / Math.PI)
	},
	spin: function(e, t, i) {
		var a = GameConstants.get("GameConstants.Features.Wheel.SPIN_TIME");
		GameConstants.get("GameConstants.Build.DEBUG") && Prodigy.Component.Wheel.DEBUG_SPIN_TIME_MS > 0 && (a = Prodigy.Component.Wheel.DEBUG_SPIN_TIME_MS), this.spinAngle = -36 * (this.selectedIndex - e), this.playSound(a, 100), this.wheelAngle += 2880 + this.spinAngle;
		var s = this.game.add.tween(this.wheel).to({
			angle: this.wheelAngle
		}, a, Phaser.Easing.Cubic.Out).start();
		s.onComplete.addOnce(i, this)
	},
	playSound: function(e, t) {
		if (e > 0) {
			this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "tick");
			var i = t + 9e-7 * Math.pow(t, 3);
			setTimeout(this.playSound.bind(this, e - i, i), t)
		}
	},
	spinComplete: function(e, t) {
		this.dialogue.close(), this.game.prodigy.open.gotItem([this.wheelItems[e].item], t, null, "wheel-of-wonder")
	},
	tryAgain: function() {},
	showComeBackToSpinMessage: function() {
		this.close()
	},
	close: function() {
		this.wasVisible && (this.screen.questProgress.visible = !0), this.destroy()
	}
}), Prodigy.Component.Wheel.DEBUG_SPIN_TIME_MS = -1, Prodigy.Component.Wheel.DAY_WHEEL_CONFIG = {
	wheelAtlas: "zone-lamplight",
	wheelFrameKey: "wheelFrame",
	wheelBigKey: "wheelBig",
	wheelPointerKey: "wheelPointer",
	wheelFrameOffset: {
		x: 0,
		y: 0
	},
	wheelOffset: {
		x: 0,
		y: -55
	},
	wheelPointerOffset: {
		x: 0,
		y: 85
	},
	wheelPosition: {
		x: 100,
		y: 80
	},
	wheelDimensions: {
		w: 160,
		h: 200
	},
	wheelTarget: {
		x: 180,
		y: 280
	},
	npcPosition: {
		x: 310,
		y: 300
	},
	npcName: "Wheeler",
	npcHead: 7,
	npcHat: 5,
	npcDialogue: [{
		text: "Hello there! Do you want to spin the Wheel of Wonder?",
		anim: 4
	}, {
		text: "Let's spin that wheel!",
		anim: 4
	}, {
		text: "Sorry, you'll have to come back tomorrow to spin again!",
		anim: 1
	}, {
		text: "Fantastic! Want to spin again?",
		anim: 4
	}]
}, Prodigy.Component.Wheel.Twilight_WHEEL_CONFIG = {
	wheelAtlas: "zone-lamplight",
	wheelFrameKey: "twilightWheelFrame",
	wheelBigKey: "twilightWheelBig",
	wheelPointerKey: "twilightWheelPointer",
	wheelFrameOffset: {
		x: 0,
		y: 32
	},
	wheelOffset: {
		x: 0,
		y: -84
	},
	wheelPointerOffset: {
		x: 0,
		y: 40
	},
	wheelPosition: {
		x: 1e3,
		y: 80
	},
	wheelDimensions: {
		w: 200,
		h: 200
	},
	wheelTarget: {
		x: 1100,
		y: 280
	},
	npcPosition: {
		x: 970,
		y: 300
	},
	npcName: "Spinner",
	npcHead: 2,
	npcHat: 1,
	npcDialogue: [{
		text: "Please come back between 4pm and 11pm to spin the Twilight Wheel for great prizes!",
		anim: 2
	}, {
		text: "Hi there! Do you want to Spin the Twilight Wheel?",
		anim: 1
	}, {
		text: "Watch that wheel spin!",
		anim: 4
	}, {
		text: "Sorry, you'll have to come back tomorrow to spin again!",
		anim: 2
	}, {
		text: "Fantastic! Want to spin again?",
		anim: 4
	}, {
		text: "Please come back tomorrow between 4pm and 11pm to spin the Twilight Wheel again for great prizes!",
		anim: 2
	}]
}, WHEELDATA_A = {
	tag: "Lamplight",
	zoneName: "zone-lamplight",
	atlas: "zone-lamplight",
	fullName: "Town Square",
	dialogue: [{
		text: "Hello there! Do you want to spin the Wheel of Wonder?",
		anim: 4
	}, {
		text: "Let's spin that wheel!",
		anim: 4
	}, {
		text: "Sorry, you'll have to come back tomorrow to spin again!",
		anim: 1
	}, {
		text: "Fantastic! Want to spin again?",
		anim: 4
	}]
};
var Wheel = function() {
	function e(e, t, i, a) {
		this.player = i, this.screen = a, Prodigy.Control.Element.call(this, e, t, 0, 25), this.setup();
		var s = WHEELDATA_A.dialogue[0];
		s.yes = this.trySpin.bind(this), s.no = this.close.bind(this);
		var r = e.prodigy.dialogue.create();
		r.setText(s), r.start("stache")
	}
	return e.DEBUG_SPIN_TIME_MS = -1, e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setup = function() {
		this.wasVisible = Util.isDefined(this.screen.questProgress) && this.screen.questProgress.visible, this.wasVisible && (this.screen.questProgress.visible = !1), this.wheelItems = this.getWheelItems();
		var e = this.game.world.centerX,
			t = this.game.world.centerY - 80;
		this.add(this.game.prodigy.create.sprite(e - 262, t - 304, "zone-lamplight", "wheelFrame")), this.wheel = this.game.prodigy.create.element(this, e, t), this.wheelAngle = 18, this.wheel.angle = this.wheelAngle, this.spinAngle = 0;
		var i = this.wheel.add(this.game.prodigy.create.sprite(0, 0, "zone-lamplight", "wheelBig"));
		i.anchor.setTo(.5, .5);
		for (var a, s = 0; s < this.wheelItems.length; s++) {
			var r = this.game.prodigy.create.element(this.wheel, 0, 0);
			r.scale.setTo(.7, .7);
			var n = (36 * s - (this.wheelAngle - 12)) * (Math.PI / 180);
			Util.log(this.wheelItems[s].item), a = this.game.prodigy.icon.createIcon(0, 0, this.game.prodigy.icon.iconKey(this.wheelItems[s].item), {
				x: .5,
				y: .5
			}), this.game.prodigy.load.isFileLoaded(this.game.prodigy.icon.iconKey(this.wheelItems[s].item)) ? this.correctIconPostLoad(a, n) : a.onTextureLoaded = this.correctIconPostLoad.bind(this, a, n), a.x = -(.5 * a.width * Math.cos(n) - 2.5 * a.height * Math.sin(n)), a.y = -(.5 * a.width * Math.sin(n) + 2.5 * a.height * Math.cos(n)), r.add(a)
		}
		this.add(this.game.prodigy.create.sprite(e - 250 + 236, t - 220, "zone-lamplight", "wheelPointer"))
	}, e.prototype.correctIconPostLoad = function(e, t) {
		e.x += .5 * e.width, e.y += .5 * e.height, e.angle = t * (180 / Math.PI)
	}, e.prototype.getWheelItems = function() {
		var e, t, i, a = [],
			s = Util.getDateTime(),
			r = ["outfit", "weapon", "boots"];
		switch (this.game.seededRandom.shuffleArray(r, s), Math.floor(3 * this.game.seededRandom.frac(s))) {
			case 0:
				if (e = this.game.seededRandom.pick(Items.getItems(r[0], 0), s), t = this.game.seededRandom.pick(Items.getItems(r[1], 3), s), i = this.game.seededRandom.pick(Items.getItems(r[2], 0), s), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
					a[0] = {
						item: e,
						weight: 4
					}, a[4] = {
						item: t,
						weight: 1
					}, a[7] = {
						item: i,
						weight: 4
					};
					break
				}
			case 1:
				if (e = this.game.seededRandom.pick(Items.getItems(r[0], 1), s), t = this.game.seededRandom.pick(Items.getItems(r[1], 2), s), i = this.game.seededRandom.pick(Items.getItems(r[2], 0), s), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
					a[0] = {
						item: e,
						weight: 3
					}, a[4] = {
						item: t,
						weight: 2
					}, a[7] = {
						item: i,
						weight: 4
					};
					break
				}
			case 2:
				if (e = this.game.seededRandom.pick(Items.getItems(r[0], 1), s), t = this.game.seededRandom.pick(Items.getItems(r[1], 1), s), i = this.game.seededRandom.pick(Items.getItems(r[2], 1), s), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
					a[0] = {
						item: e,
						weight: 3
					}, a[4] = {
						item: t,
						weight: 3
					}, a[7] = {
						item: i,
						weight: 3
					};
					break
				}
		}
		for (var n = Items.getItems("item", 0), o = 0; 10 > o; o++)
			if (!Util.isDefined(a[o])) {
				var h = {
					item: {
						type: "gold",
						N: 100
					},
					weight: 13
				};
				o % 3 === 0 && (h = {
					item: this.game.seededRandom.pick(n, s + 7 * o % 13),
					weight: 13
				}), a[o] = h
			} return a
	}, e.prototype.trySpin = function() {
		var e = null;
		if (this.player.data.numSpins > 0 && (e = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_SECOND_WHEEL_SPIN
			}, this.game.prodigy.network.sendConversionFunnelEvent(e.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_SPIN_AGAIN), this.game.prodigy.network.sendAnalytics("Second-Wheel-Spin")), this.dialogue = this.game.prodigy.dialogue.create(), this.player.canSpin()) {
			var t = WHEELDATA_A.dialogue[1];
			t.hideNext = !0, this.dialogue.setText(t), this.startSpin()
		} else this.dialogue.setText(WHEELDATA_A.dialogue[2]), this.player.isMember || this.dialogue.setText({
			callback: this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.WHEEL_SPIN, null, e)
		}), this.dialogue.setText({
			callback: this.close.bind(this)
		});
		this.dialogue.start("stache")
	}, e.prototype.close = function() {
		this.wasVisible && (this.screen.questProgress.visible = !0), this.destroy()
	}, e.prototype.startSpin = function() {
		var t = GameConstants.get("GameConstants.Features.Wheel.SPIN_TIME");
		GameConstants.get("GameConstants.Build.DEBUG") && e.DEBUG_SPIN_TIME_MS > 0 && (t = e.DEBUG_SPIN_TIME_MS);
		var i = this.selectedIndex || 0;
		this.selectedIndex = this.wheelItems.indexOf(Prodigy.Random.weightedArrayElement(this.wheelItems)), this.spinAngle = -36 * (this.selectedIndex - i), this.playSound(t, 100), this.wheelAngle += 2880 + this.spinAngle;
		var a = this.game.add.tween(this.wheel).to({
			angle: this.wheelAngle
		}, t, Phaser.Easing.Cubic.Out).start();
		a.onComplete.addOnce(this.endSpin, this), this.player.spinWheel()
	}, e.prototype.playSound = function(e, t) {
		if (!(0 >= e)) {
			this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "tick");
			var i = t + 9e-7 * Math.pow(t, 3);
			setTimeout(this.playSound.bind(this, e - i, i), t)
		}
	}, e.prototype.endSpin = function() {
		var e = (new Date).getHours();
		this.game.prodigy.network.sendAnalytics("Wheel-Spin-Completed-Control", e), this.dialogue.close(), this.game.prodigy.open.gotItem([this.wheelItems[this.selectedIndex].item], this.tryAgain.bind(this), null, "wheel-of-wonder")
	}, e.prototype.tryAgain = function() {
		var e = WHEELDATA_A.dialogue[3];
		e.yes = this.trySpin.bind(this), e.no = this.close.bind(this), this.dialogue.setText(e), this.dialogue.start("stache")
	}, e
}();
Prodigy.Component.TwilightWheel = function(e, t, i) {
	if (Prodigy.Component.Wheel.call(this, e, t, i), e.prodigy.twilightWheelPrizes.initPrizes(Util.getDateTime()), this.config = Prodigy.Component.Wheel.Twilight_WHEEL_CONFIG, this.wheelItems = e.prodigy.twilightWheelPrizes.data.prizes, this.setup(), this.removeOldSpinDates(), this.canSpin()) {
		var a = this.config.npcDialogue[1];
		a.yes = this.trySpin.bind(this), a.no = this.close.bind(this);
		var s = e.prodigy.dialogue.create();
		s.setText(a), s.start("stache")
	} else this.showComeBackToSpinMessage()
}, Prodigy.extends(Prodigy.Component.TwilightWheel, Prodigy.Component.Wheel, {
	constructor: Prodigy.Component.TwilightWheel,
	trySpin: function() {
		if (this.dialogue = this.game.prodigy.dialogue.create(), this.removeOldSpinDates(), this.canSpin()) {
			var e = this.config.npcDialogue[2];
			e.hideNext = !0, this.dialogue.setText(e), this.startSpin()
		} else this.dialogue.setText(this.config.npcDialogue[5]), this.player.isMember || this.dialogue.setText({
			callback: this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.WHEEL_SPIN)
		}), this.dialogue.setText({
			callback: this.close.bind(this)
		});
		this.dialogue.start("stache")
	},
	removeOldSpinDates: function() {
		if (Util.isDefined(this.player.data.spinDate) && Util.isDefined(this.player.data.spinDate.twilightDates))
			for (var e = null, t = new Date, i = 0; i < this.player.data.spinDate.twilightDates.length; i++) e = new Date(this.player.data.spinDate.twilightDates[i]), (e.getUTCDay() !== t.getUTCDay() || e.getUTCMonth() !== t.getUTCMonth() || e.getUTCFullYear() !== t.getUTCFullYear()) && (this.player.data.spinDate.twilightDates.splice(i, 1), i++)
	},
	canSpin: function() {
		return this.remainingSpins() > 0
	},
	remainingSpins: function() {
		var e = Util.isDefined(this.player.data.spinDate) && Util.isDefined(this.player.data.spinDate.twilightDates) ? this.player.data.spinDate.twilightDates.length : 0;
		return (this.player.isMember ? GameConstants.get("GameConstants.Features.TwilightWheel.MEMBER_SPINS") : GameConstants.get("GameConstants.Features.TwilightWheel.DEFAULT_SPINS")) - e
	},
	setSpinDate: function() {
		Util.isDefined(this.player.data.spinDate) || (this.player.data.spinDate = {}), Util.isDefined(this.player.data.spinDate.twilightDates) || (this.player.data.spinDate.twilightDates = []), this.player.data.spinDate.twilightDates.push((new Date).getTime()), this.player.updated = !0
	},
	startSpin: function() {
		var e = GameConstants.get("GameConstants.Features.TwilightWheel.RIGGED_REWARD"),
			t = this.selectedIndex || 0;
		this.selectedIndex = Util.isDefined(e) ? e : this.wheelItems.indexOf(Prodigy.Random.weightedArrayElement(this.wheelItems)), this.spin(t, this.selectedIndex, this.spinComplete.bind(this))
	},
	spinComplete: function() {
		this.setSpinDate();
		var e = (new Date).getHours();
		this.game.prodigy.network.sendAnalytics("Twilight-Wheel-Spin-Completed", e), this.dialogue.close(), this.game.prodigy.open.gotItem([this.game.prodigy.twilightWheelPrizes.getReward(this.selectedIndex).item], this.tryAgain.bind(this), null, "twilight-wheel")
	},
	tryAgain: function() {
		var e = this.config.npcDialogue[4];
		e.yes = this.trySpin.bind(this), e.no = this.close.bind(this), this.dialogue.setText(e), this.dialogue.start("stache")
	},
	showComeBackToSpinMessage: function() {
		var e = this.game.prodigy.player.isMember ? null : this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.WHEEL_SPIN);
		this.game.prodigy.open.messageBoxOkay(this.config.npcDialogue[5].text, "okay", e), Prodigy.Component.Wheel.prototype.showComeBackToSpinMessage.call(this)
	}
}), Prodigy.Component.BountyBoard = function(e, t, i) {
	this.game = e, this.config = Prodigy.Component.BountyBoard.CONFIG, this.setupBountyBoard(t, i), e.prodigy.player.hasCompletedTutorial() && i.addGnome(e, t, this.config.boardyPosition.x, this.config.boardyPosition.y, "Boardy", 4, 3, this.boardText.bind(this))
}, Prodigy.Component.BountyBoard.prototype = {
	constructor: Prodigy.Component.BountyBoard,
	setupBountyBoard: function(e, t) {
		var i = this.game.prodigy.player.hasCompletedTutorial(),
			a = i ? this.openBoard.bind(this, e) : this.game.prodigy.open.message.bind(this.game.prodigy.open, "Reach Firefly Forest to unlock the bounty board!", null);
		if (t.addClickableEvent(this.game, e, this.config.bountyBoardClickableEvent.x, this.config.bountyBoardClickableEvent.y, this.config.bountyBoardClickableEvent.w, this.config.bountyBoardClickableEvent.h, a, null), i) {
			this.pages = [];
			for (var s = 0; s < this.game.prodigy.player.state.get("world-bounties").length; s++) {
				var r = s + 84,
					n = this.game.prodigy.player.backpack.hasItem("item", r),
					o = n && 1 === this.game.prodigy.player.backpack.getItemData(this.game.prodigy.player.backpack.getItem("item", r), "complete"),
					h = this.game.prodigy.player.state.get("world-bounties")[s] > 0;
				!o && h && (this.pages[s] = e.content.add(this.game.prodigy.create.sprite(this.config.bountyNotesPosition.x + 20 * s, this.config.bountyNotesPosition.y, "zone-lamplight", "page")))
			}
		}
	},
	openBoard: function(e) {
		var t = this.game.prodigy.event.create();
		t.validPath(e.user, e.path, this.config.bountyBoardTarget.x, this.config.bountyBoardTarget.y), t.function(this.game.prodigy.open.bountyBoard.bind(this.game.prodigy.open)), t.start()
	},
	destroyPage: function(e) {
		Util.isDefined(this.pages[e]) && this.pages[e].destroy()
	},
	boardText: function() {
		for (var e = this.game.prodigy.bounty.getBounties(), t = 0, i = 0; i < e.length; i++)
			if (Util.isDefined(e[i].complete)) {
				this.game.prodigy.network.sendAnalytics("Bounty", "complete", "Events"), t += this.game.prodigy.bounty.getReward(e[i]);
				var a = this.game.prodigy.player.state.get("world-bounties");
				a[e[i].ID - 84] = -1 * a[e[i].ID - 84], this.game.prodigy.player.state.set("world-bounties", a), this.destroyPage(e[i].ID - 84), this.game.prodigy.player.backpack.consume("item", e[i].ID, 1)
			} if (t > 0) {
			var s = this.game.prodigy.event.create();
			s.text(13, "merchant"), s.function(this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [{
				type: "bounty",
				N: t
			}], null, null, "bounty-board-reward")), s.start(), this.game.prodigy.player.addBountyScore(t)
		} else this.openStore()
	},
	getState: function(e) {
		var t = this.game.prodigy.world.getZone("lamplight");
		return t.getState(e)
	},
	setState: function(e, t) {
		var i = this.game.prodigy.world.getZone("lamplight");
		i.setState(t, e)
	},
	openStore: function() {
		var e = this.game.prodigy.event.create(),
			t = this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.BOUNTY_REWARDS);
		t.callback = this.game.prodigy.player.getBountyScore.bind(this.game.prodigy.player), e.yesNoText(17, "merchant"), e.function(this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, t, "bounty")), e.start()
	}
}, Prodigy.Component.BountyBoard.CONFIG = {
	boardyPosition: {
		x: 860,
		y: 400
	},
	bountyBoardClickableEvent: {
		x: 900,
		y: 220,
		w: 160,
		h: 180
	},
	bountyNotesPosition: {
		x: 942.5,
		y: 300
	},
	bountyBoardTarget: {
		x: 980,
		y: 425
	}
}, Prodigy.Activity_Zone = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Activity_Zone", this.ID = "activity_zone", this.battleBG = "bg-battle-forest", this.onFaint = "activity_zone-B3", this.questHub = "activity_zone-B3", this.states = ["firstVisit", "dailyQuest", "questCompleteDialogue", "questExpiredDialogue", "handedOverQuest", "chest1"], this.monsterIds = [{
		ID: 19
	}, {
		ID: 21
	}, {
		ID: 22
	}, {
		ID: 34
	}, {
		ID: 36
	}, {
		ID: 37
	}, {
		ID: 41
	}, {
		ID: 53
	}, {
		ID: 54
	}, {
		ID: 58
	}, {
		ID: 60
	}, {
		ID: 64
	}, {
		ID: 65
	}, {
		ID: 67
	}, {
		ID: 70
	}, {
		ID: 71
	}, {
		ID: 75
	}, {
		ID: 82
	}, {
		ID: 88
	}, {
		ID: 93
	}], this.util = new Prodigy.Activity_ZoneUtil(e, this);
	var t = ["tileset-forest-new", "tileset-generic-new", "tileset-collisions", "tileset-activityzone"];
	this.maps = {
		A1: new Prodigy.Activity_Zone_A1(this, t),
		A2: new Prodigy.Activity_Zone_A2(this, t),
		B1: new Prodigy.Activity_Zone_B1(this, t),
		B2: new Prodigy.Activity_Zone_B2(this, t),
		B3: new Prodigy.Activity_Zone_B3(this, t),
		C1: new Prodigy.Activity_Zone_C1(this, t),
		C2: new Prodigy.Activity_Zone_C2(this, t)
	}
}, Prodigy.extends(Prodigy.Activity_Zone, Prodigy.Zone, {
	constructor: Prodigy.Activity_Zone
}), Prodigy.Activity_ZoneUtil = function(e, t) {
	Prodigy.ZoneUtil.call(this, e, t), Prodigy.Activity_ZoneUtil.FORCE_MONSTER_TYPE = !1, Prodigy.Activity_ZoneUtil.MONSTER_ID = 0
}, Prodigy.extends(Prodigy.Activity_ZoneUtil, Prodigy.ZoneUtil, {
	constructor: Prodigy.Activity_ZoneUtil,
	getDailyQuestData: function(e) {
		var t;
		switch (e) {
			case 0:
				var i = this.getMonsterId(),
					a = "Defeat 6 " + Items.getItemData("pet", i.ID).name + (22 === i.ID ? "" : "s"),
					s = "default-pet-" + i.ID,
					r = this._game.prodigy.assets.getImageBounds(s),
					n = this._game.prodigy.assets.getImagePivots(s),
					o = Util.isDefined(n[0]) ? -n[0] : -r[0],
					h = -r[3];
				t = {
					description: a,
					source: s,
					frame: null,
					xOffset: o,
					yOffset: h
				}
		}
		return t
	},
	getDailyQuestDescription: function(e) {
		var t = {};
		switch (e) {
			case 0:
				t = {
					type: "pet",
					ID: this.getMonsterId().ID,
					N: this.getRemainingQuestObjectives()
				}
		}
		return t
	},
	getMonsterId: function() {
		var e;
		if (GameConstants.get("GameConstants.Build.DEBUG") && Prodigy.Activity_ZoneUtil.FORCE_MONSTER_TYPE) e = this._zone.monsterIds[Prodigy.Activity_ZoneUtil.MONSTER_ID % this._zone.monsterIds.length];
		else {
			var t = this.hasDailyQuestExpired() || this.isDailyQuestComplete() || !Util.isDefined(this._zone.getState("dailyQuest")) ? Util.getDateId() : this._zone.getState("dailyQuest").dateId;
			e = this._zone.monsterIds[Math.floor(this._game.seededRandom.frac(t) * this._zone.monsterIds.length)]
		}
		return e
	},
	getMonsterList: function() {
		if (this.hasDailyQuestExpired() || this.isDailyQuestComplete() && this._zone.getState("handedOverQuest")) return this._zone.monsterIds;
		for (var e = Util.copyObject(this._zone.monsterIds), t = this.getMonsterId(), i = 0; i < e.length; i++)
			if (t.ID === e[i].ID) return e.splice(i, 1), e
	},
	onNpcClicked: function() {
		var e = this._game.prodigy.event.create();
		this._game.prodigy.network.sendAnalytics("activity-zone-npc", "speak-npc-MVP", "Events"), this.isDailyQuestComplete() === !0 ? (e.text(3, "swoopy"), e.text(4, "swoopy"), e.function(this.endQuest.bind(this))) : this.hasDailyQuestExpired() === !0 ? (e.text(0, "swoopy"), e.text(1, "swoopy"), e.function(this._game.prodigy.open.questDescription.bind(this._game.prodigy.open, this.getDailyQuestData(this.generateQuestId()), this.startQuest.bind(this)))) : e.text(2, "swoopy"), e.start()
	},
	startQuest: function() {
		this.startNewDailyQuest(this.generateQuestId(), 6), this._zone.setState("questCompleteDialogue", !1), this._zone.setState("questExpiredDialogue", !1), this._zone.setState("handedOverQuest", !1), Util.isDefined(this.screen) && this.screen.process.call(this.screen, !0)
	},
	endQuest: function() {
		this._zone.setState("handedOverQuest", !0), Util.isDefined(this.screen) && this.screen.process.call(this.screen, !0)
	}
}), Prodigy.Activity_Zone_Map = function(e, t, i, a, s, r, n) {
	Prodigy.Map.call(this, e, t, i, a, s, r, n)
}, Prodigy.extends(Prodigy.Activity_Zone_Map, Prodigy.Map, {
	constructor: Prodigy.Activity_Zone_Map,
	setup: function(e, t, i) {
		if (Prodigy.Map.prototype.setup.call(this, e, t, i), Util.isDefined(this.monsterCoords)) {
			var a = "Oops! You can't capture any monsters on this island.";
			if (this._zone.util.hasDailyQuestExpired() || this._zone.util.isDailyQuestComplete()) this.defaultMonsterSetup(e, t, a);
			else if (0 === this._zone.getState("dailyQuest").questId)
				if (this._zone.getState("dailyQuest").questState[this.mapId] === !0) this.defaultMonsterSetup(e, t, a);
				else
					for (var s = this._zone.util.getMonsterId(), r = Math.floor(this.game.seededRandom.frac(this._zone.getState("dailyQuest").dateId) * this.mapId) % this.monsterCoords.length, n = {
							randDir: !0,
							encounter: this._zone.util.getMonsterList(),
							catchOverrideMessage: a
						}, o = {
							randDir: !0,
							encounter: [s],
							catchOverrideMessage: a,
							highlight: !0,
							dailyQuest: this.mapId,
							zoneId: this._zone.ID,
							drops: [{
								type: "currency",
								ID: 9,
								N: 2
							}]
						}, h = !1, l = 0; l < this.monsterCoords.length; l++) l !== r ? (h = Util.isDefined(this._monsters[l + 1]) && Util.isDefined(this._monsters[l + 1].data) && Util.isDefined(this._monsters[l + 1].data.ID) && this._monsters[l + 1].data.ID === s.ID, this.addMonster(e, t, l + 1, this.monsterCoords[l].x, this.monsterCoords[l].y, !1, n, !1, null, h)) : this.addMonster(e, t, l + 1, this.monsterCoords[l].x, this.monsterCoords[l].y, !0, o, !1, null, !0)
		}
	},
	start: function(e, t, i) {
		Prodigy.Map.prototype.start.call(this, e, t, i);
		var a = this.game.prodigy.event.create();
		if (Util.isDefined(this._zone.getState("questCompleteDialogue")) && this._zone.getState("questCompleteDialogue") === !1 && this._zone.util.isDailyQuestComplete()) {
			var s = this._zone.ID.replace("_", "-");
			this.game.prodigy.network.sendAnalytics(s + "-quests", "quests-completed-MVP", "Events"), a.text(41, "noot"), a.function(this._zone.setState.bind(this._zone, "questCompleteDialogue", !0)), a.start()
		} else Util.isDefined(this._zone.getState("questExpiredDialogue")) && this._zone.getState("questExpiredDialogue") === !1 && this._zone.getState("handedOverQuest") === !1 && this._zone.util.hasDailyQuestExpired() && (a.text(166, "noot"), a.function(this._zone.setState.bind(this._zone, "questExpiredDialogue", !0)), a.start())
	},
	defaultMonsterSetup: function(e, t, i) {
		for (var a = {
				randDir: !0,
				encounter: this._zone.util.getMonsterList(),
				catchOverrideMessage: i
			}, s = 0; s < this.monsterCoords.length; s++) this.addMonster(e, t, s + 1, this.monsterCoords[s].x, this.monsterCoords[s].y, !1, a)
	}
}), Prodigy.Activity_Zone_A1 = function(e, t) {
	this.mapId = 0, this.monsterCoords = [{
		x: 260,
		y: 250
	}, {
		x: 680,
		y: 320
	}, {
		x: 760,
		y: 560
	}], Prodigy.Activity_Zone_Map.call(this, e, "A1", "Northwest Area", 260, 620, ["activity_zone-B1", "activity_zone-A2"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_A1, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_A1,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 220,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-B1", 100, 240, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 420,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-B1", 100, 420, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 260,
			y: 680,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-A2", 300, 100, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 1140,
			y: 680,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-A2", 1060, 100, null, AreaEvent.UP, !1)
	}
}), Prodigy.Activity_Zone_A2 = function(e, t) {
	this.mapId = 1, this.monsterCoords = [{
		x: 480,
		y: 240
	}, {
		x: 800,
		y: 440
	}], Prodigy.Activity_Zone_Map.call(this, e, "A2", "Western Shore", 1180, 480, ["activity_zone-B2", "activity_zone-A1"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_A2, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_A2,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 280,
			y: 40,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-A1", 260, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1100,
			y: 40,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-A1", 1140, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 480,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-B2", 100, 500, null, AreaEvent.RIGHT, !1)
	}
}), Prodigy.Activity_Zone_B1 = function(e, t) {
	this.mapId = 2, this.monsterCoords = [{
		x: 640,
		y: 570
	}], Prodigy.Activity_Zone_Map.call(this, e, "B1", "Swing Bridge", 320, 480, ["activity_zone-A1", "activity_zone-C1", "activity_zone-B2"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_B1, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_B1,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 220,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-A1", 1180, 220, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 200,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-C1", 100, 160, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 220,
			y: 680,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-B2", 200, 100, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 1180,
			y: 700,
			w: 120,
			h: 40,
			rect: !0
		}, "activity_zone-B2", 1160, 100, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 1260,
			y: 620,
			w: 40,
			h: 120,
			rect: !0
		}, "activity_zone-C1", 100, 620, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 380,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-C1", 100, 360, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 420,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-A1", 1180, 440, null, AreaEvent.RIGHT, !1)
	}
}), Prodigy.Activity_Zone_B2 = function(e, t) {
	this.mapId = 3, this.monsterCoords = [{
		x: 240,
		y: 340
	}, {
		x: 1e3,
		y: 340
	}], Prodigy.Activity_Zone_Map.call(this, e, "B2", "Island Center", 640, 360, ["activity_zone-B1", "activity_zone-A2", "activity_zone-C2", "activity_zone-B3"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_B2, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_B2,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 500,
			w: 80,
			h: 280,
			rect: !0
		}, "activity_zone-A2", 1180, 480, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 480,
			w: 80,
			h: 200,
			rect: !0
		}, "activity_zone-C2", 100, 480, null, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 200,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-B1", 220, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1160,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-C1", 100, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 200,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-B3", 200, 100, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-B3", 1080, 100, null, AreaEvent.DOWN, !1)
	}
}), Prodigy.Activity_Zone_B3 = function(e, t) {
	Prodigy.Activity_Zone_Map.call(this, e, "B3", "Central Village", 640, 360, ["activity_zone-B2"], t.concat("npc-sprite-merchant"))
}, Prodigy.extends(Prodigy.Activity_Zone_B3, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_B3,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 200,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-B2", 200, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1080,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "activity_zone-B2", 1080, 620, null, AreaEvent.UP, !1), this.addHealStone(e, t, 500, 400), new Prodigy.Container.Swoopy(e, t.content, 585, 300, this._zone.util.onNpcClicked.bind(this._zone.util)), Util.isDefined(this._zone.getState("firstVisit")) && this._zone.getState("firstVisit") !== !0 || this._zone.setState("firstVisit", !1), this._zone.util.screen = t
	}
}), Prodigy.Activity_Zone_C1 = function(e, t) {
	this.mapId = 4, this.monsterCoords = [{
		x: 440,
		y: 160
	}, {
		x: 840,
		y: 280
	}, {
		x: 400,
		y: 440
	}], Prodigy.Activity_Zone_Map.call(this, e, "C1", "Northeast Area", 520, 500, ["activity_zone-B1", "activity_zone-C2"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_C1, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_C1,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 140,
			w: 80,
			h: 200,
			rect: !0
		}, "activity_zone-B1", 1180, 220, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 620,
			w: 80,
			h: 120,
			rect: !0
		}, "activity_zone-B2", 1160, 100, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 360,
			w: 80,
			h: 160,
			rect: !0
		}, "activity_zone-B1", 1180, 420, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 240,
			h: 80,
			rect: !0
		}, "activity_zone-C2", 1060, 100, null, AreaEvent.DOWN, !1), this.addChest(e, t, "chest1", 230, 600, [{
			type: "item",
			ID: 96
		}, {
			type: "item",
			ID: 97
		}, {
			type: "item",
			ID: 106
		}])
	}
}), Prodigy.Activity_Zone_C2 = function(e, t) {
	this.mapId = 5, this.monsterCoords = [{
		x: 440,
		y: 160
	}, {
		x: 760,
		y: 160
	}, {
		x: 660,
		y: 500
	}], Prodigy.Activity_Zone_Map.call(this, e, "C2", "River Bridge", 100, 480, ["activity_zone-C1", "activity_zone-B2"], t)
}, Prodigy.extends(Prodigy.Activity_Zone_C2, Prodigy.Activity_Zone_Map, {
	constructor: Prodigy.Activity_Zone_C2,
	setup: function(e, t, i) {
		Prodigy.Activity_Zone_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1060,
			y: 40,
			w: 120,
			h: 80,
			rect: !0
		}, "activity_zone-C1", 1040, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 480,
			w: 80,
			h: 160,
			rect: !0
		}, "activity_zone-B2", 1180, 480, null, AreaEvent.LEFT, !1)
	}
}), Prodigy.Component.Locomotion = function(e) {
	this.game = e, this.screen = null, this.creatureContainer = null
}, Prodigy.Component.Locomotion.prototype = {
	setup: function(e, t) {
		this.screen = e, this.creatureContainer = t
	},
	destroy: function() {},
	update: function() {}
}, Prodigy.Component.PlayerLocomotion = function(e) {
	Prodigy.Component.Locomotion.call(this, e), this.target = {
		x: -1,
		y: -1
	}, this.lastTargetBroadcasted = {
		x: -1,
		y: -1
	}, this.lastUpdateCount = 0, this.isMainPlayer = !1, this.DISTANCE_THRESHOLD = 4, this.TIME_THRESHOLD = 1e3, this.EMIT_MESSAGE = 120, this.UPDATE_INTERVAL = 200
}, Prodigy.extends(Prodigy.Component.PlayerLocomotion, Prodigy.Component.Locomotion, {
	constructor: Prodigy.Component.PlayerLocomotion,
	setup: function(e, t, i) {
		Prodigy.Component.Locomotion.prototype.setup.call(this, e, t), this.isMainPlayer = i, this.isMainPlayer && (this.game.broadcaster.addAppListener(Prodigy.Events.PlayerLocomotion.MOVE_PLAYER, this.onMovePlayer.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.PlayerLocomotion.STOP_PLAYER, this.onStopPlayer.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.onGetTarget.bind(this), this), document.addEventListener("visibilitychange", this.onStopPlayer.bind(this), !1))
	},
	destroy: function() {
		Prodigy.Component.Locomotion.prototype.destroy.call(this), this.isMainPlayer && (this.game.broadcaster.removeAppListener(Prodigy.Events.PlayerLocomotion.MOVE_PLAYER, this.onMovePlayer.bind(this), this), this.game.broadcaster.removeAppListener(Prodigy.Events.PlayerLocomotion.STOP_PLAYER, this.onMovePlayer.bind(this), this), this.game.broadcaster.removeAppListener(Prodigy.Events.PlayerLocomotion.GET_TARGET, this.onGetTarget.bind(this), this), document.removeEventListener("visibilitychange", this.onStopPlayer.bind(this), !1))
	},
	update: function() {
		if (Prodigy.Component.Locomotion.prototype.update.call(this), this.game.prodigy.updateCount % this.UPDATE_INTERVAL === 0) {
			if (-1 === this.target.x && -1 === this.target.y && (this.creatureContainer.x > 0 || this.creatureContainer.y > 0)) {
				var e = this.screen.path.xyToTile(this.creatureContainer.x, this.creatureContainer.y);
				this.target.x = e.x, this.target.y = e.y
			}
			this.broadcastPosition()
		}
	},
	broadcastPosition: function() {
		this.isMainPlayer && !this.creatureContainer.evtProc && (this.lastTargetBroadcasted.x !== this.target.x || this.lastTargetBroadcasted.y !== this.target.y) && this.game.prodigy.updateCount - this.lastUpdateCount > this.EMIT_MESSAGE && (Phaser.Math.distanceSq(this.target.x, this.target.y, this.lastTargetBroadcasted.x, this.lastTargetBroadcasted.y) > this.DISTANCE_THRESHOLD || this.game.prodigy.updateCount - this.lastUpdateCount > 2 * this.EMIT_MESSAGE) && (this.lastUpdateCount = this.game.prodigy.updateCount, this.lastTargetBroadcasted.x = this.target.x, this.lastTargetBroadcasted.y = this.target.y, this.game.prodigy.network.emitMessage({
			action: "move",
			data: {
				userID: this.game.prodigy.player.userID,
				target: this.target
			}
		}), Util.log("My position broadcast! (" + this.target.x + ", " + this.target.y + ")", Util.DEBUG))
	},
	onGetTarget: function(e) {
		return Util.isDefined(e) && e ? {
			x: this.creatureContainer.x,
			y: this.creatureContainer.y
		} : this.target
	},
	onFindPath: function(e) {
		if (Util.isDefined(e)) {
			var t = this.screen.path.xyToTile(e[0].x, e[0].y);
			GameConstants.get("GameConstants.Debug.WARP_MODE_ENABLED") ? (this.screen.user.x = e[0].x, this.screen.user.y = e[0].y, this.screen.path.getCallback(t.x, t.y, this.isMainPlayer)) : this.creatureContainer.setPath(e, this.screen.path.getCallback(t.x, t.y, this.isMainPlayer)), this.broadcastPosition()
		}
	},
	setNewTarget: function(e, t) {
		if (this.screen.path.isNodeOpen(e, t)) {
			var i = this.screen.path.tileToXY(e, t);
			this.creatureContainer.x <= 0 && this.creatureContainer.y <= 0 ? (this.creatureContainer.x = i.x, this.creatureContainer.y = i.y, Util.isNullOrUndefined(this.creatureContainer.follow) || (this.creatureContainer.follow.x = i.x, this.creatureContainer.follow.y = i.y - 1)) : (this.target.x !== e || this.target.y !== t) && this.screen.path.findPath(this.creatureContainer.x, this.creatureContainer.y, i.x, i.y, this.onFindPath.bind(this)), this.target.x = e, this.target.y = t
		}
	},
	onMovePlayer: function(e, t) {
		var i = this.screen.path.xyToTile(e, t);
		return this.screen.path.isNodeOpen(i.x, i.y) ? (this.target.x = i.x, this.target.y = i.y, this.screen.path.findPath(this.creatureContainer.x, this.creatureContainer.y, e, t, this.onFindPath.bind(this)), !0) : !1
	},
	onStopPlayer: function() {
		var e = this.screen.path.xyToTile(this.creatureContainer.x, this.creatureContainer.y);
		this.target.x = e.x, this.target.y = e.y, this.creatureContainer.stand(), this.creatureContainer.stopTweens()
	}
}), Prodigy.House = function(e) {
	Prodigy.Zone.call(this, e), this.game = e, this.util = new Prodigy.ZoneUtil(e, this), this.name = "House", this.ID = "house", this.bgID = 0, this.bgm = "bgm-tutorial", this.minLevel = 1, this.maxLevel = 4, this.battleBG = "bg-battle-mountain", this.onFaint = "house", this.questHub = "house", this.hasClickedLockButton = !1, this.screen = null, this.states = ["daily", "private", "hasClickedLockButton", "hasClickedHouseIcon", "hasClickedWorldMap", "hasClickedPlayerCardVisit", "lastInteractionDateMs", "houseMovingBreadcrumbs"], this.quests = {
		1: new Prodigy.House_Q1(this, ["tileset-interior-general", "tileset-wall-collisions", "bgm-tutorial"])
	}, this.scenes = {
		intro: new Prodigy.House_Intro(this, ["tileset-interior-general", "tileset-wall-collisions", "bgm-tutorial"]),
		battle: new Prodigy.House_Battle(this),
		arrows: new Prodigy.House_Arrows(this)
	}, this.monsters = [], this.game.broadcaster.addAppListener(Prodigy.Events.House.CLICKED_HOUSE_ICON, this.onWorldMapHouseIconClick.bind(this), this, "UI", !0), this.game.broadcaster.addAppListener(Prodigy.Events.Boot.LOADED, this.intializeHouseMaps.bind(this), this)
}, Prodigy.House.Menu = {}, Prodigy.extends(Prodigy.House, Prodigy.Zone, {
	constructor: Prodigy.House,
	init: function(e, t, i) {
		Prodigy.Zone.prototype.init.call(this, e, t, i), this.screen = t, this.hasClickedLockButton = e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON), Util.isDefined(this.getCurrentQuest()) || this.startQuest(1), this.game.broadcaster.removeAppListener(Prodigy.Events.House.CLICKED_HOUSE_ICON, this, "UI"), e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE) && e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE) || this.game.broadcaster.addAppListener(Prodigy.Events.House.CLICKED_HOUSE_ICON, this.onWorldMapHouseIconClick.bind(this), this, "UI", !0)
	},
	intializeHouseMaps: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Boot.LOADED, this), this.store = this.game.prodigy.stores.getStore(this.game.prodigy.stores.SHOPS.HOUSES), this.store.defaultMemberAd = Prodigy.Menu.MemberAd.NEW_HOUSE, this.maps = {
			exit: new Prodigy.PalletPass(this)
		};
		var e = ["tileset-collisions", "tileset-wall-collisions", "bgm-tutorial"],
			t = Items.data.dormbg;
		for (var i in Prodigy.House.HOUSES) {
			var a = Prodigy.House.HOUSES[i];
			for (var s in a.houses) {
				for (var r = null, n = -1, o = 0; o < t.length; o++) {
					var h = t[o];
					if (h.data.tag === a.houses[s].tag) {
						n = h.ID;
						break
					}
				}
				r = this.game.prodigy.stores.getCost(this.store, "dormbg", n), Util.isDefined(r) && (this.maps[s] = new Prodigy.HouseMap(this, a, s, e), this.maps["preview-" + s] = new Prodigy.HouseMapPreview(this, a, s, e, r))
			}
		}
	},
	getAllowsVisiting: function() {
		return Util.isDefined(this.player) && this.player.getAllowsHouseVisitors()
	},
	setAllowsVisiting: function(e) {
		Util.isDefined(this.player) && (!this.player.isMember && e && (e = !1, Util.log("House.setAllowsVisiting - player is not a member but is trying to unlock house for visiting.  Defaulting to locked.", Util.INFO)), this.player.setAllowsHouseVisitors(e)), this.screen.menuBar.open(0, !0)
	},
	gotoPreview: function(e) {
		this.teleport("preview-" + this.getHouseMapFromTag(e), 0, 0, this.game.prodigy.player, {})
	},
	getHouseMapFromTag: function(e) {
		for (var t in this.maps)
			if (this.maps[t].houseTag === e) return t;
		return "suburbs"
	},
	teleport: function(e, t, i, a, s) {
		if (e.indexOf("exit") > -1) return Prodigy.Zone.prototype.teleport.call(this, e, t, i, a, s), void 0;
		if (this.player = Util.isDefined(a) ? a : this.game.prodigy.player, s = s || {}, s.assets = Util.isDefined(s.assets) ? s.assets : [], -1 === e.indexOf("preview")) {
			var r = this.getHouseMapFromTag(this.player.house.getCurrentHouseTag());
			if (Util.isDefined(r) || (r = this.getHouseMapFromTag("suburbs")), !Util.isDefined(this.maps[r])) return Util.log("House was not found: " + r), void 0;
			e = r
		}
		this.maps[e].setOwner(this.player), Prodigy.Zone.prototype.teleport.call(this, e, t, i, [], s)
	},
	setup: function(e, t, i) {
		if (!Util.isDefined(this.getCurrentQuest()) && Util.isDefined(this.player) && this.player.userID === this.game.prodigy.player.userID && i.getTag().indexOf("exit") < 0) {
			var a = this.getState("lastInteractionDateMs"),
				s = Util.isDefined(a) ? new Date(a) : null;
			Util.isDefined(s) && Util.isDateToday(s) || this.game.prodigy.network.sendAnalytics("House-daily-interaction"), this.setState("lastInteractionDateMs", (new Date).getTime())
		}
		return this.setAllowsVisiting(this.getAllowsVisiting()), Prodigy.Zone.prototype.setup.call(this, e, t, i)
	},
	start: function(e, t) {
		Prodigy.Zone.prototype.start.call(this, e, t), e.input.enabled = !0
	},
	move: function() {
		this.bgID !== this.player.house.getBackground() - 1 && this.game.prodigy.world.teleport("house", null, null, this.player)
	},
	openHouseStore: function() {
		var e = {
			shopkeeperTag: "npc-face-mozza-ella",
			shopkeeperFrame: "face_0",
			scaleX: .89,
			scaleY: .89
		};
		this.game.prodigy.open.store(this.store, null, e, function() {
			this.game.prodigy.player.house.setAllInactive(), this.teleport("")
		}.bind(this), {
			message: "Would you like to move here? The movers will put all of your items back in your inventory, and you won't be able to use your current house until you buy it again and move back."
		})
	},
	getDailyMaps: function() {
		var e = [];
		for (var t in this.maps) Util.isDefined(this.maps[t].daily_coors) && e.push(t);
		return e
	},
	onWorldMapHouseIconClick: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.House.CLICKED_HOUSE_ICON, this, "UI"), this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE) || this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE), this.game.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE) || this.game.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE)
	}
}), Prodigy.House.VISITING_UNLOCKED_TEXT = "Wizards can visit your house now!", Prodigy.House.VISITING_LOCKED_TEXT = "Wizards can no longer visit your house.", Prodigy.House.HOUSES = {
	suburbs: {
		assets: ["tileset-interior-general", "tileset-wall-collisions", "bgm-tutorial"],
		houses: {
			suburbs: {
				tag: "suburbs",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 820,
					y: 540,
					w: 100,
					h: 125
				}
			},
			"small-0": {
				tag: "small0",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 380,
					y: 540,
					w: 120,
					h: 120
				}
			},
			"small-1": {
				tag: "small1",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 660,
					y: 540,
					w: 120,
					h: 120
				}
			},
			"medium-0": {
				tag: "medium0",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 180,
					y: 620,
					w: 120,
					h: 120
				}
			},
			"medium-1": {
				tag: "medium1",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 620,
					y: 460,
					w: 120,
					h: 120
				}
			},
			"large-0": {
				tag: "large0",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 100,
					y: 620,
					w: 120,
					h: 120
				}
			},
			"large-1": {
				tag: "large1",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 140,
					y: 620,
					w: 120,
					h: 120
				}
			}
		}
	},
	coolCave: {
		assets: ["tileset-interior-icecave"],
		houses: {
			"cool-cave": {
				tag: "coolCave",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 1140,
					y: 620,
					w: 120,
					h: 120
				}
			},
			"cool-cave-unique-1": {
				tag: "coolCaveUnique1",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 1100,
					y: 620,
					w: 120,
					h: 120
				}
			},
			"cool-cave-unique-2": {
				tag: "coolCaveUnique2",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 660,
					y: 580,
					w: 120,
					h: 120
				}
			}
		}
	},
	firePit: {
		assets: ["tileset-firepit"],
		houses: {
			"fire-pit": {
				tag: "firePit",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 660,
					y: 620,
					w: 120,
					h: 120
				}
			},
			"fire-pit-2": {
				tag: "firePit2",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 220,
					y: 580,
					w: 120,
					h: 120
				}
			},
			"fire-pit-3": {
				tag: "firePit3",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 1140,
					y: 660,
					w: 120,
					h: 120
				}
			}
		}
	},
	forest: {
		assets: ["tileset-generic", "tileset-interior-treehouse"],
		houses: {
			forest: {
				tag: "forest",
				entryPoint: {
					x: 700,
					y: 250
				},
				exit: {
					x: 1100,
					y: 660,
					w: 120,
					h: 120
				}
			},
			"treehouse-unique-1": {
				tag: "treehouseUnique1",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 140,
					y: 660,
					w: 120,
					h: 120
				}
			},
			"treehouse-unique-2": {
				tag: "treehouseUnique2",
				entryPoint: {
					x: 640,
					y: 360
				},
				exit: {
					x: 220,
					y: 620,
					w: 120,
					h: 120
				}
			}
		}
	},
	largeHouse: {
		assets: ["tileset-interior-general"],
		houses: {
			"house-large-3": {
				tag: "houseLarge3",
				entryPoint: {
					x: 550,
					y: 220
				},
				exit: {
					x: 620,
					y: 340,
					w: 120,
					h: 120
				}
			},
			"house-large-4": {
				tag: "houseLarge4",
				entryPoint: {
					x: 140,
					y: 360
				},
				exit: {
					x: 140,
					y: 660,
					w: 120,
					h: 120
				}
			}
		}
	}
}, Prodigy.House.Menu.HouseEditorMenu = function(e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideOverlay: !0,
		hideContent: !1
	}), this.screen = a, this.game = e, this.houseMap = i, this.storeData = this.game.prodigy.stores.getStore(e.prodigy.stores.SHOPS.HOUSE_ITEMS), this.itemsScroll = null, this.currentCategory = null, this.categoryDirty = !1, this.categories = [{
		icon: {
			ID: 1,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Comfy", 1),
		category: "Comfy"
	}, {
		icon: {
			ID: 3,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Surface", 1),
		category: "Surface"
	}, {
		icon: {
			ID: 6,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Plants", 1),
		category: "Plants"
	}, {
		icon: {
			ID: 13,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Storage", 1),
		category: "Storage"
	}, {
		icon: {
			ID: 18,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Wall", 1),
		category: "Wall"
	}, {
		icon: {
			ID: 41,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Lamps", 1),
		category: "Lamps"
	}, {
		icon: {
			ID: 22,
			type: "dorm"
		},
		callback: this.showCategoryPage.bind(this, "Items", 1),
		category: "Items"
	}], this.trashIcon = this.game.prodigy.create.button(this, 1160, 500, "icons", "dorm-trash", this.game.prodigy.open.confirm.bind(this.game.prodigy.open, "Do you want to store all of your furniture? \n\nTo place it back in your room, just choose one of the above categories and select it from the bottom storage menu!", this.removeAllItems.bind(this))), this.rotateButton = this.game.prodigy.create.button(this, 0, 0, "icons", "dorm-rotate", this.rotateCurrentFocusedItem.bind(this)), this.rotateButton.visible = !1, this.rotateButton.sprite.anchor.setTo(.5, .5), this.focusedItem = null, a.menuBar.show(!1), this.setup(), this.setEditing(), this.game.input.onUp.add(this.inputReleased, this, -999)
}, Prodigy.extends(Prodigy.House.Menu.HouseEditorMenu, Prodigy.Control.Menu, {
	constructor: Prodigy.House.Menu.HouseEditorMenu,
	menuSetup: function() {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.showFrame("map", "DESIGN-A-HOUSE", this.categories);
		var e = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [e]), this.updateCategoryTabState(), this.itemsScroll = new Prodigy.House.Menu.HouseItemsScroll(this.game, this, 190, 620), this.itemsScroll.onIconPressed.add(this.spawnHouseItem, this), this.btns[0].isActive ? this.btns[0].onDown() : this.showCategoryPage(this.categories[0].category)
	},
	close: function() {
		this.screen.menuBar.show(!0), this.game.broadcaster.broadcast(Prodigy.Events.House.CLOSE_EDITOR, this.game), this.setEditing(!1), this.game.input.onUp.remove(this.inputReleased, this), Prodigy.Control.Menu.prototype.close.call(this)
	},
	showCategoryPage: function(e) {
		Util.isDefined(this.itemsScroll) && (this.currentCategory = e, this.itemsScroll.showItems(this.getUnplacedItemsInCategory(e)))
	},
	updateCategoryTabState: function() {
		for (var e = 0, t = this.categories.length; t > e; ++e) this.getUnplacedItemsInCategory(this.categories[e].category).length > 0 ? this.btns[e].setActive() : this.btns[e].setInactive()
	},
	getUnplacedItemsInCategory: function(e) {
		var t = this.game.prodigy.player.house.getUnplacedItems();
		return t.filter(function(t) {
			var i = Items.getItemData("dorm", t.ID);
			return i.category.toLowerCase() === e.toLowerCase() ? i : null
		})
	},
	storeWasClosed: function() {
		if (this.categoryDirty) {
			this.categoryDirty = !1;
			var e = this.getSelectedCategoryIndex();
			e > -1 && this.clickBtn(e, this.btns, this.showCategoryPage.bind(this, this.currentCategory))
		}
	},
	getSelectedCategoryIndex: function() {
		return this.getIndexOfCategory(this.currentCategory)
	},
	getIndexOfCategory: function(e) {
		return this.categories.findIndex(function(t) {
			return t.category === e
		})
	},
	itemPurchased: function(e) {
		var t = Items.getItemData("dorm", e.ID);
		this.currentCategory.toLowerCase() === t.category.toLowerCase() && (this.categoryDirty = !0), this.btns[this.getIndexOfCategory(t.category)].setActive()
	},
	spawnHouseItem: function(e, t, i) {
		this.clearFocusedItem();
		var a = t + (20 - t % 20),
			s = i - i % 20,
			r = this.game.prodigy.create.houseItem(this.houseMap.content, e, Math.floor(a), Math.floor(s), 0, this.houseMap),
			n = r.findComponent(Prodigy.Component.HouseItem);
		n.setEditable();
		var o = function(e, t) {
			if (Util.isDefined(e.input)) this.game.time.events.add(66, o, this, e, t);
			else {
				var i = e.getRenderer().getInputHandler();
				this.game.input.activePointer.isDown && !Util.isNullOrUndefined(i) ? (i._pointerData[this.game.input.activePointer.id].isDown = !0, i.startDrag(this.game.input.activePointer)) : e.gameObject.destroy()
			}
		};
		this.game.time.events.add(33, o, this, n, o), n.onItemDropped.addOnce(this.itemWasPlacedInHouse, this)
	},
	itemWasPlacedInHouse: function(e, t, i) {
		if (this.itemsScroll.reduceQuantity(e.itemID), this.itemsScroll.getItemCount() < 1) {
			var a = this.getSelectedCategoryIndex();
			this.resetButton(a), this.btns[a].setInactive(), this.currentBtn = -1
		}
		this.houseMap.addHouseItem(e.gameObject), this.registerHouseItemListeners(e), this.game.prodigy.player.house.setActive(e.itemID, t, i, 0, 0, 0, 0, 0)
	},
	setEditing: function(e) {
		if (void 0 === e && (e = !0), !Util.isNullOrUndefined(this.houseMap))
			for (var t = 0, i = this.houseMap.houseItems.length; i > t; ++t) {
				var a = this.houseMap.houseItems[t].findComponent(Prodigy.Component.HouseItem);
				a.setEditable(e), e ? this.registerHouseItemListeners(a) : this.unregisterHouseItemListeners(a)
			}
	},
	registerHouseItemListeners: function(e) {
		e.onItemInputDown.add(this.itemReceivedFocus, this, 0, e), e.onItemDropped.add(this.checkDeleteItem, this, 0, e), e.onItemMoved.add(this.itemWasMoved, this, 0, e), e.onItemDrag.add(this.hideRotateButton, this)
	},
	unregisterHouseItemListeners: function(e) {
		e.onItemInputDown.remove(this.itemReceivedFocus, this), e.onItemDropped.remove(this.checkDeleteItem, this), e.onItemMoved.remove(this.itemWasMoved, this), e.onItemDrag.remove(this.hideRotateButton, this)
	},
	checkDeleteItem: function(e) {
		Phaser.Rectangle.intersects(this.trashIcon.getBounds(), e.getRenderer().getBounds()) ? (this.clearFocusedItem(), this.removeHouseItem(e)) : !Util.isNullOrUndefined(this.focusedItem) && this.focusedItem.canRotate() && (this.rotateButton.visible = !0)
	},
	removeAllItems: function() {
		for (; this.houseMap.houseItems.length > 0;) this.removeHouseItem(this.houseMap.houseItems[0].findComponent(Prodigy.Component.HouseItem))
	},
	removeHouseItem: function(e) {
		this.clearFocusedItem(), this.houseMap.removeHouseItem(e.gameObject);
		for (var t = Items.getItemData("dorm", e.itemID).category, i = this.game.prodigy.player.house.data.active, a = 0, s = i.length; s > a; ++a)
			if (i[a].ID === e.itemID && Phaser.Math.fuzzyEqual(i[a].x, e.gameObject.x) && Phaser.Math.fuzzyEqual(i[a].y, e.gameObject.y)) {
				this.game.prodigy.player.house.setInactive(i[a]);
				break
			} if (t === this.currentCategory)
			if (0 === this.itemsScroll.houseItems.length) {
				var r = this.getSelectedCategoryIndex();
				this.btns[r].setActive(), this.clickBtn(r, this.btns, this.showCategoryPage.bind(this, this.currentCategory))
			} else this.itemsScroll.increaseQuantity(e.itemID);
		else this.btns[this.getIndexOfCategory(t)].setActive();
		e.gameObject.destroy()
	},
	itemWasMoved: function(e, t, i, a, s) {
		this.updateItem(e, t, i, a, s), this.itemReceivedFocus(e)
	},
	updateItem: function(e, t, i, a, s) {
		void 0 === t && (t = e.gameObject.x), void 0 === i && (i = e.gameObject.y), void 0 === a && (a = e.gameObject.x), void 0 === s && (s = e.gameObject.y);
		for (var r = this.game.prodigy.player.house.data.active, n = 0, o = r.length; o > n; ++n)
			if (r[n].ID === e.itemID && Phaser.Math.fuzzyEqual(r[n].x, t) && Phaser.Math.fuzzyEqual(r[n].y, i)) {
				this.game.prodigy.player.house.updateActive(r[n], e.itemID, a, s, 1, 0, 0, 0, e.orientation);
				break
			}
	},
	itemReceivedFocus: function(e) {
		this.focusedItem = e, this.showRotationButton(e)
	},
	clearFocusedItem: function() {
		this.focusedItem = null, this.rotateButton.visible = !1
	},
	showRotationButton: function(e) {
		if (this.focusedItem.canRotate()) {
			this.rotateButton.visible = !0;
			var t = e.getRenderer().getWorld();
			this.rotateButton.x = t.x, this.rotateButton.y = t.y - 5
		}
	},
	rotateCurrentFocusedItem: function() {
		if (Util.isDefined(this.focusedItem)) {
			var e = this.focusedItem.gameObject.findComponent(Prodigy.Framework.Core.Renderer);
			e.onLoaded.addOnce(function() {
				this.focusedItem.setEditable(!1), this.focusedItem.setEditable(!0), e.playAnimation("idle", !0)
			}, this), this.focusedItem.rotateItem(), this.updateItem(this.focusedItem)
		}
	},
	hideRotateButton: function() {
		this.rotateButton.visible = !1
	},
	inputReleased: function(e) {
		if (!Util.isNullOrUndefined(e.targetObject)) {
			var t = e.targetObject.sprite.parent,
				i = t instanceof Prodigy.Framework.Core.GameObject && Util.isDefined(t.findComponent(Prodigy.Component.HouseItem)),
				a = t instanceof Prodigy.Control.Button && "dorm-rotate" === t.sprite.frameName;
			i || a || this.clearFocusedItem()
		}
	}
}), Prodigy.House.Menu.HouseItemsScroll = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.pageNumber = 0, this.houseItems = [], this.onIconPressed = new Phaser.Signal, this.itemIcons = [], this.pageBackground = this.add(this.game.prodigy.create.sprite(25, 30, "core", "overlay-light")), this.pageBackground.alpha = .2, this.pageBackground.width = 670, this.pageBackground.height = 50, this.pageBackground.visible = !1, this.prevPageButton = this.game.prodigy.create.button(this, 0, 30, "icons", "back", this.decreasePageNumber.bind(this)), this.nextPageButton = this.game.prodigy.create.button(this, 670, 30, "icons", "next", this.increasePageNumber.bind(this)), this.prevPageButton.visible = !1, this.nextPageButton.visible = !1
}, Prodigy.extends(Prodigy.House.Menu.HouseItemsScroll, Prodigy.Control.Element, {
	constructor: Prodigy.House.Menu.HouseItemsScroll,
	showItems: function(e) {
		this.houseItems = e.slice(), e.length > 0 ? (this.showItemPages(!0), this.setPage(0), this.updatePrevPageButton(), this.updateNextPageButton()) : this.showItemPages(!1)
	},
	setItemIcon: function(e, t, i) {
		if (e < this.itemIcons.length) this.itemIcons[e].setItemID(t), this.itemIcons[e].setQuantity(i), this.itemIcons[e].visible = !0;
		else {
			var a = new Prodigy.House.Menu.HouseItemIcon(this.game, this, t, i, 70 + 100 * e, 0);
			a.onIconPressed = this.onIconPressed, this.itemIcons.push(a)
		}
		var s = "vertical-dorm-" + t;
		this.game.cache.checkImageKey(s) || this.game.prodigy.load.assets([s], null)
	},
	showItemPages: function(e) {
		void 0 === e && (e = !0), this.pageBackground.visible = e, this.nextPageButton.visible = e, this.prevPageButton.visible = e;
		for (var t = 0, i = this.itemIcons.length; i > t; ++t) this.itemIcons[t].visible = e
	},
	increasePageNumber: function() {
		this.setPage(this.pageNumber + 1), this.updateNextPageButton(), this.updatePrevPageButton()
	},
	decreasePageNumber: function() {
		this.setPage(this.pageNumber - 1), this.updatePrevPageButton(), this.updateNextPageButton()
	},
	updatePrevPageButton: function() {
		this.pageNumber <= 0 ? this.prevPageButton.setInactive() : this.prevPageButton.isActive || this.prevPageButton.setActive()
	},
	updateNextPageButton: function() {
		this.pageNumber >= this.getPageCount() - 1 ? this.nextPageButton.setInactive() : this.nextPageButton.isActive || this.nextPageButton.setActive()
	},
	setPage: function(e) {
		this.pageNumber = Phaser.Math.clamp(e, 0, this.getPageCount());
		for (var t = this.houseItems.slice(6 * this.pageNumber, 6 * (this.pageNumber + 1)), i = 0, a = Math.max(this.itemIcons.length, t.length); a > i; ++i) i < t.length ? this.setItemIcon(i, t[i].ID, t[i].N) : this.itemIcons[i].visible = !1
	},
	getPageCount: function() {
		return Math.ceil(this.houseItems.length / 6)
	},
	getItemIndex: function(e) {
		return this.houseItems.findIndex(function(t) {
			return t.ID === e
		})
	},
	reduceQuantity: function(e) {
		var t = this.getItemIndex(e);
		if (t > -1) {
			this.houseItems[t].N -= 1, this.houseItems[t].N <= 0 && this.houseItems.splice(t, 1);
			var i = 6 * this.pageNumber;
			return t >= i && i + 6 > t && (this.houseItems.length > 0 ? (this.pageNumber > this.getPageCount() - 1 ? this.setPage(this.pageNumber - 1) : this.setPage(this.pageNumber), this.updateNextPageButton()) : this.showItemPages(!1)), this.houseItems
		}
		return []
	},
	increaseQuantity: function(e) {
		var t = this.getItemIndex(e); - 1 === t && (0 === this.houseItems.length && this.showItemPages(), t = this.houseItems.push({
			ID: e,
			N: 0
		}) - 1), this.houseItems[t].N += 1, this.houseItems.sort(function(e, t) {
			return e.ID - t.ID
		}), t = this.getItemIndex(e);
		var i = 6 * this.pageNumber;
		return t >= i && i + 6 > t && this.setPage(this.pageNumber), this.updateNextPageButton(), this.updatePrevPageButton(), this.houseItems
	},
	getItemCount: function() {
		return this.houseItems.length
	}
}), Prodigy.House.Menu.HouseItemIcon = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, s, r), this.itemIcon = null, this.onIconPressed = null, this.quantityLabel = this.game.prodigy.create.font(this, 0, 65, "0", {
		width: 80,
		align: "right"
	}), this.itemID = -1, this.setItemID(i), this.setQuantity(a)
}, Prodigy.extends(Prodigy.House.Menu.HouseItemIcon, Prodigy.Control.Element, {
	constructor: Prodigy.House.Menu.HouseItemIcon,
	setItemID: function(e) {
		this.itemID = e, Util.isDefined(this.itemIcon) ? this.itemIcon.loadNewTexture("icon-dorm-" + e) : (this.itemIcon = this.add(this.game.prodigy.create.sprite(0, 0, "icon-dorm-" + e)), this.itemIcon.inputEnabled = !0, this.itemIcon.events.onInputDown.add(this.iconPressed, this))
	},
	setQuantity: function(e) {
		this.quantityLabel.setText("" + e)
	},
	iconPressed: function(e, t) {
		Util.isDefined(this.onIconPressed) && this.onIconPressed.dispatch(this.itemID, Math.floor(t.x), Math.floor(t.y))
	}
}), Prodigy.HouseMapBase = function(e, t, i, a, s) {
	this.houseLocationData = t, this.houseData = this.houseLocationData.houses[i], this.houseTag = this.houseData.tag, Prodigy.Map.call(this, e, i, "", this.houseData.entryPoint.x, this.houseData.entryPoint.y, a, s.concat(t.assets)), this.houseItems = [], this.content = null, this.player = null
}, Prodigy.extends(Prodigy.HouseMapBase, Prodigy.Map, {
	constructor: Prodigy.HouseMapBase,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.content = t.content, this.game = e
	},
	setOwner: function(e) {
		this.player = e, this._zoneName = "house-" + this.player.userID
	},
	cleanup: function() {
		this.houseItems = [], Prodigy.Map.prototype.cleanup.call(this)
	},
	loadHouseItems: function(e) {
		for (var t = 0, i = e.length; i > t; ++t) {
			var a = e[t],
				s = this.game.prodigy.create.houseItem(this.content, a.ID, 10 * Math.round(.1 * a.x), 10 * Math.round(.1 * a.y), a.r, this);
			s.findComponent(Prodigy.Component.HouseItem).canRevert = !0, this.houseItems.push(s)
		}
	},
	addHouseItem: function(e) {
		this.houseItems.push(e)
	},
	removeHouseItem: function(e) {
		var t = this.houseItems.indexOf(e);
		t > -1 && this.houseItems.splice(t, 1)
	},
	canPlaceItem: function(e) {
		var t = e.getRenderer();
		if (!this.isValidSpace(t.getWorld(), t.getWidth(), t.getHeight())) return !1;
		for (var i = 0, a = this.houseItems.length; a > i; ++i) {
			var s = this.houseItems[i].findComponent(Prodigy.Component.HouseItem);
			if (e !== s && this.checkOverlap(t, s.getRenderer())) return !1
		}
		return !0
	},
	isValidSpace: function(e, t, i) {
		if (!Util.isDefined(e) || !Util.isDefined(t) || !Util.isDefined(i)) return !1;
		var a = Math.floor(e.x / 20),
			s = Math.floor(e.y / 20);
		t = Math.floor(t / 20), i = Math.floor(i / 20);
		var r = s + 1,
			n = s + i - 1,
			o = Math.ceil(a + .5 * t - 1 + (t > 0 ? 1 : 0)),
			h = Math.floor(a - .5 * t - (t > 0 ? 1 : 0));
		return !(h > 64 || n > 32) && !(0 > o || 0 > r) && (1 === this.screen.area[r][o] && 1 === this.screen.area[r][h] || 6 === this.screen.area[r][o] && 6 === this.screen.area[r][h]) && (1 === this.screen.area[n][o] && 1 === this.screen.area[n][h] || 6 === this.screen.area[n][o] && 6 === this.screen.area[n][h])
	},
	checkOverlap: function(e, t) {
		if (e.getWorld().y > t.getWorld().y) return !1;
		var i = e.getBounds(),
			a = t.getBounds();
		return i.x += 2, i.y += 2, i.width -= 4, i.height -= 4, a.x += 2, a.y += 2, a.width -= 4, a.height -= 4, Phaser.Rectangle.intersects(i, a)
	},
	getName: function() {
		for (var e = 0, t = Items.data.dormbg.length; t > e; e++)
			if (Items.data.dormbg[e].data.tag === this.houseTag) return Items.data.dormbg[e].data.name;
		return "Starter House"
	}
}), Prodigy.HouseMap = function(e, t, i, a) {
	Prodigy.HouseMapBase.call(this, e, t, i, ["house-exit"], a), this.screen = null
}, Prodigy.extends(Prodigy.HouseMap, Prodigy.HouseMapBase, {
	constructor: Prodigy.HouseMap,
	setup: function(e, t, i) {
		Prodigy.HouseMapBase.prototype.setup.call(this, e, t, i), this.screen = t, this.addAreaEvent(e, t, {
			x: this.houseData.exit.x,
			y: this.houseData.exit.y,
			w: this.houseData.exit.w,
			h: this.houseData.exit.h,
			rect: !0
		}, "house-exit", null, null, null, null, !1), this.loadHouseItems(this.player.house.getSortedActive())
	},
	start: function(e, t, i) {
		Prodigy.HouseMapBase.prototype.start.call(this, e, t, i), this.game.broadcaster.addAppListener(Prodigy.Events.House.OPEN_EDITOR, this.openedEditor.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.House.CLOSE_EDITOR, this.closedEditor.bind(this), this)
	},
	cleanup: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.House.OPEN_EDITOR, this), this.game.broadcaster.removeAppListener(Prodigy.Events.House.CLOSE_EDITOR, this), Prodigy.HouseMapBase.prototype.cleanup.call(this)
	},
	openedEditor: function() {
		this.game.prodigy.open.houseEditorMenu(this, this.screen), this.screen.walkEnabled = !1, this.screen.user.stopTweens(), this.screen.user.stand();
		for (var e in this.screen.playerList) this.fadeOutPlayerContainer(this.screen.playerList[e]);
		this.fadeOutPlayerContainer(this.screen.user), this.game.broadcaster.addAppListener(Prodigy.Events.WalkableScreen.PLAYER_ADDED, this.playerEnteredHouse.bind(this), this)
	},
	fadeOutPlayerContainer: function(e) {
		if (e.sprites.setAll("inputEnabled", !1), !Util.isNullOrUndefined(e.follow) && (this.game.add.tween(e.follow).to({
				alpha: 0
			}, 300, Phaser.Easing.Cubic.Out).start(), e.follow instanceof Prodigy.Framework.Core.GameObject)) {
			var t = e.follow.findComponent(Prodigy.Framework.Core.ParticleEmitter);
			Util.isNullOrUndefined(t) || this.game.add.tween(t.emitter.renderer.display).to({
				alpha: 0
			}, 300, Phaser.Easing.Cubic.Out).start()
		}
		return this.game.add.tween(e).to({
			alpha: 0
		}, 300, Phaser.Easing.Cubic.Out).start()
	},
	closedEditor: function() {
		for (var e in this.screen.playerList) this.fadeInPlayerContainer(this.screen.playerList[e]);
		this.fadeInPlayerContainer(this.screen.user).onComplete.addOnce(function() {
			this.screen.walkEnabled = !0
		}, this), this.game.broadcaster.removeAppListener(Prodigy.Events.WalkableScreen.PLAYER_ADDED, this)
	},
	fadeInPlayerContainer: function(e) {
		if (e.sprites.setAll("inputEnabled", !0), !Util.isNullOrUndefined(e.follow) && (this.game.add.tween(e.follow).to({
				alpha: 1
			}, 300, Phaser.Easing.Cubic.In).start(), e.follow instanceof Prodigy.Framework.Core.GameObject)) {
			var t = e.follow.findComponent(Prodigy.Framework.Core.ParticleEmitter);
			Util.isNullOrUndefined(t) || this.game.add.tween(t.emitter.renderer.display).to({
				alpha: 1
			}, 300, Phaser.Easing.Cubic.In).start()
		}
		return this.game.add.tween(e).to({
			alpha: 1
		}, 300, Phaser.Easing.Cubic.In).start()
	},
	playerEnteredHouse: function(e) {
		e.alpha = 0, e.sprites.setAll("inputEnabled", !0)
	}
}), Prodigy.HouseMapPreview = function(e, t, i, a, s) {
	Prodigy.HouseMapBase.call(this, e, t, i, [], a.concat("npc-face-mozza-ella")), this.cost = s
}, Prodigy.extends(Prodigy.HouseMapPreview, Prodigy.HouseMapBase, {
	constructor: Prodigy.HouseMapPreview,
	setup: function(e, t, i) {
		Prodigy.HouseMapBase.prototype.setup.call(this, e, t, i), this.placeMozzaElla(), this.openMozzaEllaDialogue()
	},
	openMozzaEllaDialogue: function() {
		var e = this.game.prodigy.event.create();
		e.text(this.getMozzaEllaDialogueIndex(), "mozza-ella"), e.start()
	},
	placeMozzaElla: function() {
		var e = new Prodigy.Container.MozzaElla(this.game, this.content, 0, 0);
		e.x = Math.round(this.houseData.exit.x + .5 * this.houseData.exit.w - .5 * e.width - 60), e.y = Math.round(this.houseData.exit.y - .75 * e.height - 60), e.sprites.children.forEach(function(e) {
			e.inputEnabled = !0, e.events.onInputDown.add(this.onMozzaEllaClick.bind(this))
		}.bind(this))
	},
	onMozzaEllaClick: function() {
		var e = this.game.prodigy.event.create();
		e.text(11, "mozza-ella"), e.function(this.showPurchasePopup.bind(this)), e.start()
	},
	showPurchasePopup: function() {
		for (var e = Items.data.dormbg, t = null, i = this.cost, a = 0; a < e.length && (t = e[a], t.data.tag !== this.houseTag); a++);
		var s = "Would you like to buy this house, or go back to your own?",
			r = this.game.prodigy.world.teleport.bind(this.game.prodigy.world, "house"),
			n = this.onBuyButtonClick.bind(this, t, i),
			o = i.N > 0 ? String(i.N) : "FREE",
			h = t.data.member > 0 && !this.game.prodigy.player.isMember,
			l = {
				ID: Util.isDefined(t) ? t.ID : 0,
				type: "dormbg",
				cost: i
			},
			d = {
				modifyProperty: [{
					element: "yesText",
					property: "text",
					value: o
				}, {
					element: "membershipGraphic",
					property: "visible",
					value: h
				}, {
					element: "houseGraphic",
					property: "atlasName",
					value: Items.getIconAtlas(l)
				}, {
					element: "houseGraphic",
					property: "frameName",
					value: Items.getIconFrame(l)
				}],
				addChildren: []
			};
		this.game.prodigy.open.messageBoxGeneric(s, n, r, null, null, null, "ui-house-preview", d)
	},
	onBuyButtonClick: function(e, t) {
		e.data.member && !this.game.prodigy.player.isMember ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.NEW_HOUSE) : this.game.prodigy.player.getGold() < t.N ? this.game.prodigy.player.isMember ? this.game.prodigy.open.message("You need [gold] " + t.N + " for this item.\n\nYou only have [gold] " + this.game.prodigy.player.getGold(!0) + ".", null, "gold", "Uh oh!") : this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_GOLD) : this.game.prodigy.open.messageBox("Would you like to move here? The movers will put all of your items back in your inventory, and you won't be able to use your current house until you buy it again and move back.", this.onPurchaseConfirmation.bind(this, e, t))
	},
	onPurchaseConfirmation: function(e, t) {
		this.game.prodigy.player.house.setCurrentHouseTag(e.data.tag), this.game.prodigy.player.changeGold(-t.N), this.game.prodigy.player.house.setAllInactive(), this.game.prodigy.world.teleport("house")
	},
	getMozzaEllaDialogueIndex: function() {
		var e = [11];
		return this.houseTag.indexOf("small") > -1 ? e = [0] : this.houseTag.indexOf("medium") > -1 ? e = [1, 2] : this.houseTag.indexOf("large") > -1 ? e = [3, 4] : "forest" === this.houseTag ? e = [5, 6] : "coolCave" === this.houseTag ? e = [7, 8] : "firePit" === this.houseTag && (e = [9, 10]), e[Math.floor(Math.random() * e.length)]
	}
}), Prodigy.PalletPass = function(e) {
	Prodigy.Map.call(this, e, "exit", "Pallet Pass", 120, 580, ["lamplight-A4"], ["tileset-collisions", "tileset-generic-new", "tileset-forest-new", "bgm-tutorial"])
}, Prodigy.extends(Prodigy.PalletPass, Prodigy.Map, {
	constructor: Prodigy.PalletPass,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 580,
			w: 80,
			h: 240,
			rect: !0
		}, "house", null, null, null, AreaEvent.LEFT), this.addAreaEvent(e, t, {
			x: 1240,
			y: 380,
			w: 80,
			h: 240,
			rect: !0
		}, "lamplight-A4", 120, 500, null, AreaEvent.RIGHT)
	}
}), Prodigy.House_Intro = function(e, t) {
	Prodigy.Scene.call(this, e, "suburbs", t.concat(["npc-sprite-noot", "bgm-fun", "sfx-house-intro"])), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.House_Intro, Prodigy.Scene, {
	constructor: Prodigy.House_Intro,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 480, t.user.y = 280, t.user.showName(!1), e.prodigy.create.houseItem(t.background, 17, 480, 160), t.foreground.add(e.prodigy.create.sprite(420, 160, "sheets-dorm-17")), e.prodigy.create.houseItem(t.background, 3, 400, 160), e.prodigy.create.houseItem(t.background, 18, 440, 100), e.prodigy.create.houseItem(t.background, 18, 840, 100), e.prodigy.create.houseItem(t.background, 14, 880, 240), e.prodigy.create.houseItem(t.background, 1, 880, 140), e.prodigy.create.houseItem(t.background, 13, 640, 80)
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, "bgm-fun");
		var i = this.addNPC(e, t, 820, 540, "npc-sprite-noot");
		i.float(!0), i.walkSpeed = 2, i.visible = !1, this.game.prodigy.fsm.executeWithID(14, {
			scene: this,
			game: e,
			screen: t,
			player: t.user,
			noot: i,
			path: t.path
		})
	},
	end: function(e) {
		this._zone.completeSequence(1, 0), e.prodigy.world.teleport("house-exit")
	}
}), Prodigy.House_Battle = function(e) {
	Prodigy.Scene.call(this, e, "exit", ["npc-sprite-noot", "monster-reduced-38", "tileset-collisions", "tileset-generic-new", "tileset-forest-new", "bgm-fun"]), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.House_Battle, Prodigy.Scene, {
	constructor: Prodigy.House_Battle,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = -100, t.user.y = 580, t.user.showName(!1)
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, "bgm-fun");
		var i = this.addNPC(e, t, -100, 580, "npc-sprite-noot");
		i.float(!0), i.walkSpeed = 2;
		var a = this.addMonster(e, t, 1, 1380, 400, !1, {
				encounter: [{
					ID: 38
				}]
			}, !0),
			s = e.prodigy.event.create();
		s.enableInput(!1), s.function(this.enterScene.bind(this, e, t)), s.delay(1e3), s.validPath(i, t.path, 640, 400, !0), s.delay(1e3), s.validPath(t.user, t.path, 450, 400), s.set(i, "walkSpeed", 1), s.hop(i, 200, 0, 100), s.validPath(i, t.path, 600, 400), s.enableInput(!0), s.text(121, "noot"), s.text(122, "noot"), s.text(123, "noot"), s.functionCallback(e.prodigy.open.nameChange.bind(e.prodigy.open, !0)), s.function(t.user.showName.bind(t.user, !0)), s.text(124, "noot"), s.text(125, "noot"), s.enableInput(!1), s.validPath(i, t.path, 640, 400), s.function(i.chat.bind(i, 1)), s.validPath(a, t.path, 800, 400, !0), s.delay(1e3), s.enableInput(!0), s.text(126, "noot"), s.enableInput(!1), s.delayUntil(a, "x", 800), s.hop(a, 200, -20, 60), s.hop(a, 200, 20, 60), s.hop(a, 200, -20, 60), s.hop(a, 200, 20, 60), s.enableInput(!0), s.text(127, "noot"), s.enableInput(!1), s.hop(a, 300, -150, 100), s.enableInput(!0), s.function(this.battle.bind(this, e)), s.start()
	},
	battle: function(e) {
		var t = {
			invincible: !0,
			intro: "Wizard Battle!",
			"catch": !1,
			run: !1,
			screen: "bg-battle-forest",
			allowMember: !1,
			switchDisabled: !0,
			encounter: [{
				ID: 38
			}],
			events: [{
				action: "turn",
				value: 0,
				callback: function(e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(3), i.start("noot", !1, t)
				}
			}, {
				action: "dmg",
				repeat: 0,
				callback: function(e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(5), i.start("noot", !1, t)
				}
			}, {
				action: "dmg",
				repeat: 0,
				callback: function(e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(128), i.start("noot", !1, t)
				}
			}]
		};
		e.prodigy.battle.start(t, this.end.bind(this, e), this.end.bind(this, e), this.end.bind(this, e), "house-exit")
	},
	end: function(e) {
		this._zone.completeSequence(1, 1), e.prodigy.world.teleport("house-exit", 450, 400)
	}
}), Prodigy.House_Arrows = function(e) {
	Prodigy.Scene.call(this, e, "exit", ["npc-sprite-noot", "monster-reduced-38", "tileset-collisions", "tileset-generic-new", "tileset-forest-new", "bgm-fun"]), this._loadingData.time = 1
}, Prodigy.extends(Prodigy.House_Arrows, Prodigy.Scene, {
	constructor: Prodigy.House_Arrows,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 450, t.user.y = 400, this._exit = this.addAreaEvent(e, t, {
			x: 1240,
			y: 380,
			w: 80,
			h: 240,
			rect: !0
		}, null, 120, 500, this.end.bind(this, e), AreaEvent.RIGHT), this._noot = this.addNPC(e, t, 640, 400, "npc-sprite-noot"), this._noot.float(!0), this._noot.walkSpeed = 2
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t, "bgm-fun");
		var i = e.prodigy.event.create(),
			a = t.foreground.add(e.prodigy.create.sprite(this._noot.x, this._noot.y - 50, "core", "area-pointer"));
		a.anchor.setTo(.5, .5), a.visible = !1, a.angle = 90, a.scale.x = a.scale.y = 0, i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(1e3), i.function(this._noot.flip.bind(this._noot)), i.enableInput(!0), i.text(129, "noot"), i.text(130, "noot"), i.enableInput(!1), i.functionCallback(this.jumpHand.bind(this, e, a)), i.set(this._exit, "visible", !0), i.set(a, "visible", !1), i.hop(this._noot, 500, -190, 100), i.set(this._noot, "visible", !1), i.enableInput(!0), i.overlayText(131, "noot"), i.start()
	},
	jumpHand: function(e, t, i) {
		t.visible = !0, e.add.tween(t.scale).to({
			x: 1,
			y: 1
		}, 800, Phaser.Easing.Quadratic.Out).start(), e.add.tween(t).to({
			y: t.y - 100
		}, 1e3, Phaser.Easing.Quadratic.Out).to({
			y: t.y + 26
		}, 1e3, Phaser.Easing.Quadratic.In).start();
		var a = e.add.tween(t).to({
			x: 1180
		}, 2e3, Phaser.Easing.Linear.None);
		a.start(), a.onComplete.add(i)
	},
	end: function(e) {
		this._zone.completeSequence(1, 2), e.prodigy.world.teleport("lamplight-A4", 120, 500)
	}
}), Prodigy.House_Q1 = function(e, t) {
	Prodigy.Quest.call(this, e, t, 1, "", {
		type: "seq",
		N: 3
	}, ["lamplight-A4"], [], [], [], [{
		type: "gold",
		N: 100
	}], !1)
}, Prodigy.extends(Prodigy.House_Q1, Prodigy.Quest, {
	constructor: Prodigy.House_Q1,
	setup: function(e, t, i) {
		if (Prodigy.Quest.prototype.setup.call(this, e, t, i), "suburbs" === i.getTag()) {
			if (this.zone.isOnSequence(1, 0)) return e.prodigy.player.heal(), e.prodigy.player.backpack.add("weapon", 25, !1, 1), Util.isDefined(e.prodigy.player.equipment.getEquipment("weapon")) || e.prodigy.player.equip(25, "weapon"), e.prodigy.world.playScene("house-intro"), {
				quit: !0
			}
		} else if ("exit" === i.getTag()) {
			if (this.zone.isOnSequence(1, 1)) return e.prodigy.world.playScene("house-battle"), {
				quit: !0
			};
			if (this.zone.isOnSequence(1, 2)) return e.prodigy.world.playScene("house-arrows"), {
				quit: !0
			}
		}
	}
}), Prodigy.Shipwreck_Shore_A1 = function(e, t) {
	Prodigy.Map.call(this, e, "A1", "Far Beach", 1160, 400, ["shipwreck_shore-B2", "shipwreck_shore-A2"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A1, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 60, 640, {
			target: "shipwreck_shore-A2",
			x: 160,
			y: 200,
			callback: null,
			handRotation: AreaEvent.DOWN
		}), this.addAreaEvent(e, t, {
			x: 1240,
			y: 400,
			w: 80,
			h: 240,
			rect: !0
		}, "shipwreck_shore-B2", 200, 300, null, AreaEvent.DOWN_RIGHT, !1)
	}
}), Prodigy.Shipwreck_Shore_A2 = function(e, t) {
	Prodigy.Map.call(this, e, "A2", "Seaweed Skyscrapers", 160, 200, ["shipwreck_shore-A1", "shipwreck_shore-A3"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A2, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 160, 120, {
			target: "shipwreck_shore-A1",
			x: 60,
			y: 560,
			callback: null,
			handRotation: AreaEvent.UP
		}), this.addAreaEvent(e, t, {
			x: 1020,
			y: 680,
			w: 280,
			h: 80,
			rect: !0
		}, "shipwreck_shore-A3", 1e3, 120, null, AreaEvent.DOWN, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 98
			}]
		};
		this.addMonster(e, t, 1, 650, 400, !1, a)
	}
}), Prodigy.Shipwreck_Shore_A3 = function(e, t) {
	Prodigy.Map.call(this, e, "A3", "Secret Shore Space", 1e3, 120, ["shipwreck_shore-A2"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A3, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A3,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1e3,
			y: 40,
			w: 320,
			h: 80,
			rect: !0
		}, "shipwreck_shore-A2", 1e3, 600, null, AreaEvent.UP, !1), this.addChest(e, t, "chestA3", 360, 370, [{
			type: "gold",
			N: 800
		}, {
			type: "item",
			ID: 107
		}, {
			type: "weapon",
			ID: 93
		}], null, "A")
	}
}), Prodigy.Shipwreck_Shore_A4 = function(e, t) {
	Prodigy.Map.call(this, e, "A4", "Secluded Shore", 1160, 320, ["shipwreck_shore-B4", "shipwreck_shore-A5"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A4, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 60, 600, {
			target: "shipwreck_shore-A5",
			x: 180,
			y: 200,
			callback: null,
			handRotation: AreaEvent.DOWN
		}), this.addAreaEvent(e, t, {
			x: 1240,
			y: 300,
			w: 80,
			h: 280,
			rect: !0
		}, "shipwreck_shore-B4", 120, 380, null, AreaEvent.RIGHT, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 62
			}]
		};
		this.addMonster(e, t, 1, 500, 450, !1, a), this.addMonster(e, t, 2, 900, 310, !1, a)
	}
}), Prodigy.Shipwreck_Shore_A5 = function(e, t) {
	Prodigy.Map.call(this, e, "A5", "Underwater Alcove", 180, 200, ["shipwreck_shore-A4"], t.concat("npc-sprite-wizard", "zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A5, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 180, 120, {
			target: "shipwreck_shore-A4",
			x: 200,
			y: 600,
			callback: null,
			handRotation: AreaEvent.UP
		});
		var a = {
			randDir: !0,
			encounter: [{
				ID: 99
			}]
		};
		this.addMonster(e, t, 1, 280, 450, !1, a), this._zone.util.addUnderwaterWizard(e, t, this, 575, 305, "wizardA5", {
			opponent: [{
				appearance: {
					name: "Lotney Chunk",
					gender: "male",
					hair: {
						style: 27,
						color: 6
					},
					skinColor: 3,
					eyeColor: 3
				},
				equipment: {
					hat: 39,
					outfit: 35,
					boots: 10,
					weapon: 64
				}
			}],
			pets: [{
				ID: 90
			}, {
				ID: 88
			}, {
				ID: 98
			}]
		});
		var s = this._zone.util.addInkGroup(e, t, this, [{
				x: 960,
				y: 280
			}, {
				x: 1040,
				y: 280
			}, {
				x: 940,
				y: 320
			}, {
				x: 1020,
				y: 320
			}, {
				x: 1100,
				y: 320
			}, {
				x: 960,
				y: 360
			}, {
				x: 1040,
				y: 360
			}, {
				x: 1100,
				y: 360
			}, {
				x: 960,
				y: 400
			}, {
				x: 1040,
				y: 400
			}, {
				x: 1100,
				y: 400
			}, {
				x: 1e3,
				y: 440
			}, {
				x: 1080,
				y: 440
			}], {
				x: 985,
				y: 255
			}, []),
			r = this.addChest(this.game, t, "chestA5", 1e3, 500, [{
				type: "hat",
				ID: 81
			}], null, "A");
		1 !== this._zone.getState(this._zone.util.getInkStateFromMap(this)) && (r.visible = !1, this.game.broadcaster.addAppListener(Prodigy.Events.ShipwreckShore.INK_BLASTED, this.revealChest.bind(this, t, s, r), this, s))
	},
	revealChest: function(e, t, i) {
		this.game.broadcaster.removeAppListener(Prodigy.Events.ShipwreckShore.INK_BLASTED, this, t), i.visible = !0
	}
}), Prodigy.Shipwreck_Shore_A7 = function(e, t) {
	Prodigy.Map.call(this, e, "A7", "Lower Deck Hall", 1160, 520, ["shipwreck_shore-B6", "shipwreck_shore-B7"], t.concat(["zone-shipwreck", "sfx-shipwreck-shore"]))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_A7, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_A7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 440,
			y: 40,
			w: 320,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B6", 280, 540, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 440,
			w: 80,
			h: 240,
			rect: !0
		}, "shipwreck_shore-B7", 160, 180, null, AreaEvent.UP_RIGHT, !1), this._zone.util.addInkGroup(e, t, this, [{
			x: 520,
			y: 360
		}, {
			x: 640,
			y: 400
		}, {
			x: 560,
			y: 400
		}, {
			x: 520,
			y: 440
		}, {
			x: 600,
			y: 440
		}, {
			x: 640,
			y: 440
		}, {
			x: 520,
			y: 480
		}, {
			x: 600,
			y: 480
		}, {
			x: 560,
			y: 520
		}, {
			x: 480,
			y: 520
		}], {
			x: 740,
			y: 500
		}, [])
	}
}), Prodigy.Shipwreck_Shore_B2 = function(e, t) {
	Prodigy.Map.call(this, e, "B2", "Crow's Nest", 1080, 620, ["shipwreck_shore-B4", "shipwreck_shore-A1"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B2, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B2,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 120,
			y: 200,
			r: 80
		}, "shipwreck_shore-A1", 1160, 400, null, AreaEvent.UP_LEFT, !1), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B4", 1080, 120, null, AreaEvent.DOWN, !1)
	}
}), Prodigy.Shipwreck_Shore_B4 = function(e, t) {
	Prodigy.Map.call(this, e, "B4", "Upper Deck", 1120, 520, ["shipwreck_shore-B5", "shipwreck_shore-A4", "shipwreck_shore-B2"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B4, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B4,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1080,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B2", 1080, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 380,
			w: 80,
			h: 280,
			rect: !0
		}, "shipwreck_shore-A4", 1160, 320, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1120,
			y: 600,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B5", 240, 100, null, AreaEvent.DOWN, !1)
	}
}), Prodigy.Shipwreck_Shore_B5 = function(e, t) {
	Prodigy.Map.call(this, e, "B5", "Cargo Hold", 1e3, 560, ["shipwreck_shore-B6", "shipwreck_shore-B4"], t.concat("zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B5, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B5,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 240,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B4", 1120, 520, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 1e3,
			y: 640,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B6", 1040, 140, null, AreaEvent.DOWN, !1), this._zone.util.addInkGroup(e, t, this, [{
			x: 400,
			y: 320
		}, {
			x: 400,
			y: 400
		}, {
			x: 360,
			y: 280
		}, {
			x: 360,
			y: 360
		}, {
			x: 360,
			y: 440
		}, {
			x: 320,
			y: 320
		}, {
			x: 320,
			y: 400
		}, {
			x: 280,
			y: 360
		}, {
			x: 280,
			y: 440
		}, {
			x: 240,
			y: 400
		}], {
			x: 520,
			y: 480
		}, []), this.addChest(e, t, "chestB5", 500, 325, [{
			type: "item",
			ID: 108
		}, {
			type: "item",
			ID: 98
		}, {
			type: "gold",
			N: 200
		}])
	}
}), Prodigy.Shipwreck_Shore_B6 = function(e, t) {
	Prodigy.Map.call(this, e, "B6", "Lower Deck", 280, 540, ["shipwreck_shore-A7", "shipwreck_shore-C6", "shipwreck_shore-B5"], t.concat("zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B6, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1040,
			y: 80,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-B5", 1e3, 560, null, AreaEvent.UP, !1);
		var a = Util.isDefined(i) && Util.isDefined(i.doorIsLockedCallback) ? i.doorIsLockedCallback : this.doorIsLocked.bind(this, e);
		this.addAreaEvent(e, t, {
			x: 1180,
			y: 360,
			w: 80,
			h: 160,
			rect: !0
		}, "shipwreck_shore-C6", 120, 320, e.prodigy.player.backpack.hasItem("item", 114) ? null : a, AreaEvent.RIGHT, !1), this.addAreaEvent(e, t, {
			x: 280,
			y: 600,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-A7", 440, 120, null, AreaEvent.DOWN, !1), this._zone.util.addInkGroup(e, t, this, [{
			x: 960,
			y: 40
		}, {
			x: 960,
			y: 80
		}, {
			x: 1040,
			y: 40
		}, {
			x: 1e3,
			y: 120
		}, {
			x: 1e3,
			y: 80
		}, {
			x: 1e3,
			y: 200
		}, {
			x: 1040,
			y: 200
		}, {
			x: 1e3,
			y: 160
		}, {
			x: 960,
			y: 240
		}, {
			x: 1040,
			y: 240
		}], {
			x: 1040,
			y: 400
		}, [])
	},
	doorIsLocked: function(e) {
		var t = e.prodigy.event.create();
		t.text(174, "noot"), t.start()
	}
}), Prodigy.Shipwreck_Shore_B7 = function(e, t) {
	Prodigy.Map.call(this, e, "B7", "Second Ship Ramp", 1160, 420, ["shipwreck_shore-A7", "shipwreck_shore-C7"], t.concat("zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B7, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 160,
			y: 240,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-A7", 1160, 520, null, AreaEvent.DOWN, !1), this.addAreaEvent(e, t, {
			x: 1240,
			y: 420,
			w: 80,
			h: 200,
			rect: !0
		}, "shipwreck_shore-C7", 120, 280, null, AreaEvent.RIGHT, !1), this._zone.util.addShortcut(e, t, this, 1060, 560), this.enableShortcut(e, t), this._zone.util.addInkGroup(e, t, this, [{
			x: 1e3,
			y: 520
		}, {
			x: 1040,
			y: 560
		}, {
			x: 1040,
			y: 520
		}, {
			x: 1e3,
			y: 560
		}], {
			x: 1060,
			y: 480
		}, [e.broadcaster.addAppListener.bind(e.broadcaster, Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this.enableShortcut.bind(this, e, t), this)]), this.addMonster(e, t, 1, 675, 460, !1, {
			randDir: !0,
			encounter: [{
				ID: 46
			}]
		}), this.addMonster(e, t, 2, 900, 200, !1, {
			randDir: !0,
			encounter: [{
				ID: 118
			}]
		}), this._zone.util.addSqueak(t, this, 840, 440, !0)
	},
	enableShortcut: function(e, t) {
		e.broadcaster.removeAppListener(Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this);
		var i = this._zone.util.enableShortcut(e, t, this, 1060, 560, {
			target: "shipwreck_shore-C9",
			x: 780,
			y: 420,
			callback: null,
			handRotation: AreaEvent.DOWN
		});
		Util.isDefined(i) && this._locations.push("shipwreck_shore-C9")
	}
}), Prodigy.Shipwreck_Shore_B8 = function(e, t) {
	Prodigy.Map.call(this, e, "B8", "Broken Ship Bed", 1160, 540, ["shipwreck_shore-C8"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B8, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B8,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 580,
			w: 80,
			h: 280,
			rect: !0
		}, "shipwreck_shore-C8", 140, 460, null, AreaEvent.RIGHT, !1), this.addMonster(e, t, 1, 775, 325, !1, {
			randDir: !0,
			encounter: [{
				ID: 90
			}]
		}), this.addMonster(e, t, 2, 420, 485, !1, {
			randDir: !0,
			encounter: [{
				ID: 98
			}]
		})
	}
}), Prodigy.Shipwreck_Shore_B10 = function(e, t) {
	Prodigy.Map.call(this, e, "B10", "Seaweed Sanctuary", 1020, 420, ["shipwreck_shore-B11"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B10, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B10,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 1020, 560, {
			target: "shipwreck_shore-B11",
			x: 260,
			y: 180,
			callback: null,
			handRotation: AreaEvent.DOWN
		}), this.addChest(e, t, "chestB10", 380, 475, [{
			type: "gold",
			N: 600
		}, {
			type: "item",
			ID: 98
		}, {
			type: "boots",
			ID: 31
		}], null, "A");
		var a = {
			randDir: !0,
			encounter: [{
				ID: 118
			}]
		};
		this.addMonster(e, t, 1, 430, 275, !1, a)
	}
}), Prodigy.Shipwreck_Shore_B11 = function(e, t) {
	Prodigy.Map.call(this, e, "B11", "Secret Shore", 1160, 300, ["shipwreck_shore-B10", "shipwreck_shore-C11"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B11, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B11,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 260, 110, {
			target: "shipwreck_shore-B10",
			x: 1020,
			y: 420,
			callback: null,
			handRotation: AreaEvent.UP
		}), this.addAreaEvent(e, t, {
			x: 1240,
			y: 280,
			w: 80,
			h: 320,
			rect: !0
		}, "shipwreck_shore-C11", 120, 360, null, AreaEvent.RIGHT, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 107
			}]
		};
		this.addMonster(e, t, 1, 615, 385, !1, a)
	}
}), Prodigy.Shipwreck_Shore_B12 = function(e, t) {
	Prodigy.Map.call(this, e, "B12", "Shoreline", 990, 435, ["shipwreck_shore-B13", "shipwreck_shore-C12"], t.concat("npc-sprite-windsail", "zone-shipwreck", "npc-sprite-fishthing"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B12, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B12,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1240,
			y: 480,
			w: 80,
			h: 320,
			rect: !0
		}, "shipwreck_shore-C12", 100, 420, null, AreaEvent.RIGHT, !1), this._zone.util.addWhirlpool(e, t, this, 100, 640, {
			target: "shipwreck_shore-B13",
			x: 220,
			y: 260,
			callback: null,
			handRotation: AreaEvent.DOWN
		}), this.questNPC = this.addConstructedQuestNPC(e, t, 800, 450, "eve", !1, this.zoneComplete.bind(this, e)), t.user.faceToward(t.user, this.questNPC.x);
		var a = [{
			pre: "Buccaneer ",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 36
			}, {
				rtype: "item",
				type: "hat",
				ID: 40
			}, {
				rtype: "item",
				type: "weapon",
				ID: 65
			}],
			fail: "You need to buy the Pirate set to unlock!"
		}, {
			pre: "Captain ",
			req: [{
				rtype: "quest",
				zone: "shipwreck_shore",
				Q: 11
			}],
			fail: "You need to complete the Shipwreck Shore quest to unlock!"
		}, {
			pre: "Treasure Hunter ",
			req: [{
				rtype: "pet",
				ID: 98
			}],
			fail: "You need to catch a Mimic to unlock!"
		}, {
			pre: "First-mate ",
			member: !0,
			fail: "You need to become a member to unlock!"
		}, {
			post: "beard the Pirate",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		this.addNicknamer(t, 1050, 350, a), t.user.faceToward(this.questNPC.x), this.createFishMerchant(e, t, 350, 450, this.game.prodigy.stores.getStore(e.prodigy.stores.SHOPS.OCEAN_OUTFITTERS), !1), this.addHealStone(e, t, 1085, 610)
	},
	createFishMerchant: function(e, t, i, a, s, r) {
		var n = new Prodigy.Container.FishMerchant(e, t.content, i, a, null, {
			atlas: "fishthing",
			name: "Merchant"
		}, function() {
			var t = {
					shopkeeperTag: "npc-face-fishthing",
					scaleX: .89,
					scaleY: .89
				},
				i = e.prodigy.dialogue.create();
			i.setText({
				text: "Welcome to " + s.name + "! \nWant to see what I have for sale?",
				face: "0",
				yes: e.prodigy.open.store.bind(e.prodigy.open, s, null, t)
			}), i.start("fishthing")
		}, r);
		return n.setIndicator("store"), n
	},
	addNicknamer: function(e, t, i, a) {
		var s = this.game.prodigy.create.element(e.content, t, i),
			r = s.add(this.game.prodigy.create.sprite(0, -100, "core-2", "namer")),
			n = s.add(this.game.prodigy.create.sprite(20, -90, "core-2", "feather"));
		this.game.add.tween(n).to({
			x: 40,
			y: -98
		}, 1500, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), r.inputEnabled = !0, r.events.onInputDown.add(this.game.prodigy.open.nicknamer.bind(this.game.prodigy.open, a, e.user))
	},
	zoneComplete: function(e) {
		var t = e.prodigy.event.create();
		t.text(45, "eve"), t.text(46, "eve"), t.text(47, "eve"), t.start()
	}
}), Prodigy.Shipwreck_Shore_B13 = function(e, t) {
	Prodigy.Map.call(this, e, "B13", "Sunken Secret", 220, 260, ["shipwreck_shore-B12"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_B13, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_B13,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 220, 200, {
			target: "shipwreck_shore-B12",
			x: 100,
			y: 580,
			callback: null,
			handRotation: AreaEvent.UP
		}), this.addChest(e, t, "chestB13", 1020, 350, [{
			type: "item",
			ID: 96
		}, {
			type: "item",
			ID: 105
		}, {
			type: "item",
			ID: 98
		}])
	}
}), Prodigy.Shipwreck_Shore_C6 = function(e, t) {
	Prodigy.Map.call(this, e, "C6", "Cap'n's Quarters", 120, 320, ["shipwreck_shore-B6"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C6, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C6,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 320,
			w: 80,
			h: 240,
			rect: !0
		}, "shipwreck_shore-B6", 1120, 360, null, AreaEvent.LEFT, !1)
	}
}), Prodigy.Shipwreck_Shore_C7 = function(e, t) {
	Prodigy.Map.call(this, e, "C7", "Sand City", 1040, 580, ["shipwreck_shore-C8", "shipwreck_shore-B7"], t.concat("zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C7, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C7,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 40,
			y: 300,
			w: 80,
			h: 280,
			rect: !0
		}, "shipwreck_shore-B7", 1160, 420, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1160,
			y: 680,
			r: 120
		}, "shipwreck_shore-C8", 1120, 100, null, AreaEvent.DOWN, !1), this.addMonster(e, t, 1, 400, 470, !1, {
			randDir: !0,
			encounter: [{
				ID: 99
			}]
		}), this.addMonster(e, t, 2, 900, 320, !1, {
			randDir: !0,
			encounter: [{
				ID: 33
			}]
		}), this._zone.util.addSqueak(t, this, 640, 480, !1)
	}
}), Prodigy.Shipwreck_Shore_C8 = function(e, t) {
	Prodigy.Map.call(this, e, "C8", "Deep Water", 260, 620, ["shipwreck_shore-C9", "shipwreck_shore-B8", "shipwreck_shore-C7"], t.concat("npc-sprite-wizard", "zone-shipwreck", "sfx-shipwreck-shore"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C8, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C8,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1120,
			y: 40,
			w: 320,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C7", 1040, 580, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 440,
			w: 80,
			h: 360,
			rect: !0
		}, "shipwreck_shore-B8", 1160, 540, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 260,
			y: 680,
			w: 280,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C9", 950, 120, null, AreaEvent.DOWN, !1);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 33
			}]
		};
		this.addMonster(e, t, 1, 920, 360, !1, a), this._zone.util.addUnderwaterWizard(e, t, this, 400, 280, "wizardC8", {
			opponent: [{
				appearance: {
					name: "Chester Copperpan",
					gender: "male",
					hair: {
						style: 29,
						color: 3
					},
					skinColor: 1,
					eyeColor: 14
				},
				equipment: {
					hat: 80,
					outfit: 61,
					boots: 32,
					weapon: 19
				}
			}],
			pets: [{
				ID: 33
			}, {
				ID: 105
			}, {
				ID: 104
			}]
		}), this.addHealStone(e, t, 750, 210), this._zone.util.addSqueak(t, this, 560, 480, !1)
	}
}), Prodigy.Shipwreck_Shore_C9 = function(e, t) {
	Prodigy.Map.call(this, e, "C9", "Sand Town", 180, 380, ["shipwreck_shore-C8", "shipwreck_shore-C10"], t.concat("npc-sprite-jim", "zone-shipwreck", "sfx-shipwreck-shore")), this.underwater = !0
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C9, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C9,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 950,
			y: 40,
			w: 220,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C8", 260, 620, null, AreaEvent.UP, !1), this._zone.util.addWhirlpool(e, t, this, 180, 520, {
			target: "shipwreck_shore-C10",
			x: 1180,
			y: 280,
			callback: null,
			handRotation: AreaEvent.DOWN
		}), this.questNPC = this.addConstructedNPC(e, t, 1e3, 300, "npc-sprite-jim", null, "Jelly Jim"), this.questNPC.setup(this._zone, !1), this.questNPC.addOnClick(this.interactWithJellyJim.bind(this, e));
		var a = {
			randDir: !0,
			encounter: [{
				ID: 99
			}]
		};
		this.addMonster(e, t, 1, 400, 310, !1, a), this._zone.util.addShortcut(e, t, this, 780, 480), this.enableShortcut(e, t), this._zone.util.addInkGroup(e, t, this, [{
			x: 720,
			y: 440
		}, {
			x: 760,
			y: 480
		}, {
			x: 760,
			y: 440
		}, {
			x: 720,
			y: 480
		}], {
			x: 780,
			y: 400
		}, [e.broadcaster.addAppListener.bind(e.broadcaster, Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this.enableShortcut.bind(this, e, t), this)]), this._zone.util.addSqueak(t, this, 760, 280, !1)
	},
	enableShortcut: function(e, t) {
		e.broadcaster.removeAppListener(Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this);
		var i = this._zone.util.enableShortcut(e, t, this, 780, 480, {
			target: "shipwreck_shore-B7",
			x: 1060,
			y: 500,
			callback: null,
			handRotation: AreaEvent.DOWN
		});
		Util.isDefined(i) && this._locations.push("shipwreck_shore-B7")
	},
	interactWithJellyJim: function(e) {
		var t = e.prodigy.event.create(),
			i = this._zone.getCurrentQuestID();
		i > 1 && 6 > i ? (t.text(2, "jim"), t.text(3, "jim")) : t.text(7, "jim"), t.start()
	}
}), Prodigy.Shipwreck_Shore_C10 = function(e, t) {
	Prodigy.Map.call(this, e, "C10", "Dive Dock", 180, 600, ["shipwreck_shore-C9", "shipwreck_shore-C11"], t.concat("zone-shipwreck"))
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C10, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C10,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this._zone.util.addWhirlpool(e, t, this, 1180, 200, {
			target: "shipwreck_shore-C9",
			x: 180,
			y: 380,
			callback: null,
			handRotation: AreaEvent.UP
		}), this.addAreaEvent(e, t, {
			x: 160,
			y: 680,
			w: 280,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C11", 780, 220, null, AreaEvent.DOWN, !1), this.addMonster(e, t, 1, 926, 305, !1, {
			randDir: !0,
			encounter: [{
				ID: 25
			}]
		}), this.addMonster(e, t, 2, 760, 560, !1, {
			randDir: !0,
			encounter: [{
				ID: 66
			}]
		})
	}
}), Prodigy.Shipwreck_Shore_C11 = function(e, t) {
	Prodigy.Map.call(this, e, "C11", "Desolate Deck", 1080, 620, ["shipwreck_shore-C12", "shipwreck_shore-B11", "shipwreck_shore-C10"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C11, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C11,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 780,
			y: 120,
			w: 200,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C10", 180, 600, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 320,
			w: 80,
			h: 320,
			rect: !0
		}, "shipwreck_shore-B11", 1160, 300, null, AreaEvent.LEFT, !1), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C12", 1080, 100, null, AreaEvent.DOWN, !1), this.addPippet(e, t, 1, 400, 450);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 55
			}]
		};
		this.addMonster(e, t, 1, 400, 450, !1, a)
	}
}), Prodigy.Shipwreck_Shore_C12 = function(e, t) {
	Prodigy.Map.call(this, e, "C12", "Broken Bowsprit", 100, 420, ["shipwreck_shore-B12", "shipwreck_shore-C11"], t)
}, Prodigy.extends(Prodigy.Shipwreck_Shore_C12, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_C12,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 1080,
			y: 40,
			w: 160,
			h: 80,
			rect: !0
		}, "shipwreck_shore-C11", 1080, 620, null, AreaEvent.UP, !1), this.addAreaEvent(e, t, {
			x: 40,
			y: 440,
			w: 80,
			h: 400,
			rect: !0
		}, "shipwreck_shore-B12", 1160, 500, null, AreaEvent.LEFT, !1), this.addPippet(e, t, 1, 520, 460);
		var a = {
			randDir: !0,
			encounter: [{
				ID: 52
			}]
		};
		this.addMonster(e, t, 1, 520, 460, !1, a), new Prodigy.Container.ToyMerchant(e, t.content, 900, 300)
	}
}), Prodigy.Shipwreck_Shore_Titan = function(e, t) {
	Prodigy.Map.call(this, e, "Titan", "Titan Grounds", 250, 400, ["shipwreck_shore-Titan"], t.concat("spine-boss-titan", "npc-harvey", "npc-face-harvey", "boss-titan")), this.screen = screen
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Titan, Prodigy.Map, {
	constructor: Prodigy.Shipwreck_Shore_Titan,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.titanHealthBar = null, this.game.broadcaster.addAppListener(Prodigy.Events.Titan.GOT_TITAN, this.startTitanBattle.bind(this), this, "Titan", !1), this.game.broadcaster.addAppListener(Prodigy.Events.Titan.GOT_TITANS, this.titanLoadComplete.bind(this), this, "Titan", !1), Util.isNullOrUndefined(e.prodigy.titansNetworkHandler.titan) || this.playCutscene(e), this.renderMapElements(), this.renderTitan(), Util.isNullOrUndefined(e.prodigy.titansNetworkHandler.titan) ? e.prodigy.titansNetworkHandler.getTitans() : this.titanLoadComplete()
	},
	titanLoadComplete: function() {
		this.playCutscene(this.game), this.game.prodigy.titansNetworkHandler.isTitanAlive() ? (this.titanAsset = Items.getItemData("titan", this.game.prodigy.titansNetworkHandler.titan.assetID), this.renderHealthBar()) : this.titanDeadTeleport()
	},
	playCutscene: function(e) {
		Util.isNullOrUndefined(e.prodigy.titansNetworkHandler.titan) || !Util.isNullOrUndefined(e.prodigy.player.data.titanID) && e.prodigy.player.data.titanID === e.prodigy.titansNetworkHandler.titan.id || (e.prodigy.player.data.titanID = e.prodigy.titansNetworkHandler.titan.id, e.prodigy.world.playScene("shipwreck_shore-titanIntro"))
	},
	renderMapElements: function() {
		this.addHealStone(this.game, this.screen, 100, 375), new Prodigy.Container.Harvey(this.game, this.screen, 175, 200, !0);
		var e = this.screen.content.add(this.game.prodigy.create.sprite(100, 200, "boss-titan", "harveySign"));
		e.anchor.x = .5, e.anchor.y = 1, e.inputEnabled = !0, e.events.onInputDown.add(this.onSignClicked.bind(this))
	},
	renderTitan: function() {
		this.spineContainer = this.game.prodigy.create.element(this.screen.content, 1100, 400), this.titanSpine = this.game.add.spine(0, 0, "spine-boss-titan"), this.titanSpine.setAnimationByName(0, "idle", !0), this.spineContainer.add(this.titanSpine), this.setupCollisionBlock(this.spineContainer, this.onTitanClicked.bind(this))
	},
	renderHealthBar: function() {
		if (Util.isNullOrUndefined(this.titanHealthBar)) {
			for (var e = {
					elements: [{
						type: "UIElement",
						name: "healthBarContainer",
						relativeWidth: 1,
						relativeHeight: 1,
						children: [{
							type: "Slider",
							name: "healthSlider",
							relativeY: -.4,
							anchorX: .6,
							anchorY: 1,
							relativeWidth: .85,
							height: 80,
							atlasName: "ui-shared",
							activeTrackBaseFrameName: "scroll-tracks/red-large-fill",
							inactiveTrackBaseFrameName: "scroll-tracks/red-large-track",
							showHead: !1,
							isVertical: !1,
							isInteractive: !1
						}]
					}]
				}, t = new Prodigy.UI.UIParser(this.game), i = t.createUIElements(e.elements, this.spineContainer), a = 0; a < i.length; a++)
				if (i[a] instanceof Prodigy.UI.Slider) {
					this.titanHealthBar = i[a];
					break
				} this.name = this.game.prodigy.create.nameFont(this.spineContainer, -25, -265, "Titan Hearts"), this.spineContainer.add(this.name)
		}
		if (Util.isNullOrUndefined(this.game.prodigy.titansNetworkHandler.titan.health)) this.titanHealthBar.setPercentComplete(0);
		else {
			var s = this.titanAsset.maxHealth,
				r = this.game.prodigy.titansNetworkHandler.titan.health,
				n = r / s;
			1 > n && (n = Math.min(Math.max(n, .04), .96)), this.titanHealthBar.setPercentComplete(n)
		}
	},
	setupCollisionBlock: function(e, t) {
		this.collisionBlock = e.add(this.game.prodigy.create.sprite(-(.5 * e.width), -e.height, "core", "empty")), this.collisionBlock.width = e.width, this.collisionBlock.height = e.height, this.collisionBlock.inputEnabled = !0, this.collisionBlock.events.onInputDown.add(t)
	},
	onSignClicked: function() {
		this.game.prodigy.open.titanProgress(!1)
	},
	onTitanClicked: function() {
		this.moveToTitan()
	},
	moveToTitan: function() {
		var e = function(e) {
			Util.isDefined(e) && this.screen.user.setPath(e, this.callNetworkToStartBattle.bind(this))
		};
		this.screen.path.findPath(this.screen.user.x, this.screen.user.y, 800, 400, e.bind(this))
	},
	titanDeadKick: function() {
		var e = "The Titan has been defeated, for now!\nThe Puppet Master is hard at work, summoning it back once again. Keep an eye on the island map for signs of the Titan's return...";
		this.game.prodigy.open.message(e, this.titanDeadTeleport.bind(this), null, "Titan Defeated!")
	},
	titanDeadTeleport: function() {
		this.game.prodigy.world.teleport("lamplight-B3")
	},
	callNetworkToStartBattle: function() {
		this.game.prodigy.titansNetworkHandler.getTitan(this.game.prodigy.titansNetworkHandler.titan.id)
	},
	startTitanBattle: function() {
		this.game.prodigy.titansNetworkHandler.isTitanAlive() ? this._zone.util.getBattle(this, "Titan Battle!", {
			boss: {
				level: this.game.prodigy.player.kennel.getAvgTeamLv(),
				element: this.titanAsset.element,
				attacks: this.titanAsset.spellList,
				name: "Titan Barrier",
				starBonus: 0,
				tag: "titan",
				showHP: !0,
				maxHP: this.getTitanHP()
			},
			drops: [{
				ID: 11,
				type: "currency"
			}],
			difficulty: this.titanAsset.difficulty
		}, this.endBattle.bind(this, this.game), "shipwreck_shore-Titan")() : this.titanDeadKick()
	},
	endBattle: function(e) {
		e.prodigy.world.teleport("shipwreck_shore-Titan", 300, 460)
	},
	getTitanHP: function() {
		return Prodigy.Creature.getHeartsFromCurve("A", 1, Math.max(50, Math.min(100, this.game.prodigy.player.kennel.getAvgTeamLv() + 1)))
	},
	healthCurve: function(e) {
		return .5 * Math.pow(e, 2) + .5 * e + 0
	},
	cleanup: function() {
		Prodigy.Map.prototype.cleanup.call(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Titan.GOT_TITAN, this, "Titan"), this.game.broadcaster.removeAppListener(Prodigy.Events.Titan.GOT_TITANS, this, "Titan")
	},
	process: function(e, t, i) {
		Prodigy.Map.prototype.cleanup.call(this, e, t, i), Util.isNullOrUndefined(this.screen.questProgress) || (this.screen.questProgress.visible = !1)
	}
}), Prodigy.Shipwreck_Shore_Q1 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t.concat(["npc-sprite-windsail", "bgm-fun"]), 1, "", {
		type: "key",
		ID: 14,
		N: 1
	}, ["shipwreck_shore-C10"], [1, 2, 3, 4, 5, 6, 7, 8, 9], [], [0], [{
		type: "gold",
		N: 200
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q1, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q1,
	setup: function(e, t, i) {
		if (Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "C10" === i.getTag()) {
			i.addChest(e, t, "chestBreathingBubble", 210, 260, [{
				type: "key",
				ID: 14
			}]);
			var a = {
					randDir: !0,
					run: !1,
					encounter: [{
						ID: 98
					}],
					screen: this.zone.battleBG
				},
				s = 1 === this.zone.getState("mimic1");
			s || (this.mimic1 = i.addMimic(t, "mimic1", 360, 240, "A", a));
			var r = 1 === this.zone.getState("mimic2");
			return r || (this.mimic2 = i.addMimic(t, "mimic2", 120, 400, "A", a)), {
				enableMonsters: !1
			}
		}
	},
	process: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.process.call(this, e, t, i), "C10" === i.getTag() && (e.prodigy.player.backpack.hasItem("key", 14) ? (Util.isDefined(this.mimic1) && this.mimic1.highlight(!1), Util.isDefined(this.mimic2) && this.mimic2.highlight(!1)) : (Util.isDefined(this.mimic1) && this.mimic1.highlight(1 !== this.zone.getState("mimic1"), -80, -90), Util.isDefined(this.mimic2) && this.mimic2.highlight(1 !== this.zone.getState("mimic2"), -80, -90)))
	}
}), Prodigy.Shipwreck_Shore_Q2 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 2, "Find Jelly Jim", {
		type: "seq",
		N: 2
	}, ["shipwreck_shore-C9"], [10, 11, 12, 13], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "boots",
		ID: 32
	}], !1, "eve", "eve", [3])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q2, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q2,
	setup: function(e, t, i) {
		return Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), this.updateQuestArea(), "C9" === i.getTag() && this.zone.isOnSequence(2, 0) || "A7" === i.getTag() && this.zone.isOnSequence(2, 1) ? {
			enableMonsters: !1
		} : void 0
	},
	start: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.start.call(this, e, t, i), "C9" === i.getTag() && this.zone.isOnSequence(2, 0) ? this.startSequence2_0(e, t, i) : "A7" === i.getTag() && this.zone.isOnSequence(2, 1) && this.startSequence2_1(e, t, i)
	},
	updateQuestArea: function() {
		this.zone.isOnSequence(2, 1) && (this.area = ["shipwreck_shore-A7"], this.desc = "Look Around")
	},
	startSequence2_0: function(e, t, i) {
		var a = i.addNPC(e, t, i.questNPC.x - 100, i.questNPC.y, "npc-sprite-noot");
		a.visible = !1, a.float(!0);
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.validPath(t.user, t.path, i.questNPC.x - 100, i.questNPC.y - 10), s.set(a, "visible", !0), s.hop(a, 500, -100, 70), s.enableInput(!0), s.text(0, "jim"), s.text(), s.text(167, "noot"), s.text(168, "noot"), s.text(169, "noot"), s.text(), s.text(1, "jim"), s.enableInput(!1), s.hop(i.questNPC, 300, 0, 100), s.function(i.questNPC.flip.bind(i.questNPC, !0)), s.delay(250), s.function(i.questNPC.flip.bind(i.questNPC, !1)), s.delay(250), s.function(i.questNPC.flip.bind(i.questNPC, !0)), s.delay(250), s.function(i.questNPC.flip.bind(i.questNPC, !1)), s.enableInput(!0), s.text(2, "jim"), s.text(3, "jim"), s.text(4, "jim"), s.text(), s.reward([{
			type: "gold",
			N: 200
		}]), s.function(t.user.faceToward.bind(t.user, a.x - 100)), s.text(170, "noot"), s.hop(a, 500, 100, 70), s.set(a, "visible", !1), s.function(this.zone.completeSequence.bind(this.zone, 2, 0)), s.function(this.updateQuestArea.bind(this)), s.function(t.process.bind(t)), s.start()
	},
	startSequence2_1: function(e, t) {
		var i = e.prodigy.event.create();
		i.text(171, "noot"), i.function(this.zone.completeSequence.bind(this.zone, 2, 1)), i.function(t.process.bind(t)), i.start()
	}
}), Prodigy.Shipwreck_Shore_Q3 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 3, "", {
		type: "item",
		ID: 112,
		N: 1
	}, ["shipwreck_shore-A7"], [14, 15, 16], [], [0, 17], [{
		type: "gold",
		N: 200
	}, {
		type: "spell",
		ID: 7
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q3, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q3,
	setup: function(e, t, i) {
		return Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "A7" === i.getTag() ? {
			inkCallbacks: [this.collectInk.bind(this, e)]
		} : void 0
	},
	process: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.process.call(this, e, t, i), "A7" === i.getTag() && (e.prodigy.player.backpack.hasItem("item", 112) ? Util.isDefined(this.ink) && this.ink.highlight(!1) : (this.ink = e.prodigy.create.element(t.above, 560, 440), this.ink.highlight(!0)))
	},
	collectInk: function(e) {
		e.prodigy.player.backpack.hasItem("item", 112) || e.prodigy.player.backpack.add("item", 112, !1, 1)
	}
}), Prodigy.Shipwreck_Shore_Q4 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 4, "", {
		type: "key",
		ID: 15,
		N: 1
	}, ["shipwreck_shore-B7"], [18, 19, 20, 21, 22, 23, 24, 25], [], [0], [{
		type: "gold",
		N: 200
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q4, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q4,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "B7" === i.getTag() && (this.sonicBlaster = i.addClickableEvent(e, t, 320, 80, 80, 80, this.collectSonicBlaster.bind(this, e, t), null, 0))
	},
	process: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.process.call(this, e, t, i), "B7" === i.getTag() && this.sonicBlaster.highlight(!e.prodigy.player.backpack.hasItem("key", 15))
	},
	collectSonicBlaster: function(e, t) {
		if (!e.prodigy.player.backpack.hasItem("key", 15)) {
			var i = e.prodigy.event.create();
			i.validPath(t.user, t.path, this.sonicBlaster.x + .5 * this.sonicBlaster.width, this.sonicBlaster.y + this.sonicBlaster.height + 10), i.reward([{
				type: "key",
				ID: 15
			}]), i.function(t.process.bind(t)), i.start()
		}
	}
}), Prodigy.Shipwreck_Shore_Q5 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 5, "Clear all ink", {
		type: "seq",
		N: 1
	}, ["shipwreck_shore-A7"], [26, 27], [], [0], [{
		type: "gold",
		N: 200
	}])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q5, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q5,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), this.updateQuestArea(t);
		var a = this.updateQuestArea.bind(this, t);
		return "A5" === i.getTag() && (a = this.startSequence5_0.bind(this, e, t, i)), e.broadcaster.addAppListener(Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, a, this, e), {}
	},
	updateQuestArea: function() {
		this.zone.isOnSequence(5, 0) && (1 !== this.zone.getState("inkA7") ? this.area = ["shipwreck_shore-A7"] : 1 !== this.zone.getState("inkB6") ? this.area = ["shipwreck_shore-B6"] : 1 !== this.zone.getState("inkB5") ? this.area = ["shipwreck_shore-B5"] : 1 !== this.zone.getState("inkA5") ? this.area = ["shipwreck_shore-A5"] : this.zone.completeSequence(5, 0))
	},
	process: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.process.call(this, e, t, i), this.showInkHighlighter(e, t, i)
	},
	startSequence5_0: function(e, t, i) {
		var a = i.addNPC(e, t, 985, 255, "npc-sprite-noot");
		a.visible = !1, a.float(!0);
		var s = e.prodigy.event.create();
		s.function(e.broadcaster.removeAppListener.bind(e.broadcaster, Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this, e)), s.validPath(t.user, t.path, 985, 255), s.set(a, "visible", !0), s.hop(a, 375, -75, 70), s.function(t.user.faceToward.bind(t.user, a.x - 75)), s.text(172, "noot"), s.text(173, "noot"), s.hop(a, 375, 75, 70), s.set(a, "visible", !1), s.function(this.zone.completeSequence.bind(this.zone, 5, 0)), s.function(t.process.bind(t)), s.start()
	},
	showInkHighlighter: function(e, t, i) {
		var a, s, r = i.getTag();
		if (Util.isDefined(this.inkHighlighter) && this.inkHighlighter.highlight(!1), 1 !== this.zone.getState(this.zone.util.getInkStateFromMap(i))) {
			var n = !1;
			"A7" === r ? (a = 560, s = 440, n = !0) : "B6" === r ? (a = 1020, s = 220, n = !0) : "B5" === r ? (a = 320, s = 400, n = !0) : "A5" === r && (a = 1040, s = 360, n = !0), n && (this.inkHighlighter = e.prodigy.create.element(t.above, a, s), this.inkHighlighter.highlight(!0))
		}
	}
}), Prodigy.Shipwreck_Shore_Q6 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t.concat("zone-shipwreck", "sfx-shipwreck-shore"), 6, "Find Jelly Jim", {
		type: "seq",
		N: 2
	}, ["shipwreck_shore-C9"], [28, 29, 30, 31], [], [0], [{
		type: "gold",
		N: 200
	}, {
		type: "outfit",
		ID: 61
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q6, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q6,
	setup: function(e, t, i) {
		return Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), this.updateQuestArea(), "C9" === i.getTag() && this.zone.isOnSequence(6, 0) ? {
			enableMonsters: !1
		} : void 0
	},
	start: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.start.call(this, e, t, i), "C9" === i.getTag() && this.zone.isOnSequence(6, 0) ? this.startSequence6_0(e, t, i) : "A5" === i.getTag() && this.zone.isOnSequence(6, 1) && (this.cameraButton = e.prodigy.create.button(t.menus, 1040, 240, "zone-shipwreck", "camera-map", this.takePictureOfTunnel.bind(this, e, t)), this.cameraButton.highlight(!0))
	},
	updateQuestArea: function() {
		this.zone.isOnSequence(6, 1) && (this.area = ["shipwreck_shore-A5"], this.desc = "Take Picture")
	},
	startSequence6_0: function(e, t, i) {
		var a = i.addNPC(e, t, i.questNPC.x - 100, i.questNPC.y, "npc-sprite-noot");
		a.visible = !1, a.float(!0);
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.validPath(t.user, t.path, i.questNPC.x - 100, i.questNPC.y - 10), s.set(a, "visible", !0), s.hop(a, 500, -100, 70), s.enableInput(!0), s.text(5, "jim"), s.text(6, "jim"), s.reward([{
			type: "key",
			ID: 16
		}]), s.text(4, "jim"), s.text(), s.reward([{
			type: "gold",
			N: 200
		}]), s.function(t.user.faceToward.bind(t.user, a.x - 100)), s.text(175, "noot"), s.hop(a, 500, 100, 70), s.set(a, "visible", !1), s.function(this.zone.completeSequence.bind(this.zone, 6, 0)), s.function(this.updateQuestArea.bind(this)), s.function(t.process.bind(t)), s.start()
	},
	takePictureOfTunnel: function(e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 1e3, 280), i.enableInput(!1), i.cameraFlash(t), i.function(this.cameraButton.destroy.bind(this.cameraButton, !0)), i.function(this.zone.completeSequence.bind(this.zone, 6, 1)), i.function(t.process.bind(t)), i.enableInput(!0), i.start()
	}
}), Prodigy.Shipwreck_Shore_Q7 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t.concat("icon-item-113"), 7, "", {
		type: "item",
		ID: 113,
		N: 3
	}, ["shipwreck_shore-A2"], [32, 33, 34], [], [0, 17], [{
		type: "gold",
		N: 200
	}, {
		type: "spell",
		ID: 8
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q7, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q7,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "A2" === i.getTag() && (i.addCollect(e, t, 1, 880, 480, {
			type: "item",
			ID: 113
		}), i.addCollect(e, t, 2, 960, 320, {
			type: "item",
			ID: 113
		}), i.addCollect(e, t, 3, 400, 520, {
			type: "item",
			ID: 113
		}))
	}
}), Prodigy.Shipwreck_Shore_Q8 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 8, "", {
		type: "pet",
		ID: 119,
		U: !0,
		N: 4
	}, ["shipwreck_shore-B8"], [35, 36, 37], [], [38, 0], [{
		type: "gold",
		N: 200
	}], !1, "eve", "eve", []), this.questParams = {}
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q8, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q8,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), this.updateQuestArea();
		var a = i.getTag(),
			s = {
				randDir: !0,
				encounter: [{
					ID: 119
				}],
				onEnc: this.updateQuestArea.bind(this, !0)
			};
		if (-1 !== this.area.indexOf(i._zoneName)) {
			if ("B8" === a) return i.addMonster(e, t, 1, 775, 325, !0, s, !1), i.addMonster(e, t, 2, 420, 485, !0, s, !1), {
				enableMonsters: !1
			};
			if ("B7" === a) return i.addMonster(e, t, 3, 926, 305, !0, s, !1), i.addMonster(e, t, 4, 650, 475, !0, s, !1), {
				enableMonsters: !1
			}
		}
		return Util.isDefined(this.questParams.enableMonsters) ? (this.questParams = {}, {
			enableMonsters: !1
		}) : void 0
	},
	updateQuestArea: function(e) {
		this.isMapB7Cleared() ? (this.area = ["shipwreck_shore-B12"], e && (this.questParams.enableMonsters = !1)) : this.isMapB8Cleared() && -1 === this.area.indexOf("shipwreck_shore-B7") && (this.area = ["shipwreck_shore-B7"])
	},
	isMapB8Cleared: function() {
		var e = this.zone.getQuestState();
		return Util.isDefined(e) && Util.isDefined(e.req) ? 1 === e.state[1] && 1 === e.state[2] : !1
	},
	isMapB7Cleared: function() {
		var e = this.zone.getQuestState();
		return Util.isDefined(e) && Util.isDefined(e.req) ? 1 === e.state[3] && 1 === e.state[4] : !1
	}
}), Prodigy.Shipwreck_Shore_Q9 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 9, "Open the Door", {
		type: "seq",
		N: 1
	}, ["shipwreck_shore-B6"], [39, 40, 41], [], [], [{
		type: "gold",
		N: 200
	}, {
		type: "hat",
		ID: 80
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q9, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q9,
	setup: function(e, t, i) {
		return Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "B6" === i.getTag() && this.zone.isOnSequence(9, 0) ? (this.door = e.prodigy.create.element(t.above, 1160, 340), this.door.highlight(!0, 0, 0), {
			doorIsLockedCallback: this.startSequence9_0.bind(this, e, t)
		}) : void 0
	},
	startSequence9_0: function(e, t) {
		var i = e.prodigy.event.create();
		i.function(this.door.highlight.bind(this.door, !1)), i.text(176, "noot"), i.function(this.zone.completeSequence.bind(this.zone, 9, 0)), i.function(t.process.bind(t)), i.start()
	}
}), Prodigy.Shipwreck_Shore_Q10 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t, 10, "", {
		type: "item",
		ID: 114,
		N: 1,
		K: 1
	}, ["shipwreck_shore-B7"], [42], [], [], [], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q10, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q10,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), this.updateDialogue(e), "B7" !== i.getTag() || e.prodigy.player.backpack.hasItem("item", 114) || (this.bossKey = i.addClickableEvent(e, t, 800, 100, 80, 80, this.collectBossKey.bind(this, e, t), null, 0), this.bossKey.highlight(!0))
	},
	collectBossKey: function(e, t) {
		if (!e.prodigy.player.backpack.hasItem("item", 114)) {
			var i = e.prodigy.event.create();
			i.validPath(t.user, t.path, this.bossKey.x + .5 * this.bossKey.width, this.bossKey.y + this.bossKey.height + 10), i.reward([{
				type: "item",
				ID: 114
			}]), i.function(this.bossKey.highlight.bind(this.bossKey, !1)), i.function(this.zone.completeQuest.bind(this.zone, 10)), i.function(this.zone.startQuest.bind(this.zone, 11)), i.function(t.process.bind(t)), i.start()
		}
	},
	updateDialogue: function(e) {
		e.prodigy.player.backpack.hasItem("item", 114) && (this.onStart = [43])
	}
}), Prodigy.Shipwreck_Shore_Q11 = function(e, t) {
	Prodigy.AdvancedQuest.call(this, e, t.concat("boss-shipwreck_shore", "zone-shipwreck", "sfx-shipwreck-shore"), 11, "Defeat the Boss", {
		type: "seq",
		N: 1
	}, ["shipwreck_shore-C6"], [43], [], [0, 17, 44], [{
		type: "gold",
		N: 400
	}, {
		type: "spell",
		ID: 9
	}, {
		type: "key",
		ID: 17
	}], !1, "eve", "eve", [])
}, Prodigy.extends(Prodigy.Shipwreck_Shore_Q11, Prodigy.AdvancedQuest, {
	constructor: Prodigy.Shipwreck_Shore_Q11,
	setup: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.setup.call(this, e, t, i), "C6" === i.getTag() && this.zone.isOnSequence(11, 0) && (this.squeak = new Prodigy.Shipwreck_Shore.Features.Squeak(e, t, this._zone, 740, 400), this.squeak.inputEnabled = !1)
	},
	start: function(e, t, i) {
		Prodigy.AdvancedQuest.prototype.start.call(this, e, t, i), "C6" === i.getTag() && this.zone.isOnSequence(11, 0) && this.startSequence11_0(e, t, i)
	},
	startSequence11_0: function(e, t, i) {
		var a = this.zone.util.getBattle(i, "Boss Battle!", {
				boss: {
					element: "water",
					attacks: [8, 11, 20, 42],
					name: "Old One",
					tag: "shipwreck"
				},
				starMod: 5,
				difficulty: 6
			}, this.endSequence11_0.bind(this, e)),
			s = e.prodigy.event.create();
		s.enableInput(!1), s.validPath(t.user, t.path, this.squeak.x - 500, this.squeak.y), s.delay(250), s.shake(0, 3e3, 12, "h", !0);
		var r = 4,
			n = 4;
		s.tween(this.squeak, {
			y: this.squeak.y - 40 * n
		}, 2e3, Phaser.Easing.Linear.None, !0), s.sound(Prodigy.Controller.AudioController.SFX_PACKS.SHIPWRECK_SHORE, "boss-monster", !1);
		for (var o = 0; r > o; o++) {
			var h = Prodigy.Random.integerInRange(r, 2 * r);
			s.function(this.sandCloud.bind(this, e, t, this.squeak.x - .5 * h * 40, this.squeak.y, h, n--)), s.delay(400)
		}
		s.delay(750), s.enableInput(!0), s.function(a), s.start()
	},
	endSequence11_0: function(e) {
		var t = e.prodigy.event.create();
		t.function(this.zone.setState.bind(this.zone, "squeak", 4)), t.function(this.zone.completeSequence.bind(this.zone, 11, 0)), t.function(e.prodigy.world.teleport.bind(e.prodigy.world, "shipwreck_shore-C6", this.squeak.x - 500, this.squeak.y)), t.start()
	},
	sandCloud: function(e, t, i, a, s, r) {
		for (var n, o = 0; s > o; o++) {
			n = e.prodigy.create.sprite(i + 40 * o + Prodigy.Random.integerInRange(10, 30), a + Prodigy.Random.integerInRange(10, 30), "zone-shipwreck", "sand-cloud"), t.foreground.add(n), n.anchor.setTo(.5, .5), e.add.tween(n).to({
				y: n.y - 40 * r
			}, 2e3, Phaser.Easing.Linear.None, !1, 0, 0, !1).start();
			var h = Prodigy.Random.integerInRange(1e3, 1500),
				l = 0 === Prodigy.Random.integerInRange(0, 2) ? -1 : 1;
			e.add.tween(n).to({
				angle: 360 * l
			}, h, Phaser.Easing.Linear.None, !1, 0, h, !1).start()
		}
	}
}), Prodigy.Shipwreck_Shore = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Shipwreck Shore", this.ID = "shipwreck_shore", this.battleBG = "bg-battle-shipwreck-beach", this.onFaint = "shipwreck_shore-B12", this.questHub = "shipwreck_shore-B12", this.states = ["wizardC8", "wizardA5", "chestA3", "chestA5", "chestB5", "chestB13", "chestB10", "chestBreathingBubble", "mimic1", "mimic2", "inkA7", "inkB6", "inkB5", "inkA5", "inkC9", "inkB7", "squeak"], this.util = new Prodigy.Shipwreck_ShoreUtil(e, this), this.monster = [24, 66, 62, 107, 46, 99, 33, 102, 118, 98];
	var t = ["tileset-water-new", "tileset-generic-new", "tileset-collisions", "tileset-ship-exterior", "tileset-ship-interior"];
	this.maps = {
		A1: new Prodigy.Shipwreck_Shore_A1(this, t),
		A2: new Prodigy.Shipwreck_Shore_A2(this, t),
		A3: new Prodigy.Shipwreck_Shore_A3(this, t),
		A4: new Prodigy.Shipwreck_Shore_A4(this, t),
		A5: new Prodigy.Shipwreck_Shore_A5(this, t),
		A7: new Prodigy.Shipwreck_Shore_A7(this, t),
		B2: new Prodigy.Shipwreck_Shore_B2(this, t),
		B4: new Prodigy.Shipwreck_Shore_B4(this, t),
		B5: new Prodigy.Shipwreck_Shore_B5(this, t),
		B6: new Prodigy.Shipwreck_Shore_B6(this, t),
		B7: new Prodigy.Shipwreck_Shore_B7(this, t),
		B8: new Prodigy.Shipwreck_Shore_B8(this, t),
		B10: new Prodigy.Shipwreck_Shore_B10(this, t),
		B11: new Prodigy.Shipwreck_Shore_B11(this, t),
		B12: new Prodigy.Shipwreck_Shore_B12(this, t),
		B13: new Prodigy.Shipwreck_Shore_B13(this, t),
		C6: new Prodigy.Shipwreck_Shore_C6(this, t),
		C7: new Prodigy.Shipwreck_Shore_C7(this, t),
		C8: new Prodigy.Shipwreck_Shore_C8(this, t),
		C9: new Prodigy.Shipwreck_Shore_C9(this, t),
		C10: new Prodigy.Shipwreck_Shore_C10(this, t),
		C11: new Prodigy.Shipwreck_Shore_C11(this, t),
		C12: new Prodigy.Shipwreck_Shore_C12(this, t),
		Titan: new Prodigy.Shipwreck_Shore_Titan(this, t)
	}, this.quests = {
		1: new Prodigy.Shipwreck_Shore_Q1(this, []),
		2: new Prodigy.Shipwreck_Shore_Q2(this, []),
		3: new Prodigy.Shipwreck_Shore_Q3(this, []),
		4: new Prodigy.Shipwreck_Shore_Q4(this, []),
		5: new Prodigy.Shipwreck_Shore_Q5(this, []),
		6: new Prodigy.Shipwreck_Shore_Q6(this, []),
		7: new Prodigy.Shipwreck_Shore_Q7(this, []),
		8: new Prodigy.Shipwreck_Shore_Q8(this, []),
		9: new Prodigy.Shipwreck_Shore_Q9(this, []),
		10: new Prodigy.Shipwreck_Shore_Q10(this, []),
		11: new Prodigy.Shipwreck_Shore_Q11(this, [])
	}, this.scenes = {
		titanIntro: new Prodigy.Titan_Intro(this, ["tileset-interior-general", "tileset-wall-collisions", "bgm-tutorial"])
	}
}, Prodigy.extends(Prodigy.Shipwreck_Shore, Prodigy.Zone, {
	constructor: Prodigy.Shipwreck_Shore,
	init: function(e, t, i) {
		Prodigy.Zone.prototype.init.call(this, e, t, i), this.disabledLayers = [];
		var a, s, r = i.getTag(),
			n = this.util.isUnderwaterMap(r),
			o = e.prodigy.player.backpack.hasItem("key", 14);
		n && e.broadcaster.addAppListener(Prodigy.Events.Creature.PLAYER_LOADED, this.addBreathingBubbleToPlayerContainer.bind(this, e), this, this.game), (this.getCurrentQuestID() > 1 || o && "B12" === r) && (n ? (this.battleBG = "bg-battle-shipwreck-underwater", o && new Prodigy.Shipwreck_Shore.Features.BreathingBubble(e, t.user.sprites), this.enableLayer(0, !(o && n))) : (this.battleBG = "bg-battle-shipwreck-beach", this.enableLayer(0, !(o && this.util.hasWhirlpool(i.getTag()))))), "C9" === r || "B7" === r ? (a = this.getState("inkC9"), s = this.getState("inkB7"), this.enableLayer(1, 1 !== a && 1 !== s)) : this.enableLayer(1, 1 !== this.getState(this.util.getInkStateFromMap(i)))
	},
	addBreathingBubbleToPlayerContainer: function(e, t) {
		Util.isDefined(t) && e.prodigy.user === t && new Prodigy.Shipwreck_Shore.Features.BreathingBubble(e, t.sprites)
	},
	startQuest: function(e) {
		var t = Prodigy.Zone.prototype.startQuest.call(this, e);
		return Util.isDefined(t) && e > 2 ? (this.resetSqueakState(), t) : null
	},
	resetSqueakState: function() {
		var e = ["C9", "C8", "C7", "B7"],
			t = Prodigy.Random.integerInRange(0, e.length);
		this.setState("squeak", t)
	},
	cleanup: function() {
		Prodigy.Zone.prototype.cleanup.call(this), this.game.broadcaster.removeAppListener(Prodigy.Events.WalkableScreen.PLAYER_ADDED, this, this.game)
	}
}), Prodigy.Shipwreck_Shore.Features = {}, Prodigy.Shipwreck_ShoreUtil = function(e, t) {
	Prodigy.ZoneUtil.call(this, e, t)
}, Prodigy.extends(Prodigy.Shipwreck_ShoreUtil, Prodigy.ZoneUtil, {
	constructor: Prodigy.Shipwreck_ShoreUtil,
	isUnderwaterMap: function(e) {
		return "A2" === e || "A3" === e || "A5" === e || "A7" === e || "B5" === e || "B6" === e || "B7" === e || "B8" === e || "B10" === e || "B13" === e || "C6" === e || "C7" === e || "C8" === e || "C9" === e
	},
	hasWhirlpool: function(e) {
		return "A1" === e || "A4" === e || "B11" === e || "B12" === e || "C10" === e
	},
	addUnderwaterWizard: function(e, t, i, a, s, r, n) {
		var o, h = i.addWizard(e, t, a, s, r, n);
		Util.isDefined(h) && (o = new Prodigy.Shipwreck_Shore.Features.BreathingBubble(e, h.sprites), o.y += 24)
	},
	addShortcut: function(e, t, i, a, s) {
		var r = t.background.add(e.prodigy.create.sprite(a, s, "zone-shipwreck", "sand-shortcut"));
		r.y -= .5 * r.height, r.x -= .5 * r.width
	},
	enableShortcut: function(e, t, i, a, s, r) {
		if (1 === this._zone.getState("inkC9") && 1 === this._zone.getState("inkB7")) {
			var n = this.createAreaEvent(e, t, i, a, s, 3, 2, r, !1);
			return n.process(this._zone, i), n
		}
	},
	addWhirlpool: function(e, t, i, a, s, r) {
		var n, o, h, l = this.isUnderwaterMap(i.getTag());
		l ? (n = new Prodigy.Shipwreck_Shore.Features.Tornado(e, t.background, a, s), n.y -= .75 * n.height, o = 3, h = 4, s -= 40) : (n = new Prodigy.Shipwreck_Shore.Features.Whirlpool(e, t.background, a, s), n.y -= .5 * n.height, o = 3, h = 2), n.x -= .5 * n.width, this.createAreaEvent(e, t, i, a, s, o, h, r, l)
	},
	createAreaEvent: function(e, t, i, a, s, r, n, o, h) {
		if (e.prodigy.player.backpack.hasItem("key", 14)) {
			var l = this.getArrowOffsetFromHandRotation(o.handRotation, h);
			return i.addAreaEvent(e, t, {
				x: a,
				y: s,
				w: 40 * r,
				h: 40 * n,
				rect: !0,
				arrowOffsetX: l.x,
				arrowOffsetY: l.y
			}, o.target, o.x, o.y, o.callback, o.handRotation, !1)
		}
	},
	getArrowOffsetFromHandRotation: function(e, t) {
		var i = {
			x: 0,
			y: 0
		};
		switch (e) {
			case AreaEvent.UP:
				i.y = 40 + (t ? 40 : 0);
				break;
			case AreaEvent.RIGHT:
				i.x = -40;
				break;
			case AreaEvent.DOWN:
				i.y = -40 + (t ? -40 : 0);
				break;
			case AreaEvent.LEFT:
				i.x = 40;
				break;
			default:
				i.x = 0, i.y = 0
		}
		return i
	},
	addInkGroup: function(e, t, i, a, s, r) {
		var n = this.getInkStateFromMap(i);
		if (1 !== this._zone.getState(n)) {
			var o = this._zone.getCurrentQuestID();
			return e.prodigy.player.backpack.hasItem("key", 15) && o && (r.push(this.sonicBlastInk.bind(this, t, i, n)), r.push(e.broadcaster.broadcast.bind(e.broadcaster, Prodigy.Events.ShipwreckShore.INK_GROUP_DESTROYED, this.game, []))), Util.isDefined(i._questParams) && Util.isDefined(i._questParams.inkCallbacks) && (r = r.concat(i._questParams.inkCallbacks)), new Prodigy.Shipwreck_Shore.Features.InkGroup(e, t, o, a, s, r)
		}
		return null
	},
	sonicBlastInk: function(e, t, i) {
		this._zone.setState(i, 1), "inkC9" === i ? this._zone.enableLayer(1, 1 !== this._zone.getState("inkB7")) : "inkB7" === i ? this._zone.enableLayer(1, 1 !== this._zone.getState("inkC9")) : (this._zone.enableLayer(1, !1), this.updateCollisions(e, t))
	},
	updateCollisions: function(e, t) {
		e.area = t.init(this._game, t.below, t.above), e.path.init(e.area, e.tileSize)
	},
	getInkStateFromMap: function(e) {
		return "ink" + e.getTag()
	},
	getCompletedStatesCount: function(e) {
		var t = 0,
			i = 0;
		for (i; i < e.length; i++) 1 === this._zone.getState(e[i]) && t++;
		return t
	},
	addSqueak: function(e, t, i, a, s) {
		var r = t.getTag(),
			n = this._zone.getState("squeak");
		if (Util.isDefined(n) && 4 !== n && ("C9" === r && 0 === n || "C8" === r && 1 === n || "C7" === r && 2 === n || "B7" === r && 3 === n)) {
			var o = new Prodigy.Shipwreck_Shore.Features.Squeak(this._game, e, this._zone, i, a);
			return s && (o.scale.x = -1), o
		}
		return null
	}
}), Prodigy.Shipwreck_Shore.Features.BreathingBubble = function(e, t) {
	Prodigy.Control.Element.call(this, e, t, 0, 0);
	var i = this.add(e.prodigy.create.sprite(0, 0, "core-2", "bubble-1"));
	i.anchor.setTo(.5, 0), i.y -= .5 * t.height, this.tween = new Prodigy.TweenController(e, i), this.tween.set("frameName", ["bubble-1", "bubble-2", "bubble-3"], 150, 9999), this.tween.start()
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.BreathingBubble, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.BreathingBubble,
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.tween.update()
	}
}), Prodigy.Shipwreck_Shore.Features.Whirlpool = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var s = this.add(this.game.prodigy.create.sprite(0, 0, "zone-shipwreck", "whirlpool-1"));
	this.tween = new Prodigy.TweenController(e, s), this.tween.set("frameName", ["whirlpool-1", "whirlpool-2", "whirlpool-3", "whirlpool-4"], 100, 9999), this.tween.start()
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.Whirlpool, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.Whirlpool,
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.tween.update()
	}
}), Prodigy.Shipwreck_Shore.Features.Tornado = function(e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var s = this.add(this.game.prodigy.create.sprite(0, 0, "zone-shipwreck", "tornado-1"));
	this.tween = new Prodigy.TweenController(e, s), this.tween.set("frameName", ["tornado-1", "tornado-2", "tornado-3", "tornado-4"], 100, 9999), this.tween.start()
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.Tornado, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.Tornado,
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.tween.update()
	}
}), Prodigy.Shipwreck_Shore.Features.Ink = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.graphic = this.add(this.game.prodigy.create.sprite(0, 0, "zone-shipwreck", "ink-idle-1")), this.graphic.anchor.setTo(.5, 1), this.graphic.x += .5 * this.graphic.width, this.graphic.y += this.graphic.height, this.idleTween = new Prodigy.TweenController(e, this.graphic), this.idleTween.set("frameName", ["ink-idle-1", "ink-idle-2", "ink-idle-3", "ink-idle-4"], 150, 9999), this.vanishTween = new Prodigy.TweenController(e, this.graphic), this.vanishTween.delay(s), this.vanishTween.set("frameName", ["ink-vanish-1", "ink-vanish-2", "ink-vanish-3", "ink-vanish-4", "ink-vanish-5"], 150, 9999), this.vanishTween.end(this.onEnd.bind(this)), this.activeTween = this.idleTween, this.activeTween.start(), this.updateEnabled = !0
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.Ink, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.Ink,
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.updateEnabled && this.activeTween.update()
	},
	onClicked: function() {
		this.activeTween = this.vanishTween, this.activeTween.start()
	},
	onEnd: function() {
		this.visible = !1, this.updateEnabled = !1, this.game.broadcaster.broadcast(Prodigy.Events.ShipwreckShore.INK_BLASTED, this.parent, [])
	}
}), Prodigy.Shipwreck_Shore.Features.InkBlotAttack = function(e, t, i, a) {
	Prodigy.Shipwreck_Shore.Features.Ink.call(this, e, t, i, a, 0), this.vanishTween.end(this.onEnd.bind(this))
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.InkBlotAttack, Prodigy.Shipwreck_Shore.Features.Ink, {
	constructor: Prodigy.Shipwreck_Shore.Features.InkBlotAttack,
	vanish: function() {
		this.activeTween = this.vanishTween, this.activeTween.start()
	},
	onEnd: function() {
		this.visible = !1, this.updateEnabled = !1, this.destroy()
	}
}), Prodigy.Shipwreck_Shore.Features.InkGroup = function(e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t.above, 0, 0), this.game.broadcaster.addAppListener(Prodigy.Events.ShipwreckShore.INK_BLASTED, this.onInkDestroyed.bind(this), this, this), this.inkGroup = [], this.pathTarget = s, this.onClickCallbacks = r.concat(t.process.bind(t));
	var n = null,
		o = null,
		h = [0, 250, 500, 750];
	e.seededRandom.shuffleArray(h, (new Date).getTime());
	for (var l = 0; l < a.length; l++) n = a[l], o = new Prodigy.Shipwreck_Shore.Features.Ink(e, this, n.x, n.y, h[l % h.length]), o.graphic.inputEnabled = !0, o.graphic.events.onInputDown.add(this.onClicked.bind(this, t, i), this), o.graphic.scale.x = n.scaleX || 1, o.graphic.scale.y = n.scaleY || 1, this.inkGroup.push(o);
	this.destroyInk = !1
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.InkGroup, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.InkGroup,
	onInkDestroyed: function() {
		this.destroyInk = !0, this.destroyInk || this.destroy(!0)
	},
	onClicked: function(e, t) {
		var i, a = this.game.prodigy.event.create();
		if (a.validPath(e.user, e.path, this.pathTarget.x, this.pathTarget.y), this.game.prodigy.player.backpack.hasItem("key", 15) && t > 4)
			for (a.sound(Prodigy.Controller.AudioController.SFX_PACKS.SHIPWRECK_SHORE, "clear-ink", null), i = 0; i < this.inkGroup.length; i++) a.function(this.inkGroup[i].onClicked.bind(this.inkGroup[i]));
		for (i = 0; i < this.onClickCallbacks.length; i++) a.function(this.onClickCallbacks[i]);
		a.start()
	}
}), Prodigy.Shipwreck_Shore.Features.Squeak = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t.content, a, s);
	var r = this.add(this.game.prodigy.create.sprite(0, 0, "zone-shipwreck", "squeak-1"));
	r.anchor.setTo(.5, 1), r.inputEnabled = !0, r.events.onInputDown.add(this.onClicked.bind(this, t), this), this.idleTween = new Prodigy.TweenController(e, r), this.idleTween.set("frameName", ["squeak-1", "squeak-2", "squeak-3", "squeak-2", "squeak-1", "squeak-1", "squeak-1", "squeak-1", "squeak-1", "squeak-1", "squeak-2", "squeak-3", "squeak-2", "squeak-1"], 100, 9999), this.vanishTween = new Prodigy.TweenController(e, r), this.vanishTween.set("frameName", ["squeak-4", "squeak-5", "squeak-6", "squeak-7"], 100, 9999), this.vanishTween.end(this.onEnd.bind(this, i)), this.activeTween = this.idleTween, this.activeTween.start(), this.updateEnabled = !0
}, Prodigy.extends(Prodigy.Shipwreck_Shore.Features.Squeak, Prodigy.Control.Element, {
	constructor: Prodigy.Shipwreck_Shore.Features.Squeak,
	update: function() {
		Prodigy.Control.Element.prototype.update.call(this), this.updateEnabled && this.activeTween.update()
	},
	onClicked: function(e) {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.SHIPWRECK_SHORE, "squeak", null);
		var t = this.game.prodigy.event.create();
		t.validPath(e.user, e.path, this.x + (e.user.x < this.x ? -50 : 50), this.y + 20), t.function(function() {
			this.activeTween = this.vanishTween, this.activeTween.start()
		}.bind(this)), t.start()
	},
	onEnd: function(e) {
		e.setState("squeak", 4), this.visible = !1, this.updateEnabled = !1
	}
}), Prodigy.Titan_Intro = function(e, t) {
	Prodigy.Scene.call(this, e, "titan", t.concat(["npc-sprite-noot", "sfx-titan", "npc-sprite-puppetmaster", "boss-titan"])), this._loadingData.time = 1, this._loadingData.fadeIn = !1, this._loadingData.fadeOut = !1
}, Prodigy.extends(Prodigy.Titan_Intro, Prodigy.Scene, {
	constructor: Prodigy.Titan_Intro,
	setup: function(e, t, i) {
		Prodigy.Scene.prototype.setup.call(this, e, t, i), t.user.x = 250, t.user.y = 400, t.user.showName(!1), this.master = new Prodigy.Container.PuppetMaster(e, t.content, 800, 300), this.spineContainer = this.game.prodigy.create.element(t.content, 1100, 400), this.titanSpine = this.game.add.spine(0, 0, "spine-boss-titan"), this.titanSpine.setAnimationByName(0, "idle", !0), this.spineContainer.add(this.titanSpine), this.spineContainer.alpha = 0, this.noot = this.addNPC(e, t, 180, 320, "npc-sprite-noot"), this.noot.float(!0), this.noot.walkSpeed = 2, this.noot.visible = !0
	},
	start: function(e, t) {
		Prodigy.Scene.prototype.start.call(this, e, t);
		var i = e.prodigy.event.create();
		if (i.enableInput(!1), i.function(this.enterScene.bind(this, e, t)), i.delay(2e3), e.prodigy.breadcrumbManager.isBreadcrumbComplete(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO, Prodigy.Breadcrumbs.BREADCRUMB_TITAN_WATCHED_INTRO)) {
			i.enableInput(!0), i.text(13, "puppetmaster"), i.enableInput(!1), i.sound("titan", "cloud");
			for (var a = 500, s = 12, r = 0; s > r; r++) i.function(this.sandCloud.bind(this, e, t, 1100, 375, a)), i.delay(200);
			i.function(this.enterTitan.bind(this, e, this.spineContainer)), i.delay(100), i.enableInput(!0), i.text(14, "puppetmaster"), i.enableInput(!1), i.functionCallback(this.exitMaster.bind(this, e, t, 1480, -200)), i.enableInput(!0)
		} else {
			i.enableInput(!0), i.text(10, "puppetmaster"), i.enableInput(!1), i.validPath(this.noot, t.path, 380, 290), i.hop(this.noot, 200, 0, 100), i.hop(this.noot, 200, 0, 100), i.enableInput(!0), i.text(178, "noot"), i.enableInput(!1), i.enableInput(!0), i.text(11, "puppetmaster"), i.enableInput(!1), i.sound("titan", "cloud");
			for (var a = 500, s = 12, r = 0; s > r; r++) i.function(this.sandCloud.bind(this, e, t, 1100, 375, a)), i.delay(200);
			i.function(this.enterTitan.bind(this, e, this.spineContainer)), i.delay(100), i.enableInput(!0), i.text(12, "puppetmaster"), i.enableInput(!1), i.functionCallback(this.exitMaster.bind(this, e, t, 1480, -200)), i.validPath(this.noot, t.path, 380, 320), i.enableInput(!0), i.text(179, "noot"), i.text(180, "noot"), i.text(181, "noot"), i.text(182, "noot"), i.text(183, "noot")
		}
		i.function(this.end.bind(this, e, t, !0)), i.start()
	},
	end: function(e) {
		e.prodigy.breadcrumbManager.completeBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO, Prodigy.Breadcrumbs.BREADCRUMB_TITAN_WATCHED_INTRO), e.prodigy.world.teleport("shipwreck_shore-Titan")
	},
	sandCloud: function(e, t, i, a, s) {
		for (var r, n = new Phaser.Circle(i, a, s), o = function(e) {
				e.destroy()
			}, h = 0; 8 > h; h++) {
			var l = n.circumferencePoint(Prodigy.Random.integerInRange(1, 360), !0);
			r = e.prodigy.create.sprite(i + Prodigy.Random.integerInRange(0, 30), a + Prodigy.Random.integerInRange(0, 30), "boss-titan", "purple-cloud"), t.foreground.add(r), r.anchor.setTo(.5, .5), e.add.tween(r).to({
				x: l.x,
				y: l.y
			}, 9e3, Phaser.Easing.Circular.Out, !0, 0, 0, !1);
			var d = Prodigy.Random.integerInRange(1e3, 1500),
				c = 0 === Prodigy.Random.integerInRange(0, 2) ? -1 : 1;
			e.add.tween(r).to({
				angle: 360 * c
			}, d, Phaser.Easing.Linear.None, !0, 0, d, !1);
			var p = e.add.tween(r).to({
				alpha: 0
			}, 3e3, Phaser.Easing.Cubic.In, !0, 0, 0, !1);
			p.onLoop.add(o, this)
		}
	},
	enterTitan: function(e, t) {
		e.add.tween(t).to({
			alpha: 1
		}, 200, Phaser.Easing.Linear.None, !0, 0, 0, !1)
	},
	exitMaster: function(e, t, i, a, s) {
		var r = e.add.tween(this.master).to({
			x: i,
			y: a
		}, 1e3, Phaser.Easing.Linear.None).start();
		r.onComplete.add(s)
	}
}), Prodigy.Darktower = function(e) {
	Prodigy.Zone.call(this, e), this.name = "Dark Tower", this.ID = "darktower", this.battleBG = "bg-battle-tower", this.onFaint = "darktower-A1", this.questHub = "darktower-A1", this.states = [], this.util = new Prodigy.ZoneUtil(e, this);
	var t = ["tileset-darktower", "npc-forest-new", "tileset-generic-new", "tileset-collisions", "tileset-forest-new", "npc-sprite-mira", "bgm-space"];
	this.maps = {
		A1: new Darktower_A1(this, t),
		A2: new Darktower_A2(this, t),
		A3: new Darktower_A3(this, t)
	}
}, Prodigy.extends(Prodigy.Darktower, Prodigy.Zone, {
	constructor: Prodigy.Darktower,
	teleport: function(e, t, i, a, s) {
		Util.isNullOrUndefined(this.maps[e].floor) ? "A1" !== e ? Prodigy.Zone.prototype.teleport.call(this, "A1", 200, 400, a, s) : Prodigy.Zone.prototype.teleport.call(this, "A1", t, i, a, s) : Prodigy.Zone.prototype.teleport.call(this, e, 260, 550, a, s)
	}
}), Prodigy.Darktower.Features = {}, Prodigy.Darktower.AUDIO = [{
	tag: "voice-2",
	s: 0,
	d: 1
}, {
	tag: "voice-2",
	s: 1,
	d: 1
}, {
	tag: "voice-2",
	s: 2,
	d: 1
}, {
	tag: "voice-2",
	s: 3,
	d: 1
}, {
	tag: "voice-2",
	s: 4,
	d: 2
}, {
	tag: "voice-2",
	s: 6,
	d: 1
}, {
	tag: "voice-2",
	s: 7,
	d: 2
}, {
	tag: "voice-2",
	s: 9,
	d: 1
}], Prodigy.Darktower.DATA = {
	tag: "Tower",
	zoneName: "zone-tower",
	atlas: "zone-tower",
	fullName: "Dark Tower",
	dialogue: [{
		text: "Oh no! Only members can access the tower right now!",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[0]
	}, {
		text: "Hello there, young one...welcome to the Dark Tower.",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[4]
	}, {
		text: "The name's Mira, and this tower was once the home to a powerful wizard, who built it to test the power of other wizards.",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[7]
	}, {
		text: "It is said that whoever can conquer every floor and make it to the top is a true wizard.",
		face: 2
	}, {
		text: "But there is a catch! The battles here are harder, and once you leave the tower, you must start over.",
		face: 1,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[0]
	}, {
		text: "However, if you defeat the opponents on every 5th floor, you can return to that floor if you leave.",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[3]
	}, {
		text: "Well hello there! If it isn't mister fancy wizard?",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[4]
	}, {
		text: "You already beat my tower...but come back someday... I may have more challenges for you!",
		face: 0
	}, {
		text: "Oh no....you don't have enough gold!",
		face: 0,
		anim: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}]
}, Prodigy.Darktower.REWARDS = [{
	floor: 10,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 20,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 30,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 40,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 50,
	reward: [{
		type: "gold",
		N: 1e3
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 60,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 70,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 80,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 90,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}]
}, {
	floor: 100,
	reward: [{
		type: "outfit",
		ID: 38
	}, {
		type: "hat",
		ID: 42
	}, {
		type: "weapon",
		ID: 68
	}],
	text: [{
		text: "Wow...You beat me...I'm speechless...",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[3]
	}, {
		text: "I can't believe I lost to a wizard from the Academy...I thought I was the strongest!",
		face: 3
	}, {
		text: "Well then! It looks like I was wrong about you...and about the Academy! You really are the best of the best!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[6]
	}, {
		text: "Here...please accept this new robe as a gift from me. And tell all your friends to come here as well!",
		face: 2
	}, {
		text: "I'd love to meet as many wizards as possible...especially if they're as strong as you!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}]
}], Prodigy.Darktower.DIALOGUE = [
	[{
		text: "Here's your first boss...there is one on every fifth floor. Let's see how well you do!",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[2]
	}],
	[{
		text: "The wizard of this tower was once a student at the Academy, just like you...",
		face: 2
	}, {
		text: "But the wizard was MUCH stronger! WAAAAAY stronger!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}],
	[{
		text: "The wizard practiced alone, not wanting any help from the other Academy students.",
		face: 0
	}, {
		text: "He didn't want to waste time on them - they would only hold him back.",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[0]
	}],
	[{
		text: "So the wizard left the Academy a long long time ago...to train alone.",
		face: 2
	}, {
		text: "He came here and built this tower using his awesome power! What a guy!",
		face: 1
	}],
	[{
		text: "You made it to floor 25! One quarter of the way there...not bad, but not great.",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[6]
	}],
	[{
		text: "For years and years the wizard trained here alone. He mastered all the elements, learned all the spells.",
		face: 2
	}, {
		text: "...But the wizard didn't need any help from the dumb Academy to do it!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}],
	[{
		text: "One day, the wizard decided he was done training - he was already the best wizard ever!",
		face: 2
	}, {
		text: "So he decided to challenge the other wizards at the Academy, to prove he was the best.",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[0]
	}],
	[{
		text: "No wizard could match him, and so the wizard created this super-cool test to challenge wizards instead!",
		face: 1
	}, {
		text: "He called it the 'Really Really Hard Test of Trials'!",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[1]
	}],
	[{
		text: "For this test, the wizard summoned the strongest monsters possible to challenge wizards at each floor.",
		face: 2
	}, {
		text: "These monsters are the bosses of this tower. Here's another one now!",
		face: 0
	}],
	[{
		text: "Floor 50 already....you've come all this way to challenge the strongest, have you?",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[1]
	}, {
		text: "If so, then you must first challenge the father of all dragons...Grandoff!",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[2]
	}],
	[{
		text: "You are certainly something special...are you sure you're from the Academy?",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[3]
	}],
	[{
		text: "The test you are on now...this is the very same test created by the wizard himself.",
		face: 2
	}, {
		text: "Many wizards from the Academy tried it, but they ALL failed!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}],
	[{
		text: "For each new student that tried the test and failed, the wizard added a new floor...and a new challenge.",
		face: 2
	}, {
		text: "When no more floors could be added, the wizard made the challenges harder and harder.",
		face: 2
	}],
	[{
		text: "Eventually, it became obvious that no wizards would be able to climb the tower.",
		face: 2
	}, {
		text: "So the legendary wizard disappeared, and the tower began to crumble.",
		face: 2
	}],
	[{
		text: "The wizard has not been seen since, but students from the Academy still try to climb the tower.",
		face: 2
	}, {
		text: "He hoped that someday a student would be strong enough to challenge him, and so he would return to accept the challenge.",
		face: 1
	}],
	[{
		text: "Things have been easy up until now...I think it's time to step things up!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[2]
	}],
	[{
		text: "You're still going? I'm...impressed!",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[1]
	}],
	[{
		text: "This can't be...no wizards have ever made it this far...",
		face: 3
	}, {
		text: "...Who are you...?",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[3]
	}],
	[{
		text: "No...you will NOT make it to the top of this tower!",
		face: 3
	}, {
		text: "Face your next challenge...it will be your last here!",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[2]
	}],
	[{
		text: "Astounding. You have made it to the top of my tower...",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[1]
	}, {
		text: "And so you have earned the greatest of rewards...you must challenge the legendary wizard herself...",
		face: 3
	}, {
		text: "ME! THE GREAT AND POWERFUL MIRA SHADE!",
		face: 0,
		audio: Prodigy.Darktower.AUDIO[7]
	}, {
		text: "HAHAHA! It was me all along! You should see the look on your face right now!",
		face: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}, {
		text: "Come, wizard! It's time for you to face the strongest wizard of all time!",
		face: 3,
		audio: Prodigy.Darktower.AUDIO[2]
	}]
], Prodigy.Darktower.OPPONENTS = [{
	pets: [{
		ID: 99,
		level: 5
	}]
}, {
	pets: [{
		ID: 102,
		level: 5
	}]
}, {
	pets: [{
		ID: 100,
		level: 5
	}]
}, {
	pets: [{
		ID: 103,
		level: 5
	}]
}, {
	pets: [{
		ID: 101,
		level: 5
	}, {
		ID: 104,
		level: 5
	}]
}, {
	pets: [{
		ID: 31,
		level: 10
	}]
}, {
	pets: [{
		ID: 55,
		level: 10
	}]
}, {
	pets: [{
		ID: 60,
		level: 10
	}]
}, {
	pets: [{
		ID: 29,
		level: 10
	}]
}, {
	pets: [{
		ID: 92,
		level: 10
	}, {
		ID: 93,
		level: 10
	}]
}, {
	pets: [{
		ID: 27,
		level: 15
	}]
}, {
	pets: [{
		ID: 45,
		level: 15
	}]
}, {
	pets: [{
		ID: 48,
		level: 15
	}]
}, {
	pets: [{
		ID: 96,
		level: 15
	}]
}, {
	pets: [{
		ID: 28,
		level: 15
	}, {
		ID: 49,
		level: 15
	}]
}, {
	pets: [{
		ID: 4,
		level: 20
	}]
}, {
	pets: [{
		ID: 10,
		level: 20
	}]
}, {
	pets: [{
		ID: 5,
		level: 20
	}]
}, {
	pets: [{
		ID: 11,
		level: 20
	}]
}, {
	pets: [{
		ID: 6,
		level: 20
	}, {
		ID: 12,
		level: 20
	}]
}, {
	pets: [{
		ID: 1,
		level: 25
	}]
}, {
	pets: [{
		ID: 52,
		level: 25
	}]
}, {
	pets: [{
		ID: 2,
		level: 25
	}]
}, {
	pets: [{
		ID: 53,
		level: 25
	}]
}, {
	pets: [{
		ID: 3,
		level: 25
	}, {
		ID: 54,
		level: 25
	}]
}, {
	pets: [{
		ID: 78,
		level: 30
	}]
}, {
	pets: [{
		ID: 46,
		level: 30
	}]
}, {
	pets: [{
		ID: 40,
		level: 30
	}]
}, {
	pets: [{
		ID: 79,
		level: 30
	}]
}, {
	pets: [{
		ID: 80,
		level: 30
	}, {
		ID: 47,
		level: 30
	}, {
		ID: 50,
		level: 30
	}]
}, {
	pets: [{
		ID: 94,
		level: 35
	}]
}, {
	pets: [{
		ID: 85,
		level: 35
	}]
}, {
	pets: [{
		ID: 82,
		level: 35
	}]
}, {
	pets: [{
		ID: 76,
		level: 35
	}]
}, {
	pets: [{
		ID: 35,
		level: 35
	}, {
		ID: 36,
		level: 35
	}, {
		ID: 37,
		level: 35
	}]
}, {
	pets: [{
		ID: 87,
		level: 40
	}]
}, {
	pets: [{
		ID: 99,
		level: 40
	}]
}, {
	pets: [{
		ID: 94,
		level: 40
	}]
}, {
	pets: [{
		ID: 102,
		level: 40
	}]
}, {
	pets: [{
		ID: 95,
		level: 40
	}, {
		ID: 80,
		level: 40
	}, {
		ID: 23,
		level: 40
	}]
}, {
	pets: [{
		ID: 16,
		level: 45
	}]
}, {
	pets: [{
		ID: 47,
		level: 45
	}]
}, {
	pets: [{
		ID: 40,
		level: 45
	}]
}, {
	pets: [{
		ID: 80,
		level: 45
	}]
}, {
	pets: [{
		ID: 62,
		level: 45
	}, {
		ID: 26,
		level: 45
	}, {
		ID: 44,
		level: 45
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}]
}, {
	pets: [{
		ID: 66,
		level: 50
	}]
}, {
	pets: [{
		ID: 69,
		level: 50
	}]
}, {
	pets: [{
		ID: 72,
		level: 50
	}]
}, {
	boss: {
		ID: 1,
		level: 50,
		element: "fire",
		attacks: [1, 2, 3, 4, 25, 26, 27],
		maxHP: 4 * (12 + Prodigy.Creature.getHeartsFromCurve("A+", 1, 50)),
		name: "Grandoff",
		starBonus: 100
	}
}, {
	pets: [{
		ID: 23,
		level: 55
	}]
}, {
	pets: [{
		ID: 46,
		level: 56
	}]
}, {
	pets: [{
		ID: 23,
		level: 57
	}]
}, {
	pets: [{
		ID: 46,
		level: 58
	}]
}, {
	pets: [{
		ID: 46,
		level: 60
	}, {
		ID: 23,
		level: 60
	}, {
		ID: 47,
		level: 60
	}]
}, {
	pets: [{
		ID: 75,
		level: 65
	}]
}, {
	pets: [{
		ID: 78,
		level: 66
	}]
}, {
	pets: [{
		ID: 81,
		level: 67
	}]
}, {
	pets: [{
		ID: 84,
		level: 68
	}]
}, {
	pets: [{
		ID: 80,
		level: 70
	}, {
		ID: 83,
		level: 70
	}, {
		ID: 86,
		level: 70
	}]
}, {
	pets: [{
		ID: 43,
		level: 75
	}]
}, {
	pets: [{
		ID: 12,
		level: 76
	}]
}, {
	pets: [{
		ID: 54,
		level: 77
	}]
}, {
	pets: [{
		ID: 6,
		level: 78
	}]
}, {
	pets: [{
		ID: 58,
		level: 80
	}, {
		ID: 25,
		level: 80
	}, {
		ID: 61,
		level: 80
	}]
}, {
	pets: [{
		ID: 75,
		level: 85
	}]
}, {
	pets: [{
		ID: 78,
		level: 86
	}]
}, {
	pets: [{
		ID: 81,
		level: 87
	}]
}, {
	pets: [{
		ID: 84,
		level: 88
	}]
}, {
	pets: [{
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 64,
		level: 85
	}]
}, {
	pets: [{
		ID: 66,
		level: 55
	}, {
		ID: 67,
		level: 85
	}]
}, {
	pets: [{
		ID: 69,
		level: 60
	}, {
		ID: 70,
		level: 85
	}]
}, {
	pets: [{
		ID: 72,
		level: 65
	}, {
		ID: 73,
		level: 85
	}]
}, {
	pets: [{
		ID: 2,
		level: 90
	}, {
		ID: 5,
		level: 90
	}, {
		ID: 8,
		level: 90
	}, {
		ID: 11,
		level: 90
	}]
}, {
	pets: [{
		ID: 1,
		level: 95
	}]
}, {
	pets: [{
		ID: 4,
		level: 96
	}]
}, {
	pets: [{
		ID: 7,
		level: 97
	}]
}, {
	pets: [{
		ID: 10,
		level: 98
	}]
}, {
	wizards: [{
		data: '{"level":50}',
		appearance: '{"name":"Frozine", "gender":"female", "hair": { "style": 11, "color": 9 }, "skinColor":1, "eyeColor":13}',
		equipment: '{"hat":37, "outfit":33, "weapon":63}'
	}, {
		data: '{"level":50}',
		appearance: '{"name":"Charcole", "gender":"male", "hair": { "style": 18, "color": 6 }, "skinColor":2, "eyeColor":3}',
		equipment: '{"hat":11, "outfit":8, "weapon":64}'
	}, {
		data: '{"level":50}',
		appearance: '{"name":"Sprout", "gender":"female", "hair": { "style": 7, "color": 8 }, "skinColor":3, "eyeColor":6}',
		equipment: '{"hat":33, "outfit":29, "weapon":24}'
	}, {
		data: '{"level":50}',
		appearance: '{"name":"Thundane", "gender":"male", "hair": { "style": 19, "color": 16 }, "skinColor":2, "eyeColor":9}',
		equipment: '{"hat":8, "outfit":24, "weapon":23}'
	}, {
		data: '{"level":50}',
		appearance: '{"name":"Pounce", "gender":"male", "hair": { "style": 23, "color": 5 }, "skinColor":4, "eyeColor":14}',
		equipment: '{"hat":32, "outfit":31, "weapon":60}'
	}]
}, {
	pets: [{
		ID: 38,
		level: 100
	}]
}, {
	pets: [{
		ID: 87,
		level: 100
	}]
}, {
	pets: [{
		ID: 39,
		level: 100
	}]
}, {
	pets: [{
		ID: 72,
		level: 100
	}]
}, {
	pets: [{
		ID: 43,
		level: 100
	}, {
		ID: 26,
		level: 100,
		evolve: [{
			ID: 25,
			lvl: 53
		}]
	}, {
		ID: 44,
		level: 100,
		evolve: [{
			ID: 43,
			lvl: 43
		}]
	}, {
		ID: 61,
		level: 100
	}]
}, {
	pets: [{
		ID: 57,
		level: 100
	}]
}, {
	pets: [{
		ID: 61,
		level: 100
	}]
}, {
	pets: [{
		ID: 15,
		level: 100
	}]
}, {
	pets: [{
		ID: 98,
		level: 100
	}]
}, {}, {
	pets: [{
		ID: 49,
		level: 100
	}]
}, {
	pets: [{
		ID: 50,
		level: 100
	}]
}, {
	pets: [{
		ID: 54,
		level: 100
	}]
}, {
	pets: [{
		ID: 39,
		level: 100,
		evolve: [{
			ID: 38,
			lvl: 50
		}]
	}]
}, {
	pets: [{
		ID: 97,
		level: 100
	}, {
		ID: 89,
		level: 100,
		evolve: [{
			ID: 87,
			lvl: 50
		}, {
			ID: 88,
			lvl: 55
		}]
	}, {
		ID: 12,
		level: 100,
		evolve: [{
			ID: 11,
			lvl: 55
		}]
	}, {
		ID: 42,
		level: 100,
		evolve: [{
			ID: 40,
			lvl: 58
		}, {
			ID: 41,
			lvl: 60
		}]
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 66,
		level: 50
	}, {
		ID: 69,
		level: 50
	}, {
		ID: 72,
		level: 50
	}]
}, {
	pets: [{
		ID: 64,
		level: 75
	}, {
		ID: 67,
		level: 75
	}, {
		ID: 70,
		level: 75
	}, {
		ID: 73,
		level: 75
	}]
}, {
	pets: [{
		ID: 65,
		level: 100
	}, {
		ID: 68,
		level: 100
	}, {
		ID: 71,
		level: 100
	}, {
		ID: 74,
		level: 100
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 66,
		level: 50
	}, {
		ID: 69,
		level: 50
	}, {
		ID: 72,
		level: 50
	}]
}, {
	boss: {
		ID: 2,
		level: 100,
		element: "wizard",
		attacks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],
		maxHP: 4 * (12 + Prodigy.Creature.getHeartsFromCurve("A+", 1, 100)),
		name: "Mira Shade"
	}
}], Prodigy.Darktower.Features.Roulette = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, i), this.team = e.prodigy.player.kennel.getTeam(), this.callback = s, this.mods = a, this.game.input.enabled = !1, t.user.setValidPath(t.path, t.user.x, t.user.y), e.prodigy.effects.flashText("Chance Wheel Time!", this.createWheel.bind(this))
}, Prodigy.extends(Prodigy.Darktower.Features.Roulette, Prodigy.Control.Element, {
	constructor: Prodigy.Darktower.Features.Roulette,
	createWheel: function() {
		var e = this.game.prodigy.create.sprite(0, 0, "core", "overlay-small");
		e.width = this.game.world.width, e.height = this.game.world.height, e.alpha = .5, this.add(e), e.inputEnabled = !0;
		var t = this.game.prodigy.create.sprite(395, 85, "zone-tower", "wings");
		t.alpha = 0, this.add(t), this.game.add.tween(t).to({
			alpha: 1
		}, 300, Phaser.Easing.Quadratic.Out).delay(600).start();
		var i = this.game.prodigy.create.sprite(640, 360, "zone-tower", "wheel");
		i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = 0, this.add(i), this.game.add.tween(i.scale).to({
			x: 1.2,
			y: 1.2
		}, 400, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 200, Phaser.Easing.Quadratic.In).start();
		var a = this.game.prodigy.create.sprite(542, 90, "zone-tower", "pointer");
		a.alpha = 0, this.add(a);
		var s = this.game.add.tween(a).to({
			alpha: 1
		}, 300, Phaser.Easing.Quadratic.Out).delay(600).start();
		s.onComplete.addOnce(this.startWheel.bind(this, i), this)
	},
	startWheel: function(e) {
		var t = 8e3,
			i = 8,
			a = Math.floor(10 * Math.random());
		GameConstants.get("GameConstants.Build.DEBUG") && -1 !== Prodigy.Debug.ROULETTE && (a = Prodigy.Debug.ROULETTE);
		var s = 36 * a + 18,
			r = this.game.add.tween(e).to({
				angle: 360 * i - s
			}, t, Phaser.Easing.Cubic.Out).start();
		r.onComplete.addOnce(this.showResult.bind(this, a), this), this.playSound(t, 100)
	},
	showResult: function(e) {
		var t = "",
			i = 0;
		0 === e || 6 === e ? (t = "Lose 40 hearts...", i = -40) : 1 === e || 5 === e ? (t = "Gain 40 hearts!", i = 40) : 2 === e ? (t = "Lose 120 hearts...", i = -120) : 7 === e ? (t = "Gain 120 hearts!", i = 120) : 3 === e ? (t = "Damage increased!", this.mods.dmgMod = 20) : 8 === e ? (t = "Damage reduced...", this.mods.dmgMod = -20) : 9 === e ? (t = "Double stars!", this.mods.starMod = 2) : 4 === e && (t = "Switching disabled!", this.mods.switchDisabled = !0);
		for (var a = 0; a < this.team.length; a++) Util.isDefined(this.team[a]) && this.team[a].getCurrentHearts(this.game) > 0 && (this.team[a].changeCurrentHearts(i), this.team[a].getCurrentHearts(this.game) <= 0 && this.team[a].changeCurrentHearts(20));
		this.game.prodigy.effects.flashText(t, this.close.bind(this))
	},
	close: function() {
		this.game.input.enabled = !0;
		var e = this.game.add.tween(this).to({
			alpha: 0
		}, 1e3, Phaser.Easing.Linear.None).start();
		e.onComplete.addOnce(this.callback, this)
	},
	playSound: function(e, t) {
		if (!(0 >= e)) {
			this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "tick");
			var i = t + 9e-7 * Math.pow(t, 3);
			setTimeout(this.playSound.bind(this, e - i, i), t)
		}
	}
}), Prodigy.Darktower_Map = function(e, t, i, a, s, r, n) {
	Prodigy.Map.call(this, e, t, i, a, s, r, n)
}, Prodigy.extends(Prodigy.Darktower_Map, Prodigy.Map, {
	constructor: Prodigy.Darktower_Map,
	init: function(e, t, i, a) {
		var s = this.floor % 5 === 0;
		return this._zone.enableLayer(0, s), this._zone.enableLayer(1, !s), this._zone.enableLayer(2, s && !this.cleared), this._zone.enableLayer(3, !s && !this.cleared), this._zone.enableLayer(4, s && this.cleared), this._zone.enableLayer(5, !s && this.cleared), Prodigy.Map.prototype.init.call(this, e, t, i, a)
	},
	initListeners: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && (this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_SCENE, this.onDebugAutoClick.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this.onDebugAutoClickList.bind(this), this))
	},
	stopListeners: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && (this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.AUTO_CLICK_SCENE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Chest.AUTO_CLICK_LIST, this, this.game))
	},
	cleanup: function() {
		this.stopListeners(), Prodigy.Map.prototype.cleanup.call(this)
	},
	onDebugAutoClick: function(e) {
		"orb" !== e || Util.isNullOrUndefined(this.ball) || this.battle.call(this, this.screen, this.ball)
	},
	onDebugAutoClickList: function() {
		Util.log("orb")
	},
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), this.initListeners(), this._zone.bgm = "bgm-space", t.menuBar.model.disable.pets = !0, t.menuBar.open(0, !1), this.screenName = "zone-tower";
		var a = this.isOnTopFloorAndNotComplete();
		if (this.cleared) {
			for (var s = !1, r = 0; r < Prodigy.Darktower.REWARDS.length; r++) {
				var n = Prodigy.Darktower.REWARDS[r];
				if (n.floor === this.floor) {
					for (var o = this.game.prodigy.dialogue.create(), h = 0; h < n.text.length; h++) o.setText(n.text[h]);
					100 === this.floor && (a = !1), o.setText({
						callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, n.reward, this.onFloorComplete.bind(this), null, "dark-tower")
					}), o.start("mira"), s = !0
				}
			}
			s || this.onFloorComplete(), this.floor < 100 && this.addAreaEvent(e, t, {
				x: 900,
				y: 200,
				w: 120,
				h: 80
			}, null, null, null, this.toFloor.bind(this, this.floor + 1), AreaEvent.UP)
		} else if (this.floor < 100) {
			var l = this.game.prodigy.create.sprite(640, 360, this.screenName, "orb");
			l.alpha = .5, l.inputEnabled = !0, l.anchor.setTo(.5, 1), l.events.onInputDown.add(this.battle.bind(this, t, l), this), t.content.add(l), this.game.add.tween(l).to({
				y: l.y + 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.ball = l;
			var d = this.game.prodigy.create.font(t.content, 590, 295, "" + this.floor, {
				size: 40,
				width: 100,
				align: "center"
			});
			this.game.add.tween(d).to({
				y: d.y + 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0);
			var c = this.game.prodigy.create.sprite(847, 65, this.screenName, "barrier"),
				p = this.game.prodigy.create.sprite(953, 65, this.screenName, "barrier");
			p.scale.x = -1, c.inputEnabled = !0, c.events.onInputDown.add(this.blockDoor.bind(this), this), c.alpha = .8, this.game.add.tween(c).to({
				alpha: .3
			}, 1500, Phaser.Easing.Linear.None, !0, 0, 1e4, !0), t.background.add(c), p.inputEnabled = !0, p.events.onInputDown.add(this.blockDoor.bind(this), this), p.alpha = .8, this.game.add.tween(p).to({
				alpha: .3
			}, 1500, Phaser.Easing.Linear.None, !0, 0, 1e4, !0), t.background.add(p)
		}
		if (this.floor % 5 === 0) {
			var g = {
				x: 810,
				y: 600
			};
			if (this.floor < 100) {
				var u = this.cleared ? "-noglow" : "",
					y = t.content.add(this.game.prodigy.create.sprite(400, 400, this.screenName, "statue" + u)),
					m = t.content.add(this.game.prodigy.create.sprite(880, 400, this.screenName, "statue" + u));
				y.anchor.setTo(.5, 1), m.anchor.setTo(.5, 1), y.scale.x = -1, g = {
					x: 750,
					y: 310
				}
			}
			var f = new Prodigy.Container.QuestNPC(this.game, t.content, g.x, g.y, null, {
				name: "Mira Shade",
				atlas: "mira"
			}, this.onMiraClick.bind(this, t));
			f.highlight(a, -80, -150)
		}
	},
	isOnTopFloorAndNotComplete: function() {
		return 100 === this.floor && this.game.prodigy.player.getTowerProgress() < 100
	},
	onMiraClick: function(e) {
		this.isOnTopFloorAndNotComplete() ? this.battle(e) : this.npcDialogue()
	},
	onFloorComplete: function() {
		if (this.game.prodigy.player.completeTower(this.floor), this.game.prodigy.player.isBlockedByDarkTowerMemberGate()) {
			var e = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_ENTER_DARK_TOWER,
				conversionFunnelMetadata: "previewEnd"
			};
			this.game.prodigy.network.sendConversionFunnelEvent(e.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_ENTER_TOWER, e.conversionFunnelMetadata), this.game.prodigy.open.darkTowerMemberGate(null, function() {
				this.game.prodigy.player.isBlockedByDarkTowerMemberGate() && this.game.prodigy.world.teleport("darktower-A1", 200, 400)
			}.bind(this), e)
		}
	},
	blockDoor: function() {
		var e = this.game.prodigy.dialogue.create();
		e.setText({
			text: "Before you can move on, you must defeat the challenger on this floor. Click on the orb in the room to begin!",
			face: 3,
			anim: 1,
			audio: Prodigy.Darktower.AUDIO[1]
		}), e.start("mira")
	},
	setPlayerAsOpponent: function(e) {
		var t = this.game.prodigy.player,
			i = 100;
		Util.isNullOrUndefined(this.game.prodigy.player.data.level) || (i = this.game.prodigy.player.data.level);
		var a = {
				level: i.toString()
			},
			s = {
				data: JSON.stringify(a),
				appearance: JSON.stringify(t.appearance.data),
				equipment: JSON.stringify(t.equipment.data)
			};
		e.wizards = [s], e.pets = [];
		for (var r = this.game.prodigy.player.kennel.getTeam(), n = 0; n < r.length; n++)
			if (!Util.isNullOrUndefined(r[n])) {
				var o = r[n].getID(),
					h = r[n].getLevel();
				Util.isDefined(Items.getItemObject("pet", o)) && e.pets.push({
					ID: o,
					level: h
				})
			}
	},
	npcDialogue: function() {
		var e = this.game.prodigy.dialogue.create(),
			t = this.game.prodigy.player.getTowerProgress();
		100 > t ? e.setText({
			text: "The next challenge awaits!",
			face: 3,
			anim: 4,
			audio: Prodigy.Darktower.AUDIO[2]
		}) : e.setText({
			text: "You already beat my tower...but come back someday... I may have more challenges for you!",
			face: 0
		}), e.start("mira")
	},
	battle: function(e, t) {
		Util.isNullOrUndefined(t) || (t.inputEnabled = !1);
		var i = Prodigy.Darktower.OPPONENTS[this.floor - 1],
			a = Math.min(Math.floor(this.floor / 10), 10);
		if (90 === this.floor && this.setPlayerAsOpponent(i), this.mods = {
				boss: Util.copyObject(i.boss),
				screen: "bg-battle-tower",
				opponent: Util.copyObject(i.wizards),
				drops: Util.copyObject(i.drops),
				"catch": !1,
				pets: Util.copyObject(i.pets),
				difficulty: a,
				towerFloor: this.floor
			}, this.floor % 5 !== 0) new Prodigy.Darktower.Features.Roulette(this.game, e, e.above, this.mods, this.startBattle.bind(this));
		else {
			e.user.setValidPath(e.path, e.user.x, e.user.y);
			var s = Prodigy.Darktower.DIALOGUE[Math.floor(this.floor / 5 - 1)];
			if (Util.isDefined(s)) {
				for (var r = this.game.prodigy.dialogue.create(), n = 0; n < s.length; n++) r.setText(s[n]);
				r.setText({
					callback: this.startBattle.bind(this)
				}), r.start("mira")
			} else this.startBattle()
		}
	},
	startBattle: function() {
		var e = "";
		this.floor < 10 ? e = "00" : this.floor < 100 && (e = "0"), this.game.prodigy.network.sendAnalytics("Dark-Tower-Battle", "Floor" + e + this.floor + "-BattleStarted", "Events");
		var t = function() {
				this.game.prodigy.world.teleport("darktower-A1", 200, 400)
			},
			i = function(e) {
				var t = this.floor < 100 ? "A2" : "A3";
				this._zone.maps[t].cleared = !0, this.game.prodigy.world.teleport("darktower-" + t, e.x, e.y)
			};
		GameConstants.get("GameConstants.Debug.AUTO_RESOLVE_TOWER_BATTLES_ENABLED") ? i.call(this, this.screen.user.position) : this.game.prodigy.battle.start(this.mods, t.bind(this), i.bind(this, this.screen.user.position), null, "darktower-A1")
	},
	toFloor: function(e) {
		if (e > 100) return this.toBase(), void 0;
		var t = 100 > e ? "A2" : "A3";
		this._zone.maps[t].floor = e, this._zone.maps[t].updateZoneNameFromCurrentFloor(), this._zone.maps[t].cleared = !1, this.game.prodigy.world.teleport("darktower-" + t, 260, 550)
	},
	updateZoneNameFromCurrentFloor: function() {
		var e = "darktower-",
			t = this.floor < 100 ? "A2-" : "A3-";
		this._zoneName = e + t + this.floor
	},
	toBase: function() {
		var e = function(e) {
				e.prodigy.world.teleport("darktower-A1", 850, 380)
			},
			t = this.game.prodigy.player.getTowerProgress();
		if (t = t - t % 5 + 1, 100 > t) {
			var i = this.game.prodigy.dialogue.create();
			i.setText({
				text: "If you leave now, you'll have to start at floor " + t + ". Are you sure you want to leave?",
				face: 3,
				anim: 1,
				audio: Prodigy.Darktower.AUDIO[1],
				yes: e.bind(this, this.game)
			}), i.start("mira")
		} else e(this.game)
	}
}), Darktower_A1 = function(e, t) {
	Prodigy.Map.call(this, e, "A1", "Dark Tower Entrance", 200, 400, ["darktower-A2"], t)
}, Prodigy.extends(Darktower_A1, Prodigy.Map, {
	constructor: Darktower_A1,
	setup: function(e, t, i) {
		Prodigy.Map.prototype.setup.call(this, e, t, i), new Prodigy.Container.QuestNPC(e, t.content, 900, 360, null, {
			name: "Mira Shade",
			atlas: "mira"
		}, this.openTower.bind(this)), this._zone.bgm = "bgm-intro", this.addHealStone(e, t, 620, 300)
	},
	openTower: function() {
		var e = this.game.prodigy.player.getTowerProgress();
		if (e = e - e % 5 + 1, e > 100 && (e = 100), this.game.prodigy.network.sendAnalytics("Dark-Tower"), this.game.prodigy.player.isBlockedByDarkTowerMemberGate()) {
			var t = {
				conversionFunnelName: Prodigy.FunnelEventIDs.FUNNEL_ENTER_DARK_TOWER,
				conversionFunnelMetadata: "towerBase"
			};
			this.game.prodigy.network.sendConversionFunnelEvent(t.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_ENTER_TOWER, t.conversionFunnelMetadata), this.game.prodigy.open.darkTowerMemberGate(null, t)
		} else {
			var i = this.game.prodigy.dialogue.create();
			if (0 === this.game.prodigy.player.getTowerProgress()) {
				for (var a = 1; 6 > a; a++) i.setText(Darktower_A1.DATA.dialogue[a]);
				var s = {
					text: "Do you want to start climbing the tower from floor " + e + "?",
					face: 0,
					yes: this.changeTeam.bind(this, e),
					audio: Darktower_A1.AUDIO[0]
				};
				i.setText(s)
			} else if (this.game.prodigy.player.getTowerProgress() > 99)
				for (var a = 6; 8 > a; a++) i.setText(Darktower_A1.DATA.dialogue[a]);
			else {
				var s = {
					text: "Do you want to continue climbing the tower from floor " + e + "? \n\nIt will cost you [gold] 500.",
					face: 0,
					yes: this.changeTeam.bind(this, e, 500),
					audio: Darktower_A1.AUDIO[0]
				};
				i.setText(s)
			}
			i.start("mira")
		}
	},
	changeTeam: function(e, t) {
		var i = !0;
		if (!Util.isNullOrUndefined(t))
			if (this.game.prodigy.player.getGold() >= t) this.game.prodigy.player.changeGold(-500);
			else {
				var a = this.game.prodigy.dialogue.create(),
					s = this.game.prodigy.player.isMember ? null : this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.GET_GOLD);
				a.setText(Darktower_A1.DATA.dialogue[8]), a.start("mira", null, s), i = !1
			} i && this.toFloor(e, !0)
	},
	toFloor: function(e, t) {
		if (t) {
			var i = 100 > e ? "A2" : "A3";
			this._zone.maps[i].floor = e, this._zone.maps[i].updateZoneNameFromCurrentFloor(), this._zone.maps[i].cleared = !1, this.game.prodigy.world.teleport("darktower-" + i, 260, 550)
		}
	}
}), Darktower_A1.AUDIO = [{
	tag: "voice-2",
	s: 0,
	d: 1
}, {
	tag: "voice-2",
	s: 1,
	d: 1
}, {
	tag: "voice-2",
	s: 2,
	d: 1
}, {
	tag: "voice-2",
	s: 3,
	d: 1
}, {
	tag: "voice-2",
	s: 4,
	d: 2
}, {
	tag: "voice-2",
	s: 6,
	d: 1
}, {
	tag: "voice-2",
	s: 7,
	d: 2
}, {
	tag: "voice-2",
	s: 9,
	d: 1
}], Darktower_A1.DATA = {
	tag: "TowerBase",
	zoneName: "zone-towerbase",
	atlas: "zone-towerbase",
	fullName: "Dark Tower",
	dialogue: [{
		text: "Oh no! Only members can access the tower right now!",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[0]
	}, {
		text: "Hello there, young one...welcome to the Dark Tower.",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[4]
	}, {
		text: "The name's Mira, and this tower was once the home of a powerful wizard, who built it to test the power of other wizards.",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[7]
	}, {
		text: "It is said that whoever can conquer every floor and make it to the top is a true wizard.",
		face: 2
	}, {
		text: "But there is a catch! The battles here are harder, and once you leave the tower, you must start over.",
		face: 1,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[0]
	}, {
		text: "However, if you defeat the opponents on every 5th floor, you can return to that floor if you leave.",
		face: 2,
		audio: Prodigy.Darktower.AUDIO[3]
	}, {
		text: "Well hello there! If it isn't the fancy-pants wizard!",
		face: 0,
		anim: 4,
		audio: Prodigy.Darktower.AUDIO[4]
	}, {
		text: "You already beat my tower...but come back someday...I may have more challenges for you!",
		face: 0
	}, {
		text: "Oh no....you don't have enough gold!",
		face: 0,
		anim: 1,
		audio: Prodigy.Darktower.AUDIO[0]
	}]
}, Darktower_A2 = function(e, t) {
	Prodigy.Darktower_Map.call(this, e, "A2", "Dark Tower Floor ", 260, 550, ["darktower-A1", "darktower-A3"], t)
}, Prodigy.extends(Darktower_A2, Prodigy.Darktower_Map, {
	constructor: Darktower_A2,
	setup: function(e, t, i) {
		Prodigy.Darktower_Map.prototype.setup.call(this, e, t, i), this.addAreaEvent(e, t, {
			x: 240,
			y: 640,
			w: 160,
			h: 80,
			canRetrigger: !0
		}, null, null, null, this.toBase.bind(this), AreaEvent.DOWN)
	},
	getName: function() {
		return Prodigy.Darktower_Map.prototype.getName.call(this) + this.floor
	}
}), Darktower_A3 = function(e, t) {
	Prodigy.Darktower_Map.call(this, e, "A3", "Dark Tower Showdown", 260, 550, ["darktower-A2"], t)
}, Prodigy.extends(Darktower_A3, Prodigy.Darktower_Map, {
	constructor: Darktower_A3,
	setup: function(e, t, i) {
		Prodigy.Darktower_Map.prototype.setup.call(this, e, t, i);
		var a = {
			x: 560,
			y: 200,
			w: 160,
			h: 160
		};
		this.addAreaEvent(e, t, {
			x: a.x + .5 * a.w,
			y: a.y + .5 * a.h,
			w: a.w,
			h: a.h,
			rect: !1,
			canRetrigger: !0
		}, null, null, null, this.toBase.bind(this), AreaEvent.DOWN), this.addClickableMoveEvent(e, t, a.x, a.y, a.w, a.h, 640, 340)
	},
	updateZoneNameFromCurrentFloor: function() {
		Prodigy.Darktower_Map.prototype.updateZoneNameFromCurrentFloor.call(this), this._zoneName += "-" + this._zone.game.prodigy.player.userID
	}
}), Prodigy.Battle.Battle = function(e) {
	Screen.call(this, e, "Wizard Battle!", "battle", "battle", ["battle", "sfx-battle"]), this.area = "", this.teamA = [], this.teamB = [], this.runAwayCallback = null, this.victoryCallback = null, this.defeatCallback = null
}, Prodigy.extends(Prodigy.Battle.Battle, Screen, {
	constructor: Prodigy.Battle.Battle,
	initListeners: function() {
		Screen.prototype.initListeners.call(this), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.GET_IS_RUNNING, this.getIsRunning.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.APPLY_SLOT_BONUS, this.applySlotBonus.bind(this), this), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.END_BATTLE, this.endBattle.bind(this), this)
	},
	stopListeners: function() {
		Screen.prototype.stopListeners.call(this), this.game.broadcaster.removeAppListener(Prodigy.Events.Battle.GET_IS_RUNNING, this), this.game.broadcaster.removeAppListener(Prodigy.Events.Battle.APPLY_SLOT_BONUS, this), this.game.broadcaster.removeAppListener(Prodigy.Events.Battle.END_BATTLE, this)
	},
	getIsRunning: function() {
		return this.isRunning
	},
	create: function() {
		this.zoneName = "battle-" + this.game.prodigy.player.userID, Screen.prototype.create.call(this), this.game.prodigy.player.saveEnabled = !1
	},
	screenSetup: function() {
		this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName), this.background.add(this.bg), this.heartsA = new Prodigy.Container.Hearts(this.game, this.foreground, 30, -200, null, !1, !1), this.heartsB = new Prodigy.Container.Hearts(this.game, this.foreground, 1250 - Prodigy.Container.Hearts.WIDTH, -200, null, !0, !1), this.teams = [], this.teams.push(new Team(this.game, this.content, this.teamA, !0, -200, 550, 250, 550, this.heartsA, !1)), this.teams.push(new Team(this.game, this.content, this.teamB, !1, 1480, 550, 1030, 550, this.heartsB, !0)), this.resetPotions.call(this), 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-battle", !0), this.isRunning = !0, this.checkCombatMods(), Screen.prototype.screenSetup.call(this)
	},
	screenUpdate: function() {
		Screen.prototype.screenUpdate.call(this), Util.isDefined(this.currentManager) && Util.isDefined(this.currentManager.update) && this.currentManager.update()
	},
	checkCombatMods: function() {
		this.slotRewardIndex = null, Util.isDefined(this.mods.epicArena) ? (this.game.prodigy.create.font(this.foreground, 570, 5, "BATTLE", {
			size: 20,
			width: 140,
			align: "center"
		}), this.foreground.add(this.game.prodigy.create.sprite(518, 20, "battle", "round-counter")), this.epicBattleRound1 = this.game.prodigy.create.font(this.foreground, 615, 55, "1", {
			size: 2,
			width: 140,
			align: "center",
			font: "battle",
			mono: 44
		}), this.epicBattleRound2 = this.game.prodigy.create.font(this.foreground, 584, 55, "0", {
			size: 2,
			width: 140,
			align: "center",
			font: "battle",
			mono: 44
		}), this.epicBattleRound3 = this.game.prodigy.create.font(this.foreground, 553, 55, "0", {
			size: 2,
			width: 140,
			align: "center",
			font: "battle",
			mono: 44
		}), this.newEpicBattle()) : this.startCombat()
	},
	newEpicBattle: function() {
		if (this.enableOverlay(), 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-battle", !0), this.mods.starMod = 1, this.mods.level = this.teams[0].current.source.data.level, this.mods.difficulty = 1, this.drops = [], this.checkSlotRewardAndEncounter(), this.mods.epicArena < 10) this.epicBattleRound1.setText("" + this.mods.epicArena);
		else if (this.mods.epicArena < 100) {
			var e = this.mods.epicArena % 10;
			this.epicBattleRound1.setText("" + e);
			var t = (this.mods.epicArena - e) / 10;
			this.epicBattleRound2.setText("" + t)
		} else {
			var i = this.mods.epicArena % 100;
			this.epicBattleRound3.setText("" + (this.mods.epicArena - i) / 100);
			var e = i % 10;
			this.epicBattleRound1.setText("" + e);
			var t = (i - e) / 10;
			this.epicBattleRound2.setText("" + t)
		}
		this.isRunning = !0, this.teamB = this.game.prodigy.battle.initBattle(this.mods, this.game.prodigy.battle.getBattleLevel(this.teamA), this.teamA), this.teams.pop(), this.teams.push(new Team(this.game, this.content, this.teamB, !1, 1480, 550, 1030, 550, this.heartsB, !0));
		var a = !(this.teams[0].current.source.getCurrentHearts() >= this.teams[0].current.source.getMaxHearts());
		this.game.prodigy.open.slotMachine(this.teams[0].current.source.data.ID, a, this.mods.epicArena - 1)
	},
	checkSlotRewardAndEncounter: function() {
		var e = "" + this.teams[0].current.source.data.ID;
		if (this.mods.encounter = [{
				ID: this.game.seededRandom.pick(Monsters.epicArena[e].monsters[this.mods.challengeLevel], 1013 * this.mods.epicArena)
			}], this.mods.getAllRewards === !0) {
			if (this.mods.epicArena % 10 === 0) {
				this.slotRewardIndex = Util.isDefined(this.slotRewardIndex) ? this.slotRewardIndex + 1 : 0;
				var t = Monsters.epicArena[e].rewards[this.slotRewardIndex % 3];
				this.game.prodigy.player.house.getOwned(t.ID) >= 9 && (t = {
					type: "gold",
					N: 50
				}), this.drops.push(t)
			}
		} else if (this.mods.epicArena % (10 + 5 * this.mods.challengeLevel) === 0) {
			this.slotRewardIndex = this.mods.challengeLevel;
			var t = Monsters.epicArena[e].rewards[this.mods.challengeLevel];
			this.game.prodigy.player.house.getOwned(t.ID) >= 9 && (t = {
				type: "gold",
				N: 50
			}), this.drops.push(t)
		}
		this.drops.push({
			type: "gold",
			N: -50
		})
	},
	applySlotBonus: function(e) {
		var t = this.teams[0].current.source,
			i = this.teams[1].current.source;
		t.resetModifiers(), i.resetModifiers(), t.starsEarned = 0, t.getCurrentHearts() >= t.getMaxHearts() && t.changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER);
		for (var a = 0, s = 1, r = 0; r < e.length; r++) switch (e[r]) {
			case 1:
				t.updateModifier("maxHearts", .1);
				break;
			case 2:
				t.updateModifier("maxHearts", .2);
				break;
			case 3:
				t.updateModifier("maxHearts", .3);
				break;
			case 4:
				t.updateModifier("maxHearts", -.1);
				break;
			case 5:
				a += .1;
				break;
			case 6:
				a += .2;
				break;
			case 7:
				a += .3;
				break;
			case 8:
				a -= .1;
				break;
			case 9:
				a -= .2;
				break;
			case 10:
				s += .1;
				break;
			case 11:
				s += .2;
				break;
			case 12:
				s += .3;
				break;
			case 13:
				t.updateModifier("damage", .2);
				break;
			case 14:
				t.updateModifier("damage", -.1);
				break;
			case 15:
				this.drops.push({
					type: "gold",
					N: 25
				});
				break;
			case 16:
				i.updateModifier("miss", .25);
				break;
			case 17:
				i.updateModifier("ignoreElement", 1), t.updateModifier("ignoreElement", 1)
		}
		t.changeCurrentHearts(t.getMaxHearts() * a, .01 * t.getMaxHearts()), this.mods.starMod *= s, t.modifiers.maxHearts > 1 && t.changeCurrentHearts(t.getCurrentHearts() * (t.modifiers.maxHearts - 1)), this.disableOverlay(), this.startCombat()
	},
	startCombat: function() {
		this.game.add.tween(this.heartsA).to({
			y: 0
		}, 600, Phaser.Easing.Quadratic.Out, !0), (!this.teams[1].isBoss() || this.teams[1].showHearts()) && this.game.add.tween(this.heartsB).to({
			y: 0
		}, 600, Phaser.Easing.Quadratic.Out, !0), Util.isDefined(this.combatManager) === !1 && (this.combatManager = new Prodigy.Battle.CombatManager(this.game)), this.combatManager.setup(this), this.currentManager = this.combatManager
	},
	startVictory: function() {
		this.isRunning = !1, 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-victory", !0), this.game.add.tween(this.heartsB).to({
			y: -250
		}, 800, Phaser.Easing.Quadratic.Out, !0), this.heartsA.soundEnabled = !1, Util.isDefined(this.victoryManager) === !1 && (this.victoryManager = new Prodigy.Battle.VictoryManager(this.game)), this.victoryManager.setup(this), this.currentManager = this.victoryManager
	},
	processEndBattleQuests: function() {
		for (var e = this.teams[1].getDefeated(), t = 0; t < e.length; t++) Util.isDefined(this.mods.quest) && this.game.prodigy.player.quests.defeatMonster(this.mods.zoneID, this.mods.quest, e[t].getID());
		Util.isDefined(this.mods.quest) && this.game.prodigy.player.quests.defeatBoss(this.mods.zoneID, this.mods.quest), Util.isDefined(this.mods.dailyQuest) && this.game.prodigy.world.zones[this.mods.zoneId].util.updateDailyQuest.call(this.game.prodigy.world.zones[this.mods.zoneId].util, this.mods.dailyQuest)
	},
	endBattle: function(e) {
		this.resetPotions.call(this), this.isRunning = !1, this.game.prodigy.player.tutorial.getMenuValue(3, 2) < 2 && this.game.prodigy.player.tutorial.setMenuValue(3, 2, 2), this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.player.battleCounter++, this.game.prodigy.network.processPlayer = !0;
		var t = this.game.prodigy.education.getUpdatedData();
		if (this.game.prodigy.network.updateUserAbility(t), this.game.prodigy.player.getCurrentHearts(this.game) <= 0 && this.game.prodigy.player.changeCurrentHearts(20), "run" === e) this.runAwayCallback();
		else if ("win" === e) {
			if (!Util.isNullOrUndefined(this.mods.towerFloor)) {
				var i = "";
				this.mods.towerFloor < 10 ? i = "00" : this.mods.towerFloor < 100 && (i = "0"), this.game.prodigy.network.sendAnalytics("Dark-Tower-Battle", "Floor" + i + this.mods.towerFloor + "-BattleWon", "Events")
			}
			this.processEndBattleQuests(), Util.isDefined(this.mods.epicArena) ? (this.mods.epicArena++, this.newEpicBattle()) : this.victoryCallback(this.mods, this.teams[1].getDefeated())
		} else if ("lose" === e) {
			if (!Util.isNullOrUndefined(this.mods.towerFloor)) {
				var i = "";
				this.mods.towerFloor < 10 ? i = "00" : this.mods.towerFloor < 100 && (i = "0"), this.game.prodigy.network.sendAnalytics("Dark-Tower-Battle", "Floor" + i + this.mods.towerFloor + "-BattleLost", "Events")
			}
			if (Util.isDefined(this.defeatCallback) && this.defeatCallback(), Util.isDefined(this.mods.epicArena)) return;
			this.game.state.states.Faint.targetZone = this.defeatZone, this.game.prodigy.start("Faint")
		}
	},
	resetPotions: function() {
		for (var e = 0; e < this.teams.length; e++)
			for (var t = 0; t < this.teams[e].team.length; t++) {
				var i = this.teams[e].team[t];
				i.source.updateModifier.call(i.source, "potion", null), Util.isDefined(i.potionIcon) && (i.potionIcon.destroy.call(i.potionIcon), i.potionIcon = null), Util.isDefined(i.potencyIcon) && (i.potencyIcon.destroy.call(i.potencyIcon), i.potencyIcon = null)
			}
	}
});
var PVP = function() {
		function e(e) {
			Screen.call(this, e, "Wizard Battle!", "battle", "battle", ["bg-battle-arena", "battle", "attacks", "bgm-battle", "bgm-victory", "sfx-battle", "sfx-pvp"]), this.area = "", this.teamA = [], this.teamB = [], this.worldData = {
				teamHealth: []
			}, this.timerRunning = !1, this.timerStart = null, this.textChangeCheck = 0, this.screenName = "bg-battle-arena", this.runAwayCallback = null, this.victoryCallback = null, this.defeatCallback = null
		}
		return e.prototype = Object.create(Screen.prototype), e.SELECT_TIMEOUT = 3e4, e.prototype.onMessage = function(e) {
			Util.isDefined(this.game) && ("request_data" === e.action ? this.emitMessage({
				action: "data",
				data: {
					userID: this.game.prodigy.player.userID,
					equipment: this.game.prodigy.player.equipment.data,
					appearance: this.game.prodigy.player.appearance.data,
					data: this.game.prodigy.player.data,
					pets: this.game.prodigy.player.kennel.data
				}
			}) : "request_init" === e.action ? this.emitMessage({
				action: "init",
				data: {}
			}) : "request_action" === e.action && Util.isDefined(this.currentManager.currentAction) ? this.emitMessage({
				action: "action",
				data: this.currentManager.currentAction
			}) : "request_next" === e.action && Util.isDefined(this.currentManager.nextAction) ? this.emitMessage({
				action: "next",
				data: this.currentManager.nextAction
			}) : "action" === e.action && "request_action" === this._state && Util.isDefined(e.data) && e.data.turn == this.currentManager.turn ? (this._state = "working", this.currentManager.processAction(e.data)) : "next" === e.action && "request_next" === this._state && (this._state = "working", this.currentManager.playerTurn(e.data)), this._timeout = Date.now() + 6e4)
		}, e.prototype.emitMessage = function(e) {
			e.target = this.playerB.userID, this.game.prodigy.network.emitMessage(e)
		}, e.prototype.loadedAssets = function(e, t) {
			Util.isDefined(this.game) && (this.isLoaded = t, this._state = "request_init")
		}, e.prototype.create = function() {
			this.game.prodigy.network.setZone(this), this.inCombat = !1, this._processConnections = !0, Screen.prototype.create.call(this), this._state = "request_data", this._timeout = Date.now() + 45e3, this._heartbeat = Date.now() + 3e3
		}, e.prototype.screenSetup = function() {
			this.game.prodigy.player.saveEnabled = !1, this.game.prodigy.network.sendAnalytics("PVP", "start", "Events"), this.game.prodigy.network.sendEvent("PVP", {
				type: "start",
				startType: this.getStartTypeString(),
				classID: this.game.prodigy.player.getLatestClassIDLegacy(),
				grade: this.game.prodigy.player.grade
			}, !0), this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName), this.background.add(this.bg), this.heartsA = new Prodigy.Container.Hearts(this.game, this.background, 30, -150, null, !1, !0), this.heartsB = new Prodigy.Container.Hearts(this.game, this.background, 784, -150, null, !0, !0), this.teamComboMetre = new Prodigy.Battle.ComboMetre(this.game.broadcaster, Prodigy.Battle.PVP_CONFIG), this.opponentComboMetre = new Prodigy.Battle.ComboMetre(this.game.broadcaster, Prodigy.Battle.PVP_CONFIG);
			var e = this.teamComboMetre.createUI(this.game, this.background, 30, 560),
				t = this.opponentComboMetre.createUI(this.game, this.background, 1250, 560);
			t.flip();
			for (var i = 0; i < this.teamA.length; i++) this.worldData.teamHealth.push(this.teamA[i].data.hp);
			this.setupBattleHP(this.teamA, !0), this.setupBattleHP(this.teamB, !0), this.teams = [];
			var a = new Team(this.game, this.content, this.teamA, !0, -200, 550, 250, 550, this.heartsA, !0),
				s = new Team(this.game, this.content, this.teamB, !1, 1480, 550, 1030, 550, this.heartsB, !0);
			this.teams.push(a), this.teams.push(s), this.teamComboMetre.setBroadcasterContext(a), this.opponentComboMetre.setBroadcasterContext(s), e.setupListeners(a), t.setupListeners(s), 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-battle", !0, !0), this.msgPanel = this.game.prodigy.create.panel(this.foreground, 520, 600, 6, 2, "item-common"), this.msgPanel.timerPanel = this.game.prodigy.create.panel(this.msgPanel, 0, 0, 6, 1, "item-epic"), this.msgPanel.timerPanel.scale.y *= -1, this.msgPanel.timerPanel.y += 80, this.timerRect = this.game.add.graphics(0, 0, this.msgPanel), this.timerRect.beginFill(0, 1), this.timerRect.lineTo(240, 0), this.timerRect.lineTo(240, 40), this.timerRect.lineTo(0, 40), this.timerRect.lineTo(0, 0), this.timerRect.endFill(), this.timerRect.y = 46, this.msgPanel.timerPanel.mask = this.timerRect, this.msgPanel.msgTop = this.game.prodigy.create.font(this.msgPanel, 5, 5, "Select your action", {
				width: 230,
				align: "center"
			}), this.msgPanel.msgBot = this.game.prodigy.create.font(this.msgPanel, 5, 45, "Time left", {
				width: 230,
				align: "center"
			}), this.msgPanel.visible = !1, this.startCombat(), Screen.prototype.screenSetup.call(this)
		}, e.prototype.setState = function(e) {
			this._state = e, this._sendNow = !0
		}, e.prototype.startTimer = function() {
			Util.isDefined(this.timerRect) && (this.timerRect.x = 0, this.game.tweens.removeFrom(this.timerRect), this.timerRunning = !0, this.timerStart = Date.now())
		}, e.prototype.onTimerComplete = function() {
			this.timerRunning && this.currentManager.generateMissAttack()
		}, e.prototype.update = function() {
			if (Screen.prototype.update.call(this), this.timerRunning) {
				var t = Date.now() - this.timerStart;
				t > e.SELECT_TIMEOUT ? this.onTimerComplete() : this.timerRect.x = -(240 * (t / e.SELECT_TIMEOUT))
			}
			this._processConnections && Util.isDefined(this._timeout) && this._timeout < Date.now() && (this.inCombat ? (this._processConnections = !1, delete this._heartbeat, delete this._timeout, this.currentManager.processEnd(!0)) : this.endCombat("fail")), this._processConnections && Util.isDefined(this._heartbeat) && (this._heartbeat < Date.now() || this._sendNow) && (this.emitMessage({
				action: this._state,
				data: {}
			}), this._heartbeat = Date.now() + 3e3, this._sendNow = !1)
		}, e.prototype.screenUpdate = function() {
			if (Screen.prototype.screenUpdate.call(this), Util.isDefined(this.currentManager)) {
				this.msgPanel.visible = this.currentManager.waitingToSelect || "loading" !== this._state && "working" !== this._state && "deserted" !== this._state;
				var e = (this.msgPanel.visible ? 1 : 0) + (this.currentManager.waitingToSelect ? 2 : 0);
				if (this.msgPanel.visible && (this.msgPanel.timerPanel.visible = this.currentManager.waitingToSelect, this.textChangeCheck !== e || this.game.prodigy.updateCount % 25 === 0))
					if (this.currentManager.waitingToSelect) this.msgPanel.msgTop.setText("Select your action"), this.msgPanel.msgBot.setText("Time left");
					else switch (this.msgPanel.msgTop.setText("Waiting on player"), this.msgPanel.msgBot.text.length) {
						case 0:
							this.msgPanel.msgBot.setText(".");
							break;
						case 1:
							this.msgPanel.msgBot.setText("..");
							break;
						case 2:
							this.msgPanel.msgBot.setText("...");
							break;
						default:
							this.msgPanel.msgBot.setText("")
					}
				this.textChangeCheck = e, this.timerRunning ? this.timerRunning = 3 == this.textChangeCheck : (this.timerRunning = 3 == this.textChangeCheck, this.timerRunning && this.startTimer())
			}
			this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_UPDATE, this.teams[0], []), this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_UPDATE, this.teams[1], [])
		}, e.prototype.setupBattleHP = function(e, t) {
			for (var i = 0; i < e.length; i++) e[i].inPVP = t, t && e[i].changeCurrentHearts(GameConstants.MAX_SAFE_INTEGER)
		}, e.prototype.startCombat = function() {
			this.mods.arena && (this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.player.data.deserter = 1, this.game.prodigy.player.updated = !0, this.game.prodigy.network.updateCharacter(), this.game.prodigy.player.saveEnabled = !1), this.game.add.tween(this.heartsA).to({
				y: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), (!this.teams[1].isBoss() || this.teams[1].showHearts()) && this.game.add.tween(this.heartsB).to({
				y: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.currentManager = new Prodigy.PVPManager(this.game, this), this.inCombat = !0
		}, e.prototype.endCombat = function(e) {
			this.mods.arena && (delete this.game.prodigy.player.data.deserter, this.game.prodigy.player.updated = !0), this.game.prodigy.education.closeQuestion(), this._processConnections = !1, delete this._heartbeat, delete this._timeout, this.game.prodigy.network.sendAnalytics("PVP", e || "fail", "Events"), this.game.prodigy.network.sendEvent("PVP", {
				type: Util.isDefined(e) ? e : "fail",
				startType: this.getStartTypeString(),
				classID: this.game.prodigy.player.getLatestClassIDLegacy(),
				grade: this.game.prodigy.player.grade
			}, !0), this.endPVP()
		}, e.prototype.endPVP = function() {
			var e = this.game.prodigy.education.getUpdatedData();
			this.game.prodigy.network.updateUserAbility(e), this.setupBattleHP(this.teamA, !1), this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.network.processPlayer = !0, this.callback()
		}, e.prototype.getStartTypeString = function() {
			var e = "unknown";
			return Util.isDefined(this.mods) && Util.isDefined(this.mods.arena) && (e = this.mods.arena ? "findChallenger" : "directChallenge"), e
		}, e
	}(),
	Team = function() {
		function e(e, t, i, a, s, r, n, o, h, l) {
			this.game = e, this.team = [], this.enableComboAnimations = !0;
			for (var d = 0; d < i.length; d++) {
				if (i[d] instanceof Player) this.team.push(e.prodigy.create.player(t, i[d], 2, s, r));
				else if (i[d] instanceof Monster) this.team.push(e.prodigy.create.monster(t, i[d], 2, s, r));
				else if (i[d] instanceof Prodigy.CloudBoss) this.team.push(e.prodigy.create.cloudBoss(t, i[d], s, r, !0, i[d].source.element)), this.bossTeam = !0;
				else if (i[d] instanceof Prodigy.BonfireBoss) this.team.push(e.prodigy.create.bonfireBoss(t, i[d], s, r, !0)), this.bossTeam = !0;
				else if (i[d] instanceof Prodigy.OldOne) {
					var c = new Prodigy.Container.OldOne(e, t, i[d], s - 400, r, !0);
					c.flip(), this.team.push(c), this.bossTeam = !0
				} else if (i[d] instanceof Prodigy.PippetBoss) {
					var p = new Prodigy.Container.PippetContainer(e, t, i[d], s - 400, r, !0);
					this.team.push(p), this.bossTeam = !0
				} else if (i[d] instanceof Prodigy.ForestBoss) this.team.push(e.prodigy.create.forestBoss(t, i[d], s, r, !1)), this.bossTeam = !0;
				else if (i[d] instanceof Prodigy.TitanBoss) {
					var g = new Prodigy.Container.TitanContainer(e, t, i[d], s, r, !0);
					g.flip(), this.team.push(g), this.bossTeam = !0
				} else i[d] instanceof Prodigy.IceWyrmBoss ? (this.team.push(e.prodigy.create.shiverchillBoss(t, i[d], s - 400, r, !0)), this.bossTeam = !0) : i[d] instanceof Prodigy.Boss && (this.team.push(e.prodigy.create.boss(t, i[d], s, r, !1)), this.bossTeam = !0);
				this.team[d].startLoad(), this.team[d].flip(), this.team[d].pairs = [], this.team[d].visible = !1, this.team[d].source.isOpponent = l, this.team[d].source.starsEarned = 0, Util.isDefined(this.current) || i[d].isKnockedOut() || (this.current = this.team[d], this.current.visible = !0)
			}
			this.playerControlled = a, this.offScreenX = s, this.offScreenY = r, this.onScreenX = n, this.onScreenY = o, this.hearts = h
		}
		return e.prototype.spreadPlayersOut = function(e) {
			for (var t = Math.floor(1280 / (this.team.length + 1)), i = 0; i < this.team.length; i++) this.team[i].visible = !0, this.team[i].speed = 10, this.team[i].setPath([{
				x: (i + 1) * t,
				y: 550
			}], i === this.team.length - 1 ? e : null, 4)
		}, e.prototype.movePlayerIn = function(e, t) {
			return t.complete ? (this.current.visible = !1, this.current = t, this.current.visible = !0, this.current.speed = 10, this.hearts.setSource(this.current.source), this.enableComboAnimations && (this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_IN, this, []), this.enableComboAnimations = !1), this.current instanceof Prodigy.Container.BossContainer ? (this.current.x = this.onScreenX, this.current.y = this.onScreenY, this.current.setPath([{
				x: this.onScreenX,
				y: this.onScreenY
			}], e)) : (this.current.speed = 10, this.current.setPath([{
				x: this.onScreenX,
				y: this.onScreenY
			}], e)), void 0) : (this.game.time.events.add(10, this.movePlayerIn.bind(this, e, t)), void 0)
		}, e.prototype.movePlayerOut = function(e, t) {
			t.speed = 30, t.setPath([{
				x: this.offScreenX + 40 * (this.offScreenX / Math.abs(this.offScreenX)),
				y: this.offScreenY
			}], e, 4), this.hearts.moveOut()
		}, e.prototype.swapPlayers = function(e, t) {
			var i = this.team[t];
			!Util.isDefined(this.current) || this.current.source.isKnockedOut() || Util.isDefined(this.current.captured) ? this.movePlayerIn(e, i) : this.movePlayerOut(this.movePlayerIn.bind(this, e, i), this.current)
		}, e.prototype.failRun = function(e) {
			var t = function(e, t) {
				e.speed = 10, e.setPath([{
					x: e.x + 200
				}], t)
			};
			this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "run"), this.current.speed = 40, this.current.setPath([{
				x: this.current.x - 200
			}], t.bind(this, this.current, e), 4)
		}, e.prototype.runAway = function(e) {
			Util.isDefined(this.current.captured) || (this.bossTeam ? this.game.add.tween(this.current).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start() : (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "run"), this.current.speed = 40, this.current.flip(), this.current.moonwalk(), this.game.time.events.add(500, this.movePlayerOut.bind(this, e, this.current), this)))
		}, e.prototype.pairOpponent = function(e) {
			Util.inArray(this.current.pairs, e) || this.current.pairs.push(e)
		}, e.prototype.getXPReward = function(e) {
			for (var t = 0, i = 0; i < this.team.length; i++) {
				for (var a = this.team[i], s = 0, r = !1, n = 0; n < a.pairs.length; n++) a.pairs[n].source.isKnockedOut() || s++, a.pairs[n] === e && (r = !0);
				0 >= s && (s = 1);
				var o = Math.floor((a.source.getLevel() - e.source.getLevel()) / s / 4);
				r && (t += Math.max(1, Math.floor(a.source.getStarReward() / s) + o))
			}
			return t
		}, e.prototype.getNextId = function() {
			for (var e, t = this.team.length, i = 0; t > i; i++)
				if (e = this.team[i], Util.isDefined(e) && !Util.isDefined(e.captured) && !e.source.isKnockedOut()) return i;
			return 0
		}, e.prototype.chooseNextCandidate = function(e, t) {
			if (0 === e) {
				for (var i = null, a = null, s = 0; s < this.team.length; s++) {
					var r = this.team[s];
					if (Util.isDefined(r) && !Util.isDefined(r.captured) && !r.source.isKnockedOut()) {
						var n = this.game.prodigy.battle.battleScore(r, t, !0, 1);
						(!Util.isDefined(a) || n > a) && (i = s, a = n)
					}
				}
				return i
			}
			return null
		}, e.prototype.getDrops = function() {
			for (var e = [], t = 0; t < this.team.length; t++) this.team[t].source.isKnockedOut() && !Util.isDefined(this.team[t].captured) && (e = e.concat(this.team[t].source.getDrops()));
			return e
		}, e.prototype.isDefeated = function() {
			for (var e = 0; e < this.team.length; e++)
				if (!this.team[e].source.isKnockedOut() && !Util.isDefined(this.team[e].captured)) return !1;
			return !0
		}, e.prototype.getDefeated = function() {
			for (var e = [], t = 0; t < this.team.length; t++) this.team[t].source.isKnockedOut() && !Util.isDefined(this.team[t].captured) && e.push(this.team[t].source);
			return e
		}, e.prototype.isBoss = function() {
			for (var e = 0; e < this.team.length; e++)
				if (this.team[e] instanceof Prodigy.Container.BossContainer || this.team[e] instanceof Prodigy.Container.ForestContainer) return !0;
			return !1
		}, e.prototype.showHearts = function() {
			for (var e = 0; e < this.team.length; e++)
				if (this.team[e] instanceof Prodigy.Container.BossContainer && this.team[e].source.source.showHP) return !0;
			return !1
		}, e
	}();
Prodigy.Battle.CombatManager = function(e) {
	this.IDLE = 1, this.DEFENDING_DAMAGE = 2, this.ATTACKING_HIT = 4, this.ATTACKING_MISS = 8, this.game = e
}, Prodigy.extends(Prodigy.Battle.CombatManager, Object, {
	constructor: Prodigy.Battle.CombatManager,
	setup: function(e) {
		if (this.battleScreen = e, this.state = this.IDLE, this.bounty = this.battleScreen.mods.bounty, Util.isDefined(this.battleScreen.mods.encounter) && (this.nickname = this.battleScreen.mods.encounter[0].nickname), this.content = e.content, this.menus = e.menus, this.background = e.background, this.teams = e.teams, this.teams[0].movePlayerIn(null, this.teams[0].current), this.teams[1].movePlayerIn(null, this.teams[1].current), this.turn = 0, this.firstQuestion = !0, this.combatOver = !1, !(Util.isDefined(this.battleScreen.mods.epicArena) && this.battleScreen.mods.epicArena > 1)) {
			this.firstEpicAttack = !0;
			try {
				this.game.prodigy.network.sendEvent("epicAttacks", {
					action: "newBattleStarted"
				})
			} catch (t) {}
		}
		this.battleScreen.mods.potionMode = this.game.prodigy.player.tutorial.getMenuValue(3, 2) >= 1;
		var i = "Wizard Battle!";
		this.teams[1].isBoss() && (i = "Boss Time!"), this.battleScreen.mods.intro && (i = this.battleScreen.mods.intro), this.game.prodigy.effects.flashText(i, this.playerTurn.bind(this)), this.initListeners()
	},
	initListeners: function() {
		this.stopListeners();
		var e;
		for (e = 0; e < this.teams[0].team.length; e++) this.game.broadcaster.addAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this.onPlayerAnimationDone.bind(this), this, this.teams[0].team[e].source);
		for (e = 0; e < this.teams[1].team.length; e++) this.game.broadcaster.addAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this.onOpponentAnimationDone.bind(this), this, this.teams[1].team[e].source)
	},
	stopListeners: function() {
		var e;
		for (e = 0; e < this.teams[0].team.length; e++) this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this, this.teams[0].team[e].source);
		for (e = 0; e < this.teams[1].team.length; e++) this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this, this.teams[1].team[e].source)
	},
	onPlayerAnimationDone: function() {
		this.combatOver ? this.game.broadcaster.broadcast(Prodigy.Events.Creature.ANIMATION_DONE, "lateLevelUp") : this.opponentTurn()
	},
	onOpponentAnimationDone: function() {
		this.combatOver || this.playerTurn()
	},
	processEvents: function(e) {
		for (var t = this.battleScreen.mods.events || [], i = 0; i < t.length; i++) {
			var a = !1,
				s = t[i];
			if (Util.isDefined(s.repeat) || (s.repeat = 0), !(s.lastProc === this.turn || s.repeat < 0) && ("turn" === s.action && s.value === this.turn ? a = !0 : "miss" === s.action && this.state === this.ATTACKING_MISS ? a = !0 : "hit" === s.action && this.state === this.ATTACKING_HIT ? a = !0 : "dmg" === s.action && this.state === this.DEFENDING_DAMAGE && (a = !0), a)) return s.repeat--, s.lastProc = this.turn, s.callback(this.game, e), !1
		}
		return !0
	},
	playerTurn: function() {
		if (this.processEvents(this.playerTurn.bind(this)) !== !1) {
			var e = this.teams[0],
				t = this.teams[1];
			t.pairOpponent(e.current), !GameConstants.get("GameConstants.Debug.GOD_MODE_ENABLED") && e.isDefeated() ? (this.combatOver = !0, e.runAway(), this.game.prodigy.effects.flashText("YOU LOST...", this.battleScreen.endBattle.bind(this.battleScreen, "lose")), this.game.prodigy.network.sendZoneEvent("battle-complete", "false")) : !GameConstants.get("GameConstants.Debug.GOD_MODE_ENABLED") && e.current.source.isKnockedOut() ? e.current.source instanceof Player ? (e.runAway(), this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, !0, null, e.swapPlayers.bind(e, this.playerTurn.bind(this)))) : (e.runAway(), this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, !0, null, e.swapPlayers.bind(e, this.playerTurn.bind(this)))) : this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, null, this.openQuestion.bind(this), e.swapPlayers.bind(e, this.opponentTurn.bind(this)), this.runAway.bind(this), this.tryCatch.bind(this, e.current, t.current), this.startEpicAttack.bind(this), this.firstEpicAttack), this.state = this.IDLE, this.turn++
		}
	},
	opponentTurn: function() {
		if (this.processEvents(this.opponentTurn.bind(this)) !== !1) {
			var e = this.teams[1],
				t = this.teams[0];
			if (e.isDefeated()) {
				if (this.combatOver = !0, e.runAway(), this.bounty) this.game.prodigy.effects.bountyComplete(this.game.prodigy.bounty.getReward(this.bounty), this.battleScreen.startVictory.bind(this.battleScreen));
				else {
					var i = e.current instanceof Prodigy.Container.TitanContainer ? "TITAN HIT!" : "YOU WON!";
					this.game.prodigy.effects.flashText(i, this.battleScreen.startVictory.bind(this.battleScreen))
				}
				this.game.prodigy.network.sendZoneEvent("battle-complete", "true"), e.current instanceof Prodigy.Container.TitanContainer && this.game.prodigy.titansNetworkHandler.hitTitan(this.game.prodigy.titansNetworkHandler.titan.id)
			} else if (e.current.source.isKnockedOut() || Util.isDefined(e.current.captured)) e.runAway(e.swapPlayers.bind(e, this.opponentTurn.bind(this), e.chooseNextCandidate(0, t.current)));
			else {
				var a = this.battleScreen.mods.difficulty;
				e.current.source instanceof Prodigy.CloudBoss && !e.current.miniBoss || e.current.source instanceof Prodigy.BonfireBoss || e.current.source instanceof Prodigy.OldOne || e.current.source instanceof Prodigy.PippetBoss ? e.current.source.chooseAction(this.game, a, e.current, t.current, this.attack.bind(this, !1), this.playerTurn.bind(this)) : this.game.prodigy.battle.chooseAction(a, e.current, t.current, e.team, t.team, this.attack.bind(this, !1), e.swapPlayers.bind(e), this.playerTurn.bind(this))
			}
		}
	},
	answerQuestion: function(e, t) {
		Util.isDefined(this.bmgVolume) && this.game.prodigy.audio.setBGMVolume(this.bmgVolume, !0), this.content.visible = this.menus.visible = !0, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !0, this.state = t ? this.ATTACKING_HIT : this.ATTACKING_MISS, this.game.prodigy.player.castSpell(t), t ? (this.attack(!0, this.teams[0].current, this.teams[1].current, this.opponentTurn.bind(this), e, null, this.battleScreen.mods), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED)) : this.opponentTurn()
	},
	answerEpicQuestion: function(e, t) {
		Util.isDefined(this.bmgVolume) && this.game.prodigy.audio.setBGMVolume(this.bmgVolume, !0), this.content.visible = this.menus.visible = !0, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !0, this.state = t ? this.ATTACKING_HIT : this.ATTACKING_MISS, this.game.prodigy.player.castSpell(t), t ? (this.attack(!0, this.teams[0].current, this.teams[1].current, this.teams[0].movePlayerIn.bind(this.teams[0], this.opponentTurn.bind(this), this.teams[0].current), e, null, this.battleScreen.mods, !0), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED)) : this.teams[0].movePlayerIn.call(this.teams[0], this.opponentTurn.bind(this), this.teams[0].current)
	},
	openQuestion: function(e) {
		if (this.content.visible = this.menus.visible = !1, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !1, this.bmgVolume = this.game.prodigy.audio.getBGMVolume(), this.bmgVolume > .1 && this.game.prodigy.audio.setBGMVolume(.1, !0), GameConstants.get("GameConstants.Debug.EDUCATION_ENABLED")) {
			var t = 0;
			this.firstQuestion && (t = this.game.prodigy.player.state.get("tutorial-0") || 0, 4 > t && t++, this.game.prodigy.player.state.set("tutorial-0", t), this.firstQuestion = !1), this.game.prodigy.education.question(this.answerQuestion.bind(this, e), t), this.game.prodigy.education.isNew = !1
		} else this.answerQuestion(e, GameConstants.get("GameConstants.Debug.AUTO_ANSWER_CORRECTLY"))
	},
	startEpicAttack: function(e) {
		this.firstEpicAttack = !1, this.teams[0].current.source.getName() === Items.getItemData("pet", e.data.epicId).name ? (e.moveIn = !1, this.openEpicQuestion.call(this, e)) : (e.moveIn = !0, this.teams[0].movePlayerOut.call(this.teams[0], this.openEpicQuestion.bind(this, e), this.teams[0].current))
	},
	openEpicQuestion: function(e) {
		if (this.content.visible = this.menus.visible = !1, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !1, this.bmgVolume = this.game.prodigy.audio.getBGMVolume(), this.bmgVolume > .1 && this.game.prodigy.audio.setBGMVolume(.1, !0), GameConstants.get("GameConstants.Debug.EDUCATION_ENABLED")) {
			var t = 0;
			this.firstQuestion && (t = this.game.prodigy.player.state.get("tutorial-0") || 0, 4 > t && t++, this.game.prodigy.player.state.set("tutorial-0", t), this.firstQuestion = !1), this.game.prodigy.education.question(this.answerEpicQuestion.bind(this, e), t), this.game.prodigy.education.isNew = !1
		} else this.answerEpicQuestion(e, GameConstants.get("GameConstants.Debug.AUTO_ANSWER_CORRECTLY"))
	},
	attack: function(e, t, i, a, s, r, n, o) {
		e || (this.battleScreen.mods.invincible && (r = !0), this.state = this.DEFENDING_DAMAGE);
		var h = s.data.statusEffects;
		if (!r && Util.isDefined(h)) {
			var l = null,
				d = !Util.isDefined(i.statusEffects);
			d && (i.statusEffects = []);
			for (var c = [], p = 0; p < h.length; p++) {
				var g = this.game.prodigy.statusEffects.getById(h[p]);
				if (l = new g(this.game, i), d) c.push(l);
				else {
					for (var u = !0, y = 0; y < i.statusEffects.length; y++)
						if (l.constructor === i.statusEffects[p].constructor) {
							u = !1;
							break
						} u && c.push(l)
				}
			}
			for (p = 0; p < c.length; p++) i.statusEffects.push(c[p])
		}
		var m = s.data.animation,
			f = window[m],
			b = s.data.animation;
		("InkBlot" === b || "ShadowShock" === b) && (f = Prodigy.Attack[s.data.animation]);
		var v = this.teams[0],
			P = function() {
				o === !0 ? v.movePlayerIn(t.source.processStars.bind(t.source), v.current) : t.source.processStars()
			};
		if (t.attack(), Util.isDefined(s.data.type) && "epic-attack" === s.data.type && this.teams[0].current.source.getName() !== Items.getItemData("pet", s.data.epicId).name) {
			var w = Items.getItemData("pet", s.data.epicId).name + " used " + s.data.name,
				x = this.game.prodigy.event.create();
			x.delay(2600), x.function(this.game.prodigy.effects.flashText.bind(this.game.prodigy.effects, w, null, Prodigy.EffectFactory.BASE, Prodigy.EffectFactory.SMALL, 1e3, !0)), x.start()
		} else {
			this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast");
			var D = t.source.getName();
			t.source instanceof Prodigy.TitanBoss && (D = "Titan"), this.game.prodigy.effects.flashText(D + " used " + s.data.name, null, Prodigy.EffectFactory.BASE, Prodigy.EffectFactory.SMALL, 1e3, !0)
		}
		return Util.isDefined(m) && Util.isDefined(f) && "function" == typeof f ? new f(this.game, t, i, this.background, this.content, s, P, r, n) : (Util.isDefined(a) && P(), null)
	},
	tryCatch: function(e, t) {
		this.game.prodigy.open.catch(t, this.catch.bind(this, e, t))
	},
	onCatchPet: function(e) {
		this.game.prodigy.open.gotItem([{
			type: "pet",
			ID: e.source.data.ID,
			N: 1,
			data: e.source.data
		}], this.opponentTurn.bind(this), null, "on-catch-pet")
	},
	"catch": function(e, t, i) {
		return i ? (t.captured = !0, Util.isNullOrUndefined(this.nickname) || (t.source.data.nickname = this.nickname), new Prodigy.Attack.CatchPet(this.game, e, t, this.background, this.content, null, this.onCatchPet.bind(this, t))) : (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "miss"), this.game.prodigy.effects.fadeFlyingImage(t.x, t.y - (t.height >> 1), "battle", "text-miss"), t.source.catchAttempt || (t.source.catchAttempt = 0), t.source.catchAttempt++, this.game.prodigy.player.isMember || this.game.prodigy.network.sendConversionFunnelEvent(Prodigy.FunnelEventIDs.FUNNEL_CATCH_PET_AGAIN, Prodigy.FunnelEventIDs.STAGE_CATCH_PET_FAIL, t.source.data.ID + ""), this.game.time.events.add(1500, this.opponentTurn.bind(this), this), null)
	},
	runAway: function() {
		Math.random() < GameConstants.get("GameConstants.Battle.ESCAPE_CHANCE") && this.battleScreen.mods.run ? (this.game.prodigy.effects.flashText("YOU RAN AWAY...", this.battleScreen.endBattle.bind(this.battleScreen, "run")), this.teams[0].runAway()) : (this.battleScreen.mods.run = !1, this.game.prodigy.effects.flashText("YOU COULDN'T RUN!"), this.teams[0].failRun(this.opponentTurn.bind(this)))
	}
}), Prodigy.PVPManager = function(e, t) {
	this.game = e, this.battleScreen = t, this.attackSelectMenu = null, this.swapSelectMenu = null, this.forceSwitch = !1, this.currentAction = null, this.nextAction = null, this.content = t.content, this.menus = t.menus, this.background = t.background, this.teams = t.teams, this.teams[0].enableComboAnimations = !0, this.teams[0].movePlayerIn(null, this.teams[0].current), this.teams[1].enableComboAnimations = !0, this.teams[1].movePlayerIn(null, this.teams[1].current), this.turn = 0, this.waitingToSelect = !1, this.game.prodigy.effects.flashText("Player vs. Player!", this.playerTurn.bind(this))
}, Prodigy.PVPManager.prototype = {
	constructor: Prodigy.PVPManager,
	playerTurn: function(e) {
		this.currentAction = null;
		var t = this.teams[0],
			i = this.teams[1];
		return Util.isDefined(e) && Util.isDefined(e.index) ? (i.swapPlayers(this.playerTurn.bind(this), e.index), void 0) : (this.turn++, this.waitingToSelect = !0, this.attackSelectMenu = this.game.prodigy.open.battle(t.current, t.team, i.current, this.battleScreen.mods, null, this.openQuestion.bind(this), this.handleSwitch.bind(this)), void 0)
	},
	generateMissAttack: function() {
		if (Util.isDefined(this.attackSelectMenu) && this.attackSelectMenu.close(), Util.isDefined(this.swapSelectMenu) && this.swapSelectMenu.close(), this.forceSwitch) {
			var e = this.teams[0].getNextId();
			this.forceSwitch = !1, this.waitingToSelect = !1, this.teams[0].swapPlayers(null, e), this.nextAction = {
				type: "ready",
				index: e
			}, this.battleScreen.setState("request_next")
		} else {
			var t = this.teams[0].current.source.getAttacks(),
				i = this.game.prodigy.attacks.getAttack(t[0]);
			this.game.prodigy.player.castSpell(!1), this.currentAction = {
				type: "spell",
				ID: i.ID,
				hit: !1,
				time: 6e4,
				turn: this.turn,
				seed: Math.floor(999999 * Math.random())
			}, this.battleScreen.setState("request_action"), this.waitingToSelect = !1
		}
	},
	handleSwitch: function(e) {
		this.currentAction = {
			type: "switch",
			index: e,
			turn: this.turn
		}, this.battleScreen.setState("request_action"), this.waitingToSelect = !1
	},
	handleAttack: function(e, t, i) {
		Util.isDefined(this.bmgVolume) && this.game.prodigy.audio.setBGMVolume(this.bmgVolume, !0), this.game.prodigy.player.castSpell(t), this.content.visible = this.menus.visible = !0, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !0, this.currentAction = {
			type: "spell",
			ID: e.ID,
			hit: t,
			time: i,
			turn: this.turn,
			seed: Math.floor(999999 * Math.random())
		}, this.battleScreen.setState("request_action")
	},
	processAction: function(e) {
		this.nextAction = null;
		var t = this.teams[0],
			i = this.teams[1],
			a = this.game.prodigy.player.userID === this.battleScreen.challengerID;
		if ("switch" === this.currentAction.type && "switch" === e.type) {
			var s;
			a ? (s = i.swapPlayers.bind(i, this.processEnd.bind(this, !1), e.index), t.swapPlayers(s, this.currentAction.index)) : (s = t.swapPlayers.bind(t, this.processEnd.bind(this, !1), this.currentAction.index), i.swapPlayers(s, e.index))
		} else if ("spell" === this.currentAction.type && "spell" === e.type) {
			var r, n = this.game.prodigy.attacks.getAttack(this.currentAction.ID),
				o = this.game.prodigy.attacks.getAttack(e.ID),
				h = this.game.prodigy.attacks.getAttackPriority(n),
				l = this.game.prodigy.attacks.getAttackPriority(o),
				d = h > l,
				c = h === l;
			d || c && (this.currentAction.time < e.time || this.currentAction.time === e.time && a) ? (r = this.attack.bind(this, i.current, t.current, this.processEnd.bind(this, !1), o, !e.hit, {
				seed: e.seed
			}), this.attack(t.current, i.current, r, n, !this.currentAction.hit, {
				seed: this.currentAction.seed
			})) : (r = this.attack.bind(this, t.current, i.current, this.processEnd.bind(this, !1), n, !this.currentAction.hit, {
				seed: this.currentAction.seed
			}), this.attack(i.current, t.current, r, o, !e.hit, {
				seed: e.seed
			}))
		} else "spell" === this.currentAction.type && "switch" === e.type ? i.swapPlayers(this.swapAttack.bind(this, t, i, this.currentAction.ID, this.currentAction.hit, {
			seed: this.currentAction.seed
		}), e.index) : "switch" === this.currentAction.type && "spell" === e.type && t.swapPlayers(this.swapAttack.bind(this, i, t, e.ID, e.hit, {
			seed: e.seed
		}), this.currentAction.index)
	},
	swapAttack: function(e, t, i, a, s) {
		this.attack(e.current, t.current, this.processEnd.bind(this, !1), this.game.prodigy.attacks.getAttack(i), !a, s)
	},
	processEnd: function(e) {
		var t = this.teams[0],
			i = this.teams[1];
		e ? (this.battleScreen._state = "deserted", this.game.prodigy.education.closeQuestion(), this.game.prodigy.open.menuCloseAll(), this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, i, []), i.runAway(), this.game.prodigy.effects.flashText("YOU WON!", this.showResults.bind(this, "win"))) : t.isDefeated() && i.isDefeated() ? (this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, t, []), this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, i, []), t.runAway(), i.runAway(), this.game.prodigy.effects.flashText("DRAW!", this.showResults.bind(this, "draw"))) : t.isDefeated() ? (this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, t, []), t.runAway(), this.game.prodigy.effects.flashText("YOU LOST...", this.showResults.bind(this, "lose"))) : i.isDefeated() ? (this.game.broadcaster.broadcast(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, i, []), i.runAway(), this.game.prodigy.effects.flashText("YOU WON!", this.showResults.bind(this, "win"))) : t.current.source.isKnockedOut() ? (t.runAway(), this.forceSwitch = !0, this.waitingToSelect = !0, this.swapSelectMenu = this.game.prodigy.open.battle(t.current, t.team, i.current, this.battleScreen.mods, !0, null, this.completeTurn.bind(this))) : this.completeTurn()
	},
	showResults: function(e) {
		if ("win" === e && this.battleScreen.mods.arena && 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-victory", !0, !0), !this.battleScreen.mods.arena) return this.battleScreen.endCombat(e), void 0;
		var t = this.game.prodigy.player.getArenaScore(),
			i = this.battleScreen.playerB.getArenaScore(),
			a = 10;
		"win" === e ? a = Math.max(10, 50 + Math.floor((i - t) / 40)) : "lose" === e && (a = Math.min(-10, -50 - Math.floor((t - i) / 40))), a = Math.min(a, 250), a = Math.max(a, -250);
		var s = this.game.prodigy.player.getArenaRank(),
			r = this.game.prodigy.player.isUnranked();
		this.game.prodigy.player.addArenaScore(a, "win" === e);
		var n = this.game.prodigy.player.getArenaRank(),
			o = r && !this.game.prodigy.player.isUnranked(),
			h = this.game.prodigy.create.panel(this.menus, 400, 300, 12, 4, "item-common");
		this.game.prodigy.create.font(h, 20, 0, "{Arena Points", {
			size: 36,
			font: "button"
		});
		var l = this.game.prodigy.create.font(h, 20, 40, t + "", {
				size: 80,
				align: "left",
				width: 440
			}),
			d = this.game.prodigy.create.font(h, 20, 40, "", {
				size: 80,
				align: "right",
				width: 440
			});
		h.visible = !1;
		var c = this.game.prodigy.event.create();
		c.delay(500), c.set(h, "visible", !0), c.delay(500);
		for (var p = 0; p < Math.abs(a); p++) t += a > 0 ? 1 : -1, 0 > t && (t = 0), t > 5e3 && (t = 5e3), c.sound(Prodigy.Controller.AudioController.SFX_PACKS.WORLD, "tick"), c.function(l.setText.bind(l, "" + t)), c.function(d.setText.bind(d, (a > 0 ? "(+" + Math.max(0, a - p - 1) : "(" + Math.min(0, a + p + 1)) + ")")), c.delay(80);
		c.function(d.setText.bind(d, ""));
		var g = ["Bronze", "Silver", "Gold", "Platinum", "Diamond"];
		if (n > s || s > n || o) {
			c.delay(2e3), c.set(h, "visible", !1), (n > s || o) && c.sound(Prodigy.Controller.AudioController.SFX_PACKS.PVP, "victory");
			var u = "";
			(n > s || o) && (u = "You ranked up to " + g[n] + "!"), s > n && (u = "You ranked down to " + g[n] + "..."), c.functionCallback(this.game.prodigy.effects.pvpComplete.bind(this.game.prodigy.effects, u, "emblem-rank" + (n + 1)))
		} else c.delay(2e3);
		c.delay(4e3), c.function(this.battleScreen.endCombat.bind(this.battleScreen, e)), c.start()
	},
	completeTurn: function(e) {
		return Util.isDefined(e) ? (this.waitingToSelect = !1, this.teams[0].swapPlayers(this.finishCompleteTurn.bind(this, e), e), void 0) : (this.forceSwitch = !1, this.nextAction = {
			type: "ready",
			index: e
		}, this.battleScreen.setState("request_next"), void 0)
	},
	finishCompleteTurn: function(e) {
		this.forceSwitch = !1, this.nextAction = {
			type: "ready",
			index: e
		}, this.battleScreen.setState("request_next")
	},
	openQuestion: function(e) {
		this.bmgVolume = this.game.prodigy.audio.getBGMVolume(), this.bmgVolume > .1 && this.game.prodigy.audio.setBGMVolume(.1, !0), this.content.visible = this.menus.visible = !1, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !1, this.waitingToSelect = !1, GameConstants.get("GameConstants.Debug.EDUCATION_ENABLED") ? (this.game.prodigy.education.question(this.handleAttack.bind(this, e), this.game.prodigy.education.isNew), this.game.prodigy.education.isNew = !1) : this.handleAttack(e, GameConstants.get("GameConstants.Debug.AUTO_ANSWER_CORRECTLY"), 0)
	},
	attack: function(e, t, i, a, s, r) {
		var n = this.battleScreen.teamComboMetre,
			o = this.battleScreen.opponentComboMetre;
		r.comboBonus = e === this.teams[0].current ? n.getDamageBoost() : o.getDamageBoost(), e === this.teams[0].current ? (s ? n.breakCombo() : n.increaseCombo(), r.comboBonus = n.getDamageBoost()) : (s ? o.breakCombo() : o.increaseCombo(), r.comboBonus = o.getDamageBoost());
		var h = a.data.animation,
			l = window[h];
		e.attack(), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.BATTLE, "cast"), this.game.prodigy.effects.flashText(e.source.getName() + " used " + a.data.name, void 0, Prodigy.EffectFactory.PVP, Prodigy.EffectFactory.SMALL, 1e3, !0), Util.isDefined(h) && Util.isDefined(l) && "function" == typeof l ? new l(this.game, e, t, this.background, this.content, a, i, s, r) : Util.isDefined(i) && i()
	}
}, Prodigy.Battle.VictoryManager = function(e) {
	this.game = e
}, Prodigy.extends(Prodigy.Battle.VictoryManager, Object, {
	constructor: Prodigy.Battle.VictoryManager,
	setup: function(e) {
		this.battleScreen = e, this.content = e.content, this.menus = e.menus, this.background = e.background, this.team = e.teams[0], this.opponents = e.teams[1], this.isPippetBattle = Util.isDefined(this.battleScreen.mods.boss) && Util.isDefined(this.battleScreen.mods.boss.pippetBattle), this.pippetStarsEarned = 0, this.getItems(), this.game.prodigy.player.achievements.increment("kills", this.opponents.team.length), this.initListeners()
	},
	initListeners: function() {
		this.stopListeners(), this.game.broadcaster.addAppListener(Prodigy.Events.VictoryManager.SHOW_DROPS, this.showDrops.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.VictoryManager.COMPLETE, this.complete.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.FlyingPippetStars.DONE, this.onPippetStarsDone.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.FlyingMemberStars.DONE, this.onMemberStarsDone.bind(this), this, this.game), this.isPippetBattle || this.game.broadcaster.addAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this.showSummary.bind(this), this, "lateLevelUp")
	},
	stopListeners: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.VictoryManager.SHOW_DROPS, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.VictoryManager.COMPLETE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.FlyingPippetStars.DONE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.FlyingMemberStars.DONE, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this, "lateLevelUp")
	},
	getItems: function() {
		var e = Items.getRandomizedDropsFromCreatures(this.battleScreen.drops, this.opponents, !(Util.isDefined(this.battleScreen.mods) && this.battleScreen.mods.dropsDisabled));
		this.chestManager = this.opponents.current instanceof Prodigy.Container.TitanContainer ? new Prodigy.Container.Chest(this.game, this.battleScreen.menus, this.battleScreen.mods.allowMember, e, [{
			type: "gold",
			N: 0
		}]) : new Prodigy.Container.Chest(this.game, this.battleScreen.menus, this.battleScreen.mods.allowMember, e, [{
			type: "gold",
			N: 100
		}])
	},
	showDrops: function(e) {
		Util.isDefined(e) && e.length > 0 ? this.game.prodigy.open.gotItem(e, this.showPippetStars.bind(this), null, "battle-victory-drops") : this.showPippetStars()
	},
	showPippetStars: function() {
		this.isPippetBattle ? (this.game.broadcaster.addAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this.onPippetStarsDone.bind(this), this, "lateLevelUp"), this.pippetStarsEarned = Prodigy.PippetEncounter.data.bonusStars, this.game.broadcaster.broadcast(Prodigy.Events.Chest.SHOW_PIPPET_BATTLE_BONUS, this.game, [this.pippetStarsEarned, this.team.current.source])) : this.showMemberStars()
	},
	onPippetStarsDone: function(e) {
		e || (this.game.broadcaster.removeAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this, "lateLevelUp"), this.showMemberStars())
	},
	showMemberStars: function() {
		this.memberStarsEarned = 0;
		for (var e = 0; e < this.opponents.team.length; e++) this.memberStarsEarned += 50;
		this.game.broadcaster.addAppListener(Prodigy.Events.Creature.ANIMATION_DONE, this.showSummary.bind(this), this, "lateLevelUp"), this.game.broadcaster.broadcast(Prodigy.Events.Chest.SHOW_MEMBER_STARS, this.game, [this.memberStarsEarned, this.team.current.source])
	},
	onMemberStarsDone: function(e) {
		e || this.showSummary()
	},
	showSummary: function() {
		for (var e = 0, t = 0; t < this.team.team.length; t++) e += this.team.team[t].source.starsEarned;
		e += this.pippetStarsEarned, this.game.prodigy.open.battleSummary(this, {
			totalStars: e,
			memberStarsEarned: this.memberStarsEarned
		})
	},
	complete: function() {
		this.stopListeners(), this.reset(), this.battleScreen.endBattle("win")
	},
	reset: function() {
		Util.isDefined(this.chestManager) && this.chestManager.destroy()
	}
}), Prodigy.StatusEffectManager = function(e) {
	this.game = e
}, Prodigy.StatusEffectManager.prototype = {
	constructor: Prodigy.StatusEffectManager,
	getById: function(e) {
		switch (e) {
			case 0:
				return Prodigy.StatusEffects.Ink;
			default:
				Util.log("Status Effect not found.", Util.ERROR)
		}
	}
}, Prodigy.Battle.PVP_CONFIG = {
	defaultComboIncrease: 1,
	maxCombo: 5,
	damageBonusPerLevel: .1,
	comboLevelOffsets: [{
		x: 4,
		y: 57
	}, {
		x: 65,
		y: 57
	}, {
		x: 129,
		y: 36
	}, {
		x: 193,
		y: 36
	}, {
		x: 257,
		y: -22
	}],
	comboMaxOffset: {
		x: 346,
		y: 46
	}
}, Prodigy.Battle.ComboMetre = function(e, t) {
	var i = 0;
	this.context = null, this.getConfig = function() {
		return t
	}, this.getCombo = function() {
		return i
	}, this.increaseCombo = function() {
		i < this.getConfig().maxCombo && (i += this.getConfig().defaultComboIncrease, e.broadcast(Prodigy.Events.Battle.PVP_COMBO_INCREASE, this.context, [i])), Util.log("Combo Increased: " + i, Util.INFO)
	}, this.breakCombo = function() {
		i > 0 && (i = 0, e.broadcast(Prodigy.Events.Battle.PVP_COMBO_BREAK, this.context, [i])), Util.log("Combo Broken: " + i, Util.INFO)
	}
}, Prodigy.Battle.ComboMetre.prototype = {
	constructor: Prodigy.Battle.ComboMetre,
	setBroadcasterContext: function(e) {
		this.context = e
	},
	createUI: function(e, t, i, a) {
		return new Prodigy.Battle.ComboMetreUI(e, t, i, a, this.getConfig())
	},
	getDamageBoost: function() {
		return 1 + this.getConfig().damageBonusPerLevel * this.getCombo()
	}
}, Prodigy.Battle.ComboMetreUI = function(e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.baseY = 870, this.baseX = 30, this.comboTween = [], this.comboLevelBars = [], this.config = Prodigy.Lodash.cloneDeep(s), this.flipped = !1, this.moveComplete = !0, this.setupComponents()
}, Prodigy.extends(Prodigy.Battle.ComboMetreUI, Prodigy.Control.Element, {
	constructor: Prodigy.Battle.ComboMetreUI,
	setupListeners: function(e) {
		this.game.broadcaster.addAppListener(Prodigy.Events.Battle.PVP_COMBO_INCREASE, this.updateComboBars.bind(this), this, e, null), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.PVP_COMBO_BREAK, this.updateComboBars.bind(this), this, e, null), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.PVP_UPDATE, this.updateComboTween.bind(this), this, e, null), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_IN, this.moveIn.bind(this), this, e, null), this.game.broadcaster.addAppListener(Prodigy.Events.Battle.PVP_COMBO_METRE_MOVE_OUT, this.moveOut.bind(this), this, e, null)
	},
	setupComponents: function() {
		this.comboMetre = this.add(this.game.prodigy.create.sprite(0, 0, "battle", "combo-metre-bg"));
		for (var e = null, t = 1; t < this.config.maxCombo + 1; t++) {
			var i = this.game.prodigy.create.sprite(this.config.comboLevelOffsets[t - 1].x, this.config.comboLevelOffsets[t - 1].y, "battle", "combo-level-" + t + "-1");
			i.visible = !1, this.comboLevelBars.push(this.comboMetre.addChild(i)), e = [];
			for (var a = 1; 5 > a; a++) e.push("combo-level-" + t + "-" + a);
			this.comboTween.push(new Prodigy.TweenController(this.game, i)), this.comboTween[t - 1].set("frameName", e, 200, 9999)
		}
		for (this.comboMaxOff = this.comboMetre.addChild(this.game.prodigy.create.sprite(this.config.comboMaxOffset.x, this.config.comboMaxOffset.y, "battle", "combo-max-off")), this.comboMaxOn = this.comboMetre.addChild(this.game.prodigy.create.sprite(this.config.comboMaxOffset.x, this.config.comboMaxOffset.y, "battle", "combo-max-on-1")), this.comboMaxOn.visible = !1, e = [], t = 1; 5 > t; t++) e.push("combo-max-on-" + t);
		this.comboTween.push(new Prodigy.TweenController(this.game, this.comboMaxOn)), this.comboTween[this.comboTween.length - 1].set("frameName", e, 200, 9999), this.startComboTween()
	},
	moveIn: function() {
		if (this.moveComplete) {
			var e = this.game.add.tween(this).from({
				y: this.baseY
			}, 2100, Phaser.Easing.Quadratic.In, !0);
			e.onComplete.add(this.onMoveComplete.bind(this)), this.moveComplete = !1
		}
	},
	moveOut: function() {
		if (this.moveComplete) {
			var e = this.game.add.tween(this).to({
				x: this.flipped ? 1280 + -this.comboMetre.width + this.baseX : -(this.comboMetre.width + this.baseX)
			}, 700, Phaser.Easing.Quadratic.In, !0);
			e.onComplete.add(this.onMoveComplete.bind(this)), this.moveComplete = !1
		}
	},
	onMoveComplete: function() {
		this.moveComplete = !0
	},
	updateComboBars: function(e) {
		for (var t = 0; t < this.comboLevelBars.length; t++) this.comboLevelBars[t].visible = e > t;
		this.comboMaxOn.visible = e === this.config.maxCombo
	},
	startComboTween: function() {
		for (var e = 0; e < this.comboTween.length; e++) this.comboTween[e].start()
	},
	updateComboTween: function() {
		for (var e = 0; e < this.comboTween.length; e++) this.comboTween[e].update()
	},
	flip: function() {
		this.comboMetre.scale.x *= -1, this.flipSprite(this.comboMaxOff), this.flipSprite(this.comboMaxOn), this.flipped = !0
	},
	flipSprite: function(e) {
		e.x -= -e.width, e.scale.x *= -1
	}
});
var DinoDig = function() {
	function e(e) {
		Screen.call(this, e, "Dig Site", "game-dino", "game-dinodig", ["game-dinodig", "bgm-game", "npc-sprite-scoog", "reduced-outfit-male-39", "reduced-outfit-female-39", "sfx-dino-dig"]), this.area = [
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		], this.showMenu = !1
	}

	function t() {
		if (this.playGame && !this.digging) {
			if (this.game.input.x === this.user.x && this.game.input.y === this.user.y) return;
			this.path.findPath(this.user.x, this.user.y, this.game.input.x, this.game.input.y, this.foundPath.bind(this))
		}
	}
	return e.prototype = Object.create(Screen.prototype), e.prototype.shutdown = function() {
		Screen.prototype.shutdown.call(this);
		try {
			this.bg.destroy(), this.bg = null
		} catch (e) {}
		try {
			this.user.destroy(), this.user = null
		} catch (e) {}
	}, e.prototype.create = function() {
		this.noFade = !0, this.game.prodigy.audio.pauseBGM(), Screen.prototype.create.call(this), this.game.prodigy.player.saveEnabled = !1
	}, e.prototype.screenSetup = function() {
		Screen.prototype.screenSetup.call(this), this.path = new Pathfinder(this.area), this.bg = this.game.prodigy.create.sprite(0, 0, "game-dinodig", "bg"), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(t, this), this.background.add(this.bg), this.npc = new Prodigy.Container.QuestNPC(this.game, this.content, 130, 640, null, {
			atlas: "scoog",
			name: "Scoog"
		}), this.user = this.game.prodigy.create.player(this.content, this.game.prodigy.player, 1, 600, 350), this.user.forceOutfit(39), this.user.setup(null, !0), this.user.showName(!1);
		for (var e in this.user.sprites.children) this.user.sprites.children[e] instanceof Prodigy.Control.Sprite && (this.user.sprites.children[e].inputEnabled = !0, this.user.sprites.children[e].events.onInputDown.add(t, this));
		this.content.add(this.game.prodigy.create.sprite(694, 32, "game-dinodig", "platform")), this.digBtn = this.game.prodigy.create.element(this.content, this.user.x - 40, this.user.y - 160);
		var i = this.digBtn.add(this.game.prodigy.create.sprite(0, 0, "icons", "icon-base"));
		i.inputEnabled = !0, i.events.onInputDown.add(this.dig.bind(this), this);
		var a = this.digBtn.add(this.game.prodigy.create.sprite(0, 0, "icon-key-1"));
		this.game.add.tween(a).to({
			y: -10
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, GameConstants.MAX_SAFE_INTEGER, !0), this.digBtn.visible = !1, this.timer = this.game.prodigy.create.timer(this.foreground, 15, 15), this.timer.setTime(9e4), this.timer.setMsg("Items recovered : 0"), this.botPanel = this.game.prodigy.create.panel(this.foreground, 965, 605, 6, 2), this.botPanel.alpha = .8, this.rewards = [], this.setNextDig(), this.menu = new DinoDigMenu(this.game, this.content, this.showBoosts.bind(this), this.showInstructions.bind(this), this.toDino.bind(this)), this.showUI(!1), this.digging = !1
	}, e.prototype.showUI = function(e) {
		this.npc.visible = this.user.visible = this.timer.visible = this.botPanel.visible = e, this.menu.visible = !e
	}, e.prototype.foundPath = function(e) {
		if (Util.isDefined(e)) {
			var t = Math.floor(e[0].x / 20),
				i = Math.floor(e[0].y / 20);
			this.digBtn.visible = !1;
			var a = !1;
			1 === this.area[i][t] && (a = !0, this.user.setPath(e, this.askDig.bind(this, a, t, i), this.walkSpeed))
		}
	}, e.prototype.showInstructions = function() {
		this.showUI(!0);
		var e = function(e, t) {
				e.visible = t
			},
			t = this.game.prodigy.dialogue.create();
		t.setText({
			text: "This game is all about digging up fossils!",
			face: 0,
			anim: 4
		}), t.setText({
			text: "To find fossils, just click around the dig site to start digging.",
			face: 2
		}), t.setText({
			callback: this.dig.bind(this)
		}), t.setText({
			text: "Your shovel will tell you how close to the fossil you are! \nCold means you're far away. \nHot means you're close!",
			face: 0
		}), t.setText({
			callback: e.bind(this, this.digBtn, !0)
		}), t.setText({
			text: "When you find something, the shovel button will pop up. Keep clicking it to dig up your new find!",
			face: 0
		}), t.setText({
			callback: this.dig.bind(this)
		}), t.setText({
			text: "Once you dig it up, you can start looking for the next item!",
			face: 1
		}), t.setText({
			callback: this.timer.blink.bind(this.timer)
		}), t.setText({
			text: "You have 90 seconds to dig up as many fossils as you can.",
			face: 1,
			anim: 2
		}), t.setText({
			callback: this.showUI.bind(this, !1)
		}), t.start("scoog")
	}, e.prototype.showBoosts = function() {
		var t = e.getNewFossils(this.game.prodigy.player.backpack);
		this.showUI(!0);
		var i = [{
			icon: {
				type: "boots",
				ID: 7
			},
			d: "Walk faster!"
		}, t.length > 0 ? {
			icon: {
				type: "fossil",
				ID: 1
			},
			d: "More fossils!"
		} : null, {
			icon: {
				type: "key",
				ID: 1
			},
			d: "Dig faster!"
		}];
		this.game.prodigy.open.boostSelect(i, this.startGame.bind(this))
	}, e.prototype.startGame = function(e) {
		this.walkSpeed = 0 === e ? 1.5 : 1, this.fossilOff = 1 === e ? .1 : 0, this.power = 2 === e ? 2 : 0, this.game.prodigy.effects.flashText("START DIGGING!", this.begin.bind(this))
	}, e.prototype.begin = function() {
		this.playGame = !0, this.timer.start(9e4, this.endGame.bind(this)), this.game.prodigy.audio.playBGM("bgm-game", !0, !0)
	}, e.prototype.setNextItem = function() {
		var t = Math.random();
		if (.2 > t) this.item = {
			type: "gold",
			N: 10
		}, this.targetDigs = 3;
		else if (.33 > t) this.item = {
			type: "gold",
			N: 25
		}, this.targetDigs = 4;
		else if (t < .66 + (this.fossilOff || 0)) {
			var i = e.getNewFossils(this.game.prodigy.player.backpack);
			i.length <= 0 ? (this.item = {
				type: "gold",
				N: 50
			}, this.targetDigs = 5) : (this.item = {
				type: "fossil",
				ID: i[Math.floor(Math.random() * i.length)]
			}, this.targetDigs = 8)
		} else {
			for (var i = []; i.length <= 0;) i = Items.getItemDrops();
			this.item = i[0];
			var a = this.item.type;
			this.targetDigs = "outfit" === a ? 10 : "weapon" === a ? 12 : "item" === a ? 5 : 8
		}
		this.targetDigs -= this.power || 0
	}, e.prototype.setNextDig = function() {
		for (this.setNextItem(), this.targetCoords = {
				x: 0,
				y: 0
			}; 1 !== this.area[this.targetCoords.y][this.targetCoords.x];) this.targetCoords.x = Math.floor(64 * Math.random()), this.targetCoords.y = Math.floor(36 * Math.random())
	}, e.prototype.askDig = function(e, t, i) {
		e && (this.digX = t, this.digY = i, this.dig())
	}, e.prototype.dig = function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig");
		var e = 100;
		if (Util.isDefined(this.digX)) var e = Phaser.Math.distance(this.digX, this.digY, this.targetCoords.x, this.targetCoords.y);
		this.digging || (this.digging = !0, 3 > e && (this.timer.setMsg("YOU FOUND SOMETHING!"), this.hole = this.game.prodigy.create.sprite(20 * this.digX, 20 * this.digY, "game-dinodig", "hole1"), this.hole.visible = !0, this.background.add(this.hole), this.digs = 0)), 3 > e && (this.hole.frameName = "hole" + Math.max(1, 1 + Math.floor(3 * (this.digs / this.targetDigs))));
		var t = 3 > e ? "DIG DIG DIG!" : 5 > e ? "Hot!" : 8 > e ? "Warm..." : 15 > e ? "Cold" : "Ice cold!";
		Util.isDefined(this.text) && this.text.destroy(), this.text = this.game.prodigy.create.font(this.foreground, this.user.x - 100, this.user.y - 100, t, {
			width: 200,
			align: "center"
		}), this.game.add.tween(this.text).to({
			y: this.user.y - 200,
			alpha: 0
		}, 2e3, Phaser.Easing.Quadratic.Out).start();
		var i = this.game.prodigy.player.backpack.getKeyItemData(1, "lvl"),
			a = 2 === i ? 12 : 3 === i ? 16 : 8;
		this.shoveling = !0, this.user.dig(a, this.digEnd.bind(this, e)), this.digBtn.visible = !1
	}, e.prototype.digEnd = function(e) {
		if (this.shoveling = !1, 3 > e && this.timer.isInProgress())
			if (this.digs++, this.digs >= this.targetDigs) {
				this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.rewards.push(this.item), this.timer.setMsg("Items recovered : " + this.rewards.length);
				var t = this.game.prodigy.icon.createFromData(this.item, 20 * this.digX + 10, 20 * this.digY + 10, {
					x: .5,
					y: .5
				});
				this.foreground.add(t), t.scale.x = t.scale.y = 0;
				var i = 995 + (this.rewards.length - 1) % 5 * 60,
					a = 630 + 50 * Math.floor((this.rewards.length - 1) / 5);
				this.game.add.tween(t.scale).to({
					x: 1.2,
					y: 1.2
				}, 1e3, Phaser.Easing.Quadratic.Out).to({
					x: .8,
					y: .8
				}, 1e3, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t).to({
					x: i,
					y: a
				}, 2e3, Phaser.Easing.Quadratic.Out).start(), this.rewards.length % 3 === 0 && this.extendTime(), this.digging = !1, this.setNextDig()
			} else this.digBtn.x = this.user.x - 40, this.digBtn.y = this.user.y < 160 ? this.user.y : this.user.y - 160, this.digBtn.visible = !0;
		else this.digging = !1
	}, e.prototype.extendTime = function() {
		this.timer.add(15e3), this.timer.pause();
		var e = function(e) {
				e.resume()
			},
			t = this.game.prodigy.dialogue.create();
		t.setText({
			text: "Ponduberous! Since you got so many items, I'll give you another 15 seconds!",
			face: 1,
			anim: 4,
			audio: Prodigy.Dyno.AUDIO[1]
		}), t.setText({
			callback: e.bind(this, this.timer)
		}), t.start("scoog")
	}, e.prototype.endGame = function() {
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DINO_DIG, "bell"), this.game.prodigy.audio.pauseBGM(), this.digBtn.visible = !1, this.playGame = !1, this.game.prodigy.effects.flashText("TIME'S UP!", this.end.bind(this))
	}, e.prototype.end = function() {
		var e = this.game.prodigy.dialogue.create();
		this.rewards.length > 0 ? (e.setText({
			text: "Time's up! Now let's see what items you dug up!",
			face: 1,
			anim: 2
		}), e.setText({
			callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, this.rewards, this.examineResults.bind(this), null, "dino-dig")
		})) : (e.setText({
			text: "Time's up! Come back to try again sometime!",
			face: 2
		}), e.setText({
			callback: this.toDino.bind(this)
		})), e.start("scoog")
	}, e.prototype.examineResults = function() {
		for (var e = !1, t = 0; t < this.rewards.length; t++) "fossil" === this.rewards[t].type && (e = !0);
		var i = this.game.prodigy.dialogue.create();
		e ? (i.setText({
			text: "Looks like you got a fossil! Be sure to visit the museum to see your progress - maybe you completed a skeleton!",
			face: 1,
			anim: 2,
			audio: Prodigy.Dyno.AUDIO[1]
		}), i.setText({
			callback: this.toDino.bind(this)
		}), i.start("scoog")) : this.toDino()
	}, e.prototype.toDino = function() {
		Util.isDefined(this._screenData.playerPosition) ? this.game.prodigy.world.teleport("dyno-A0", this._screenData.playerPosition.x, this._screenData.playerPosition.y) : this.game.prodigy.world.teleport("dyno-A0", 790, 240)
	}, e
}();
DinoDig.getNewFossils = function(e) {
	for (var t = [], i = Items.data.fossil, a = e.getBackpackItemsByType("fossil"), s = 0; s < i.length; s++) {
		var r = i[s];
		if (!e.hasItem("fossil", r.ID + 12)) {
			for (var n = r.data.count, o = 0; o < a.length; o++)
				if (a[o].ID === r.ID) {
					n -= a[o].N || 1;
					break
				} for (var o = 0; n > o; o++) t.push(r.ID)
		}
	}
	return t
};
var DinoDigMenu = function() {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t, 440, 150), this.startCallback = i, this.instructionsCallback = a, this.game.prodigy.create.panel(this, 25, 25, 7, 6), this.game.prodigy.create.textButton(this, 50, 50, {
				size: Prodigy.Control.TextButton.MED,
				atlas: "icon-key-1",
				icon: "icon-key-1",
				text: "Start!"
			}, this.tryStart.bind(this)), this.game.prodigy.create.textButton(this, 50, 130, {
				size: Prodigy.Control.TextButton.MED,
				icon: "star",
				text: "How to Play"
			}, this.instructions.bind(this)), this.game.prodigy.create.textButton(this, 50, 250, {
				size: Prodigy.Control.TextButton.MED,
				icon: "back",
				text: "Cancel"
			}, s)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.tryStart = function() {
			var e = this.game.prodigy.dialogue.create();
			this.game.prodigy.player.backpack.hasItem("key", 1) ? DinoDig.getNewFossils(this.game.prodigy.player.backpack).length <= 0 ? e.setText({
				text: "The museum is full, so we don't need any fossils, but do you want to dig anyways? \nIt will cost you [gold] 200",
				face: 4,
				yes: this.start.bind(this, 200)
			}) : e.setText({
				text: "Ready to start digging for fossils? \n\nIt will cost you [gold] 300.",
				face: 4,
				yes: this.start.bind(this, 300)
			}) : e.setText({
				text: "You want to start digging? First you'll need a shovel!",
				face: 4
			}), e.start("scoog")
		}, e.prototype.start = function(e) {
			if (!Util.isDefined(e) || this.game.prodigy.player.getGold() >= e) Util.isDefined(e) && this.game.prodigy.player.changeGold(-e, "Dino Dig"), this.startCallback();
			else {
				var t = this.game.prodigy.dialogue.create();
				t.setText({
					text: "Uh oh! You don't have enough gold!",
					face: 4
				}), t.start("scoog")
			}
		}, e.prototype.instructions = function() {
			this.instructionsCallback()
		}, e
	}(),
	DanceDance = function() {
		function e(e) {
			Screen.call(this, e, "The Stage", "game-dancedance", "game-dancedance", ["game-dancedance", "bgm-dance1", "bgm-dance2", "sfx-dance-dance"]), this.showMenu = !1
		}
		return e.prototype = Object.create(Screen.prototype), e.RED_LIGHTS = [{
			x: 192,
			y: 65
		}, {
			x: 403,
			y: 40
		}, {
			x: 613,
			y: 68
		}, {
			x: 791,
			y: 83
		}, {
			x: 908,
			y: 88
		}, {
			x: 408,
			y: 539
		}, {
			x: 887,
			y: 538
		}], e.YELLOW_LIGHTS = [{
			x: 118,
			y: 47
		}, {
			x: 318,
			y: 78
		}, {
			x: 376,
			y: 164
		}, {
			x: 744,
			y: 79
		}, {
			x: 1103,
			y: 139
		}, {
			x: 1129,
			y: 49
		}, {
			x: 1232,
			y: 39
		}, {
			x: 305,
			y: 474
		}, {
			x: 746,
			y: 572
		}], e.BLUE_LIGHTS = [{
			x: 66,
			y: 37
		}, {
			x: 338,
			y: 119
		}, {
			x: 396,
			y: 183
		}, {
			x: 652,
			y: 72
		}, {
			x: 1039,
			y: 97
		}, {
			x: 1071,
			y: 38
		}, {
			x: 548,
			y: 571
		}, {
			x: 984,
			y: 476
		}], e.prototype.create = function() {
			this.game.prodigy.audio.pauseBGM(), this.startedSpeed = !1, this.game.prodigy.player.saveEnabled = !1, Screen.prototype.create.call(this, ["game-dancedance", "bgm-dance1", "bgm-dance2"])
		}, e.prototype.screenSetup = function() {
			this.noFade = !0, Screen.prototype.screenSetup.call(this), this.background.add(this.game.prodigy.create.sprite(0, 0, "game-dancedance", "bg")), this.danceBots = [], this.danceBots.push(new DanceBot(this.game, this.content, 260, 285)), this.danceBots.push(new DanceBot(this.game, this.content, 640, 420)), this.danceBots.push(new DanceBot(this.game, this.content, 1030, 285)), this.danceBots[0].scale.x = this.danceBots[0].scale.y = .5, this.danceBots[2].scale.x = this.danceBots[2].scale.y = .5, this.danceBots[0].setPose(1), this.danceBots[2].setPose(1), this.menu = new DanceMenu(this.game, this.content, this.startGame.bind(this), this.showInstructions.bind(this), this.toTech.bind(this))
		}, e.prototype.showInstructions = function() {
			this.menu.visible = !1;
			var e = function(e) {
					e.visible = !0
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "This game is all about showing your moves and leveling up your TEK-Y4!",
				face: 0,
				anim: 4
			}), t.setText({
				text: "When a dance move is shown up top, select the matching dance card below before the timer runs out.",
				face: 1,
				anim: 0
			}), t.setText({
				text: "But look out! The timer speeds up over time! For each correct dance move, you earn gears to level up!",
				face: 2,
				anim: 0
			}), t.setText({
				callback: e.bind(this, this.menu)
			}), t.start("boombox")
		}, e.prototype.createUI = function(e) {
			this.timer = new DanceTimer(this.game, this.content, 590, 30);
			var t = function(e) {
				for (var t = 50, i = 2; e >= i; i++) t += Math.max(0, Math.floor(100 * (i / 9) * 5));
				return e >= 10 && (t = -1), {
					target: t,
					text: "" + e
				}
			};
			this.gearBar = this.game.prodigy.create.fillBar(this.content, 65, 415, 34, 250, 1, t, 15975263, "star2", .7, !0), this.gearBar.setValue(this.game.prodigy.player.backpack.getKeyItemData(2, "gears") || 0);
			var i = function(t) {
				var i = 15975263,
					a = Math.max(0, 5 * t);
				return t >= e && (a = -1), 1 >= t && (i = 15157320), {
					target: a,
					color: i,
					text: 1 >= t ? "Uh oh" : "x" + (t - 1)
				}
			};
			this.bonusBar = this.game.prodigy.create.fillBar(this.content, 1181, 415, 34, 250, 1, i, 15314234, {
				type: "item",
				ID: 47
			}, .7, !0, this.setMultiplier.bind(this)), this.bonusBar.setValue(5), this.score = this.game.prodigy.create.element(this.content, 20, 20), this.score.text = this.game.prodigy.create.font(this.score, 0, 0, "[single-image:icon-item-47]0", {
				size: 36,
				font: "button"
			});
			var a = this.game.prodigy.player.backpack.getKeyItemData(2, "score");
			this.high = this.game.prodigy.create.element(this.content, 960, 20), this.high.text = this.game.prodigy.create.font(this.high, 0, 0, (Util.isDefined(a) ? a : 0) + " [single-image:icon-item-47]", {
				size: 36,
				font: "button",
				align: "right",
				width: 300
			}), this.game.prodigy.create.font(this.high, 0, 40, "my best ", {
				size: 16,
				width: 220,
				align: "right"
			})
		}, e.prototype.setMultiplier = function(e) {
			e > 1 ? this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "yay") : Util.isDefined(this.multiplier) && this.multiplier !== e && this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "aw"), this.multiplier = e
		}, e.prototype.startGame = function(e, t) {
			this.menu.visible = !1, this.gearBonus = 0 === t ? 1 : 0, this.speedOffset = 1 === t ? .25 : 0, this.maxMult = 2 === t ? 5 : 4, this.createUI(this.maxMult), this.currentScore = 0, this.lightTimer = window.setInterval(this.processLights.bind(this), 500), this.startTime = (new Date).getTime(), this.finishTime = this.startTime + 7e4, this.speedTime = this.startTime + 4e4, this.timeDelay = 1500, this.setDifficulty(e);
			var i = function(e) {
				e.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "go"), e.game.prodigy.effects.flashText("DANCE!"), e.nextPose()
			};
			this.game.prodigy.audio.playBGM("bgm-dance1", !0), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "ready"), this.game.prodigy.effects.flashText("READY?", i.bind(this, this))
		}, e.prototype.endGame = function(e) {
			this.timer.visible = !1;
			for (var t = 0; t < this.poses.length; t++) this.poses[t].visible = !1;
			this.game.prodigy.audio.pauseBGM(), e ? this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "victory") : this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "bell");
			for (var t = 0; t < this.danceBots.length; t++) this.danceBots[t].setPose(e ? -3 : -1);
			this.danceBots[1].setPose(e ? -2 : -1), this.game.prodigy.effects.flashText(e ? "Dance Complete!" : "Dance Failed", this.finalize.bind(this, e))
		}, e.prototype.finalize = function(t) {
			var i = this.game.prodigy.dialogue.create();
			if (t) {
				var a = this.game.prodigy.player.backpack.getKeyItemData(2, "score");
				(!Util.isDefined(a) || a < this.currentScore) && (this.game.prodigy.player.backpack.setKeyItemData(2, "score", this.currentScore), this.high.text.setText(this.currentScore + " [single-image:icon-item-47]"), i.setText({
					text: "Looks like we have a new HIGH SCORE!",
					face: 4,
					anim: 4,
					audio: e.AUDIO[2]
				})), i.setText({
					text: "Great moves! Let's see how many gears you earned!",
					face: 0
				}), i.setText({
					callback: this.gearBar.addValue.bind(this.gearBar, this.currentScore, null, this.finishFill.bind(this))
				})
			} else this.difficulty > 1 ? i.setText({
				text: "Oh dear...you got too many poses wrong. Perhaps try again on a lower difficulty?",
				face: 3,
				audio: e.AUDIO[4]
			}) : i.setText({
				text: "Oh dear...you got too many poses wrong. Try again another time!",
				face: 3,
				audio: e.AUDIO[4]
			}), i.setText({
				callback: this.toTech.bind(this)
			});
			i.start("boombox")
		}, e.prototype.finishFill = function() {
			var t = this.game.prodigy.player.backpack.getKeyItemData(2, "lvl"),
				i = this.gearBar.getLevel(),
				a = this.game.prodigy.dialogue.create();
			if (this.game.prodigy.player.backpack.setKeyItemData(2, "gears", this.gearBar.getValue()), i > t) {
				var s = [{
					type: "gold",
					N: 500 * (i - t)
				}];
				this.game.prodigy.player.backpack.setKeyItemData(2, "lvl", i), 5 > i ? a.setText({
					text: "You leveled up your TEK-Y4! Now he can try the level " + i + " challenge and earn even more gears!",
					face: 4,
					anim: 4,
					audio: e.AUDIO[2]
				}) : 10 > i ? a.setText({
					text: "You leveled up your TEK-Y4! Get him to level 10, and there will be a fantastic reward!",
					face: 4,
					anim: 4,
					audio: e.AUDIO[2]
				}) : (a.setText({
					text: "You leveled up your TEK-Y4 to the maximum level!",
					face: 4,
					anim: 4,
					audio: e.AUDIO[3]
				}), s.push({
					type: "hat",
					ID: 47
				}), s.push({
					type: "outfit",
					ID: 42
				})), a.setText({
					text: "I almost forgot...here's your reward!",
					face: 1
				}), a.setText({
					callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, s, this.toTech.bind(this), null, "dance-dance")
				})
			} else 10 > t ? a.setText({
				text: "Good job! Level up your TEK-Y4 to try new difficulties, get more gear and cool rewards!",
				face: 4
			}) : a.setText({
				text: "Your TEK-Y4 is at the highest level! Try again to beat your friends' high scores!",
				face: 4,
				anim: 4,
				audio: e.AUDIO[3]
			}), a.setText({
				callback: this.toTech.bind(this)
			});
			a.start("boombox")
		}, e.prototype.setDifficulty = function(e) {
			this.difficulty = e, this.poseElement = this.game.prodigy.create.element(this.content, 0, 600);
			var t = 3 > e ? 3 : 5 > e ? 4 : 5;
			this.poses = [];
			for (var i = 0; t > i; i++) this.poses[i] = new DancePose(this.game, this.poseElement, 130 * i, 0, this.selectAnswer.bind(this, i));
			this.poseElement.x = 640 - this.poseElement.width / 2
		}, e.prototype.nextPose = function() {
			var e = this.timer.start(this.difficulty, this.speedOffset, this.pose.bind(this));
			this.correctPose = e.currentPose, this.correct = Math.floor(Math.random() * this.poses.length);
			for (var t = [e], i = 0; i < this.poses.length; i++) i === this.correct ? this.poses[i].setPose(e) : this.poses[i].randomPose(this.difficulty, t), t.push(this.poses[i]), this.poses[i].flip();
			this.answerID = null, this.deselectAll()
		}, e.prototype.selectAnswer = function(e) {
			this.answerID = e, this.deselectAll()
		}, e.prototype.deselectAll = function() {
			for (var e = 0; e < this.poses.length; e++) this.poses[e].deselect()
		}, e.prototype.pose = function() {
			for (var e = this.answerID === this.correct, t = 0; t < this.poses.length; t++) this.poses[t].flip();
			for (var t = 0; t < this.danceBots.length; t++) 1 === t ? this.danceBots[t].setPose(e ? this.correctPose : -1) : this.danceBots[t].setPose(this.correctPose);
			if (e) this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "heart"), this.currentScore += (this.poses.length + this.gearBonus) * (this.bonusBar.getLevel() - 1), this.score.text.setText("[single-image:icon-item-47]" + this.currentScore), this.bonusBar.addValue(1);
			else if (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.DANCE_DANCE, "damage"), this.bonusBar.getValue() > 5) this.bonusBar.setValue(5);
			else {
				var i = this.bonusBar.addValue(-1);
				if (0 >= i) return this.endGame(!1), void 0
			}
			var a = (new Date).getTime();
			return a > this.finishTime ? (this.endGame(!0), void 0) : (a > this.speedTime && (this.startedSpeed || (this.startedSpeed = !0, this.speedOffset -= .25, this.game.prodigy.effects.flashText("Speed Up!"), this.game.prodigy.audio.playBGM("bgm-dance2", !0)), this.timeDelay = Math.max(500, this.timeDelay - 150)), window.setTimeout(this.nextPose.bind(this), this.timeDelay), void 0)
		}, e.prototype.processLights = function() {
			if (!Util.isDefined(this.lights)) {
				this.lights = [];
				for (var t = 0; 3 > t; t++) this.lights.push(this.background.add(this.game.prodigy.create.sprite(0, 0, "icons", "empty"))), this.lights[t].alpha = .25;
				this.lights[0].tint = 14492708, this.lights[1].tint = 15396941, this.lights[2].tint = 5107440
			}
			for (var i = [this.game.seededRandom.pick(e.RED_LIGHTS), this.game.seededRandom.pick(e.YELLOW_LIGHTS), this.game.seededRandom.pick(e.BLUE_LIGHTS)], t = 0; 3 > t; t++) this.lights[t].x = i[t].x - 25, this.lights[t].y = i[t].y - 25
		}, e.prototype.toTech = function() {
			this.game.prodigy.world.teleport("lamplight-B4", 660, 400)
		}, e
	}();
DanceDance.AUDIO = [{
	tag: "voice-0",
	s: 0,
	d: 2
}, {
	tag: "voice-0",
	s: 2,
	d: 3
}, {
	tag: "voice-0",
	s: 5,
	d: 3
}, {
	tag: "voice-0",
	s: 8,
	d: 2
}, {
	tag: "voice-0",
	s: 10,
	d: 2
}, {
	tag: "voice-0",
	s: 12,
	d: 2
}, {
	tag: "voice-0",
	s: 14,
	d: 4
}];
var DanceMenu = function() {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t), this.startCallback = i, this.cancelCallback = s, this.instructionsCallback = a;
			var r = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-small"));
			r.alpha = .5, r.width = 1280, r.height = 720, this.game.prodigy.player.backpack.hasItem("key", 2) ? this.createMenu() : this.giveItem()
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.giveItem = function() {
			var e = function(e) {
					var t = this.game.prodigy.dialogue.create();
					t.setText({
						text: "It's just a little TEK-Y4, so it hasn't learned how to dance yet. It'll be your job to teach it some moves!",
						face: 1
					}), t.setText({
						callback: e.createMenu.bind(e)
					}), t.start("boombox")
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "Welcome to the Dance Stage! Ready to show everyone what your TEK-Y4 robot can do?",
				face: 4,
				anim: 4
			}), t.setText({
				text: "OH! You don't have a TEK-Y4? Well now, only the TEK-Y4 dancing robot can use the stage...",
				face: 2
			}), t.setText({
				text: "Here, you can have this one!",
				face: 1,
				audio: DanceDance.AUDIO[3]
			}), t.setText({
				callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [{
					type: "key",
					ID: 2,
					lvl: 1
				}], e.bind(this, this))
			}), t.start("boombox")
		}, e.prototype.createMenu = function() {
			Util.isDefined(this.menu) && this.menu.destroy(), this.menu = this.game.prodigy.create.element(this, 465, 220), this.game.prodigy.create.panel(this.menu, 0, 0, 7, 5), this.game.prodigy.create.textButton(this.menu, 25, 20, {
				size: Prodigy.Control.TextButton.MED,
				icon: {
					type: "key",
					ID: 2
				},
				text: "Start!"
			}, this.createDifficulty.bind(this)), this.game.prodigy.create.textButton(this.menu, 25, 100, {
				size: Prodigy.Control.TextButton.MED,
				icon: "star",
				text: "How to Play"
			}, this.instructions.bind(this)), this.game.prodigy.create.textButton(this.menu, 25, 180, {
				size: Prodigy.Control.TextButton.MED,
				icon: "back",
				text: "Cancel"
			}, this.cancelCallback.bind(this))
		}, e.prototype.createDifficulty = function() {
			Util.isDefined(this.menu) && this.menu.destroy(), this.menu = this.game.prodigy.create.element(this, 390, 220);
			var e = this.game.prodigy.player.backpack.getKeyItemData(2, "lvl");
			this.game.prodigy.create.panel(this.menu, 0, 0, 10, 6), this.game.prodigy.create.font(this.menu, 110, 20, "Choose Difficulty", {
				size: 36,
				font: "button"
			}), this.game.prodigy.create.font(this.menu, 110, 60, "Higher levels = more gears!"), this.menu.add(this.game.prodigy.create.sprite(10, 10, "icon-key-2"));
			for (var t = 0; 5 > t; t++) {
				var i = 30 + 90 * t,
					a = 110;
				e >= t + 1 ? this.game.prodigy.create.stackButton(this.menu, i, a, [{
					tag: "star2"
				}, {
					text: "" + (t + 1),
					y: 20,
					size: 30
				}], this.chooseDifficulty.bind(this, t + 1)) : this.game.prodigy.create.stackButton(this.menu, i, a, [{
					tag: "empty",
					x: 15,
					y: 15
				}, {
					text: "" + (t + 1),
					y: 20,
					size: 30
				}], this.game.prodigy.open.message.bind(this.game.prodigy.open, "Your TEK-Y4 needs to be a higher level! Try a lower difficulty to earn gears and level up!", null, null, "Uh oh!"))
			}
			this.game.prodigy.create.textButton(this.menu, 40, 230, {
				size: Prodigy.Control.TextButton.SMALL,
				icon: "back",
				text: "Back"
			}, this.createMenu.bind(this)), this.game.prodigy.create.textButton(this.menu, 260, 230, {
				size: Prodigy.Control.TextButton.SMALL,
				icon: "yes",
				text: "GO!"
			}, this.tryStart.bind(this)), this.yes = this.menu.add(this.game.prodigy.create.sprite(0, 170, "icons", "yes")), this.yes.width = this.yes.height = 25, this.chooseDifficulty(Math.min(e, 5))
		}, e.prototype.chooseDifficulty = function(e) {
			this.difficulty = e, this.yes.x = 90 * e - 10
		}, e.prototype.tryStart = function() {
			Util.isDefined(this.menu) && this.menu.destroy();
			var e = this.game.prodigy.dialogue.create();
			e.setText({
				text: "Ready to start robo-dancing? \n\nIt will cost you [gold] 200.",
				face: 4,
				yes: this.openBoosts.bind(this, 200),
				no: this.createMenu.bind(this)
			}), e.start("boombox")
		}, e.prototype.openBoosts = function(e) {
			if (!Util.isDefined(e) || this.game.prodigy.player.getGold() >= e) {
				Util.isDefined(e) && this.game.prodigy.player.changeGold(-e, "Dance Menu");
				var t = [{
					icon: {
						type: "item",
						ID: 47
					},
					d: "More gears"
				}, {
					icon: {
						type: "fossil",
						ID: 1
					},
					d: "Slow time"
				}, {
					icon: "star2",
					d: "Multiplier"
				}];
				this.game.prodigy.open.boostSelect(t, this.start.bind(this))
			} else {
				var i = this.game.prodigy.dialogue.create();
				i.setText({
					text: "Uh oh! You don't have enough gold!",
					face: 3,
					anim: 1,
					audio: DanceDance.AUDIO[4]
				}), i.setText({
					callback: this.createMenu.bind(this)
				}), i.start("boombox")
			}
		}, e.prototype.start = function(e) {
			this.startCallback(this.difficulty, e)
		}, e.prototype.instructions = function() {
			this.instructionsCallback()
		}, e
	}(),
	DanceTimer = function() {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.pose = new DancePose(this.game, this, 0, 0), this.pose.flip(), this.bar1 = this.add(this.game.prodigy.create.sprite(0, 34, "core", "overlay-light")), this.bar1.anchor.setTo(1, 0), this.bar2 = this.add(this.game.prodigy.create.sprite(100, 34, "core", "overlay-light")), this.bar1.height = this.bar2.height = 30, this.bar1.width = this.bar2.width = 244, this.bar1.alpha = this.bar2.alpha = .7, this.bar1.tint = this.bar2.tint = 8768643
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.start = function(e, t, i) {
			this.pose.randomPose(e, []), this.callback = i;
			var a = 2.5 - .35 * (e - 1);
			a += t, a *= 1e3, this.bar1.width = this.bar2.width = 244;
			var s = this.game.add.tween(this.pose).to({
				y: -10
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: 0
			}, 250, Phaser.Easing.Quadratic.In);
			return s.onComplete.addOnce(this.beginTimer.bind(this, a), this), s.start(), this.pose
		}, e.prototype.beginTimer = function(e) {
			this.startTime = (new Date).getTime(), this.targetTime = (new Date).getTime() + e
		}, e.prototype.update = function() {
			if (Prodigy.Control.Element.prototype.update.call(this), Util.isDefined(this.bar1) && Util.isDefined(this.bar2) && Util.isDefined(this.targetTime)) {
				var e = (new Date).getTime();
				if (e >= this.targetTime) this.bar1.width = this.bar2.width = 0, this.targetTime = null, this.callback();
				else {
					var t = (this.targetTime - e) / (this.targetTime - this.startTime),
						i = Math.floor(244 * t);
					this.bar1.width = this.bar2.width = i
				}
			}
		}, e
	}(),
	DanceBot = function() {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.sprite = this.add(this.game.prodigy.create.sprite(-100, -200, "game-dancedance", "pose1-1")), this.sprite.animations.add("-3", ["pose2-1"], 1, !0, !1), this.sprite.animations.add("-2", ["poseSuccess"], 1, !0, !1), this.sprite.animations.add("-1", ["poseFail"], 1, !0, !1), this.sprite.animations.add("0", ["pose0-1", "pose0-2"], 1, !0, !1), this.sprite.animations.add("1", ["pose1-1", "pose1-2"], 1, !0, !1), this.sprite.animations.add("2", ["pose2-1", "pose2-2"], 1, !0, !1), this.sprite.animations.add("3", ["pose3-1", "pose3-2"], 1, !0, !1), this.sprite.animations.add("4", ["pose4-1", "pose4-2"], 1, !0, !1), this.sprite.animations.add("5", ["pose5-1", "pose5-2"], 1, !0, !1), this.sprite.animations.add("6", ["pose6-1", "pose6-2"], 1, !0, !1), this.sprite.animations.add("7", ["pose7-1", "pose7-2"], 1, !0, !1), this.sprite.animations.add("8", ["pose8-1", "pose8-2"], 1, !0, !1), this.sprite.animations.add("9", ["pose9-1", "pose9-2"], 1, !0, !1), this.setPose(-3)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setPose = function(e) {
			this.sprite.animations.play(e + "", 2.15, !0), -1 === e && this.game.add.tween(this.sprite).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -100
			}, 100, Phaser.Easing.Linear.None).start(), -2 === e && this.game.add.tween(this.sprite).to({
				y: -230
			}, 250, Phaser.Easing.Linear.None, !0, 0, 1, !0)
		}, e
	}(),
	DancePose = function() {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.onSelect = s, this.flipped = !1, this.frame = this.add(this.game.prodigy.create.sprite(0, 0, "game-dancedance", "pose-card")), this.frame.events.onInputDown.add(this.select.bind(this)), this.sprite = this.add(this.game.prodigy.create.sprite(10, 10, "game-dancedance", "card0")), this.sprite.width = 0, this.sprite.x = 50, this.sprite.alpha = .9, this.currentPose = 1, this.currentTint = 14080234
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.TINTS = [14254209, 9946096, 8444311, 16755318, 15788439, 13080560], e.prototype.randomPose = function(t, i) {
			var a = 3 > t ? 4 : 3 === t ? 6 : 4 === t ? 8 : 10;
			this.currentTint = 14080234;
			for (var s = 0; 100 > s; s++) {
				this.currentPose = Math.floor(Math.random() * a), this.currentTint = e.TINTS[Math.floor(Math.random() * e.TINTS.length)];
				for (var r = !1, n = 0; n < i.length; n++)
					if (this.equals(i[n], t)) {
						r = !0;
						break
					} if (!r) break
			}
			this.sprite.frameName = "card" + this.currentPose, this.frame.tint = this.currentTint
		}, e.prototype.setPose = function(e) {
			this.currentPose = e.currentPose, this.currentTint = e.currentTint
		}, e.prototype.flip = function() {
			this.sprite.frameName = "card" + this.currentPose, this.frame.inputEnabled = !1, "pose-frame" === this.frame.frameName ? this.game.add.tween(this.sprite).to({
				width: 0,
				x: 50
			}, 250, Phaser.Easing.Linear.None).start() : this.frame.tint = 16777215;
			var e = this.game.add.tween(this.frame).to({
				width: 0,
				x: 50
			}, 250, Phaser.Easing.Linear.None);
			e.onComplete.addOnce(this.flipStep.bind(this), this), e.start()
		}, e.prototype.flipStep = function() {
			"pose-card" === this.frame.frameName ? (this.frame.frameName = "pose-frame", this.frame.tint = this.currentTint, this.game.add.tween(this.sprite).to({
				width: 80,
				x: 10
			}, 250, Phaser.Easing.Linear.None).start()) : (this.frame.frameName = "pose-card", this.frame.tint = 16777215);
			var e = this.game.add.tween(this.frame).to({
				width: 100,
				x: 0
			}, 250, Phaser.Easing.Linear.None);
			e.onComplete.addOnce(this.flipComplete.bind(this), this), e.start()
		}, e.prototype.flipComplete = function() {
			this.frame.inputEnabled = "pose-frame" === this.frame.frameName
		}, e.prototype.equals = function(e) {
			return Util.isDefined(e) && (e.currentPose == this.currentPose || e.currentTint == this.currentTint && 14080234 !== e.currentTint)
		}, e.prototype.select = function() {
			Util.isDefined(this.onSelect) && (this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), this.onSelect(), this.frame.y = -15, this.sprite.y = -5)
		}, e.prototype.deselect = function() {
			this.frame.y = 0, this.sprite.y = 10
		}, e
	}();
Prodigy.Controller.BattleController = function(e) {
	this.game = e, this.MOD_DEFAULTS = {
		invincible: !1,
		scale: !1,
		run: !0,
		difficulty: 3,
		dropsDisabled: !1,
		starMod: 1,
		"catch": !0,
		switchDisabled: !1,
		drops: [],
		encounter: null,
		opponent: null,
		boss: null,
		pets: null,
		dmgMod: 0,
		events: [],
		intro: null,
		allowMember: !0,
		level: null,
		unique: !1,
		potionMode: !0
	}
}, Prodigy.Controller.BattleController.prototype = {
	constructor: Prodigy.Controller.BattleController,
	start: function(e, t, i, a, s, r) {
		var n = this.game.state.states.Battle;
		Util.isDefined(e) || (e = {});
		for (var o in this.MOD_DEFAULTS) {
			var h = this.MOD_DEFAULTS[o];
			Util.isDefined(e[o]) || (e[o] = h)
		}
		var l = Util.isDefined(r) ? r : this.getTeam(this.game.prodigy.player),
			d = this.getBattleLevel(l);
		n.teamB = this.initBattle(e, d, l), n.teamA = l, n.drops = e.drops, n.mods = e, n.runAwayCallback = t, n.victoryCallback = i, n.defeatCallback = a, n.defeatZone = s || "house", n.screenName = e.screen;
		var c = {
			assets: this.getAssets(n.screenName, n.teamA, n.teamB)
		};
		this.game.prodigy.start("Battle", c), this.game.prodigy.network.sendZoneEvent("battle-start")
	},
	endEpicArena: function(e, t) {
		var i = "toyzone-B1";
		switch (e) {
			case 125:
			case 126:
			case 127:
			case 128:
			case 129:
				i = "toyzone-B2";
				break;
			case 130:
			case 131:
			case 132:
			case 133:
				i = "toyzone-A1"
		}
		Util.isDefined(t) && t !== !1 ? this.game.prodigy.world.teleport(i) : this.game.prodigy.player.healTeamMember(GameConstants.MAX_SAFE_INTEGER, e, this.game.prodigy.world.teleport.bind(this.game.prodigy.world, i))
	},
	startEpicArena: function(e, t, i) {
		this.game.prodigy.player.healTeamMember(GameConstants.MAX_SAFE_INTEGER, e, null);
		var a = "";
		switch (e) {
			case 125:
			case 133:
				a = "bg-battle-cloud";
				break;
			case 126:
				a = "bg-battle-forest";
				break;
			case 127:
				a = "bg-battle-mountain";
				break;
			case 128:
				a = "bg-battle-pirate";
				break;
			case 131:
				a = "bg-battle-shipwreck-underwater";
				break;
			case 132:
				a = "bg-battle-shipwreck-beach";
				break;
			default:
				a = "bg-battle-volcano"
		}
		var s = {
			"catch": !1,
			run: !1,
			screen: a,
			epicArena: 1,
			switchDisabled: !0,
			invincible: !1,
			starMod: 1,
			challengeLevel: t,
			getAllRewards: i
		};
		s.difficulty = 1;
		for (var r = [], n = this.game.prodigy.player.kennel.getPets(), o = 0; o < n.length; o++)
			if (n[o].ID === e) {
				r.push(new Monster(n[o], this.game));
				break
			} return 0 === r.length || r[0].getCurrentHearts() <= 0 ? (Util.log("The player do not have an valid EPIC to start this battle!", Util.ERROR), !1) : (this.start(s, this.endEpicArena.bind(this, e, !0), this.endEpicArena.bind(this, e), this.endEpicArena.bind(this, e, !1, !0), "epicId", r), !0)
	},
	end: function() {},
	getBattleLevel: function(e) {
		var t = 0;
		if (Util.isDefined(e))
			for (var i = 0; i < e.length; i++) t += e[i].getLevel();
		return Math.floor(t / e.length)
	},
	getTeam: function(e) {
		return e.kennel.getTeam().filter(function(e) {
			return Util.isDefined(e)
		})
	},
	getPVPTeam: function(e) {
		return e.kennel.getTeam().filter(function(t) {
			return Util.isDefined(t) && e.kennel.isPVPTeam(t.data) || t instanceof Player
		})
	},
	getEventsOfType: function(e, t) {
		var i = [];
		if (Util.isDefined(e) && Util.isDefined(e.events))
			for (var a = 0; a < e.events.length; a++) Util.inArray(t, e.events[a].action) && i.push(e.events[a]);
		return i
	},
	initBattle: function(e, t) {
		var i = [];
		if (Util.isDefined(e.boss)) {
			var a = e.boss.heartsCurveType || "A",
				s = e.boss.levelOffset || 0;
			Util.isDefined(e.boss.maxHP) || (e.boss.maxHP = 4 * (12 + Prodigy.Creature.getHeartsFromCurve(a, 1, Math.min(100, t + s + 1))));
			var r = {
				forest: Prodigy.ForestBoss,
				shiverchill: Prodigy.IceWyrmBoss,
				skywatch: Prodigy.CloudBoss,
				bonfire: Prodigy.BonfireBoss,
				shipwreck: Prodigy.OldOne,
				pippet: Prodigy.PippetBoss,
				titan: Prodigy.TitanBoss
			};
			Util.isDefined(e.boss.tag) ? i.push(new r[e.boss.tag](e.boss, this.game)) : i.push(new Prodigy.Boss(e.boss, this.game))
		}
		if (Util.isDefined(e.encounter)) {
			var n = new Monster(this.chooseOpponent(e.encounter), this.game),
				o = Math.max(1, t - Math.floor(6 * Math.random()));
			Util.isDefined(e.level) && (o = e.level), Util.isDefined(e.maxLevel) && (o < e.minLevel && (o = e.minLevel), o > e.maxLevel && (o = e.maxLevel)), n.generate(e.level || o, 0), i.push(n)
		}
		if (Util.isDefined(e.pets))
			for (var h = 0; h < e.pets.length; h++) {
				var l = e.pets[h];
				(!Util.isDefined(l.level) || e.scale) && (l.level = t), i.push(new Monster(l, this.game))
			}
		if (Util.isDefined(e.opponent))
			for (var h = 0; h < e.opponent.length; h++) e.scale && (Util.isDefined(e.opponent[h].data) || (e.opponent[h].data = {}), e.opponent[h].data.level = this.game.prodigy.player.getLevel()), i.push(this.initPlayerOpponent(e.opponent[h]));
		return i
	},
	initPlayerOpponent: function(e) {
		var t = new Player(this.game);
		return t.init(e), t
	},
	chooseOpponent: function(e) {
		for (var t = 0, i = 0; i < e.length; i++) t += Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID);
		var a = Math.random() * t;
		t = 0;
		for (var i = 0; i < e.length; i++)
			if (t += Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID), t > a) return Util.copyObject(e[i]);
		return {
			ID: 1
		}
	},
	chooseRandomMonster: function(e) {
		for (var t = 0, i = 0; i < e.length; i++) t += 1 / Math.max(1, Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID));
		var a = Math.random() * t;
		t = 0;
		for (var i = 0; i < e.length; i++)
			if (t += 1 / Math.max(1, Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID)), t > a) return Util.copyObject(e[i]);
		return {
			ID: 1
		}
	},
	chooseAction: function(e, t, i, a, s, r, n, o) {
		e /= 10;
		var h = t.source.getAttacks();
		if (h.length <= 0) return o(), void 0;
		if (Math.random() < .8 * e) {
			for (var l = null, d = this.battleScore(t, i, !0, e), c = 0; c < a.length; c++)
				if (a[c] !== t && a[c].source.getCurrentHearts() > 0) {
					var p = this.battleScore(a[c], i, !1);
					p > d && (l = c, d = p)
				} if (Util.isDefined(l)) return n(o, l), void 0
		}
		var g = this.game.prodigy.attacks.getBestAttack(h, i.source, 1 - e);
		if (!Util.isDefined(g)) return o(), void 0;
		if (t.source.getCurrentHearts() / t.source.getMaxHearts() < .25 && Math.random() < e) {
			var u = this.game.prodigy.attacks.getHealingAttack(h);
			Util.isDefined(u) && (g = u)
		}
		var y = .25 - .25 * e + t.source.modifiers.miss;
		r(t, i, o, g, Math.random() < y)
	},
	battleScore: function(e, t, i, a) {
		var s = this.game.prodigy.attacks.getBestAttack(e.source.getAttacks(), t.source, 1 - a),
			r = this.game.prodigy.attacks.getBestAttack(t.source.getAttacks(), e.source, 1 - a),
			n = this.game.prodigy.attacks.calculateDamage(s, null, t.source, 0);
		if (0 === n) return Number.NEGATIVE_INFINITY;
		var o = this.game.prodigy.attacks.calculateDamage(r, null, e.source, 0);
		if (0 === o) return Number.POSITIVE_INFINITY;
		var h = e.source.getMaxHearts();
		i || (h = Math.max(h - o, 0));
		var l = h / o,
			d = t.source.getMaxHearts() / n;
		return l - d
	},
	getAssets: function(e, t, i) {
		for (var a = [e, "battle", "attacks", "bgm-battle", "bgm-victory"], s = 0; s < t.length; s++) t[s] instanceof Player || (t[s] instanceof Monster ? a = a.concat(Prodigy.Container.MonsterContainer.getAssets(t[s])) : t[s] instanceof Prodigy.Boss && (a = a.concat(Prodigy.Container.BossContainer.getAssets(t[s]))));
		for (var s = 0; s < i.length; s++) i[s] instanceof Player || (i[s] instanceof Monster ? a = a.concat(Prodigy.Container.MonsterContainer.getAssets(i[s])) : i[s] instanceof Prodigy.Boss && (a = a.concat(Prodigy.Container.BossContainer.getAssets(i[s]))));
		return a
	}
}, Prodigy.Controller.PVPController = function(e) {
	Prodigy.Controller.BattleController.call(this, e)
}, Prodigy.extends(Prodigy.Controller.PVPController, Prodigy.Controller.BattleController, {
	constructor: Prodigy.Controller.PVPController,
	start: function(e, t, i, a, s) {
		var r = {
			screen: "bg-battle-arena"
		};
		for (var n in this.MOD_DEFAULTS) {
			var o = this.MOD_DEFAULTS[n];
			Util.isDefined(r[n]) || (r[n] = o)
		}
		r.arena = s, r.catch = !1, r.run = !1;
		var h = "zone-battle-" + e + "-";
		h += t.userID == e ? i.userID : t.userID;
		var l = {
			mods: r,
			zoneName: h,
			callback: a,
			challengerID: e,
			playerA: t,
			playerB: i
		};
		this.game.prodigy.start("PVP", l, l)
	},
	end: function() {}
}), Prodigy.EventController = function(e, t) {
	this.game = e, this.ID = t, this.end()
}, Prodigy.EventController.prototype = {
	start: function() {
		this.text(), this.next()
	},
	end: function(e) {
		Util.isDefined(e) && e(), this._npc = null, this._dialogue = [], this._events = []
	},
	next: function() {
		if (this._events.length > 0) {
			var e = this._events[0];
			this._events.splice(0, 1), e()
		} else this.end()
	},
	add: function(e) {
		this.text(), this._events.push(e)
	},
	text: function(e, t, i) {
		var a = this.game.prodigy.dialogue.create();
		if (this._dialogue.length > 0 && (t !== this._npc || !Util.isDefined(e))) {
			var s = function(e, t) {
				for (var s = 0; s < t.length; s++) a.setText(t[s]);
				a.setText({
					callback: this.next.bind(this)
				}), a.start(e, i)
			};
			this._events.push(s.bind(this, this._npc, this._dialogue)), this._dialogue = []
		} else Util.isDefined(e) && this._dialogue.push(e);
		this._npc = t
	},
	yesNoText: function(e, t, i) {
		var a = {};
		isNaN(e) || (a.index = e), a.yes = this.next.bind(this), a.no = this.end.bind(this, i), this.text(a, t)
	},
	overlayText: function(e, t) {
		this.text(), this.text(e, t, !0), this.text(null, null, !0)
	},
	"function": function(e) {
		var t = function(t) {
			e(), t()
		};
		this.add(t.bind(this, this.next.bind(this)))
	},
	animation: function(e, t) {
		t = t || !1;
		var i = function() {
			t ? e().onComplete.add(this.next.bind(this)) : (e(), this.next())
		};
		this.add(i.bind(this))
	},
	enableInput: function(e) {
		var t = function() {
			this.game.input.enabled = e, this.next()
		};
		this.add(t.bind(this))
	},
	enableSave: function(e) {
		var t = function() {
			this.game.prodigy.player.saveEnabled = e, this.next()
		};
		this.add(t.bind(this))
	},
	set: function(e, t, i) {
		var a = function() {
			e[t] = i, this.next()
		};
		this.add(a.bind(this))
	},
	delayUntil: function(e, t, i) {
		this.add(this._testDelay.bind(this, e, t, i))
	},
	_testDelay: function(e, t, i) {
		e[t] == i ? this.next() : window.setTimeout(this._testDelay.bind(this, e, t, i), 250)
	},
	path: function(e, t, i, a) {
		var s = function() {
			a ? (e.setPath(t, null, i), this.next()) : e.setPath(t, this.next.bind(this), i)
		};
		this.add(s.bind(this))
	},
	validPath: function(e, t, i, a, s) {
		var r = function(s) {
			s ? (e.setValidPath(t, i, a, null), this.next()) : e.setValidPath(t, i, a, this.next.bind(this))
		};
		this.add(r.bind(this, s))
	},
	hop: function(e, t, i, a, s) {
		var r = function() {
			s ? (e.hop(t, null, i, a), this.next()) : e.hop(t, this.next.bind(this), i, a)
		};
		this.add(r.bind(this))
	},
	delay: function(e) {
		this.add(this.game.time.events.add.bind(this.game.time.events, e, this.next, this))
	},
	explode: function(e, t, i, a, s, r, n) {
		var o = function() {
			r ? (this.game.prodigy.effects.explode(e, t, i, a, s, null, n), this.next()) : this.game.prodigy.effects.explode(e, t, i, a, s, this.next.bind(this), n)
		};
		this.add(o.bind(this))
	},
	fire: function(e, t, i, a, s, r, n) {
		var o = function() {
			n ? (this.game.prodigy.effects.fire(e, t, i, a, s, r), this.next()) : this.game.prodigy.effects.fire(e, t, i, a, s, r, this.next.bind(this))
		};
		this.add(o.bind(this))
	},
	portalEffect: function(e, t, i) {
		var a = function() {
			i ? (this.game.prodigy.effects.portalEffect(e, t), this.next()) : this.game.prodigy.effects.portalEffect(e, t, this.next.bind(this))
		};
		this.add(a.bind(this))
	},
	shake: function(e, t, i, a, s) {
		var r = function() {
			s ? (this.game.prodigy.effects.shake(e, t, i, a), this.next()) : this.game.prodigy.effects.shake(e, t, i, a, this.next.bind(this))
		};
		this.add(r.bind(this))
	},
	firework: function(e, t) {
		var i = function() {
			this.game.prodigy.effects.firework(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	confetti: function(e, t) {
		var i = function() {
			this.game.prodigy.effects.confetti(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	goldwork: function(e, t) {
		var i = function() {
			this.game.prodigy.effects.goldwork(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	sound: function(e, t, i) {
		if (i) this.add(this.game.prodigy.audio.playSFX.bind(this.game.prodigy.audio, e, t, this.next.bind(this)));
		else {
			var a = function() {
				this.game.prodigy.audio.playSFX(e, t), this.next()
			}.bind(this);
			this.add(a)
		}
	},
	bgm: function(e) {
		var t = function() {
			Util.isDefined(e) ? (this.game.prodigy.audio.playBGM(e, !0, !0), this.game.prodigy.audio.resumeBGM()) : this.game.prodigy.audio.pauseBGM(), this.next()
		};
		this.add(t.bind(this))
	},
	tween: function(e, t, i, a, s) {
		var r = function() {
			var r = this.game.add.tween(e).to(t, i, a);
			s ? this.next() : r.onComplete.add(this.next.bind(this)), r.start()
		};
		this.add(r.bind(this))
	},
	cutsceneFade: function(e) {
		var t = function() {
			var t;
			e ? (this.game.world.alpha = 0, t = 1) : (this.game.world.alpha = 1, t = 0), this.game.add.tween(this.game.world).to({
				alpha: t
			}, 1e3, Phaser.Easing.Linear.None, !0, 0, 0, !1).onComplete.add(this.next.bind(this))
		};
		this.add(t.bind(this))
	},
	cutsceneFadeInOut: function() {
		var e = function() {
			this.game.add.tween(this.game.world).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None, !0, 0, 0, !0).onComplete.add(this.next.bind(this))
		};
		this.add(e.bind(this))
	},
	cameraFlash: function(e) {
		var t = function() {
			e.flashOverlay = this.game.add.group(), e.flashOverlay.add(new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "core", "overlay-light")), e.flashOverlay.alpha = 0, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.SHIPWRECK_SHORE, "camera");
			var t = this.game.add.tween(e.flashOverlay).to({
				alpha: 1
			}, 150, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 150, Phaser.Easing.Linear.None);
			t.onComplete.add(this.set.bind(this, e.flashOverlay, "visible", !1)), t.onComplete.add(e.flashOverlay.destroy.bind(e.flashOverlay, !0)), t.onComplete.add(this.next.bind(this)), t.start()
		};
		this.add(t.bind(this))
	},
	reward: function(e, t) {
		Util.isDefined(e) && e.length > 0 && this.add(this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, e, this.next.bind(this), null, t))
	},
	popup: function(e) {
		this.add(this.game.prodigy.open.message.bind(this.game.prodigy.open, e, this.next.bind(this)))
	},
	functionCallback: function(e) {
		var t = function() {
			e(this.next.bind(this))
		};
		this.add(t.bind(this))
	}
}, Prodigy.EventController.prototype.constructor = Prodigy.EventController, Prodigy.TweenController = function(e, t) {
	this.game = e, this.src = t, this.started = !1, this.current = null, this.noSkipFrames = !1, this.tweens = [], this.tweenVars = {}, this.onEndCallbacks = []
}, Prodigy.TweenController.prototype = {
	constructor: Prodigy.TweenController,
	start: function(e, t, i) {
		this.current = null, this.index = 0, this.startTime = Util.isDefined(e) ? e : (new Date).getTime();
		for (var a = 0; a < this.tweens.length; a++) {
			var s = this.tweens[a];
			s.start = 0 === a ? this.startTime : this.tweens[a - 1].end, s.end = s.start + s.duration
		}
		this.noSkipFrames = Util.isDefined(i) ? i : !1, this.onComplete = t
	},
	end: function(e) {
		Util.isDefined(e) && this.onEndCallbacks.push(e)
	},
	set: function(e, t, i, a) {
		a = a || 1, this.tweens.push({
			type: "set",
			tag: e,
			duration: t.length * i * a,
			delay: i,
			frames: t,
			lastUpdate: 0
		})
	},
	delay: function(e) {
		this.tweens.push({
			type: "delay",
			duration: e
		})
	},
	update: function(e) {
		if (Util.isDefined(this.startTime)) {
			var t = Util.isDefined(e) ? e : (new Date).getTime();
			if (Util.isDefined(this.current)) {
				var i = Math.floor((t - this.current.start) / this.current.delay),
					a = i * this.current.delay + this.current.start,
					s = t - this.current.delay,
					r = s - this.current.lastUpdate > this.current.delay;
				if (!this.noSkipFrames && s <= this.current.lastUpdate || r) return "set" !== this.current.type || Util.isDefined(this.tweenVars.next) || (this.tweenVars.next = this.current.start + this.current.delay, this.tweenVars.frame = 0, this.src[this.current.tag] = this.current.frames[0]), r && (this.current.lastUpdate = a), void 0;
				if (this.current.lastUpdate = a, "set" === this.current.type)
					if (Util.isDefined(this.tweenVars.next) || (this.tweenVars.next = this.current.start + this.current.delay, this.tweenVars.frame = 0, this.src[this.current.tag] = this.current.frames[0]), t >= this.current.end) this.src[this.current.tag] = this.current.frames[this.current.frames.length - 1];
					else if (t >= this.tweenVars.next) {
					if (this.tweenVars.next += this.current.delay, this.tweenVars.frame++, this.tweenVars.frame >= this.current.frames.length) {
						this.tweenVars.frame = 0;
						for (var n = 0; n < this.onEndCallbacks.length; n++) this.onEndCallbacks[n]()
					}
					this.src[this.current.tag] = this.current.frames[this.tweenVars.frame]
				}
				t >= this.current.end && (this.current = null, Util.isDefined(this.onComplete) && this.onComplete())
			}
			Util.isDefined(this.current) || (this.tweenVars = {}, this.index >= this.tweens.length ? this.startTime = null : (this.current = this.tweens[this.index], this.index++))
		}
	}
}, Prodigy.TweenController.prototype.constructor = Prodigy.TweenController, Prodigy.Controller.AudioController = function(e) {
	this.game = e
}, Prodigy.Controller.AudioController.SFX_PACKS = {
	UI: "ui",
	WORLD: "world",
	DANCE_DANCE: "dance-dance",
	DINO_DIG: "dino-dig",
	SKYWATCH: "skywatch",
	BONFIRE_SPIRE_Q5: "bonfire-spire-q5",
	BONFIRE_SPIRE_Q6_AND_Q14: "bonfire-spire-q6-and-q14",
	BATTLE: "battle",
	PVP: "pvp",
	HOUSE_INTRO: "house-intro",
	LAMPLIGHT: "lamplight",
	LAMPLIGHT_PETS: "lamplight-pets",
	SHIPWRECK_SHORE: "shipwreck-shore"
}, Prodigy.Controller.AudioController.SOUND_EFFECTS = {
	ui: {
		whoosh: {
			s: 0,
			d: 1
		},
		blop: {
			s: 1,
			d: 1
		},
		heart: {
			s: 2,
			d: 1
		},
		pop: {
			s: 3,
			d: 1
		},
		dig: {
			s: 4,
			d: 1
		}
	},
	world: {
		item: {
			s: 0,
			d: 3
		},
		monster: {
			s: 3,
			d: 3
		},
		tick: {
			s: 6,
			d: 1
		}
	},
	"dance-dance": {
		bell: {
			s: 0,
			d: 1
		},
		ready: {
			s: 1,
			d: 1
		},
		go: {
			s: 2,
			d: 1.2
		},
		victory: {
			s: 3.2,
			d: 1.8
		},
		aw: {
			s: 5,
			d: 1
		},
		yay: {
			s: 6,
			d: 1
		},
		damage: {
			s: 7,
			d: 1
		}
	},
	"dino-dig": {
		bell: {
			s: 0,
			d: 1
		}
	},
	skywatch: {
		machines: {
			s: 0,
			d: 4
		},
		elevator: {
			s: 4,
			d: 3.5
		},
		wind: {
			s: 8,
			d: 3
		},
		window: {
			s: 11,
			d: 2
		}
	},
	"bonfire-spire-q5": {
		plop: {
			s: 0,
			d: .5
		},
		cooking: {
			s: 1,
			d: 3
		}
	},
	"bonfire-spire-q6-and-q14": {
		eating: {
			s: 0,
			d: 3
		}
	},
	battle: {
		run: {
			s: 0,
			d: 1
		},
		"normal-hit": {
			s: 1,
			d: .9
		},
		"critical-hit": {
			s: 2,
			d: 1.9
		},
		cast: {
			s: 4,
			d: 1
		},
		miss: {
			s: 6,
			d: 1.5
		},
		"level-up": {
			s: 8,
			d: 1
		}
	},
	pvp: {
		victory: {
			s: 0,
			d: 2
		}
	},
	"house-intro": {
		door: {
			s: 0,
			d: 1
		},
		knock: {
			s: 1,
			d: 1
		}
	},
	lamplight: {
		door: {
			s: 0,
			d: 1
		}
	},
	"lamplight-pets": {
		window: {
			s: 0,
			d: 2
		}
	},
	"shipwreck-shore": {
		"boss-monster": {
			s: 0,
			d: 2.8
		},
		"clear-ink": {
			s: 3,
			d: 2.8
		},
		squeak: {
			s: 6,
			d: .8
		},
		camera: {
			s: 7,
			d: 2
		}
	},
	titan: {
		cloud: {
			s: 0,
			d: 3
		}
	}
}, Prodigy.Controller.AudioController.prototype = {
	clearOldSounds: function() {
		for (var e = this.game.sound._sounds.length; e--;) this.game.sound._sounds[e].isPlaying || this.game.sound._sounds.splice(e, 1)
	},
	setMute: function(e) {
		e ? (this.setSFXVolume(0), this.setBGMVolume(0)) : (this.setSFXVolume(.6), this.setBGMVolume(.2))
	},
	playSound: function(e) {
		this.clearOldSounds();
		var t = this.getSFXVolume(),
			i = this.game.add.sound(e, t);
		return i.play("", 0, t), i
	},
	playSFX: function(e, t, i) {
		this.clearOldSounds();
		var a = this.getSFXVolume(),
			s = Prodigy.Controller.AudioController.SOUND_EFFECTS[e][t],
			r = this.game.sound.add("sfx-" + e, a);
		return Util.isDefined(i) && r.onMarkerComplete.add(i), r.addMarker("play", s.s, s.d), r.play("play", 0, a), r
	},
	setSFXVolume: function(e) {
		this.game.prodigy.player.setSFXVolume(e)
	},
	getSFXVolume: function() {
		return this.game.prodigy.player.getSettings().sfxVolume
	},
	playBGM: function(e, t) {
		if (!Util.isDefined(this.currentBgm) || this.currentBgm.key !== e) {
			var i = this.getBGMVolume();
			Util.isDefined(this.currentBgm) && this.currentBgm.stop(), this.clearOldSounds(), this.currentBgm = this.game.add.audio(e, i, t), this.currentBgm.play("", 0, i, t)
		}
	},
	pauseBGM: function() {
		Util.isDefined(this.currentBgm) && this.currentBgm.pause()
	},
	resumeBGM: function() {
		Util.isDefined(this.currentBgm) && this.currentBgm.resume()
	},
	setBGMVolume: function(e, t) {
		Util.isDefined(this.currentBgm) && (Util.isDefined(t) ? this.game.add.tween(this.currentBgm).to({
			volume: e
		}, 500, Phaser.Easing.Linear.None).start() : this.currentBgm.volume = e), this.game.prodigy.player.setBGMVolume(e)
	},
	getBGMVolume: function() {
		return this.game.prodigy.player.getSettings().bgmVolume
	},
	playVoice: function(e, t, i, a) {
		this.clearOldSounds(), Util.isDefined(this.currentVoice) && this.currentVoice.stop();
		var s = this.getVoiceVolume(),
			r = this.game.add.sound(e, s);
		return Util.isDefined(t) && r.onMarkerComplete.add(t), a = a || r.duration, i = i || 0, r.addMarker("play", i, a), r.play("play", 0, s), this.currentVoice = r, r
	},
	setVoiceVolume: function(e) {
		this.game.prodigy.player.setVoiceVolume(e)
	},
	getVoiceVolume: function() {
		return this.game.prodigy.player.getSettings().voiceVolume
	}
}, Prodigy.Controller.AchievementController = function(e) {
	this.game = e
}, Prodigy.Controller.AchievementController.prototype = {
	constructor: Prodigy.Controller.AchievementController,
	getData: function(e) {
		var t = this.game.prodigy.player,
			i = t.backpack,
			a = t.kennel,
			s = t.house,
			r = t.state,
			n = this.game.prodigy.education,
			o = [{
				tag: "General",
				data: [{
					ID: 1,
					type: "achievement",
					data: {
						name: "Newbie",
						desc: "Complete the tutorial",
						valueFunction: r.getCompletedQuests.bind(r, "lamplight"),
						ranks: [1]
					},
					metatype: "achievement",
					metadata: {
						icon: "weapon/1"
					}
				}, {
					ID: 2,
					type: "achievement",
					data: {
						name: "Coin Collector",
						desc: "Earn [X] gold",
						valueFunction: this.processValue.bind(this, "gE"),
						ranks: [1e3, 1e5, 1e6]
					},
					metatype: "achievement",
					metadata: {
						icon: "item/26"
					}
				}, {
					ID: 3,
					type: "achievement",
					data: {
						name: "Shopaholic",
						desc: "Spend [X] gold",
						valueFunction: this.processValue.bind(this, "gS"),
						ranks: [1e3, 1e5, 1e6]
					},
					metatype: "achievement",
					metadata: {
						icon: "catalogue"
					}
				}, {
					ID: 4,
					type: "achievement",
					data: {
						name: "Runway Model",
						desc: "Collect [X] different equipment items",
						valueFunction: i.getItemCount.bind(i, ["outfit", "boots", "hat", "weapon", "relic"]),
						ranks: [10, 50, 100]
					},
					metatype: "achievement",
					metadata: {
						icon: "outfit/1"
					}
				}, {
					ID: 5,
					type: "achievement",
					data: {
						name: "Packrat",
						desc: "Collect [X] different collectable items",
						valueFunction: i.getItemCount.bind(i, ["item"]),
						ranks: [10, 25, 50]
					},
					metatype: "achievement",
					metadata: {
						icon: "item/2"
					}
				}, {
					ID: 6,
					type: "achievement",
					data: {
						name: "Antiquarian",
						desc: "Collect [X] different house items",
						valueFunction: s.getItemCount.bind(s),
						ranks: [10, 25, 50]
					},
					metatype: "achievement",
					metadata: {
						icon: 1,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 7,
					type: "achievement",
					data: {
						name: "Interior Decorator",
						desc: "Place [X] items in your house",
						valueFunction: s.getActiveCount.bind(s),
						ranks: [10, 25, 50]
					},
					metatype: "achievement",
					metadata: {
						icon: 5,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 8,
					type: "achievement",
					data: {
						name: "Catch'm",
						desc: "Collect [X] pets",
						valueFunction: a.getNumPets.bind(a),
						ranks: [5, 20, 50, 100]
					},
					metadata: {
						icon: "pet"
					}
				}]
			}, {
				tag: "Battle",
				data: [{
					ID: 9,
					type: "achievement",
					data: {
						name: "Prodigy",
						desc: "Reach level [X]",
						valueFunction: t.getLevel.bind(t),
						ranks: [5, 20, 50, 75, 100]
					},
					metadata: {
						icon: "star2"
					}
				}, {
					ID: 10,
					type: "achievement",
					data: {
						name: "Spellmaster",
						desc: "Learn [X] spells",
						valueFunction: t.getNumAttacks.bind(t),
						ranks: [3, 6, 10, 15]
					},
					metadata: {
						icon: "book"
					}
				}, {
					ID: 11,
					type: "achievement",
					data: {
						name: "Monster Hunter",
						desc: "Defeat [X] monsters",
						valueFunction: this.processValue.bind(this, "kills"),
						ranks: [10, 50, 250, 500, 1e3]
					},
					metadata: {
						icon: "boss"
					}
				}]
			}, {
				tag: "PvP",
				data: [{
					ID: 12,
					type: "achievement",
					data: {
						name: "Supreme Challenger",
						desc: "Win [X] Arena matches",
						valueFunction: t.getWins.bind(t),
						ranks: [5, 25, 50, 100, 250]
					},
					metadata: {
						icon: "weapon/4"
					}
				}, {
					ID: 13,
					type: "achievement",
					data: {
						name: "The Champ",
						desc: "Reach rank [X] in the Arena",
						valueFunction: t.getArenaRank.bind(t),
						ranks: [1, 2, 3, 4]
					},
					metadata: {
						icon: "weapon/6"
					}
				}]
			}, {
				tag: "Lamplight Town",
				data: [{
					ID: 14,
					type: "achievement",
					data: {
						name: "Tourist",
						desc: "Complete the tour of Lamplight Town",
						valueFunction: this.getZero.bind(this),
						ranks: [5]
					},
					metadata: {
						icon: "boots/7"
					}
				}]
			}, {
				tag: "Firefly Forest",
				data: [{
					ID: 15,
					type: "achievement",
					data: {
						name: "Forestwalker",
						desc: "Complete all quests in Firefly Forest",
						valueFunction: r.getCompletedQuests.bind(r, "forest"),
						ranks: [12]
					},
					metadata: {
						icon: "key/3"
					}
				}, {
					ID: 16,
					type: "achievement",
					data: {
						name: "Forest Model",
						desc: "Purchase the full Firefly Outfit set",
						valueFunction: i.hasItems.bind(i, [{
							ID: 33,
							type: "hat"
						}, {
							ID: 24,
							type: "weapon"
						}, {
							ID: 29,
							type: "outfit"
						}]),
						ranks: [3]
					},
					metadata: {
						icon: "outfit/29"
					}
				}, {
					ID: 17,
					type: "achievement",
					data: {
						name: "Forest Explorer",
						desc: "Open all chests in Firefly Forest",
						valueFunction: r.getZoneVars.bind(r, this.game, "forest", "chest"),
						ranks: [4]
					},
					metadata: {
						icon: 21,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 18,
					type: "achievement",
					data: {
						name: "Forest Champion",
						desc: "Defeat all wizards in Firefly Forest",
						valueFunction: r.getZoneVars.bind(r, this.game, "forest", "wizard"),
						ranks: [4]
					},
					metadata: {
						icon: "weapon/22"
					}
				}]
			}, {
				tag: "Shiverchill Mountains",
				data: [{
					ID: 19,
					type: "achievement",
					data: {
						name: "Iceclimber",
						desc: "Complete all quests in Shiverchill Mountains",
						valueFunction: r.getCompletedQuests.bind(r, "shiverchill"),
						ranks: [15]
					},
					metadata: {
						icon: "key/4"
					}
				}, {
					ID: 20,
					type: "achievement",
					data: {
						name: "Mountaineer",
						desc: "Purchase the full Shiverchill Outfit set",
						valueFunction: i.hasItems.bind(i, [{
							ID: 37,
							type: "hat"
						}, {
							ID: 63,
							type: "weapon"
						}, {
							ID: 33,
							type: "outfit"
						}]),
						ranks: [3]
					},
					metadata: {
						icon: "outfit/33"
					}
				}, {
					ID: 21,
					type: "achievement",
					data: {
						name: "Mountain Explorer",
						desc: "Open all chests in Shiverchill Mountains",
						valueFunction: r.getZoneVars.bind(r, this.game, "shiverchill", "chest"),
						ranks: [6]
					},
					metadata: {
						icon: 21,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 22,
					type: "achievement",
					data: {
						name: "Mountain Champion",
						desc: "Defeat all wizards in Shiverchill Mountains",
						valueFunction: r.getZoneVars.bind(r, this.game, "shiverchill", "wizard"),
						ranks: [4]
					},
					metadata: {
						icon: "weapon/22"
					}
				}, {
					ID: 23,
					type: "achievement",
					data: {
						name: "Turn Up the Heat",
						desc: "Light all of Bok's furnaces",
						valueFunction: r.get.bind(r, "zone-shiverchill-9"),
						ranks: [4]
					},
					metadata: {
						icon: "item/71"
					}
				}]
			}, {
				tag: "Skywatch",
				data: [{
					ID: 24,
					type: "achievement",
					data: {
						name: "Cloud Catcher",
						desc: "Complete all quests in Skywatch",
						valueFunction: r.getCompletedQuests.bind(r, "skywatch"),
						ranks: [13]
					},
					metadata: {
						icon: "key/10"
					}
				}, {
					ID: 25,
					type: "achievement",
					data: {
						name: "Air Ace",
						desc: "Purchase the full Skywatch Outfit set",
						valueFunction: i.hasItems.bind(i, [{
							ID: 41,
							type: "hat"
						}, {
							ID: 67,
							type: "weapon"
						}, {
							ID: 37,
							type: "outfit"
						}]),
						ranks: [3]
					},
					metadata: {
						icon: "outfit/37"
					}
				}, {
					ID: 26,
					type: "achievement",
					data: {
						name: "Skylarking",
						desc: "Open all chests in Skywatch",
						valueFunction: r.getZoneVars.bind(r, this.game, "skywatch", "chest"),
						ranks: [5]
					},
					metadata: {
						icon: 21,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 27,
					type: "achievement",
					data: {
						name: "Champion of the Clouds",
						desc: "Defeat all wizards in Skywatch",
						valueFunction: r.getZoneVars.bind(r, this.game, "skywatch", "wizard"),
						ranks: [2]
					},
					metadata: {
						icon: "weapon/22"
					}
				}]
			}, {
				tag: "Bonfire Spire",
				data: [{
					ID: 33,
					type: "achievement",
					data: {
						name: "Master Chef",
						desc: "Complete all quests in Bonfire Spire",
						valueFunction: r.getCompletedQuests.bind(r, "bonfire_spire"),
						ranks: [14]
					},
					metadata: {
						icon: "key/11"
					}
				}, {
					ID: 34,
					type: "achievement",
					data: {
						name: "Fire Fashion",
						desc: "Purchase the full Bonfire Spire Outfit set",
						valueFunction: i.hasItems.bind(i, [{
							ID: 38,
							type: "hat"
						}, {
							ID: 64,
							type: "weapon"
						}, {
							ID: 34,
							type: "outfit"
						}]),
						ranks: [3]
					},
					metadata: {
						icon: "outfit/34"
					}
				}, {
					ID: 35,
					type: "achievement",
					data: {
						name: "Volcanic Spelunker",
						desc: "Open all chests in Bonfire Spire",
						valueFunction: r.getZoneVars.bind(r, this.game, "bonfire_spire", "chest"),
						ranks: [7]
					},
					metadata: {
						icon: 21,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 36,
					type: "achievement",
					data: {
						name: "Magma Master",
						desc: "Defeat all wizards in Bonfire Spire",
						valueFunction: r.getZoneVars.bind(r, this.game, "bonfire_spire", "wizard"),
						ranks: [2]
					},
					metadata: {
						icon: "weapon/22"
					}
				}]
			}, {
				tag: "Shipwreck Shore",
				data: [{
					ID: 37,
					type: "achievement",
					data: {
						name: "Check, Matey!",
						desc: "Complete all quests in Shipwreck Shore",
						valueFunction: r.getCompletedQuests.bind(r, "shipwreck_shore"),
						ranks: [11]
					},
					metadata: {
						icon: "key/14"
					}
				}, {
					ID: 38,
					type: "achievement",
					data: {
						name: "Inconceivable!",
						desc: "Collect all pieces of the Dire Pirate armor",
						valueFunction: i.hasItems.bind(i, [{
							ID: 76,
							type: "hat"
						}, {
							ID: 57,
							type: "outfit"
						}, {
							ID: 29,
							type: "boots"
						}]),
						ranks: [3]
					},
					metadata: {
						icon: "outfit/29"
					}
				}, {
					ID: 39,
					type: "achievement",
					data: {
						name: "Treasure Hunter",
						desc: "Open all chests in Shipwreck Shore",
						valueFunction: function(e) {
							return e.prodigy.world.getZone("shipwreck_shore").util.getCompletedStatesCount(["chestA3", "chestA5", "chestB5", "chestB13", "chestB10"])
						}.bind(this, this.game),
						ranks: [5]
					},
					metadata: {
						icon: 21,
						iconAtlas: "icons-house"
					}
				}, {
					ID: 40,
					type: "achievement",
					data: {
						name: "Water Wizard",
						desc: "Defeat all wizards in Shipwreck Shore",
						valueFunction: function(e) {
							return e.prodigy.world.getZone("shipwreck_shore").util.getCompletedStatesCount(["wizardC8", "wizardA5"])
						}.bind(this, this.game),
						ranks: [2]
					},
					metadata: {
						icon: "weapon/22"
					}
				}, {
					ID: 41,
					type: "achievement",
					data: {
						name: "Ink-be-Gone",
						desc: "Clear all ink in Shipwreck Shore",
						valueFunction: function(e) {
							return e.prodigy.world.getZone("shipwreck_shore").util.getCompletedStatesCount(["inkA5", "inkB5", "inkB6", "inkA7", "inkB7", "inkC9"])
						}.bind(this, this.game),
						ranks: [6]
					},
					metadata: {
						icon: "item/112"
					}
				}]
			}, {
				tag: "Education",
				data: [{
					ID: 28,
					type: "achievement",
					data: {
						name: "Questionnaire",
						desc: "Answer [X] questions correctly",
						valueFunction: this.processValue.bind(this, "qC"),
						ranks: [20, 100, 500, 1e3]
					},
					metadata: {
						icon: "hat/5"
					}
				}, {
					ID: 29,
					type: "achievement",
					data: {
						name: "Sequencing",
						desc: "Answer [X] questions correctly in a row",
						valueFunction: t.getSpellStreak.bind(t),
						ranks: [3, 5, 10]
					},
					metadata: {
						icon: "hat/4"
					}
				}, {
					ID: 30,
					type: "achievement",
					data: {
						name: "Don't Stop Me Now",
						desc: "Master [X] skills",
						valueFunction: n.getMasteredSkills.bind(n),
						ranks: [5, 20, 50, 100]
					},
					metadata: {
						icon: "hat/6"
					}
				}]
			}, {
				tag: "Exploration",
				data: [{
					ID: 31,
					type: "achievement",
					data: {
						name: "Stairmaster",
						desc: "Reach floor [X] of the Dark Tower",
						valueFunction: t.getTowerProgress.bind(t),
						ranks: [25, 50, 75, 100]
					},
					metadata: {
						icon: "weapon/68"
					}
				}, {
					ID: 32,
					type: "achievement",
					data: {
						name: "The Fall of Crios",
						desc: "Defeat [X] Coliseum opponents",
						valueFunction: t.getColiseum.bind(t),
						ranks: [5, 10, 15, 20]
					},
					metadata: {
						icon: "weapon/62"
					}
				}]
			}];
		if (!Util.isDefined(e)) return o;
		for (var h = 0; h < o.length; h++)
			for (var l = o[h], d = 0; d < l.data.length; d++)
				if (l.data[d].ID === e) return l.data[d]
	},
	process: function() {
		if (GameConstants.get("GameConstants.Debug.DISABLE_ACHIEVEMENTS")) return [];
		for (var e = [], t = this.getData(), i = 0; i < t.length; i++)
			for (var a = t[i].data, s = 0; s < a.length; s++) {
				var r = a[s],
					n = this.game.prodigy.player.achievements.getProgress(r.ID);
				if (!(n >= r.data.ranks.length)) {
					var o = r.data.valueFunction(),
						h = r.data.ranks[n];
					o >= h && e.push(r)
				}
			}
		return e
	},
	getZero: function() {
		return 0
	},
	getCompletionText: function(e) {
		return this.game.prodigy.player.achievements.getProgress(e.ID) >= e.data.ranks.length ? "Finished!" : this.getProgress(e) >= 1 ? "Complete!" : this.getCurrent(e) + " / " + this.getTarget(e)
	},
	getCurrent: function(e) {
		var t = e.data.valueFunction();
		return (!Util.isDefined(t) || 0 > t) && (t = 0), t
	},
	getTarget: function(e) {
		var t = this.game.prodigy.player.achievements.getProgress(e.ID);
		return t >= e.data.ranks.length ? 0 : e.data.ranks[t]
	},
	getProgress: function(e) {
		if (this.game.prodigy.player.achievements.getProgress(e.ID) >= e.data.ranks.length) return 1;
		var t = this.getCurrent(e),
			i = this.getTarget(e);
		return Math.min(1, t / i)
	},
	getName: function(e) {
		return e.data.name
	},
	getDesc: function(e) {
		var t = this.game.prodigy.player.achievements.getProgress(e.ID);
		t >= e.data.ranks.length && t--;
		var i = e.data.ranks[t];
		return Util.isDefined(i) ? e.data.desc.replace("[X]", i) : "Nothing"
	},
	processData: function(e) {
		return this.game.prodigy.player.data[e] || 0
	},
	processValue: function(e) {
		return this.game.prodigy.player.achievements.get(e)
	},
	processItem: function(e, t) {
		return this.game.prodigy.player.backpack.hasItem(t, e)
	}
}, Prodigy.Controller.GraphicsController = function(e) {
	this.game = e
}, Prodigy.Controller.GraphicsController.prototype = {
	constructor: Prodigy.Controller.GraphicsController,
	setResolutionSmall: function() {
		this.game.scale.maxWidth = 640, this.game.scale.maxHeight = 360, this.game.scale.updateLayout()
	},
	setResolutionMedium: function() {
		this.game.scale.maxWidth = 1280, this.game.scale.maxHeight = 720, this.game.scale.updateLayout()
	},
	setResolutionLarge: function() {
		this.game.scale.maxWidth = 0, this.game.scale.maxHeight = 0, this.game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT, this.game.scale.refresh()
	}
}, Prodigy.MailController = function(e) {
	this.game = e, this._mail = [], this._callbacks = []
}, Prodigy.MailController.prototype = {
	constructor: Prodigy.MailController,
	test: function() {
		var e = new Player(this.game),
			t = {
				equipment: e.equipment.data,
				appearance: e.appearance.data,
				data: e.data,
				pets: e.kennel.data,
				isMember: e.isMember
			};
		this.add({
			action: "challenge",
			target: 1234,
			data: {
				userID: 123,
				player: t
			}
		})
	},
	cleanup: function() {
		this._callbacks = []
	},
	getMailCount: function() {
		return this._mail.length
	},
	getMail: function(e, t) {
		return this._mail.slice(e, e + t)
	},
	add: function(e) {
		Util.log("MailController, mail received"), Util.log(e), this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), this._mail = [e].concat(this._mail), Util.isDefined(e.time) && window.setTimeout(this.remove.bind(this, e), e.time), this.invokeCallbacks(e)
	},
	remove: function(e) {
		for (var t = 0; t < this._mail.length; t++)
			if (this._mail[t] === e) {
				this._mail.splice(t, 1);
				break
			} this.invokeCallbacks()
	},
	addUpdateCallback: function(e) {
		this._callbacks.push(e)
	},
	invokeCallbacks: function(e) {
		for (var t = 0; t < this._callbacks.length; t++) Util.isDefined(this._callbacks[t]) && this._callbacks[t](this.getMailCount(), e)
	},
	removeUpdateCallback: function(e) {
		this._callbacks.splice(this._callbacks.indexOf(e), 1)
	}
}, Prodigy.MailController.prototype.constructor = Prodigy.MailController, Prodigy.MicrotransactionController = function(e) {
	this.game = e, this.gotNetworkCubes = !1, this.playerConjureCubes = [], this.cubesToOpen = [], this.totals = {
		waitingToUnlock: 0,
		readyToOpen: 0
	}, this.currentCube = null, this.debugOpen = !1, this.kill = !0, this.displayDetails = !1
}, Prodigy.MicrotransactionController.prototype = {
	constructor: Prodigy.MailController,
	setupMicrotransactions: function(e) {
		if (Util.isDefined(e)) {
			this.playerConjureCubes = e, this.totals = {
				waitingToUnlock: 0,
				readyToOpen: 0
			};
			for (var t in this.playerConjureCubes)
				if (this.playerConjureCubes.hasOwnProperty(t))
					if (Util.isDefined(this.playerConjureCubes[t].q) && Util.isDefined(this.playerConjureCubes[t].isOpen)) this.playerConjureCubes[t].isOpen || (0 === this.playerConjureCubes[t].q ? (this.totals.readyToOpen += 1, this.cubesToOpen.push(t)) : this.game.prodigy.player.inTestGroupLegacy(2, !1, !1, !1, !0, 1e4) ? (this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED, null, [t, 10]), this.totals.readyToOpen += 1, this.cubesToOpen.push(t)) : this.totals.waitingToUnlock += 1);
					else {
						var i = Items.getItemData("giftBox", this.playerConjureCubes[t].ID);
						Util.isDefined(i) && (this.playerConjureCubes[t].q = i.questions, this.playerConjureCubes[t].isOpen = !1, this.totals.waitingToUnlock += 1)
					}
		}
		this.game.prodigy.player.inTestGroupLegacy(2, !1, !1, !1, !0, 1e4) || null !== this.currentCube && this.playerConjureCubes.hasOwnProperty(this.currentCube.boxIndex) || (this.currentCube = this.selectCubeInProgress(), Util.isDefined(this.currentCube) && this.currentCube.progress < 0 && this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED, null, [null, -1 * this.currentCube.progress])), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.totals]), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionMenu", [this.totals])
	},
	selectCubeInProgress: function() {
		for (var e in this.playerConjureCubes)
			if (this.playerConjureCubes.hasOwnProperty(e) && this.playerConjureCubes[e].q > 0 && !this.playerConjureCubes[e].isOpen) {
				var t = 10;
				return this.game.prodigy.player.inTestGroupLegacy(1, !1, !1, !1, !0, 1e4) ? t = 5 : this.game.prodigy.player.inTestGroupLegacy(2, !1, !1, !1, !0, 1e4) && (t = 0), {
					boxIndex: e,
					progress: t - this.playerConjureCubes[e].q,
					totalToOpen: t
				}
			} return null
	},
	receiveConjureCube: function(e, t) {
		if (Util.isDefined(t)) {
			0 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb && this.game.prodigy.player.updateFirstBoxBreadcrumb();
			var i = Items.getItemObject("giftBox", 1);
			if (Util.isDefined(i)) {
				Util.isDefined(e) && this.game.prodigy.open.gotItem([i], e, null, "receive-conjure-cube");
				var a = (Object.keys(this.playerConjureCubes).length + 1).toString();
				this.playerConjureCubes[a] = {
					q: 0,
					ID: 1,
					isOpen: !1
				}, this.playerConjureCubes[a].q = i.data.questions, this.playerConjureCubes[a].isOpen = !1, this.totals.waitingToUnlock += 1
			}
			null === this.currentCube && (this.currentCube = this.selectCubeInProgress(), Util.isDefined(this.currentCube) && this.currentCube.progress < 0 && this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED, null, [null, -1 * this.currentCube.progress]), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.totals]))
		}
	},
	answeredQuestion: function(e) {
		this.currentCube && (this.currentCube.progress += Util.isDefined(e) ? e : 1, this.currentCube.progress === this.currentCube.totalToOpen && (this.game.prodigy.network.sendAnalytics("Conjure-Cube-Unlocked", "Conjure-Cubes-Unlocked"), 2 === this.game.prodigy.player.getMicrotransactionDetails().firstBoxBreadcrumb && (this.game.prodigy.player.updateFirstBoxBreadcrumb(), this.game.prodigy.player.updateFirstOpenBreadcrumb()), this.playerConjureCubes[this.currentCube.boxIndex].q = 0, this.cubesToOpen.push(this.currentCube.boxIndex), this.totals.readyToOpen += 1, this.totals.waitingToUnlock -= 1, this.currentCube = this.selectCubeInProgress(), Util.isDefined(this.currentCube) && this.currentCube.progress < 0 && this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED, null, [null, -1 * this.currentCube.progress]), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.totals])))
	},
	openConjureCube: function(e) {
		if (this.cubesToOpen.length > 0) {
			var t = this.cubesToOpen.pop();
			Util.isDefined(this.playerConjureCubes[t]) && 0 === this.playerConjureCubes[t].q && this.game.prodigy.open.gotItem(e, this.completeOpenConjureCube.bind(this, t), null, "open-conjure-cube")
		}
	},
	completeOpenConjureCube: function(e) {
		this.playerConjureCubes.hasOwnProperty(e) && (this.game.prodigy.network.sendAnalytics("Conjure-Cube-Opened", "Cube-Opened-at-Level-" + this.game.prodigy.player.data.level), Util.isDefined(this.playerConjureCubes[e].isOpen) && (this.playerConjureCubes[e].isOpen = !0), this.totals.readyToOpen -= 1, this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionButton", [this.totals]), this.game.broadcaster.broadcast(Prodigy.Events.Microtransaction.UPDATE_CUBE_COUNT, "ProdigyMicrotransactionMenu", [this.totals]), this.debugOpen && 0 !== this.cubesToOpen.length ? this.game.prodigy.open.microtransactionLoot(null) : this.debugOpen = !1)
	},
	getReceivedConjureCubeCount: function(e) {
		var t = 0;
		for (var i in this.playerConjureCubes)
			if (this.playerConjureCubes.hasOwnProperty(i)) {
				var a = this.playerConjureCubes[i];
				a.ID === e && t++
			} return t
	}
}, Prodigy.MicrotransactionController.prototype.constructor = Prodigy.MicrotransactionController, Prodigy.DialogueController = function(e) {
	this.game = e, this.events = [], this.currentID = 0
}, Prodigy.DialogueController.prototype = {
	create: function(e, t, i, a) {
		Util.isDefined(this.game) && a && (this.spinner.destroy(), e.alpha = 1, this.face = this.game.prodigy.create.sprite(180, 188, t, "face_0"), this.face.anchor.setTo(.5, 1), e.add(this.face), this.text = this.game.prodigy.create.font(e, 300, 20, "", {
			size: 30,
			width: 680,
			lineHeight: 40
		}), this.yesBtn = this.game.prodigy.create.button(e, 1e3, 20, "core", "yes-btn", this.yes.bind(this)), this.nextBtn = this.game.prodigy.create.button(e, 1e3, 115, "core", "next-btn", this.next.bind(this, this.currentID)), this.noBtn = this.game.prodigy.create.button(e, 1e3, 115, "core", "no-btn", this.no.bind(this)), this.nextBtn.highlight(!0, -20, -10), this.next(this.currentID))
	},
	start: function(e, t, i, a) {
		a = 0 === a ? 20 : 1 === a ? 255 : 510, this.game.prodigy.open.closeChat(), this.currentID++, this.onClose = i, this.cleanup();
		for (var s = 0; s < this.events.length; s++) {
			var r = this.events[s];
			if (Util.isDefined(r.index)) {
				var n = this.game.prodigy.dialogues.get(e, r.index);
				r.text = n.text, r.face = n.face, r.audio = n.audio, r.anim = n.anim
			}
		}
		this.window = this.game.prodigy.create.element(this.menuLayer, 0, 0), this.overlayMode = t, this.overlay = this.window.add(this.game.prodigy.create.sprite(0, 0)), this.overlay.width = this.game.world.width, this.overlay.height = this.game.world.height, this.overlay.inputEnabled = !0, this.overlay.visible = !t, this.element = this.game.prodigy.create.element(this.window, 0, 0);
		var o = this.game.prodigy.create.element(this.window, 103, a);
		o.x = 0;
		for (var s = 0; 26 > s; s++) o.add(this.game.prodigy.create.sprite(50 * s, 0, "core", "dialogue"));
		o.alpha = .8, this.spinner = this.window.add(this.game.prodigy.create.sprite(645, 610, "core", "loading")), this.spinner.alpha = 0, this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 1500, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.game.add.tween(this.spinner).to({
			alpha: 1
		}, 500, Phaser.Easing.Linear.None, !0, 300);
		for (var h = [], s = 0; s < this.events.length; s++) Util.isDefined(this.events[s].audio) && (Util.inArray(h, this.events[s].audio.tag) || h.push(this.events[s].audio.tag));
		e = "npc-face-" + e, this.game.prodigy.load.assets(h.concat(e), this.create.bind(this, o, e))
	},
	close: function(e) {
		this.cleanup(), Util.isDefined(this.currentSound) && this.currentSound.stop(), this.events = [], this.current = null, Util.isDefined(this.element) && this.element.removeAll(!0), Util.isDefined(this.onClose) && !e && this.onClose()
	},
	cleanup: function() {
		Util.isDefined(this.window) && (this.window.destroy(), this.window = null)
	},
	setText: function(e, t, i) {
		if (Util.isDefined(e)) {
			var a = {};
			isNaN(e) ? (Util.isDefined(e.index) && (a.index = e.index), Util.isDefined(e.text) && (a.text = e.text), Util.isDefined(e.face) && (a.face = e.face), Util.isDefined(e.audio) && (a.audio = e.audio), Util.isDefined(e.yes) && (a.yes = e.yes), Util.isDefined(e.no) && (a.no = e.no), Util.isDefined(e.callback) && (a.callback = e.callback), Util.isDefined(e.anim) && (a.anim = e.anim), Util.isDefined(e.element) && (a.element = e.element), Util.isDefined(e.hideNext) && (a.hideNext = e.hideNext)) : (a.index = e, Util.isDefined(t) && (a.yes = t), Util.isDefined(i) && (a.no = i)), this.events.push(a)
		}
	},
	next: function(e) {
		if (e === this.currentID)
			if (Util.isDefined(this.currentSound) && this.currentSound.stop(), this.events.length > 0) {
				var t = !1;
				this.current = this.events[0], this.events.splice(0, 1), this.yesBtn.visible = this.noBtn.visible = !1, this.nextBtn.visible = !this.current.hideNext && !this.overlayMode, Util.isDefined(this.current.text) && this.text.setText(this.current.text), Util.isDefined(this.current.face) ? (this.face.visible = !0, this.face.frameName = "face_" + this.current.face) : this.face.visible = !1, Util.isDefined(this.current.audio) && (this.currentSound = this.game.prodigy.audio.playVoice(this.current.audio.tag, null, this.current.audio.s, this.current.audio.d)), this.setAnimation(this.current.anim), (Util.isDefined(this.current.yes) || Util.isDefined(this.current.no)) && (this.noBtn.visible = this.yesBtn.visible = !this.overlayMode, this.nextBtn.visible = !1), Util.isDefined(this.current.callback) && (this.current.callback(), t = !0), Util.isDefined(this.current.element) && (this.element.removeAll(!0), this.current.element(this.element), t = !0), t && this.next(e)
			} else this.close()
	},
	setAnimation: function(e) {
		Util.isDefined(this.faceAnim) && this.game.tweens.remove(this.faceAnim), this.face.x = 185, this.face.y = 188, this.face.scale.x = this.face.scale.y = 1, Util.isDefined(e) && (1 === e ? this.faceAnim = this.game.add.tween(this.face).to({
			x: this.face.x + 10
		}, 100, Phaser.Easing.Quadratic.Out, !1).to({
			x: this.face.x - 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x + 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x - 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x
		}, 100, Phaser.Easing.Quadratic.InOut).start() : 2 === e ? this.faceAnim = this.game.add.tween(this.face).to({
			y: this.face.y - 20
		}, 1e3, Phaser.Easing.Sinusoidal.InOut, !0, 0, 9999, !0) : 3 === e ? this.faceAnim = this.game.add.tween(this.face.scale).to({
			x: -1
		}, 50, Phaser.Easing.Quadratic.InOut, !1).to({
			x: 1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).to({
			x: -1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).to({
			x: 1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).start() : 4 === e && (this.faceAnim = this.game.add.tween(this.face.scale).to({
			x: 1.2,
			y: 1.1
		}, 300, Phaser.Easing.Linear.None, !1).to({
			y: 1.3,
			x: 1.1
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: 1,
			y: 1
		}, 300, Phaser.Easing.Quadratic.InOut).start()))
	},
	yes: function() {
		var e = this.current.yes;
		this.close(), Util.isDefined(e) && e()
	},
	no: function() {
		var e = this.current.no;
		this.close(), Util.isDefined(e) && e()
	}
}, Prodigy.DialogueController.prototype.constructor = Prodigy.DialogueController, Prodigy.Controller.SurveyController = function(e) {
	this.surveyID = 10, this.game = e
}, Prodigy.Controller.SurveyController.prototype = {
	constructor: Prodigy.Controller.SurveyController,
	requestSurveyData: function() {
		this.game.prodigy.player.getSurvey() < this.surveyID ? this.game.broadcaster.broadcast(Prodigy.Events.Survey.ON_GET_DATA_COMPLETE, this.game, [this.surveyData[0]]) : this.game.broadcaster.broadcast(Prodigy.Events.Survey.ON_GET_DATA_COMPLETE, this.game, [{}])
	},
	updateData: function() {
		this.game.prodigy.player.getSurvey() < this.surveyID ? this.game.broadcaster.broadcast(Prodigy.Events.Survey.ON_GET_DATA_COMPLETE, this.game, [this.surveyData[0]]) : this.game.broadcaster.broadcast(Prodigy.Events.Survey.ON_GET_DATA_COMPLETE, this.game, [{}])
	},
	surveyData: [{
		id: 10,
		type: 2,
		question: "Did you know that you can play Prodigy at home?",
		answers: [{
			id: "yes",
			text: "Yes."
		}, {
			id: "no",
			text: "No."
		}]
	}]
}, Prodigy.Controller.ColorReplaceController = function(e) {
	this.game = e, this.isBaseReady = {}, this.baseDictionary = {}, this.isColorReady = {}
}, Prodigy.Controller.ColorReplaceController.prototype = {
	constructor: Prodigy.Controller.ColorReplaceController,
	checkColorAsset: function(e, t, i) {
		var a = this.generateAssetName(e, t);
		Util.isDefined(this.isColorReady[a]) ? this.safeCallback(i) : Util.isDefined(this.isBaseReady[e]) ? this.isBaseReady[e].ready ? (this.isColorReady[a] = {
			ready: !1,
			callbacks: [i]
		}, this.generateNewColor(e, t, i)) : this.isBaseReady[e].callbacks.push({
			colorReplaceData: t,
			callback: i
		}) : (this.isBaseReady[e] = {
			ready: !1,
			callbacks: [{
				colorReplaceData: t,
				callback: i
			}]
		}, this.game.prodigy.create.sprite(0, 0, e, 0, !1, this.onBaseColorReady.bind(this, e)))
	},
	generateAssetName: function(e, t) {
		for (var i = e, a = 0; a < t.length; a++) i += "-" + t[a].color;
		return i
	},
	onBaseColorReady: function(e, t) {
		if ("__missing" !== t.key)
			for (this.isBaseReady[t.key].ready = !0, this.baseDictionary[t.key] = t; this.isBaseReady[t.key].callbacks.length > 0;) {
				var i = this.isBaseReady[t.key].callbacks.pop(),
					a = this.generateAssetName(t.key, i.colorReplaceData);
				Util.isDefined(this.isColorReady[a]) ? this.safeCallback(i.callback) : this.generateNewColor(t.key, i.colorReplaceData, i.callback)
			} else
				for (this.isBaseReady[e].ready = !0, this.baseDictionary[e] = t; this.isBaseReady[e].callbacks.length > 0;) {
					var i = this.isBaseReady[e].callbacks.pop();
					this.safeCallback(i.callback)
				}
	},
	pixelColorReplace: function(e) {
		for (var t = 0; t < this.baseColor.length; t++) e.r === this.baseColor[t][0] && e.g === this.baseColor[t][1] && e.b === this.baseColor[t][2] && (e.r = this.newColor[t][0], e.g = this.newColor[t][1], e.b = this.newColor[t][2]);
		return e
	},
	generateNewColor: function(e, t, i) {
		var a = this.generateAssetName(e, t),
			s = new Phaser.BitmapData(this.game, null, this.baseDictionary[e].width, this.baseDictionary[e].height);
		s.draw(this.baseDictionary[e]), s.update();
		for (var r = [], n = [], o = 0; o < t.length; o++) r = r.concat(Util.isDefined(t[o].base) ? t[o].base : Items.getItemData(t[o].itemColor, 1).colors), n = n.concat(Items.getItemData(t[o].itemColor, t[o].color).colors);
		for (o = r.length - 1; o >= 0; o--) r[o][0] === n[o][0] && r[o][1] === n[o][1] && r[o][2] === n[o][2] && (r.splice(o, 1), n.splice(o, 1));
		r.length > 0 && s.processPixelRGB(this.pixelColorReplace, {
			baseColor: r,
			newColor: n
		});
		var h = s.generateTexture(a),
			l = this.game.cache.getFrameData(e, 2) || {
				frames: []
			};
		l.getFrames && (l = Util.frameDataToFrameJson(l.getFrames())), this.game.cache.addTextureAtlas(a, "", h.baseTexture.source, l, Phaser.Loader.TEXTURE_ATLAS_JSON_HASH), s.clear(), PIXI.CanvasPool.removeByCanvas(s.canvas), s.destroy(), this.isColorReady[a] = {
			ready: !0
		}, this.safeCallback(i)
	},
	safeCallback: function(e) {
		Util.isDefined(e) && e()
	}
}, Prodigy.Controller.AutomationController = function(e) {
	this.game = e, this.receivedEvents = {}, this.automationTriggers = []
}, Prodigy.Controller.AutomationController.prototype = {
	constructor: Prodigy.Controller.AutomationController,
	startListen: function(e, t) {
		var i = function() {
			this.receivedEvents[e] = arguments, !Util.isNullOrUndefined(t) && t && this.stopListen(e)
		};
		this.game.broadcaster.addAppListener(e, i.bind(this), this)
	},
	retrieveOccurrence: function(e) {
		var t = this.receivedEvents[e];
		return Util.isNullOrUndefined(t) ? null : t
	},
	removeOccurrence: function(e) {
		return this.receivedEvents.hasOwnProperty(e) ? (delete this.receivedEvents[e], !0) : !1
	},
	stopListen: function(e) {
		this.game.broadcaster.removeAppListener(e, this)
	},
	addTrigger: function(e) {
		Util.isNullOrUndefined(e.context) && (e.context = this.game), e.ID = e.ID.toLowerCase().replace(/[^\w\s-]/gi, "").replace(" ", "-");
		for (var t = e.ID, i = 1, a = !0; a;) {
			for (var s = !0, r = 0; r < this.automationTriggers.length; r++) {
				var n = this.automationTriggers[r];
				if (n.ID === t) {
					s = !1;
					break
				}
			}
			s ? (e.ID = t, a = !1) : (t = e.ID + "_" + i, i++)
		}
		this.automationTriggers.unshift(e)
	},
	trigger: function(e, t) {
		var i, a, s = this.automationTriggers.slice();
		if (Util.isNullOrUndefined(e))
			for (a = 0; a < s.length; a++) Util.log("[" + s[a].ID + "]");
		else
			for (a = 0; a < s.length; a++)
				if (i = s[a], i.ID === e && !Util.isNullOrUndefined(i.callback)) return i.callback(t);
		return null
	},
	removeTrigger: function(e, t) {
		Util.isNullOrUndefined(t) && (t = this.game);
		for (var i = 0; i < this.automationTriggers.length; i++) {
			var a = this.automationTriggers[i];
			a.ID === e && a.context === t && (this.automationTriggers.splice(i, 1), i--)
		}
	},
	removeAllTriggers: function(e) {
		Util.isNullOrUndefined(e) && (e = this.game);
		for (var t = 0; t < this.automationTriggers.length; t++) {
			var i = this.automationTriggers[t];
			i.context === e && (this.automationTriggers.splice(t, 1), t--)
		}
	}
}, Prodigy.Controller.FSMController = function(e) {
	this.game = e, this.stateMachines = [], this.onCompleteCallbacks = {}, this.registeredObjects = {}
}, Prodigy.Controller.FSMController.prototype = {
	constructor: Prodigy.Controller.FSMController,
	executeWithID: function(e, t, i) {
		Util.isNullOrUndefined(i) || (this.onCompleteCallbacks[e] = i), Util.isNullOrUndefined(t) && (t = {});
		var a = new Prodigy.FSM.StateMachine(this.game, e, t, this.onStateMachineComplete.bind(this));
		this.stateMachines.push(a), a.beginExecution()
	},
	onStateMachineComplete: function(e) {
		Util.removeFromArray(e, this.stateMachines), this.onCompleteCallbacks.hasOwnProperty(e.ID) && (this.onCompleteCallbacks[e.ID](), delete this.onCompleteCallbacks[e.ID])
	},
	parseVariable: function(e, t) {
		var i = e;
		if (!Util.isNullOrUndefined(e))
			if ("string" == typeof e) e.length > 1 && "$" === e.charAt(0) && (i = this.findVariable(e.substr(1), t));
			else if (e.constructor === Array) {
			i = [];
			for (var a = 0; a < e.length; a++) i.push(this.parseVariable(e[a], t))
		} else if ("object" == typeof e) {
			i = {};
			for (var s in e) e.hasOwnProperty(s) && (i[s] = this.parseVariable(e[s], t))
		}
		return i
	},
	findVariable: function(e, t) {
		return t.hasOwnProperty(e) ? t[e] : null
	},
	register: function(e, t) {
		this.registeredObjects.hasOwnProperty(e) ? Util.log("Object already registered in FSMController with name [" + e + "].", Util.ERROR) : this.registeredObjects[e] = t
	},
	findRegistrant: function(e) {
		return this.registeredObjects.hasOwnProperty(e) ? (Util.log("Could not find registrant in FSMController with name [" + e + "].", Util.ERROR), null) : this.registeredObjects[e]
	},
	unregister: function(e) {
		this.registeredObjects.hasOwnProperty(e) ? delete this.registeredObjects[e] : Util.log("Object with name [" + e + "] was not registered in FSMController.", Util.ERROR)
	}
}, Prodigy.MenuFactory = function(e) {
	this.game = e, this.renderMenus = [], this.menus = [], this.chatMenu = null
}, Prodigy.MenuFactory.prototype = {
	cleanup: function() {
		this.renderMenus = [], this.menus = [], this.chatMenu = null
	},
	setActiveRenderMenu: function(e) {
		if (Util.isDefined(e)) {
			for (var t = 0; t < this.renderMenus.length; t++) this.renderMenus[t].setActive(!1);
			this.renderMenus.push(e)
		} else this.renderMenus.splice(this.renderMenus.length - 1, 1), this.renderMenus.length > 0 && this.renderMenus[this.renderMenus.length - 1].setActive(!0);
		this.closeChat()
	},
	setActiveMenu: function(e) {
		if (Util.isDefined(e)) {
			if (e.isModal === !0)
				for (var t = 0; t < this.renderMenus.length; t++) this.renderMenus[t].setActive(!1);
			this.renderMenus.push(e)
		} else {
			this.renderMenus.splice(this.renderMenus.length - 1, 1);
			for (var t = this.renderMenus.length - 1; t >= 0 && (this.renderMenus[t].setActive(!0), this.renderMenus[t].isModal !== !1); t--);
		}
		this.closeChat()
	},
	hideActiveMenu: function() {
		if (this.renderMenus.length > 0) {
			var e = this.renderMenus[this.renderMenus.length - 1];
			e instanceof Prodigy.RenderMenu && this.renderMenus[this.renderMenus.length - 1].hideActiveElements()
		}
	},
	menuOpen: function(e) {
		this.menuLayer.callAll("hide", e), this.menuLayer.callAll("onMenuOpen", null, e), this.closeChat()
	},
	close: function(e) {
		for (var t = this.menus.length - 1; t >= 0; t--) this.menus[t] === e && this.menus.splice(t, 1)
	},
	menuCloseAll: function() {
		for (var e = this.menus.length - 1; e >= 0; e--) Util.isDefined(this.menus[e].close) ? this.menus[e].close() : this.menus[e].destroy();
		this.menus = [], this.closeChat()
	},
	addFriendByUser: function() {
		this.menus.push(new Prodigy.Menu.FriendsList.AddFriendByUser(this.game, this.menuLayer))
	},
	chat: function(e) {
		this.chatMenu = new Prodigy.Menu.Chat(this.game, this.menuLayer, e)
	},
	closeChat: function() {
		Util.isDefined(this.chatMenu) && this.chatMenu.close(), this.chatMenu = null
	},
	toyStore: function() {
		this.menus.push(new Prodigy.Menu.ToyStore(this.game, this.menuLayer))
	},
	nameChange: function(e, t) {
		this.menus.push(new Prodigy.Menu.NameChange(this.game, this.menuLayer, e, t))
	},
	advancedNameChange: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.AdvancedNameChange(this.game, this.menuLayer, e, t, i))
	},
	achievement: function(e, t) {
		this.menus.push(new Prodigy.Menu.AchievementUnlock(this.game, this.menuLayer, e, t))
	},
	survey: function(e) {
		this.menus.push(new Prodigy.Menu.Survey(this.game, this.menuLayer, e))
	},
	toyUnlock: function() {
		this.menus.push(new Prodigy.Menu.ToyUnlock(this.game, this.menuLayer))
	},
	rankStore: function(e, t) {
		this.menus.push(new Prodigy.Menu.RankStore(this.game, this.menuLayer, e, t))
	},
	rating: function(e) {
		this.menus.push(new Prodigy.Menu.Rating(this.game, this.menuLayer, e))
	},
	chooseSpell: function(e, t) {
		this.menus.push(new Prodigy.Menu.ChooseSpell(this.game, this.menuLayer, e, t))
	},
	choosePet: function(e, t) {
		this.menus.push(new Prodigy.Menu.ChoosePet(this.game, this.menuLayer, e, t))
	},
	createAccount: function(e, t) {
		this.menus.push(new Prodigy.Menu.AccountCreate(this.game, this.menuLayer, e, t))
	},
	server: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.Server(this.game, this.menuLayer, e, t, i))
	},
	serverSelectMode: function(e, t) {
		this.menus.push(new Prodigy.ServerSelectMode(this.game, this.menuLayer, e, t))
	},
	houseEditorHUD: function(e, t, i, a, s) {
		var r = new Prodigy.Menu.House_Editor_HUD(this.game, this.menuLayer, e, t, i, a, s);
		return this.menus.push(r), r
	},
	houseEditorMenu: function(e, t) {
		var i = new Prodigy.House.Menu.HouseEditorMenu(this.game, this.menuLayer, e, t);
		return this.menus.push(i), i
	},
	leaderPrompt: function() {
		this.menus.push(new Prodigy.Menu.LeaderPrompt(this.game, this.menuLayer))
	},
	pets: function(e, t) {
		this.menus.push(new Prodigy.Menu.Pets(this.game, this.menuLayer, e, t))
	},
	"catch": function(e, t) {
		this.menus.push(new Prodigy.Menu.Catcher(this.game, this.menuLayer, e, t))
	},
	battle: function(e, t, i, a, s, r, n, o, h, l, d) {
		return this.menus.push(new Prodigy.Menu.AttackSelect(this.game, this.menuLayer, e, t, i, a, s, r, n, o, h, l, d)), this.menus[this.menus.length - 1]
	},
	memberPrompt: function(e) {
		this.menus.push(new Prodigy.Menu.MemberPrompt(this.game, this.menuLayer, e))
	},
	emailPrompt: function(e) {
		Util.isDefined(e) && (this.emailPromptOnClose = e), this.menus.push(new Prodigy.Menu.EmailPrompt(this.game, this.menuLayer, this.emailPromptOnClose))
	},
	playAtHomePrompt: function(e) {
		this.menus.push(new Prodigy.Menu.PlayAtHome(this.game, this.menuLayer, e))
	},
	parentalLinkInfoPrompt: function(e, t) {
		this.menus.push(new Prodigy.Menu.ParentalLink(this.game, this.menuLayer, Prodigy.Menu.ParentLinkBenefitsConfig.INFO_POPUP_CONFIG, e, t))
	},
	parentalLinkSuccessPrompt: function(e) {
		this.menus.push(new Prodigy.Menu.ParentalLink(this.game, this.menuLayer, Prodigy.Menu.ParentLinkBenefitsConfig.SUCCESS_POPUP_CONFIG, null, e))
	},
	dailyLoginBonus: function(e) {
		this.menus.push(new Prodigy.Menu.DailyLoginBonus(this.game, this.menuLayer, e))
	},
	mailer: function(e, t, i) {
		var a = new Prodigy.UI.YourMail(this.game, this.menuLayer, t, i);
		return a.preprocess(), this.menus.push(a), a
	},
	mailerOpenMail: function(e) {
		var t = new Prodigy.UI.OpenMail(this.game, this.menuLayer, null, null);
		return t.preprocess(e), this.menus.push(t), t
	},
	friendsList: function(e) {
		this.menus.push(new Prodigy.Menu.FriendsList(this.game, this.menuLayer, e))
	},
	friendRequests: function(e) {
		this.menus.push(new Prodigy.Menu.FriendRequests(this.game, this.menuLayer, e))
	},
	itemInfo: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.ItemInfo(this.game, this.menuLayer, e, t, i))
	},
	houseItemInfo: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.HouseItemInfo(this.game, this.menuLayer, e, t, i))
	},
	bountyBoard: function(e) {
		this.menus.push(new Prodigy.Menu.BountyBoard(this.game, this.menulayer, e))
	},
	social: function(e) {
		this.menus.push(new Prodigy.Menu.Social(this.game, this.menuLayer, e))
	},
	boostSelect: function(e, t) {
		this.menus.push(new Prodigy.Menu.BoostSelect(this.game, this.menuLayer, e, t))
	},
	card: function(e, t, i) {
		GameConstants.get("GameConstants.Debug.PLAYER_CARDS_ENABLED") && this.menus.push(new Prodigy.Menu.Card(this.game, this.menuLayer, e, t, i))
	},
	arena: function() {
		this.menus.push(new Prodigy.Menu.Coliseum(this.game, this.menuLayer, this.game.prodigy.player))
	},
	stylist: function() {
		this.menus.push(new Prodigy.Menu.Stylist(this.game, this.menuLayer, this.game.prodigy.player))
	},
	membership: function(e, t, i) {
		var a = Prodigy.Menu.MemberAd.reconcileConfig(e);
		this.menus.push(new Prodigy.Menu.MemberAd(this.game, this.menuLayer, a, t, i))
	},
	microtransactions: function(e) {
		this.menus.push(new Prodigy.Menu.MicrotransactionMenu(this.game, this.menuLayer, e))
	},
	microtransactionDetails: function(e, t) {
		this.menus.push(new Prodigy.Menu.MicrotransactionDetails(this.game, this.menuLayer, e, t))
	},
	microtransactionLoot: function(e) {
		this.menus.push(new Prodigy.Menu.MicrotransactionLoot(this.game, this.menuLayer, e))
	},
	darkTowerMemberGate: function(e, t) {
		this.menus.push(new Prodigy.Menu.MemberAd(this.game, this.menuLayer, Prodigy.Menu.MemberAd.TOWER, e, t))
	},
	nicknamer: function(e, t) {
		this.menus.push(new Prodigy.Menu.Nicknamer(this.game, this.menuLayer, e, t))
	},
	gotItem: function(e, t, i, a) {
		var s = new Prodigy.Menu.GotItem(this.game, this.menuLayer, e, t, i, a);
		return this.menus.push(s), s
	},
	message: function(e, t, i, a, s, r) {
		var n = new Prodigy.UI.MessageBox(this.game, this.menuLayer, s, r);
		return n.preprocess(e, i, a), this.menus.push(n), n.queuePostCreateCallback(n.setOkay.bind(n, null, t)), n
	},
	confirm: function(e, t, i, a, s, r, n) {
		var o = new Prodigy.UI.MessageBox(this.game, this.menuLayer, r, n);
		return o.preprocess(e, a, s), this.menus.push(o), o.queuePostCreateCallback(o.setConfirm.bind(o, t, i)), o
	},
	alert: function(e, t, i, a, s, r) {
		var n = new Prodigy.UI.MessageBox(this.game, this.menuLayer, s, r);
		return n.preprocess(e, i, a), this.menus.push(n), n.queuePostCreateCallback(n.setOkay.bind(n, null, t)), n
	},
	messageBox: function(e, t, i, a, s, r, n) {
		var o = new Prodigy.UI.MessageBox(this.game, this.menuLayer, r, n);
		return o.preprocess(e, a, s), this.menus.push(o), o.queuePostCreateCallback(o.setConfirm.bind(o, t, i)), o
	},
	messageBoxGeneric: function(e, t, i, a, s, r, n, o) {
		var h = new Prodigy.UI.MessageBox(this.game, this.menuLayer, n, o);
		return h.preprocess(e, s, r), this.menus.push(h), h.queuePostCreateCallback(h.setConfirmGeneric.bind(h, t, i, a)), h
	},
	messageBoxOkay: function(e, t, i, a, s, r, n) {
		var o = new Prodigy.UI.MessageBox(this.game, this.menuLayer, r, n);
		return o.preprocess(e, a, s), this.menus.push(o), o.queuePostCreateCallback(o.setOkay.bind(o, t, null)), o.setCloseCallback(i), o
	},
	zoneProgress: function(e, t, i) {
		var a = new Prodigy.UI.ZoneProgress(this.game, this.menuLayer, e);
		return a.preprocess(e), this.menus.push(a), a.queuePostCreateCallback(a.setConfirm.bind(a, t, i)), a
	},
	titanProgress: function(e) {
		var t = new Prodigy.UI.TitanProgress(this.game, this.menuLayer, e);
		return t.preprocess(), this.menus.push(t), t
	},
	membershipParent: function(e, t, i, a, s) {
		var r = new Prodigy.UI.MembershipParent(this.game, this.menuLayer, i, a, s);
		return r.preprocess(t), this.menus.push(r), r.setMemberAd(e), r
	},
	character: function() {
		this.menus.push(new Prodigy.Menu.Character(this.game, this.menuLayer, this.game.prodigy.player))
	},
	inventory: function() {
		this.menus.push(new Prodigy.Menu.Inventory(this.game, this.menuLayer, this.game.prodigy.player))
	},
	backpack: function() {
		this.menus.push(new Prodigy.Menu.Backpack(this.game, this.menuLayer, this.game.prodigy.player))
	},
	pouch: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.Pouch(this.game, this.menuLayer, this.game.prodigy.player, e, t, i))
	},
	settings: function(e) {
		this.menus.push(new Prodigy.Menu.SystemMenu(this.game, this.menuLayer, e))
	},
	map: function() {
		this.menus.push(new Prodigy.Menu.WorldMap(this.game, this.menuLayer))
	},
	store: function(e, t, i, a, s, r) {
		this.menus.push(new Prodigy.Menu.Store(this.game, this.menuLayer, e, t, i, a, s, r))
	},
	stylistStore: function(e, t, i, a, s, r) {
		this.menus.push(new Prodigy.Menu.StylistStore(this.game, this.menuLayer, e, t, i, a, s, r))
	},
	levelUp: function(e, t) {
		this.menus.push(new Prodigy.Menu.LevelUp(this.game, this.menuLayer, e, t))
	},
	buyToy: function(e, t, i, a) {
		this.menus.push(new Prodigy.Menu.BuyToy(this.game, this.menuLayer, e, t, i, a))
	},
	slotMachine: function(e, t) {
		this.menus.push(new Prodigy.Menu.SlotMachine(this.game, this.menuLayer, 414, 168, e, t))
	},
	battleSummary: function(e, t) {
		t.type = Prodigy.Menu.BattleBase.SUMMARY, this.menus.push(new Prodigy.Menu.BattleBase(this.game, this.menuLayer, e, t))
	},
	battleLevel: function(e, t) {
		this.menus.push(new Prodigy.Menu.BattleBase(this.game, this.menuLayer, e, t))
	},
	epicRewardsMenu: function(e, t) {
		this.menus.push(new Prodigy.Menu.EpicRewardsMenu(this.game, this.menuLayer, e, t))
	},
	battlePotionSelect: function(e) {
		this.menus.push(new Prodigy.Menu.BattlePotionSelect(this.game, this.menuLayer, this.game.prodigy.player, e))
	},
	confirmPotionUse: function(e, t) {
		this.menus.push(new Prodigy.Menu.ConfirmPotionUse(this.game, this.menuLayer, e, t))
	},
	potionPvpPopup: function(e) {
		this.menus.push(new Prodigy.Menu.PotionPVPPopup(this.game, this.menuLayer, e))
	},
	epicErrorMessage: function(e, t, i) {
		this.menus.push(new Prodigy.Menu.EpicErrorMessage(this.game, this.menuLayer, e, t, i))
	},
	questDescription: function(e, t) {
		this.menus.push(new Prodigy.Menu.QuestDescription(this.game, this.menuLayer, e, t))
	},
	questBanner: function(e) {
		this.menus.push(new Prodigy.Menu.QuestBanner(this.game, this.menuLayer, e))
	},
	uiViewer: function() {
		this.menus.push(new Prodigy.UI.UIViewer(this.game, this.menuLayer))
	}
}, Prodigy.MenuFactory.prototype.constructor = Prodigy.MenuFactory, Prodigy.DialogueFactory = function(e) {
	this.game = e
}, Prodigy.DialogueFactory.prototype = {
	create: function() {
		return new Prodigy.DialogueController(this.game)
	}
}, Prodigy.EffectFactory = function(e) {
	this.game = e
}, Prodigy.EffectFactory.PVP = 230, Prodigy.EffectFactory.MIDDLE = 300, Prodigy.EffectFactory.BOTTOM = 500, Prodigy.EffectFactory.BASE = 600, Prodigy.EffectFactory.TOP = 100, Prodigy.EffectFactory.SMALL = 2, Prodigy.EffectFactory.MEDIUM = 1, Prodigy.EffectFactory.prototype = {
	setSource: function(e) {
		this.screen = e
	},
	pvpComplete: function(e, t, i) {
		var a = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, 280, 1280, 200, "core", "bounty-runner"));
		a.alpha = 0, a.height = 200;
		var t = this.screen.menus.add(this.game.prodigy.create.sprite(640, 350, "battle", t));
		t.anchor.setTo(.5, 1), t.scale.x = t.scale.y = 2, t.alpha = 0;
		var e = this.game.prodigy.create.font(this.screen.menus, 1280, 330, e, {
			size: 80,
			width: 1280,
			align: "center"
		});
		this.game.add.tween(t).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(t.scale).to({
			x: 1,
			y: 1
		}, 200, Phaser.Easing.Quadratic.In).start();
		var s = this.game.add.tween(a);
		s.to({}, 100, Phaser.Easing.Linear.None), s.to({
			alpha: .9
		}, 250, Phaser.Easing.Quadratic.In), s.to({}, 4e3, Phaser.Easing.Linear.None), s.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), s.start(), this.game.add.tween(e).to({}, 100, Phaser.Easing.Linear.None).to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out).to({
			x: -25
		}, 4e3, Phaser.Easing.Linear.None).to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out).start(), Util.isDefined(i) && s.onComplete.add(i, this)
	},
	bountyComplete: function(e, t) {
		var i = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, 280, 1280, 200, "core", "bounty-runner"));
		i.alpha = 0, i.height = 200;
		var a = this.screen.menus.add(this.game.prodigy.create.sprite(640, 250, "core-2", "emblem-bounty"));
		a.anchor.setTo(.5, .5), a.scale.x = a.scale.y = 2, a.alpha = 0;
		var s = "" + e,
			r = this.game.prodigy.create.font(this.screen.menus, 520, 175, s, {
				size: 80,
				width: 240,
				align: "center"
			});
		r.alpha = 0;
		var n = this.game.prodigy.create.font(this.screen.menus, 1280, 330, "Bounty Complete!", {
			size: 80,
			width: 1280,
			align: "center"
		});
		this.game.add.tween(a).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(a.scale).to({
			x: 1,
			y: 1
		}, 200, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(r).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start();
		var o = this.game.add.tween(i);
		o.to({}, 100, Phaser.Easing.Linear.None), o.to({
			alpha: .9
		}, 250, Phaser.Easing.Quadratic.In), o.to({}, 4e3, Phaser.Easing.Linear.None), o.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), o.start(), this.game.add.tween(n).to({}, 100, Phaser.Easing.Linear.None).to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out).to({
			x: -25
		}, 4e3, Phaser.Easing.Linear.None).to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out).start(), Util.isDefined(t) && (o.onComplete.add(this.cleanup.bind(this, [i, n, a]), this), o.onComplete.add(t, this))
	},
	fire: function(e, t, i, a, s, r, n) {
		i = r ? Math.ceil(i / 120) : Math.ceil(i / 100), a = r ? Math.ceil(a / 120) : Math.ceil(a / 100);
		for (var o = [], h = 0; i > h; h++)
			for (var l = 0; a > l; l++) o.push(this.screen.menus.add(this.game.prodigy.create.sprite(40 + e + 80 * h, 40 + t + 80 * l, "zone-skywatch", r ? "fire-ball-small" : "fire-ball")));
		for (var h = 0; i - 1 > h; h++)
			for (var l = 0; a - 1 > l; l++) o.push(this.screen.menus.add(this.game.prodigy.create.sprite(80 + e + 80 * h, 80 + t + 80 * l, "zone-skywatch", r ? "fire-ball-small" : "fire-ball")));
		for (var h = 0; h < o.length; h++) {
			var d = o[h];
			d.anchor.setTo(.5, .5), d.scale.x = d.scale.y = 0;
			var c = this.game.add.tween(d),
				p = this.game.add.tween(d.scale),
				g = Math.floor(1e3 / o.length) * h + 10;
			0 === h && (g = 1e3), c.to({}, g, Phaser.Easing.Linear.None), p.to({}, g, Phaser.Easing.Linear.None);
			for (var u = Math.floor((d.x - e - Math.floor(80 * i / 2)) / 2), l = 0; s > l; l++) 0 === h && this.game.time.events.add(1e3 * l, this.game.prodigy.audio.playSFX.bind(this.game.prodigy.audio, Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig")), c.to({
				x: d.x,
				y: d.y,
				alpha: 1
			}, 10, Phaser.Easing.Linear.None), c.to({
				x: d.x + u,
				y: d.y - 50,
				alpha: 1
			}, 1e3, Phaser.Easing.Linear.None), p.to({
				x: .5,
				y: .5
			}, 10, Phaser.Easing.Linear.None), p.to({
				x: 1.4,
				y: 1.4
			}, 1e3, Phaser.Easing.Quadratic.Out);
			c.to({
				alpha: 0
			}, 10, Phaser.Easing.Linear.None), 0 === h && Util.isDefined(n) && c.onComplete.addOnce(n), 0 === h && c.onComplete.addOnce(this.cleanup.bind(this, o), this), c.start(), p.start()
		}
	},
	flashText: function(e, t, i, a, s, r) {
		Util.isDefined(i) || (i = Prodigy.EffectFactory.MIDDLE), Util.isDefined(a) || (a = Prodigy.EffectFactory.MEDIUM), Util.isDefined(s) || (s = 2e3);
		var n = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, i - 20, 1280, 200, "core", "dialogue"));
		n.alpha = 0, n.height = 200 / a;
		var o = this.game.prodigy.create.font(this.screen.menus, 1280, i, e, {
			size: 80 / a,
			width: 1280,
			align: "center"
		});
		o.y = i + Math.floor((n.height - o.height) / (4 * a));
		var h = this.game.add.tween(n);
		h.to({
			alpha: .5
		}, 250, Phaser.Easing.Quadratic.In), h.to({}, s, Phaser.Easing.Linear.None), h.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), h.start(), r = r || !1;
		var l = this.game.add.tween(o);
		r ? (o.x = 0, l.to({
			alpha: 1
		}, 125, Phaser.Easing.Quadratic.In), l.to({}, s, Phaser.Easing.Linear.None), l.to({
			alpha: 0
		}, 125, Phaser.Easing.Quadratic.Out), l.start()) : (l.to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out), l.to({
			x: -25
		}, s, Phaser.Easing.Linear.None), l.to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out), l.start()), h.onComplete.add(this.cleanup.bind(this, [n, o]), this), Util.isDefined(t) && h.onComplete.add(t, this)
	},
	characterText: function(e, t, i, a, s) {
		var r = this.game.prodigy.create.font(this.screen.overlay, t, i, e, Util.isDefined(s) ? s : {
			size: 40
		});
		r.y -= 150, r.setCenterAnchor(), r.scale.setTo(0, 0);
		var n = this.game.add.tween(r.scale).to({
				y: 1,
				x: 1
			}, 800, Phaser.Easing.Elastic.InOut),
			o = this.game.add.tween(r).to({
				y: "-100"
			}, 1600, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 200, Phaser.Easing.Quadratic.Out);
		o.onComplete.add(function() {
			r.destroy()
		}), Util.isDefined(a) && (o.delay(a), n.delay(a)), o.start(), n.start()
	},
	characterImage: function(e, t) {
		e.y -= 150, e.anchor.setTo(.5, .5), e.scale.setTo(0, 0), this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [e, "overlay"]);
		var i = this.game.add.tween(e.scale).to({
				y: 1,
				x: 1
			}, 800, Phaser.Easing.Elastic.InOut),
			a = this.game.add.tween(e).to({
				y: "-100"
			}, 1600, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 200, Phaser.Easing.Quadratic.Out);
		a.onComplete.add(function() {
			e.kill()
		}), Util.isDefined(t) && (a.delay(t), i.delay(t)), a.start(), i.start()
	},
	explode: function(e, t, i, a, s, r, n) {
		i = Math.ceil(i / 80), a = Math.ceil(a / 80);
		for (var o = [], h = 0; i > h; h++)
			for (var l = 0; a > l; l++) {
				var d = "";
				if (n) {
					var c = Prodigy.Random.integerInRange(0, 3);
					d = 1 > c ? "-blue" : 2 > c ? "-green" : "-red"
				}
				o.push(this.screen.menus.add(this.game.prodigy.create.sprite(40 + e + 80 * h, 40 + t + 80 * l, "core-2", "smoke" + d)))
			}
		for (var h = 0; i - 1 > h; h++)
			for (var l = 0; a - 1 > l; l++) {
				var d = "";
				if (n) {
					var c = Prodigy.Random.integerInRange(0, 3);
					d = 1 > c ? "-blue" : 2 > c ? "-green" : "-red"
				}
				o.push(this.screen.menus.add(this.game.prodigy.create.sprite(80 + e + 80 * h, 80 + t + 80 * l, "core-2", "smoke" + d)))
			}
		for (var h = 0; h < o.length; h++) {
			var p = o[h];
			p.anchor.setTo(.5, .5), p.scale.x = p.scale.y = 0, p.angle = Math.floor(1e3 * Math.random());
			var g = this.game.add.tween(p),
				u = this.game.add.tween(p.scale),
				y = Math.floor(1e3 / o.length) * h + 10;
			0 === h && (y = 1e3), g.to({}, y, Phaser.Easing.Linear.None), u.to({}, y, Phaser.Easing.Linear.None);
			for (var m = Math.floor((p.x - e - Math.floor(80 * i / 2)) / 2), l = 0; s > l; l++) 0 === h && this.game.time.events.add(1e3 * l, this.game.prodigy.audio.playSFX.bind(this.game.prodigy.audio, Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig")), g.to({
				x: p.x,
				y: p.y,
				alpha: 1,
				angle: p.angle
			}, 10, Phaser.Easing.Linear.None), g.to({
				x: p.x + m,
				y: p.y - 50,
				alpha: 1,
				angle: p.angle + 100
			}, 1e3, Phaser.Easing.Linear.None), u.to({
				x: .5,
				y: .5
			}, 10, Phaser.Easing.Linear.None), u.to({
				x: 1.4,
				y: 1.4
			}, 1e3, Phaser.Easing.Quadratic.Out);
			g.to({
				alpha: 0
			}, 10, Phaser.Easing.Linear.None), 0 === h && Util.isDefined(r) && g.onComplete.addOnce(r), 0 === h && g.onComplete.addOnce(this.cleanup.bind(this, o), this), g.start(), u.start()
		}
	},
	shake: function(e, t, i, a, s) {
		i = i || 10;
		for (var r = [], n = [this.screen.background, this.screen.content, this.screen.foreground], o = Math.floor(t / 50), h = 0; o > h; h++)
			for (var l = this.game.rnd.integerInRange(-i, i), d = this.game.rnd.integerInRange(-i, i), c = 0; c < n.length; c++) 0 === h && (r[c] = this.game.add.tween(n[c]), Util.isDefined(s) && 0 === c && r[c].onComplete.add(s)), r[c].to({
				x: "v" === a ? 0 : l,
				y: "h" === a ? 0 : d
			}, 50, Phaser.Easing.Linear.None), h === o - 1 && (r[c].to({
				x: 0,
				y: 0
			}, 100, Phaser.Easing.Linear.None), r[c].delay(e), r[c].start())
	},
	firework: function(e, t, i, a, s) {
		s = s || 0, Util.isDefined(a) || (a = this.screen.foreground);
		var r = 75 * Math.random() + 25,
			n = Math.random(),
			o = 100 * n - 50,
			h = Math.random() + 1,
			l = a.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core-2", "rocket")),
			d = a.add(this.game.prodigy.create.sprite(e + o, t - r, "core-2", "fireworks"));
		l.anchor.setTo(.5, .5), d.anchor.setTo(.5, .5), d.angle = 360 * Math.random(), d.scale.x = 0, d.scale.y = 0;
		var c = this.game.add.tween(l).to({
				y: t - r
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0 + s),
			p = (this.game.add.tween(l).to({
				x: e + o
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0 + s), this.game.add.tween(l).to({
				angle: 35 * (2 * n - 1)
			}, 500, Phaser.Easing.Linear.None, !0 + s), this.game.add.tween(d.scale).to({
				x: h,
				y: h
			}, 500, Phaser.Easing.Back.Out, !0, 500 + s), this.game.add.tween(d).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None, !0, 1e3 + s)),
			g = function() {
				this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig")
			};
		c.onComplete.addOnce(g, this), c.onComplete.addOnce(l.destroy.bind(l)), p.onComplete.addOnce(d.destroy.bind(d)), Util.isDefined(i) && p.onComplete.add(i)
	},
	confetti: function(e, t, i) {
		var a = (75 * Math.random() + 25, Math.random(), Math.random() + 1),
			s = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core-2", "confetti1"));
		s.animations.add("confetti", ["confetti1", "confetti2", "confetti3", "confetti4"], 10, !0, !1), s.anchor.setTo(.5, .5), s.scale.x = .1, s.scale.y = .1, s.animations.play("confetti");
		var r = this.game.add.tween(s).to({
				y: "-25"
			}, 500, Phaser.Easing.Linear.Out, !0, 0),
			n = (this.game.add.tween(s.scale).to({
				x: a,
				y: a
			}, 500, Phaser.Easing.Quadratic.In, !0, 0), this.game.add.tween(s).to({
				y: "+100"
			}, 2e3, Phaser.Easing.Sinusoidal.Out, !1, 250)),
			o = this.game.add.tween(s).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None, !0, 2500);
		this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "dig"), r.chain(n), o.onComplete.addOnce(s.destroy.bind(s)), Util.isDefined(i) && o.onComplete.add(i)
	},
	portalEffect: function(e, t, i) {
		var a = this.screen.background.add(this.game.prodigy.create.sprite(e - 110, t - 160, "core-2", "portal1-b")),
			s = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 110, t - 160, "core-2", "portal1"));
		s.animations.add("portalF", ["portal1", "portal2", "portal3", "portal4", "portal5", "portal6", "portal7", "portal8", "portal9"], 7, !0, !1), a.animations.add("portalB", ["portal1-b", "portal2-b", "portal3-b", "portal4-b", "portal5-b", "portal6-b", "portal7-b", "portal8-b", "portal9-b"], 7, !0, !1), a.animations.play("portalB"), s.animations.play("portalF");
		var r = this.game.add.tween(a).to({
			alpha: 1
		}, 800, Phaser.Easing.Linear.None, !0, 1);
		Util.isDefined(i) && r.onComplete.add(i), r.onComplete.addOnce(a.destroy.bind(a)), r.onComplete.addOnce(a.destroy.bind(s))
	},
	goldwork: function(e, t, i) {
		for (var a = 75 * Math.random() + 25, s = Math.random(), r = 100 * s - 50, n = Math.floor(3 * Math.random() + 1), o = [], h = function() {}, l = 1; n + 1 > l; l++) o.push(this.screen.addClickableEvent(e + 100 * l + s, t - 100 * l + s, 80, 80, h)), o[l - 1].img = o[l - 1].add(new Phaser.Image(this.game, 0, 0, "icons", "gold"));
		var d = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core-2", "rocket"));
		d.anchor.setTo(.5, .5);
		var c = this.game.add.tween(d).to({
				y: t - a
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0),
			p = (this.game.add.tween(d).to({
				x: e + r
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0), this.game.add.tween(d).to({
				angle: 35 * (2 * s - 1)
			}, 500, Phaser.Easing.Linear.None, !0));
		c.onComplete.addOnce(d.destroy.bind(d)), p.onComplete.add(i)
	},
	cleanup: function(e) {
		for (var t = 0; t < e.length; t++) e[t].destroy()
	},
	fadeFlyingImage: function(e, t, i, a) {
		var s = this.game.prodigy.create.sprite(e, t, i, a);
		s.anchor.setTo(.5, .5), this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [s, "overlay"]);
		var r = this.game.add.tween(s).to({
			y: s.y - 100
		}, 1300, Phaser.Easing.Quadratic.Out).to({
			alpha: 0
		}, 200, Phaser.Easing.Quadratic.Out);
		r.onComplete.add(function() {
			s.kill()
		}, s), r.start()
	}
}, Prodigy.EffectFactory.prototype.constructor = Prodigy.EffectFactory, Prodigy.Factory.GameObjectFactory = function(e) {
	this.game = e
}, Prodigy.Factory.GameObjectFactory.prototype = {
	constructor: Prodigy.GameObjectFactory,
	indicator: function(e, t) {
		return new Prodigy.Control.Indicator(this.game, e, t)
	},
	advButton: function(e, t, i, a, s, r, n) {
		return new Prodigy.Control.AdvButton(this.game, e, t, i, a, s, r, n)
	},
	button: function(e, t, i, a, s, r, n, o, h, l, d) {
		return new Prodigy.Control.Button(this.game, e, t, i, a, s, r, n, o, h, l, d)
	},
	hudButton: function(e, t, i, a, s, r) {
		return new Prodigy.Control[e](this.game, t, i, a, s, r)
	},
	microtransactionButton: function(e, t, i, a, s) {
		return new Prodigy.Control.MicrotransactionButton(this.game, e, t, i, a, s)
	},
	element: function(e, t, i) {
		return new Prodigy.Control.Element(this.game, e, t, i)
	},
	fillBar: function(e, t, i, a, s, r, n, o, h, l, d, c) {
		return new Prodigy.Control.FillBar(this.game, e, t, i, a, s, r, n, o, h, l, d, c)
	},
	font: function(e, t, i, a, s) {
		return new Prodigy.Control.BitmapFont(this.game, e, t, i, a, s)
	},
	nameFont: function(e, t, i, a) {
		var s = this.game.add.bitmapText(t, i, "font-user-name", a, 22);
		return s.x -= Math.floor(.5 * s.width), e.add(s), s
	},
	input: function() {},
	panel: function(e, t, i, a, s, r, n) {
		return new Prodigy.Control.Panel(this.game, e, t, i, a, s, r, n)
	},
	panelButton: function(e, t, i, a, s, r, n) {
		return new Prodigy.Control.PanelButton(this.game, e, t, i, a, s, r, n)
	},
	progressBar: function(e, t, i, a) {
		return new Prodigy.Control.ProgressBar(this.game, e, t, i, a)
	},
	scrollBar: function(e, t, i, a, s) {
		return new Prodigy.Control.ScrollBar(this.game, e, t, i, a, s)
	},
	slider: function(e, t, i, a, s, r) {
		return new Prodigy.Control.Slider(this.game, e, t, i, a, s, r)
	},
	sprite: function(e, t, i, a, s, r, n, o) {
		return new Prodigy.Control.Sprite(this.game, e, t, i, a, s, r, n, o, !1)
	},
	animatedSprite: function(e, t, i, a, s, r, n) {
		return new Prodigy.Control.AnimatedSprite(this.game, e, t, i, a, s, r, n)
	},
	stackButton: function(e, t, i, a, s) {
		return new Prodigy.Control.StackButton(this.game, e, t, i, a, s)
	},
	textButton: function(e, t, i, a, s) {
		return new Prodigy.Control.TextButton(this.game, e, t, i, a, s)
	}
}, Prodigy.Factory.AdvGameObjectFactory = function(e) {
	Prodigy.Factory.GameObjectFactory.call(this, e)
}, Prodigy.extends(Prodigy.Factory.AdvGameObjectFactory, Prodigy.Factory.GameObjectFactory, {
	constructor: Prodigy.AdvGameObjectFactory,
	achievement: function(e, t, i, a) {
		return new Prodigy.Container.Achievement(this.game, e, t, i, a)
	},
	boss: function(e, t, i, a, s) {
		return new Prodigy.Container.BossContainer(this.game, e, t, i, a, s)
	},
	forestBoss: function(e, t, i, a, s) {
		return new Prodigy.Container.ForestContainer(this.game, e, t, i, a, s)
	},
	cloudBoss: function(e, t, i, a, s, r) {
		return new Prodigy.Container.CloudContainer(this.game, e, t, i, a, s, r)
	},
	bonfireBoss: function(e, t, i, a, s) {
		return new Prodigy.Container.BonfireContainer(this.game, e, t, i, a, s)
	},
	shiverchillBoss: function(e, t, i, a, s) {
		var r = new Prodigy.Container.IceWyrmBossContainer(this.game, e, t, i, a, s);
		return r.flip(), r
	},
	item: function(e, t, i, a, s, r) {
		return new Prodigy.Container.ItemContainer(this.game, e, t, i, a, s, r)
	},
	follow: function(e, t, i, a, s, r) {
		var n = Items.getItem("follow", t),
			o = n.metadata;
		if (Util.isDefined(o) && Util.isDefined(o.type)) switch (o.type) {
			case "spine":
				var h = Prodigy.Framework.Core.Renderer.createRenderer("spine-follow-" + t, o),
					l = new Prodigy.Framework.Core.GameObject(this.game, e, [h, new Prodigy.Framework.Behaviour.Follow(a, 20)], a.x, a.y - 1);
				if (h.setAnchor(.5, 1), !Device.isTablet() && !Device.isIOS()) {
					var d = n.data.particleEffects;
					if (!Util.isNullOrUndefined(d))
						for (var c = 0; c < d.length; ++c) {
							var p = new Prodigy.Framework.Core.ParticleEmitter(d[c], this.game.particleStorm, this.game.time);
							l.addComponent(p), p.sortTargets = [l, a]
						}
				}
				return l;
			case "pet":
				Util.log("Creating Follow");
				var g = t;
				return Util.isDefined(o.petID) && (g = o.petID), new Prodigy.Container.FollowContainer(this.game, e, new Monster({
					ID: g
				}, this.game), i, a, s, r)
		}
		return Util.log("Creating Pet"), new Prodigy.Container.Pet(this.game, e, t, a, s, r)
	},
	monster: function(e, t, i, a, s, r) {
		return new Prodigy.Container.MonsterContainer(this.game, e, t, i, a, s, r)
	},
	player: function(e, t, i, a, s, r) {
		return new Prodigy.Container.PlayerContainer(this.game, e, t, i, a, s, r)
	},
	timer: function(e, t, i, a) {
		return new Prodigy.Container.Timer(this.game, e, t, i, a)
	},
	level: function(e, t, i, a, s, r, n) {
		return new Prodigy.Container.LevelContainer(this.game, e, t, i, a, s, r, n)
	},
	milestone: function(e, t, i, a, s, r) {
		return new Prodigy.Container.MilestoneContainer(this.game, e, t, i, a, s, r)
	},
	houseItem: function(e, t, i, a, s, r) {
		return new Prodigy.Framework.Core.GameObject(this.game, e, [new Prodigy.Component.HouseItem(this.game, r, t, s)], i, a)
	},
	renderInterface: function(e, t, i, a, s) {
		var r = Prodigy.Component.RenderingInterface.typeRegistry[t.type];
		return Util.isDefined(r) ? new r(this.game, e, t, i, a, s) : null
	},
	createParticleEmitter: function(e, t, i, a) {
		var s = this.game.particleStorm,
			r = Items.getItem("particleEffect", t).data;
		Util.isNullOrUndefined(s.getData(t)) && s.addData(t, r.particle);
		var n = this.createEmitterConfig(r.emitter, a),
			o = s.createEmitter(Phaser.ParticleStorm.SPRITE_BATCH, r.force);
		return o.addToWorld(e), o.emit(t, i.x, i.y, n), o
	},
	createEmitterConfig: function(e, t) {
		var i = JSON.parse(JSON.stringify(e));
		return Util.isNullOrUndefined(t) || (i.zone = this.createParticleZone(t)), i
	},
	createParticleZone: function(e) {
		return "LINE_ZONE" === e.type ? this.game.particleStorm.createLineZone(e.x1, e.y1, e.x2, e.y2) : null
	}
}), Prodigy.EventFactory = function(e) {
	this.game = e, this._events = {}, this._eventID = 0
}, Prodigy.EventFactory.prototype = {
	create: function() {
		return this._eventID++, new Prodigy.EventController(this.game, this._eventID)
	}
}, Prodigy.EventFactory.prototype.constructor = Prodigy.EventFactory;
var ExternalFactory = function() {
	function e(e) {
		this.game = e
	}
	return e.prototype.openFull = function() {
		this.game.stage.visible = !1
	}, e.prototype.closeFull = function() {
		this.game.stage.visible = !0
	}, e.prototype.question = function(e) {
		this.game.prodigy.network.stopInactiveTimer(), this.game.input.keyboard.clearCaptures();
		var t = QI.showQuestion({
			selector: "#external-content",
			userID: this.game.prodigy.player.userID,
			callback: this.answerQuestion.bind(this, e),
			classIDs: this.game.prodigy.player.classIDs,
			isTeacher: !1,
			hideCallback: this.openFull.bind(this)
		});
		this._init || (t.on("assignment-complete", this.finishAssignment.bind(this)), t.on("update-user", this.updateUser.bind(this)), t.on("grade-complete", this.finishGrade.bind(this)), t.on("placement-complete", this.finishPlacement.bind(this)), t.on("update-plan-student", this.updatePlanStudent.bind(this)), this._init = !0)
	}, e.prototype.answerQuestion = function(e, t) {
		this.game.prodigy.network.startInactiveTimer(), Util.log("answerQuestion:"), Util.log(t), this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.game.prodigy.network.answerQuestion(t), this.closeFull(), Util.isDefined(e) && e(t.wasCorrect, t.respTime)
	}, e.prototype.closeQuestion = function() {
		this.game.prodigy.network.startInactiveTimer(), QI.close(), this.closeFull()
	}, e.prototype.init = function(e) {
		this.game.prodigy.player.grade = e.chosenGrade || 1, QI.init(e)
	}, e.prototype.getUpdatedData = function() {
		return true
	}, e.prototype.getMasteredSkills = function() {
		return 0
	}, e.prototype.updateUser = function(e) {
		Util.log("updateUser:"), Util.log(e), this.game.prodigy.network.updateUser(e, function() {})
	}, e.prototype.updatePlanStudent = function(e) {
		Util.log("updatePlanStudent"), Util.log(e), this.game.prodigy.network.updatePlanStudent(e)
	}, e.prototype.finishPlacement = function(e) {
		this.game.prodigy.network.finishPlacement(e.grade, this.game.prodigy.player.classIDs), this.game.prodigy.network.sendNotification({
			type: "placement-test:complete:" + e.grade,
			message: {
				userID: this.game.prodigy.player.userID,
				grade: e.grade
			}
		})
	}, e.prototype.finishAssignment = function(e) {
		Util.log("finishAssignment"), Util.log(e), this.game.prodigy.network.completeAssignment(e.assignmentID);
		var t = "";
		t = Util.isDefined(this.skills) ? "assignment:complete:" + e.assignmentID : "assignment:failed:" + e.assignmentID, this.game.prodigy.network.sendNotification({
			type: t,
			message: {
				userID: this.game.prodigy.player.userID,
				assignmentID: e.assignmentID,
				skillID: e.skillID,
				grade: e.grade
			}
		})
	}, e.prototype.finishGrade = function(e) {
		Util.log("finishGrade:"), Util.log(e), this.game.prodigy.network.sendNotification({
			type: "grade:mastered:" + e.grade,
			message: {
				userID: this.game.prodigy.player.userID,
				grade: e.grade
			}
		})
	}, e
}();
Prodigy.IconFactory = function(e) {
	this.game = e
}, Prodigy.IconFactory.prototype = {
	constructor: Prodigy.IconFactory,
	createIcon: function(e, t, i, a, s, r, n, o) {
		return o = Util.getOptionalParameter(o, !0), new Prodigy.Control.Sprite(this.game, e, t, i, null, a, s, r, n, o)
	},
	gold: function(e, t, i, a, s, r) {
		return this.createIcon(e, t, "icon-currency-1", i, a, s, r)
	},
	createFromData: function(e, t, i, a, s, r, n, o) {
		if ("gold" === e.type) return this.gold(t, i, a, s, r, n);
		if ("hairColor" === e.type) {
			var h = this.game.prodigy.create.sprite(t, i, "icons", this.iconKey(e), a, s, r, n);
			return h.tint = Util.rgb2hex(e.data.colors[2][0], e.data.colors[2][1], e.data.colors[2][2]), h
		}
		if ("eyeColor" === e.type) {
			var h = this.game.prodigy.create.sprite(t, i, "icons", this.iconKey(e), a, s, r, n);
			return h.tint = Util.rgbArrayToHex(e.data.colors[0]), h
		}
		if ("skinColor" === e.type) {
			var h = this.game.prodigy.create.sprite(t, i, "icons", this.iconKey(e), a, s, r, n);
			return h.tint = Util.rgbArrayToHex(e.data.colors[1]), h
		}
		return Util.isDefined(e.type) && Util.isDefined(e.ID) ? this.createIcon(t, i, this.iconKey(e), a, s, r, n, o) : this.game.prodigy.create.sprite(0, 0, Items.getIconAtlas(e), Util.convertItemToIcon(e))
	},
	createWithQuantity: function(e, t, i, a, s, r) {
		return new Prodigy.Container.QuantityIcon(this.game, e, t, i, a, null, s, r)
	},
	iconKey: function(e) {
		return "gold" === e.type ? "icon-item-26" : "hairColor" === e.type || "skinColor" === e.type || "eyeColor" === e.type ? "empty" : "icon-" + e.type + "-" + e.ID
	}
}, Prodigy.FSM.State = function(e, t, i, a) {
	this.game = e, this.data = t, this.sessionVariables = i, this.onComplete = a, this.actions = [], this.actionsCompleted = 0
}, Prodigy.FSM.State.prototype = {
	constructor: Prodigy.FSM.State,
	execute: function() {
		var e;
		if (Util.isNullOrUndefined(this.data.actions)) this.onComplete();
		else {
			for (e = 0; e < this.data.actions.length; e++) {
				var t = this.data.actions[e],
					i = t.type + "Action";
				if (Prodigy.FSM.Action.hasOwnProperty(i)) {
					var a = new Prodigy.FSM.Action[i](this.game, t.parameters, t.results, this.sessionVariables, this.onActionComplete.bind(this));
					this.game.prodigy.debug.enableFSMLogging && (a.typeClass = i), a.validate() && this.actions.push(a)
				} else Util.log("Could not find an action with type [" + t.type + "].", Util.ERROR)
			}
			for (e = 0; e < this.actions.length; e++) this.actions[e].execute()
		}
	},
	onActionComplete: function() {
		this.actionsCompleted++, this.actions.length === this.actionsCompleted && this.onComplete()
	}
}, Prodigy.FSM.StateMachine = function(e, t, i, a) {
	this.game = e, this.ID = t, this.sessionVariables = i, this.onComplete = a, this.data = null, this.currentState = null;
	var s = Items.getItem("fsm", t);
	Util.isNullOrUndefined(s) || (this.data = s.data)
}, Prodigy.FSM.StateMachine.prototype = {
	constructor: Prodigy.FSM.StateMachine,
	beginExecution: function() {
		this.game.prodigy.debug.enableFSMLogging && (Util.log("FSM: Beginning execution of State Machine [" + this.name + "]."), Util.log("FSM: Session Variables:"), Util.log(this.sessionVariables)), this.executeNext()
	},
	execute: function(e) {
		this.game.prodigy.debug.enableFSMLogging && (Util.log("FSM: Beginning execution of State [" + (Util.isNullOrUndefined(e.name) ? "NoName" : e.name) + "]."), Util.log("FSM: Session Variables:"), Util.log(this.sessionVariables)), this.currentState = new Prodigy.FSM.State(this.game, e, this.sessionVariables, this.onStateCompleted.bind(this)), this.currentState.execute()
	},
	executeWithName: function(e) {
		for (var t = 0; t < this.data.states.length; t++) {
			var i = this.data.states[t];
			if (i.name === e) return this.execute(i), void 0
		}
		Util.log("Could not find state with name [" + e + "].", Util.ERROR)
	},
	executeNext: function() {
		var e = 0;
		Util.isNullOrUndefined(this.currentState) || (e = this.data.states.indexOf(this.currentState.data), e++), e < this.data.states.length ? this.execute(this.data.states[e]) : (this.currentState = null, this.onComplete(this))
	},
	onStateCompleted: function() {
		if (!Util.isNullOrUndefined(this.currentState.data.transitions) && this.currentState.data.transitions.length > 0)
			if ("string" == typeof this.currentState.data.transitions) this.executeWithName(this.currentState.data.transitions);
			else {
				for (var e = 0; e < this.currentState.data.transitions.length; e++) {
					var t = this.currentState.data.transitions[e];
					if (t.hasOwnProperty("state")) {
						if (t.hasOwnProperty("conditions")) {
							for (var i = !0, a = 0; a < t.conditions.length; a++) {
								var s = new Prodigy.FSM.Condition(this.game, this.game.prodigy.fsm.parseVariable(t.conditions[a], this.sessionVariables));
								if (!s.test()) {
									i = !1;
									break
								}
							}
							if (!i) continue
						}
						return this.executeWithName(t.state), void 0
					}
					Util.log("Transition [" + t + "] does not define a state name.", Util.ERROR)
				}
				this.executeNext()
			}
		else this.executeNext()
	}
}, Prodigy.FSM.Action = function(e, t, i, a, s) {
	this.game = e, this.parameters = t, this.results = i, this.sessionVariables = a, this.onComplete = s
}, Prodigy.FSM.Action.prototype = {
	constructor: Prodigy.FSM.Action,
	validate: function() {
		return !0
	},
	execute: function() {
		this.game.prodigy.debug.enableFSMLogging && (Util.log("FSM: Executing action [" + this.typeClass + "]."), Util.log("FSM: Parameters:"), Util.log(this.parameters))
	},
	finish: function(e) {
		if (!Util.isNullOrUndefined(e))
			for (var t in e)
				if (e.hasOwnProperty(t)) {
					var i = this.findResult(t);
					Util.isNullOrUndefined(i) || (this.sessionVariables[i] = e[t])
				} this.game.prodigy.debug.enableFSMLogging && (Util.log("FSM: Finishing action [" + this.typeClass + "]."), Util.isNullOrUndefined(this.results) || (Util.log("FSM: Results:"), Util.log(this.results)), Util.log("FSM: Session Variables:"), Util.log(this.sessionVariables)), Util.isNullOrUndefined(this.onComplete) || this.onComplete()
	},
	findParameter: function(e) {
		return this.parameters.hasOwnProperty(e) ? this.game.prodigy.fsm.parseVariable(this.parameters[e], this.sessionVariables) : (Util.log("Action could not find parameter with name [" + e + "]."), null)
	},
	findResult: function(e) {
		return !Util.isNullOrUndefined(this.results) && this.results.hasOwnProperty(e) ? this.results[e] : null
	},
	findObjectParameter: function(e) {
		var t = this.findParameter(e);
		return "string" == typeof t && (t = this.game.prodigy.fsm.findRegistrant(e)), Util.isNullOrUndefined(t) && Util.log("Could not find object parameter with the name [" + e + "]."), t
	},
	validateParameters: function(e, t) {
		for (var i = 0; i < e.length; i++) {
			var a = e[i];
			if (!this.parameters.hasOwnProperty(a)) return Util.log("Parameter validation failed. Missing parameter [" + a + "]"), !1
		}
		if (!Util.isNullOrUndefined(t))
			for (var s in t) this.parameters.hasOwnProperty(s) || (this.parameters[s] = t[s]);
		return !0
	}
}, Prodigy.FSM.Condition = function(e, t) {
	this.game = e, this.data = t
}, Prodigy.FSM.Condition.prototype = {
	constructor: Prodigy.FSM.Condition,
	test: function() {
		return this.game.prodigy.debug.enableFSMLogging && (Util.log("FSM: Testing Condition."), Util.log("FSM: Data:"), Util.log(this.data)), this.data.hasOwnProperty("equals") ? this.data.equals === this.data.value : this.data.hasOwnProperty("notEquals") ? this.data.notEquals !== this.data.value : this.data.hasOwnProperty("greaterThan") ? this.data.greaterThan < this.data.value : this.data.hasOwnProperty("lessThan") ? this.data.lessThan > this.data.value : !0
	}
}, Prodigy.FSM.Action.AddVariableAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.AddVariableAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.AddVariableAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["name", "value"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findParameter("name"),
			t = this.findParameter("value");
		this.sessionVariables.hasOwnProperty(e) ? this.sessionVariables[e] += t : this.sessionVariables[e] = t, this.finish()
	}
}), Prodigy.FSM.Action.AwardItemsAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.AwardItemsAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.AwardItemsAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["items"], {
			wait: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("items");
		Util.isDefined(e) && (this.findParameter("wait") ? this.game.prodigy.open.gotItem(e, this.finish.bind(this)) : (this.game.prodigy.open.gotItem(e), this.finish()))
	}
}), Prodigy.FSM.Action.CompleteSequenceAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CompleteSequenceAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CompleteSequenceAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "quest", "sequence"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone"));
		Util.isDefined(e) && e.completeSequence(this.findParameter("quest"), this.findParameter("sequence")), this.finish()
	}
}), Prodigy.FSM.Action.CompleteQuestAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CompleteQuestAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CompleteQuestAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "quest"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone"));
		Util.isDefined(e) && e.completeQuest(this.findParameter("quest")), this.finish()
	}
}), Prodigy.FSM.Action.ConsumeItemAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ConsumeItemAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ConsumeItemAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["type", "ID"], {
			amount: 1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.prodigy.player.backpack.consume(this.findParameter("type"), this.findParameter("ID"), this.findParameter("amount")), this.finish()
	}
}), Prodigy.FSM.Action.CreateChatBubbleAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CreateChatBubbleAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CreateChatBubbleAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "ID"], {
			height: 0,
			dontHide: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && e.chat(this.findParameter("ID"), this.findParameter("height"), this.findParameter("dontHide")), this.finish()
	}
}), Prodigy.FSM.Action.CreateElementAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CreateElementAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CreateElementAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["parent", "x", "y"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("parent"),
			t = {};
		t.element = Util.isDefined(e) ? this.game.prodigy.create.element(e, this.findParameter("x"), this.findParameter("y")) : null, this.finish(t)
	}
}), Prodigy.FSM.Action.CreateIconAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CreateIconAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CreateIconAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["parent", "type", "ID", "x", "y"], {
			anchor: null
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("parent"),
			t = {};
		Util.isDefined(e) ? (t.icon = this.game.prodigy.icon.createIcon(this.findParameter("x"), this.findParameter("y"), "icon-" + this.findParameter("type") + "-" + this.findParameter("ID"), this.findParameter("anchor")), e.add(t.icon)) : t.icon = null, this.finish(t)
	}
}), Prodigy.FSM.Action.CreateSpriteAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.CreateSpriteAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.CreateSpriteAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["parent", "x", "y", "source"], {
			frame: null,
			width: null,
			height: null,
			alpha: 1,
			inputEnabled: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("parent"),
			t = {};
		if (Util.isDefined(e)) {
			t.sprite = this.game.prodigy.create.sprite(this.findParameter("x"), this.findParameter("y"), this.findParameter("source"), this.findParameter("frame"));
			var i = this.findParameter("width");
			Util.isDefined(i) && (t.sprite.width = i);
			var a = this.findParameter("height");
			Util.isDefined(a) && (t.sprite.height = a), t.sprite.alpha = this.findParameter("alpha"), t.sprite.inputEnabled = this.findParameter("inputEnabled"), e.add(t.sprite)
		} else t.sprite = null;
		this.finish(t)
	}
}), Prodigy.FSM.Action.EnableInputAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.EnableInputAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.EnableInputAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["enable"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.input.enabled = this.findParameter("enable"), this.finish()
	}
}), Prodigy.FSM.Action.EnableSaveAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.EnableSaveAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.EnableSaveAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["enable"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.prodigy.player.saveEnabled = this.findParameter("enable"), this.finish()
	}
}), Prodigy.FSM.Action.ExecuteFunctionAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ExecuteFunctionAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ExecuteFunctionAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["context", "function"], {
			arguments: [],
			wait: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("context");
		if (Util.isDefined(e))
			if (this.findParameter("wait")) {
				var t = this.findParameter("arguments");
				t.push(this.finish.bind(this)), this.functionResults = e[this.findParameter("function")].apply(e, t)
			} else this.functionResults = e[this.findParameter("function")].apply(e, this.findParameter("arguments")), this.finish()
	},
	finish: function() {
		Prodigy.FSM.Action.prototype.finish.call(this, this.functionResults)
	}
}), Prodigy.FSM.Action.ExecuteStateMachineAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ExecuteStateMachineAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ExecuteStateMachineAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["ID"], {
			variables: {},
			wait: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.findParameter("wait") ? this.game.prodigy.fsm.executeWithID(this.findParameter("ID"), this.findParameter("variables"), this.finish.bind(this)) : (this.game.prodigy.fsm.executeWithID(this.findParameter("ID"), this.findParameter("variables")), this.finish())
	}
}), Prodigy.FSM.Action.ExplodeAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ExplodeAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ExplodeAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["x", "y", "w", "h", "time"], {
			wait: !0,
			randomize: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.findParameter("wait") ? this.game.prodigy.effects.explode(this.findParameter("x"), this.findParameter("y"), this.findParameter("w"), this.findParameter("h"), this.findParameter("time"), this.finish.bind(this), this.findParameter("randomize")) : (this.game.prodigy.effects.explode(this.findParameter("x"), this.findParameter("y"), this.findParameter("w"), this.findParameter("h"), this.findParameter("time"), null, this.findParameter("randomize")), this.finish())
	}
}), Prodigy.FSM.Action.FlipCreatureAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.FlipCreatureAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.FlipCreatureAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && e.flip(), this.finish()
	}
}), Prodigy.FSM.Action.GetDailyRewardCountAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.GetDailyRewardCountAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.GetDailyRewardCountAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone")),
			t = {};
		Util.isDefined(e) && (t.result = e.getState("daily").rewards), this.finish(t)
	}
}), Prodigy.FSM.Action.GetZoneStateAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.GetZoneStateAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.GetZoneStateAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "state"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone")),
			t = {};
		if (Util.isDefined(e)) {
			var i = e.getState(this.findParameter("state"));
			t.result = Util.isDefined(i) ? i : null
		}
		this.finish(t)
	}
}), Prodigy.FSM.Action.HasItemAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.HasItemAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.HasItemAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["type", "ID"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = {},
			t = this.findParameter("type");
		switch (t) {
			case "pet":
				e.amount = this.game.prodigy.player.kennel.hasPet(this.findParameter("ID")) ? 1 : 0;
				break;
			default:
				e.amount = this.game.prodigy.player.backpack.hasItem(t, this.findParameter("ID"))
		}
		this.finish(e)
	}
}), Prodigy.FSM.Action.HideFollowAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.HideFollowAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.HideFollowAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["hide"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("screen");
		Util.isDefined(e) && (e.hideHex = this.findParameter("hide")), this.finish()
	}
}), Prodigy.FSM.Action.HighlightElementAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.HighlightElementAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.HighlightElementAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["element", "show"], {
			xOffset: 0,
			yOffset: 0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("element");
		Util.isDefined(e) && e.highlight(this.findParameter("show"), this.findParameter("xOffset"), this.findParameter("yOffset")), this.finish()
	}
}), Prodigy.FSM.Action.HopAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.HopAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.HopAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "time"], {
			wait: !0,
			xOffset: 0,
			height: 20
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && (this.findParameter("wait") ? e.hop(1e3 * this.findParameter("time"), this.finish.bind(this), this.findParameter("xOffset"), this.findParameter("height")) : (e.hop(1e3 * this.findParameter("time"), null, this.findParameter("xOffset"), this.findParameter("height")), this.finish()))
	}
}), Prodigy.FSM.Action.IsOnQuestAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.IsOnQuestAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.IsOnQuestAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "quest"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone")),
			t = {};
		Util.isDefined(e) && (t.result = e.isOnQuest(this.findParameter("quest"))), this.finish(t)
	}
}), Prodigy.FSM.Action.IsOnSequenceAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.IsOnSequenceAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.IsOnSequenceAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "quest", "sequence"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone")),
			t = {};
		Util.isDefined(e) && (t.result = e.isOnSequence(this.findParameter("quest"), this.findParameter("sequence"))), this.finish(t)
	}
}), Prodigy.FSM.Action.IsQuestCompleteAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.IsQuestCompleteAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.IsQuestCompleteAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "quest"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone")),
			t = {};
		Util.isDefined(e) && (t.result = e.isQuestComplete(this.findParameter("quest"))), this.finish(t)
	}
}), Prodigy.FSM.Action.LogAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.LogAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.LogAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["message"], {
			logLevel: "INFO"
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), Util.log(this.findParameter("message"), Util[this.findParameter("logLevel")]), this.finish()
	}
}), Prodigy.FSM.Action.PauseMusicAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.PauseMusicAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.PauseMusicAction,
	validate: function() {
		return Prodigy.FSM.Action.prototype.validate.call(this)
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.prodigy.audio.pauseBGM(), this.finish()
	}
}), Prodigy.FSM.Action.PlayMusicAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.PlayMusicAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.PlayMusicAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["music"], {
			loop: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.prodigy.audio.playBGM(this.findParameter("music"), this.findParameter("loop")), this.game.prodigy.audio.resumeBGM(), this.finish()
	}
}), Prodigy.FSM.Action.PlaySoundAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.PlaySoundAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.PlaySoundAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["pack", "sound"], {
			wait: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.findParameter("wait") ? this.game.prodigy.audio.playSFX(this.findParameter("pack"), this.findParameter("sound"), this.finish.bind(this)) : (this.game.prodigy.audio.playSFX(this.findParameter("pack"), this.findParameter("sound"), null), this.finish())
	}
}), Prodigy.FSM.Action.SetAlphaAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetAlphaAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetAlphaAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["target", "alpha"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("target");
		Util.isDefined(e) && (e.alpha = this.findParameter("alpha")), this.finish()
	}
}), Prodigy.FSM.Action.SetCreatureAnimationAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetCreatureAnimationAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetCreatureAnimationAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "animation"], {
			loop: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && e instanceof Prodigy.Container.SpineCreatureContainer && e.setAnimation(this.findParameter("animation"), this.findParameter("loop")), this.finish()
	}
}), Prodigy.FSM.Action.SetDailyRewardCountAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetDailyRewardCountAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetDailyRewardCountAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "count"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone"));
		Util.isDefined(e) && e.setState("daily", {
			date: e.getState("daily").date,
			flags: e.getState("daily").flags,
			rewards: this.findParameter("count")
		}), this.finish()
	}
}), Prodigy.FSM.Action.SetEventProcessingAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetEventProcessingAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetEventProcessingAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["player", "flag"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("player");
		Util.isDefined(e) && (e.evtProc = this.findParameter("flag")), this.finish()
	}
}), Prodigy.FSM.Action.SetPathAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetPathAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetPathAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "path"], {
			speed: 1,
			wait: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && (this.findParameter("wait") ? e.setPath(this.findParameter("path"), this.finish.bind(this), this.findParameter("speed")) : (e.setPath(this.findParameter("path"), null, this.findParameter("speed")), this.finish()))
	}
}), Prodigy.FSM.Action.SetValidPathAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetValidPathAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetValidPathAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "pathfinder", "x", "y"], {
			wait: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature"),
			t = this.findObjectParameter("pathfinder");
		Util.isDefined(e) && Util.isDefined(t) && (this.findParameter("wait") ? e.setValidPath(t, this.findParameter("x"), this.findParameter("y"), this.finish.bind(this)) : (e.setValidPath(t, this.findParameter("x"), this.findParameter("y"), null), this.finish()))
	}
}), Prodigy.FSM.Action.SetVariableAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetVariableAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetVariableAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["name", "value"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.sessionVariables[this.findParameter("name")] = this.findParameter("value"), this.finish()
	}
}), Prodigy.FSM.Action.SetVariablesAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetVariablesAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetVariablesAction,
	validate: function() {
		return Prodigy.FSM.Action.prototype.validate.call(this)
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		for (var e in this.parameters) this.parameters.hasOwnProperty(e) && (this.sessionVariables[e] = this.findParameter(e));
		this.finish()
	}
}), Prodigy.FSM.Action.SetVisibleAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetVisibleAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetVisibleAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["target", "visible"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("target");
		Util.isDefined(e) && (e.visible = this.findParameter("visible")), this.finish()
	}
}), Prodigy.FSM.Action.SetWalkSpeedAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetWalkSpeedAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetWalkSpeedAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["creature", "walkSpeed"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("creature");
		Util.isDefined(e) && (e.walkSpeed = this.findParameter("walkSpeed")), this.finish()
	}
}), Prodigy.FSM.Action.SetZoneStateAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.SetZoneStateAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.SetZoneStateAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["zone", "state", "value"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.world.getZone(this.findParameter("zone"));
		Util.isDefined(e) && e.setState(this.findParameter("state"), this.findParameter("value")), this.finish()
	}
}), Prodigy.FSM.Action.ShakeAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ShakeAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ShakeAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["delay", "time"], {
			intensity: 10,
			direction: null,
			wait: !0
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.findParameter("wait") ? this.game.prodigy.effects.shake(1e3 * this.findParameter("delay"), 1e3 * this.findParameter("time"), this.findParameter("intensity"), this.findParameter("direction"), this.finish.bind(this)) : (this.game.prodigy.effects.shake(1e3 * this.findParameter("delay"), 1e3 * this.findParameter("time"), this.findParameter("intensity"), this.findParameter("direction"), null), this.finish())
	}
}), Prodigy.FSM.Action.ShowDialogueAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.ShowDialogueAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.ShowDialogueAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["character", "ID"], {
			overlayMode: !1,
			showYesNo: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.game.prodigy.dialogue.create(),
			t = this.findParameter("showYesNo"),
			i = this.findParameter("ID");
		if (i.constructor === Array)
			for (var a = 0; a < i.length; a++) this.setDialogue(e, i[a], t && a + 1 === i.length);
		else this.setDialogue(e, i, t);
		t || e.setText({
			callback: this.finishWithAnswer.bind(this, !1)
		}), e.start(this.findParameter("character"), this.findParameter("overlayMode"))
	},
	finishWithAnswer: function(e) {
		this.finish({
			result: e
		})
	},
	setDialogue: function(e, t, i) {
		i ? e.setText({
			index: t,
			yes: this.finishWithAnswer.bind(this, !0),
			no: this.finishWithAnswer.bind(this, !1)
		}) : e.setText(t)
	}
}), Prodigy.FSM.Action.StartBattleAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.StartBattleAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.StartBattleAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["introText", "data"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("zone"),
			t = this.findObjectParameter("map");
		Util.isDefined(e) && (this.findParameter("wait") ? e.util.getBattle(t, this.findParameter("introText"), this.findParameter("data"), this.finish.bind(this))() : (e.util.getBattle(t, this.findParameter("introText"), this.findParameter("data"), null)(), this.finish()))
	}
}), Prodigy.FSM.Action.TeleportAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.TeleportAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.TeleportAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["map", "x", "y"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.prodigy.world.teleport(this.findParameter("map"), this.findParameter("x"), this.findParameter("y")), this.finish()
	}
}), Prodigy.FSM.Action.TweenAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.TweenAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.TweenAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["object", "to"], {
			loop: !1,
			wait: !1
		})
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("object"),
			t = this.findParameter("to"),
			i = this.findParameter("wait");
		if (Util.isDefined(e)) {
			for (var a = this.game.add.tween(e), s = 0; s < t.length; s++) {
				var r = t[s];
				Util.isDefined(r.properties) && Util.isDefined(r.duration) && Util.isDefined(r.ease) && a.to(r.properties, 1e3 * r.duration, r.ease, !1, r.delay, Util.isDefined(r.repeat) && -1 === r.repeat ? Number.MAX_VALUE : r.repeat, r.yoyo)
			}
			this.findParameter("loop") && a.loop(), i && a.onComplete.add(this.finish.bind()), a.start()
		}
		i || this.finish()
	}
}), Prodigy.FSM.Action.WaitAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.WaitAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.WaitAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["time"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this), this.game.time.events.add(1e3 * this.findParameter("time"), this.finish.bind(this), this)
	}
}), Prodigy.FSM.Action.WaitForEventAction = function(e, t, i, a, s) {
	Prodigy.FSM.Action.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.FSM.Action.WaitForEventAction, Prodigy.FSM.Action, {
	constructor: Prodigy.FSM.Action.WaitForEventAction,
	validate: function() {
		var e = Prodigy.FSM.Action.prototype.validate.call(this);
		return e && this.validateParameters(["component", "event"])
	},
	execute: function() {
		Prodigy.FSM.Action.prototype.execute.call(this);
		var e = this.findObjectParameter("component");
		if (Util.isDefined(e)) {
			var t = e.events[this.findParameter("event")];
			if (Util.isDefined(t)) return t.add(this.finish.bind(this)), void 0
		}
		this.finish()
	}
}), Prodigy.Listener.MessageListener = function(e) {
	this.game = e, this.receivers = []
}, Prodigy.Listener.MessageListener.prototype = {
	constructor: Prodigy.Listener.MessageListener,
	add: function(e, t, i) {
		this.receivers.push({
			action: e,
			callback: t,
			once: i
		})
	},
	clear: function(e) {
		if (Util.isDefined(e))
			for (var t = this.receivers.length - 1; t >= 0; t--) {
				var i = this.receivers[t];
				i.action === e && this.receivers.splice(t, 1)
			} else this.receivers = []
	},
	onMessage: function(e) {
		Util.log("Message received: " + e.action);
		for (var t = this.receivers.length - 1; t >= 0; t--) {
			var i = this.receivers[t];
			i.action === e.action && (i.callback(e.data), i.once && this.receivers.splice(t, 1))
		}
	}
}, Prodigy.Broadcaster = function(e) {
	this.callbacks = {}, this.listeners = {}, this.broadcastIdCount = 0, this.game = e
}, Prodigy.Broadcaster.prototype = {
	clear: function() {
		var e, t, i, a;
		for (e in this.callbacks)
			for (i in this.callbacks[e]) {
				for (a = 0; this.callbacks[e][i].length > a;) this.callbacks[e][i].persistent ? a++ : this.callbacks[e][i].pop();
				0 === a && (this.callbacks[e][i] = void 0, delete this.callbacks[e][i])
			}
		for (e in this.listeners)
			for (t in this.listeners[e]) {
				for (a = 0; this.listeners[e][t].length > a;) this.listeners[e][t].persistent ? a++ : this.listeners[e][t].pop();
				0 === a && (this.listeners[e][t] = void 0, delete this.listeners[e][t])
			}
	},
	addAppListener: function(e, t, i, a, s) {
		Util.isDefined(a) || (a = this.game), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i) || Util.log("addAppListener - Invalid arguments", Util.ERROR), a = this.hashContext(a), "undefined" == typeof this.callbacks[a] && (this.callbacks[a] = {}), "undefined" == typeof this.listeners[a] && (this.listeners[a] = {}), "undefined" == typeof this.callbacks[a][e] && (this.callbacks[a][e] = []), "undefined" == typeof this.listeners[a][e] && (this.listeners[a][e] = []), this.callbacks[a][e].push(t), this.listeners[a][e].push(i), this.callbacks[a][e].persistent = Util.isDefined(s), this.listeners[a][e].persistent = Util.isDefined(s)
	},
	removeAppListener: function(e, t, i) {
		if (Util.isDefined(i) || (i = this.game), !Util.isDefined(e)) return Util.log("removeAppListener - Invalid arguments", Util.ERROR), void 0;
		if (i = this.hashContext(i), "undefined" != typeof this.callbacks[i] && "undefined" != typeof this.callbacks[i][e] && "undefined" != typeof this.listeners[i] && "undefined" != typeof this.listeners[i][e]) {
			for (var a = 0; a < this.callbacks[i][e].length; a++) Util.isDefined(t) && this.listeners[i][e][a] !== t || (this.callbacks[i][e].splice(a, 1), this.listeners[i][e].splice(a, 1), a--);
			0 === this.callbacks[i][e].length && delete this.callbacks[i][e], 0 === this.listeners[i][e].length && delete this.listeners[i][e]
		}
	},
	broadcast: function(e, t, i) {
		if (Util.isDefined(t) || (t = this.game), Util.isDefined(e) || Util.log("removeAppListener - Invalid arguments", Util.ERROR), t = this.hashContext(t), "undefined" != typeof this.callbacks[t] && "undefined" != typeof this.callbacks[t][e] && "undefined" != typeof this.listeners[t] && "undefined" != typeof this.listeners[t][e]) {
			if (1 === this.callbacks[t][e].length) return this.callbacks[t][e][0].apply(this.listeners[t][e][0], i);
			for (var a = {
					listeners: [],
					output: []
				}, s = 0; s < this.callbacks[t][e].length; s++) a.listeners.push(this.listeners[t][e][s]), a.output.push(this.callbacks[t][e][s].apply(this.listeners[t][e][s], i));
			return a
		}
	},
	hashContext: function(e) {
		return "string" != typeof e ? ("undefined" == typeof e.broadcastId && (e.broadcastId = this.broadcastIdCount, this.broadcastIdCount++), "bId" + e.broadcastId) : e
	}
}, Prodigy.Broadcaster.prototype.constructor = Prodigy.Broadcaster, Prodigy.InputDispatcher = function(e) {
	this.game = e, this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), cursors = e.input.keyboard.createCursorKeys(), e.input.mouse.mouseWheelCallback = this.dispatchMouseEvent.bind(this, Prodigy.Events.Input.ON_MOUSE_WHEEL), e.input.keyboard.onDownCallback = this.dispatchKeyboardEvent.bind(this, "Prodigy.Events.Input.ON_KEY_DOWN_"), e.input.keyboard.onUpCallback = this.dispatchKeyboardEvent.bind(this, "Prodigy.Events.Input.ON_KEY_UP_"), e.input.keyboard.onPressCallback = this.dispatchKeyPressEvent.bind(this, "Prodigy.Events.Input.ON_KEY_PRESS_")
}, Prodigy.InputDispatcher.prototype = {
	constructor: Prodigy.InputDispatcher,
	dispatchMouseEvent: function(e, t) {
		this.game.broadcaster.broadcast(e, "Input", [t])
	},
	dispatchKeyboardEvent: function(e, t) {
		var i = "";
		Util.isNullOrUndefined(t.key) || (i = t.key.toUpperCase()), this.game.broadcaster.broadcast(e + i, "Input", [t])
	},
	dispatchKeyPressEvent: function(e, t, i) {
		this.game.broadcaster.broadcast(e + "_" + i.keyCode, "Input", [i])
	}
}, Prodigy.Random = function() {}, Prodigy.Random.integerInRange = function(e, t) {
	return Math.floor(Prodigy.Random.realInRange(e, t))
}, Prodigy.Random.realInRange = function(e, t) {
	return Math.random() * (t - e) + e
}, Prodigy.Random.weightedArrayElement = function(e) {
	var t = 0,
		i = [],
		a = !Util.isDefined(Prodigy.Lodash.find(e, function(e) {
			return e.weight <= 0
		}));
	if (a && e.length > 0) {
		for (var s = Math.round(1 / (Prodigy.Lodash.minBy(e, "weight").weight / 100)), r = 0; r < e.length; r++) Util.isDefined(e[r].weight) && (t += e[r].weight * s), i.push(t);
		var n = this.realInRange(0, t);
		for (r = 0; r < e.length; r++)
			if (n < i[r]) return e[r]
	}
	return null
}, Prodigy.SeededRandom = function(e) {
	this.rnd = e
}, Prodigy.SeededRandom.prototype = {
	constructor: Prodigy.SeededRandom,
	frac: function(e) {
		this.rnd.sow([e]);
		var t = this.rnd.frac();
		return this.rnd.sow([(Date.now() * Math.random()).toString()]), t
	},
	pick: function(e, t) {
		this.rnd.sow([t]);
		var i = this.rnd.pick(e);
		return this.rnd.sow([(Date.now() * Math.random()).toString()]), i
	},
	shuffleArray: function(e, t) {
		for (var i, a = e.length; 0 !== a;) {
			i = Math.floor(this.frac(t + a) * a), a--;
			var s = e[i];
			e[i] = e[a], e[a] = s
		}
	}
}, Device.isDesktopOrTablet = function(e) {
	return e.device.desktop || navigator.userAgent.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("Android") >= 0 && -1 === navigator.userAgent.indexOf("Mobile")
}, Device.isTablet = function() {
	return navigator.userAgent.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("Android") >= 0 && -1 === navigator.userAgent.indexOf("Mobile")
}, Device.isIE = function() {
	return -1 !== navigator.userAgent.indexOf("Trident")
}, Device.isChrome = function() {
	return navigator.userAgent.indexOf("Chrome") >= 0 || navigator.userAgent.indexOf("CriOS") >= 0
}, Device.iPadMini = function() {
	return navigator.userAgent.indexOf("iPad") >= 0 && (screen.width <= 1024 && screen.height <= 768 || screen.height <= 1024 && screen.width <= 768)
}, Device.isIOS = function() {
	return navigator.userAgent.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("iPhone") >= 0 || navigator.userAgent.indexOf("iPod") >= 0
}, Prodigy.Loader = function(e) {
	this.game = e, this.assetsArray = [], this.timer = setInterval(this.process.bind(this), 100), this.loading = !1
}, Prodigy.Loader.RETRY_TIME = 1e3, Prodigy.Loader.RETRY_TOTAL = 5, Prodigy.Loader.prototype = {
	constructor: Prodigy.Loader,
	setLoader: function(e) {
		this.loader = e, this.loader.crossOrigin = "anonymous", this.loader.baseURL = GameConstants.get("GameConstants.Build.ASSETS_LOCATION"), this.loader.onLoadComplete.add(this.loadComplete.bind(this), this)
	},
	assets: function(e, t) {
		if ("string" == typeof e) {
			for (var i = 0; i < this.assetsArray.length; i++)
				if (1 === this.assetsArray[i].tags.length && this.assetsArray[i].tags[0] === e) return this.assetsArray[i].callbacks.push(t), void 0;
			return this.assetsArray.push({
				tags: [e],
				callbacks: [t],
				retry: Prodigy.Loader.RETRY_TOTAL
			}), void 0
		}
		this.assetsArray.push({
			tags: e,
			callbacks: [t],
			retry: Prodigy.Loader.RETRY_TOTAL
		})
	},
	loadComplete: function() {
		for (var e = this.assetsArray.length - 1; e >= 0; e--) {
			for (var t = this.assetsArray[e], i = !1, a = !1, s = 0; s < t.tags.length; s++) this.isFileLoaded(t.tags[s]) || (a = !0, Util.isDefined(this.game.prodigy.assets._assets[t.tags[s]]) && (this.game.prodigy.assets._assets[t.tags[s]].noCache = !0));
			if (a) {
				if (t.retry <= 0 && (i = !0, Util.isDefined(t.callbacks)))
					for (var r = 0; r < t.callbacks.length; r++) Util.isDefined(t.callbacks[r]) && t.callbacks[r](t.tags, !1)
			} else if (i = !0, Util.isDefined(t.callbacks))
				for (var r = 0; r < t.callbacks.length; r++) Util.isDefined(t.callbacks[r]) && t.callbacks[r](t.tags, !0);
			i && this.assetsArray.splice(e, 1)
		}
		this.loading = !1
	},
	process: function() {
		if (!(!Util.isDefined(this.loader) || this.loading || this.assetsArray.length <= 0)) {
			for (var e = (new Date).getTime(), t = !1, i = 0; i < this.assetsArray.length; i++) {
				var a = this.assetsArray[i];
				if (!a.nextRetry || a.nextRetry <= e) {
					t = !0, a.retry--, a.nextRetry = e + Prodigy.Loader.RETRY_TIME;
					for (var s = 0; s < a.tags.length; s++) this.processFile(a.tags[s])
				}
			}
			t && (this.loading = !0, this.loader.start())
		}
	},
	processFile: function(e) {
		if (Util.isDefined(e) && null !== e && "" !== e && !this.isFileLoaded(e)) try {
			var t = "",
				i = this.game.prodigy.assets.getAsset(e),
				a = Util.isDefined(i.fullURL) ? i.fullURL : t + i.base + i.url,
				s = Util.isDefined(i.noCache) && i.noCache ? "?r=" + (new Date).getTime() : "";
			if (!Util.isDefined(a)) return;
			switch (i.type) {
				case "json":
					this.loader.json(e, a + s, !0);
					break;
				case "sprite":
					this.loader.image(e, a + s, !1);
					break;
				case "spritesheet":
					Util.isDefined(i.fullURL) || Util.isDefined(i.base) || (a = "v1/spritesheets/" + e + "/" + i.v + "/" + e + ".png");
					var r = i.w,
						n = i.h;
					this.loader.spritesheet(e, a + s, r, n);
					break;
				case "sfx":
				case "bgm":
					a = "v1/audio/" + e + "/" + i.v + "/" + e, this.loader.audio(e, [a + ".ogg" + s, a + ".mp3" + s], !0);
					break;
				case "atlas":
					var o = i.key || e;
					a = "v1/atlases/" + o + "/" + i.v + "/" + o, this.loader.atlasJSONHash(e, a + ".png", a + ".json" + s);
					break;
				case "local":
					a = i.base + i.key + "/" + i.v + "/" + i.key, this.loader.atlasJSONHash(e, a + ".png", a + ".json");
					break;
				case "spine":
					a = "v1/spine/" + e + "/" + i.v + "/" + e + ".json" + s, this.loader.spine(e, a);
					break;
				case "singleImage":
					a = "v1/single-images/" + e + "/" + i.v + "/" + e + ".png" + s, this.loader.image(e, a, !1);
					break;
				case "bitmapFont":
					a = "v1/bitmap-fonts/" + e + "/" + i.v + "/" + e, this.loader.bitmapFont(e, a + ".png", a + ".xml" + s)
			}
		} catch (h) {}
	},
	isFileLoaded: function(e) {
		if (!Util.isDefined(e) || null === e || "" === e) return !0;
		try {
			var t = this.game.prodigy.assets.getAsset(e);
			switch (t.type) {
				case "json":
				case "spine":
					if (!this.game.cache.checkJSONKey(e)) return !1;
					break;
				case "sprite":
				case "spritesheet":
				case "singleImage":
				case "atlas":
					if (!this.game.cache.checkImageKey(e)) return !1;
					break;
				case "local":
					if (!this.game.cache.checkImageKey(e)) return !1;
					break;
				case "sfx":
				case "bgm":
					if (!this.game.cache.checkSoundKey(e)) return !1;
					break;
				case "bitmapFont":
					if (!this.game.cache.checkBitmapFontKey(e)) return !1
			}
		} catch (i) {}
		return !0
	}
};
var Pathfinder = function() {
	function e(e, t) {
		this.init(e, t), this.callbacks = [], this.events = []
	}
	return e.prototype.addCallback = function(e, t, i) {
		this.callbacks.push({
			ID: e,
			callback: t,
			mainPlayerRequired: i
		})
	}, e.prototype.init = function(e, t) {
		this.area = e, this.size = t || 20
	}, e.prototype.getValidCoord = function() {
		for (var e = -1, t = -1, i = 1e3; !this.isNodeOpen(e, t) && i > 0;) e = Math.floor(Math.random() * this.area[0].length), t = Math.floor(Math.random() * this.area.length), i--;
		return [e * this.size, t * this.size]
	}, e.prototype.getCallback = function(e, t, i) {
		for (var a = 0; a < this.callbacks.length; a++) {
			var s = this.callbacks[a];
			if (s.ID === this.getNodeValue(e, t) && (!Util.isDefined(s.mainPlayerRequired) || !s.mainPlayerRequired || i)) return s.callback
		}
		return null
	}, e.prototype.xyToTile = function(e, t) {
		return {
			x: Math.floor(e / this.size),
			y: Math.floor(t / this.size)
		}
	}, e.prototype.tileToXY = function(e, t) {
		return {
			x: Math.floor((e + .5) * this.size),
			y: Math.floor((t + .5) * this.size)
		}
	}, e.prototype.findBasicPath = function(e, t, i, a) {
		var s = i,
			r = a;
		e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
		var n = this.findNodeBetween({
			x: e,
			y: t
		}, {
			x: i,
			y: a
		});
		return n ? [{
			x: n.x * this.size,
			y: n.y * this.size
		}] : [{
			x: s,
			y: r
		}]
	}, e.prototype.findPath = function(e, t, i, a, s) {
		if (!this.lookingForPath) {
			this.lookingForPath = !0;
			var r = i,
				n = a;
			e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
			var o = new EasyStar.js;
			o.setGrid(this.area), o.setAcceptableTiles([1, 2, 3, 4, 5]), e = e > 63 ? 63 : 0 > e ? 0 : e, i = i > 63 ? 63 : 0 > i ? 0 : i, t = t > 35 ? 35 : 0 > t ? 0 : t, a = a > 35 ? 35 : 0 > a ? 0 : a, o.findPath(e, t, i, a, this.processPath.bind(this, e, t, r, n, s)), o.calculate()
		}
	}, e.prototype.processPath = function(e, t, i, a, s, r) {
		if (Util.isDefined(r)) {
			var n = [];
			n.push(r[0]);
			for (var o = r.length - 1; o > 0 && n[n.length - 1] !== r[o]; o--) {
				var h = this.findNodeBetween(n[n.length - 1], r[o]);
				h || (n.push(r[o]), o = r.length)
			}
			for (var l = [], o = n.length - 1; o > 0; o--) n[o].x *= 20, n[o].y *= 20, l.push(n[o]);
			l[0] = {
				x: i,
				y: a
			}
		}
		Util.isDefined(s) && s(l), this.lookingForPath = !1
	}, e.prototype.findNodeBetween = function(e, t) {
		var i = t.x - e.x,
			a = t.y - e.y,
			s = Math.abs(i) >= Math.abs(a) ? Math.abs(i) : Math.abs(a);
		if (0 === s) return e;
		i /= s, a /= s;
		for (var r = e.x, n = e.y, o = e; r !== t.x || n !== t.y;) {
			if (r += i, n += a, (i > 0 && r > t.x || 0 > i && r < t.x) && (r = t.x), (a > 0 && n > t.y || 0 > a && n < t.y) && (n = t.y), !this.isNodeOpen(Math.floor(r), Math.floor(n))) return o;
			o = {
				x: Math.floor(r),
				y: Math.floor(n)
			}
		}
		return null
	}, e.prototype.isNodeOpen = function(e, t) {
		var i = this.getNodeValue(e, t);
		return i > 0 && 6 != i
	}, e.prototype.getNodeValue = function(e, t) {
		return t < this.area.length && t >= 0 && e < this.area[0].length && e >= 0 ? this.area[t][e] : -1
	}, e.prototype.isPathBlocked = function(e, t, i, a) {
		e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
		var s = this.findNodeBetween({
			x: e,
			y: t
		}, {
			x: i,
			y: a
		});
		return Util.isDefined(s)
	}, e
}();
Prodigy.GameObj = function(e) {
	this.version = "version " + GameConstants.get("GameConstants.Build.VERSION"), this.game = e, this.game.versioned = window.location.href.indexOf("feature") > -1 || window.location.href.indexOf("release") > -1, this.game.clientVersion = this.game.versioned ? null : Util.validateVersion(GameConstants.get("GameConstants.Build.VERSION")), this.player = new Player(this.game), this.breadcrumbManager = new Prodigy.Breadcrumbs.BreadcrumbManager(this.player.state, new Prodigy.Breadcrumbs.GameBreadcrumbConfig), this.updateCount = 0, this.game.broadcaster = new Prodigy.Broadcaster(e), this.game.seededRandom = new Prodigy.SeededRandom(e.rnd), this.assets = new Prodigy.Assets, this.load = new Prodigy.Loader(e), this.graphics = new Prodigy.Controller.GraphicsController(e), this.audio = new Prodigy.Controller.AudioController(e), this.mail = new Prodigy.MailController(e), this.microtransaction = new Prodigy.MicrotransactionController(e), this.battle = new Prodigy.Controller.BattleController(e), this.pvp = new Prodigy.Controller.PVPController(e), this.achievements = new Prodigy.Controller.AchievementController(e), this.surveyController = new Prodigy.Controller.SurveyController(e), this.colorReplaceController = new Prodigy.Controller.ColorReplaceController(e), this.automation = new Prodigy.Controller.AutomationController(e), this.localization = new Prodigy.Framework.Localization.LocaleController(GameConstants.get("GameConstants.Debug.DEBUG_LOCALIZATION"), GameConstants.get("GameConstants.Debug.VERBOSE_LOCALIZATION")), this.fsm = new Prodigy.Controller.FSMController(e), this.open = new Prodigy.MenuFactory(e), this.effects = new Prodigy.EffectFactory(e), this.event = new Prodigy.EventFactory(e), this.dialogue = new Prodigy.DialogueFactory(e), this.education = new ExternalFactory(e), this.skin = new Prodigy.SkinningRelay(e), this.create = new Prodigy.Factory.AdvGameObjectFactory(e), this.icon = new Prodigy.IconFactory(e), this.animation = new Prodigy.GenAnimation(e), this.chat = new Prodigy.ChatManager, this.network = new NetworkManager(e), this.bounty = new Prodigy.BountyManager(e), this.attacks = new Prodigy.Attacks(e), this.statusEffects = new Prodigy.StatusEffectManager(e), this.microtransactionNetworkHandler = new Prodigy.NetworkHandlers.MicrotransactionNetworkHandler(e), this.mailNetworkHandler = new Prodigy.NetworkHandlers.MailerNetworkHandler(e), this.friendsListNetworkHandler = new Prodigy.NetworkHandlers.FriendsListNetworkHandler(e), this.titansNetworkHandler = new Prodigy.NetworkHandlers.TitansNetworkHandler(e), this.messageListener = new Prodigy.Listener.MessageListener(e), this.world = new Prodigy.World(e), this.dialogues = new Prodigy.Dialogues(e), this.hints = new Prodigy.Hints, this.emailDomains = new Prodigy.EmailDomains, this.dailyLoginBonusRewards = new Prodigy.DailyLoginBonusRewards, this.twilightWheelPrizes = new Prodigy.TwilightWheelPrizes(e), this.stores = new Prodigy.Stores(e), this.game.broadcaster.addAppListener(Prodigy.Events.GameObj.PLAYER_INITIALIZED, this.initializeBreadcrumbs.bind(this), this, null), this.updateCount = 0, this.debug = new Prodigy.Debug(e), Util.log(this.version, Util.INFO), Prodigy.Lodash.VERSION !== GameConstants.get("GameConstants.Build.LODASH_VERSION") && Util.log("LODASH VERSION CHANGED", Util.ERROR)
}, Prodigy.GameObj.prototype = {
	constructor: Prodigy.GameObj,
	initializeBreadcrumbs: function() {
		this.breadcrumbManager = new Prodigy.Breadcrumbs.BreadcrumbManager(this.player.state, new Prodigy.Breadcrumbs.GameBreadcrumbConfig)
	},
	init: function(e) {
		this.textureBelow = e.add.renderTexture(1280, 720), this.textureAbove = e.add.renderTexture(1280, 720), this.textureMenu = e.add.renderTexture(1280, 720), this.textureExtra = e.add.renderTexture(1280, 720)
	},
	update: function() {
		this.updateCount++, this.game.broadcaster.broadcast(Prodigy.Events.GameObj.UPDATE, this.game, null)
	},
	cleanup: function() {
		this.mail.cleanup(), this.open.cleanup(), this.messageListener.clear(), this.game.broadcaster.clear()
	},
	start: function(e, t, i) {
		t = t || {}, t.target = e, t.assets = t.assets || [], t.assets = t.assets.concat(this.game.state.states[e].assets), this.game.state.states[e]._screenData = i, "PVP" === e ? this.game.state.states.PVPLoading.startLoading(t) : Util.isDefined(this.game.state.states[this.game.state.current].fadeOut) ? this.game.state.states[this.game.state.current].fadeOut(t.fadeOut, this.game.state.states.Loading.startLoading.bind(this.game.state.states.Loading, t)) : this.game.state.states.Loading.startLoading(t)
	},
	loading: function(e, t) {
		this.game.input.enabled = !e || t, e ? (Util.isDefined(this.spinner) || (this.spinner = this.create.sprite(640, 360, "core", "loading"), this.game.broadcaster.broadcast(Prodigy.Events.Screen.ADD_CHILD, this.game, [this.spinner, "overlay"])), this.spinner.alpha = 1, this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 1500, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1), this.game.add.tween(this.spinner).to({
			alpha: 1
		}, 500, Phaser.Easing.Linear.None, !0, 300)) : Util.isDefined(this.spinner) && this.spinner.destroy()
	}
}, Prodigy.GenAnimation = function(e) {
	this.game = e
}, Prodigy.GenAnimation.prototype = {
	constructor: Prodigy.GenAnimation,
	"float": function(e, t, i, a, s) {
		s = s || !1;
		var r = this.game.add.tween(e).to({
			y: "-" + t
		}, i, Phaser.Easing.Quadratic.InOut).to({
			y: "+" + t
		}, i, Phaser.Easing.Quadratic.InOut);
		return a && r.loop(), s && r.start(), r
	},
	translate: function(e, t, i, a, s, r, n) {
		n = n || !1, Util.isDefined(s) || (s = 0), Util.isDefined(s) || (r = Phaser.Easing.Linear.None);
		var o = this.game.add.tween(e).delay(s).to({
			x: t,
			y: i
		}, a, r);
		return n && o.start(), o
	},
	rotate: function(e, t, i, a, s, r) {
		r = r || !1, Util.isDefined(a) || (a = 0), Util.isDefined(a) || (s = Phaser.Easing.Linear.None);
		var n = this.game.add.tween(e).delay(a).to({
			angle: t
		}, i, s);
		return r && n.start(), n
	},
	fade: function(e, t, i, a, s, r) {
		r = r || !1, Util.isDefined(a) || (a = 0), Util.isDefined(a) || (s = Phaser.Easing.Linear.None);
		var n = this.game.add.tween(e).delay(a).to({
			alpha: t
		}, i, s);
		return r && n.start(), n
	},
	hop: function(e, t, i, a, s, r, n) {
		n = n || !1, r = r || !1;
		var o = this.game.add.tween(e).to({
			x: t
		}, s, Phaser.Easing.Linear.None);
		r && o.to({
			alpha: 0
		}, 10, Phaser.Easing.Linear.None);
		var h = {
			tween: o,
			tween2: this.game.add.tween(e).to({
				y: i
			}, s / 2, Phaser.Easing.Quadratic.Out).to({
				y: a
			}, s / 2, Phaser.Easing.Quadratic.In),
			start: function() {
				return this.tween.start(), this.tween2.start(), this
			},
			onComplete: {
				tween: o,
				add: function(e) {
					this.tween.onComplete.add(e.bind(this))
				}
			}
		};
		return n && h.start(), h
	},
	shake: function(e, t, i, a, s, r, n, o, h) {
		h = h || !1, Util.isNullOrUndefined(o) && (o = Phaser.Easing.Linear.None), r = .25 * r;
		var l = this.game.add.tween(e).delay(Util.getOptionalParameter(n, 0)).to({
			x: t,
			y: i
		}, r, o).to({
			x: a,
			y: s
		}, r, o).to({
			x: t,
			y: i
		}, r, o).to({
			x: 0,
			y: 0
		}, r, o);
		return h && l.start(), l
	}
}, Prodigy.Debug = function() {
	this.stressTests = {
		playerContainers: [],
		emitters: []
	}, this.attackDamageCache = {}, this.bountyOverrides = {}
}, Prodigy.Debug.ROULETTE = -1, Prodigy.Debug.prototype = {
	constructor: Prodigy.Debug,
	setup: function(e) {
		if (enableDebug = GameConstants.enableDebug.bind(this, e), GameConstants.get("GameConstants.Build.DEBUG")) {
			this.enableDebugCalls(e, !0);
			var t = GameConstants.get("GameConstants.Debug.AUTO_LOGIN");
			if (t.length > 0) {
				var i = e.state.states.Login;
				i.username = t[0], i.password = t[1], i.login();
				var a = function(e, t) {
					("CharSelect" === t || "CharCreate" === t) && (e.time.events.add(500, this.applyDebugOptions, this), e.state.onStateChange.removeAll(this))
				}.bind(this, e);
				e.state.onStateChange.add(a, this)
			} else this.applyDebugOptions(e)
		}
	},
	applyDebugOptions: function(e) {
		GameConstants.get("GameConstants.Build.MUTE_BGM") && mute(), GameConstants.get("GameConstants.Build.KILL_GORE") && killGore(), GameConstants.get("GameConstants.Build.EASY_MODE") && easyMode(!0), GameConstants.get("GameConstants.Debug.COMPLETE_TUTORIAL") && completeTutorial();
		var t = GameConstants.get("GameConstants.Build.TELEPORT");
		"" !== t && tp(t);
		var i = GameConstants.get("GameConstants.Build.QUEST");
		i.length > 1 && (setQuest(i[0], i[1]), 3 === i.length && setTimeout(tp, 6e3, i[2]));
		var a = GameConstants.get("GameConstants.Build.ITEM_TYPE");
		a.length > 0 && getItemType(a[0], a[1], a.length > 2 ? a[2] : 1), "" !== t && tp(t), GameConstants.get("GameConstants.Build.MEMBERSHIP") && setMembership();
		var s = GameConstants.get("GameConstants.Debug.GET_PET");
		if (s.length > 0 && (getPet(s[0], s[1], s[2], s[3]), s[4] && (e.prodigy.player.kennel.setTeam(e.prodigy.player.kennel.data[0], 0), e.prodigy.player.kennel.setTeam(e.prodigy.player.data, 1))), GameConstants.get("GameConstants.Debug.SET_LEVEL") > 0) {
			var r = Prodigy.Creature.starsToLevel(GameConstants.get("GameConstants.Debug.SET_LEVEL"));
			addStars(r - 10)
		}
		GameConstants.get("GameConstants.Debug.GET_GOLD") > 0 && getGold(GameConstants.get("GameConstants.Debug.GET_GOLD")), GameConstants.get("GameConstants.Debug.GET_SPELL") > 0 && getSpell(GameConstants.get("GameConstants.Debug.GET_SPELL")), GameConstants.get("GameConstants.Debug.FSM_LOGGING") && fsmLogging(!0)
	},
	enableDebugCalls: function(e) {
		GameConstants.get("GameConstants.Build.DEBUG") && (enableGameConstant = GameConstants.enableGameConstant.bind(this), enableAutosave = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.AUTOSAVE_ENABLED"), enablePopups = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.POPUPS_ENABLED"), enablePlayerCards = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.PLAYER_CARDS_ENABLED"), enableWarpMode = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.WARP_MODE_ENABLED"), enableMonsters = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.MONSTERS_ENABLED"), enableWizards = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.WIZARDS_ENABLED"), enableGodMode = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.GOD_MODE_ENABLED"), enableEducation = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.EDUCATION_ENABLED"), enableAutoResolveBattles = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.AUTO_RESOLVE_BATTLES_ENABLED"), enableAutoResolveTowerBattles = GameConstants.enableGameConstant.bind(this, "GameConstants.Debug.AUTO_RESOLVE_TOWER_BATTLES_ENABLED"), scaleEncounterDistance = GameConstants.scaleEncounterDistance.bind(this), getKeyItems = this.getKeyItems.bind(this, e), playScene = this.playScene.bind(this, e), setQuest = this.debugQuest.bind(this, e), debugMap = this.debugMap.bind(this, e), setState = this.setState.bind(this, e), initQuest = this.initQuest.bind(this, e), completeQuestRequirements = this.completeQuestRequirements.bind(this, e), deleteState = this.deleteState.bind(this, e), setEmail = this.setParentEmail.bind(this, e), addStars = this.addStars.bind(this, e), tpTowerFloor = this.tpTowerFloor.bind(this, e), tp = this.tp.bind(this, e), inspect = this.inspect.bind(this, e), showLayer = this.showLayer.bind(this, e), showCollisions = this.showCollisions.bind(this, e), answer = this.answer.bind(this, e), hoard = this.hoard.bind(this, e), drDino = this.drDino.bind(this, e), grabBag = this.grabBag.bind(this, e), getItem = this.getItem.bind(this, e), getItemType = this.getItemType.bind(this, e), getCurrency = this.getCurrency.bind(this, e), getPet = this.getPet.bind(this, e), getAllPets = this.getAllPets.bind(this, e), getBounty = this.getBounty.bind(this, e), getSpell = this.getSpell.bind(this, e), removeSpell = this.removeSpell.bind(this, e), getGold = this.getGold.bind(this, e), bookWorm = this.bookWorm.bind(this, e), smallLoan = this.smallLoan.bind(this, e), SAD = this.setAchievementData.bind(this, e), setArenaScore = this.setArenaScore.bind(this, e), setArenaRank = this.setArenaRank.bind(this, e), setArenaRankAndScore = this.setArenaRankAndScore.bind(this, e), mute = this.mute.bind(this, e), testVoice = this.testVoice.bind(this, e), testEventDaily = this.testEventDaily.bind(this, e), changeDailyBonusDay = this.changeDailyBonusDay.bind(this, e), changeEventDay = this.changeEventDay.bind(this, e), resetBreadcrumbFeature = this.resetBreadcrumbFeature.bind(this, e), resetAllBreadcrumbs = this.resetAllBreadcrumbs.bind(this, e), resetHouseVisitingBreadcrumbs = this.resetHouseVisitingBreadcrumbs.bind(this, e), resetHouseMovingBreadcrumbs = this.resetHouseMovingBreadcrumbs.bind(this, e), resetDabBreadcrumbs = this.resetDabBreadcrumbs.bind(this, e), currentBGM = this.currentBGM.bind(this, e), setRoulette = this.setRoulette.bind(this, e), addFriend = this.addFriend.bind(this, e), removeFriend = this.removeFriend.bind(this, e), getFriendsList = this.getFriendsList.bind(this, e), triggerFailure = this.triggerFailure.bind(this, e), getDefaultFakeFriendData = this.getDefaultFakeFriendData.bind(this, e), addFakeFriend = this.addFakeFriend.bind(this, e), removeFakeFriend = this.removeFakeFriend.bind(this, e), removeAllFakeFriends = this.removeAllFakeFriends.bind(this, e), getAllPotions = this.getAllPotions.bind(this, e), resetSurvey = this.resetSurvey.bind(this, e), forceDrops = this.forceDrops.bind(this, e), getAllZoneDrops = this.getAllZoneDrops.bind(this, e), startPippetBattle = this.startPippetBattle.bind(this, e), battlePippet = this.battlePippet.bind(this, e), setAttackOverride = this.setAttackOverride.bind(this), setEscapeChance = this.setEscapeChance.bind(this), setLevel = this.setLevel.bind(this, e), skipBonusChance = this.skipBonusChance.bind(this, e), openCubes = this.openCubes.bind(this, e), triggerCorrectAnswer = this.triggerCorrectAnswer.bind(this, e), getCubes = this.getCubes.bind(this, e), startBattle = this.startBattle.bind(this, e), automateHatSwitching = this.automateHatSwitching.bind(this, e), player = this.player.bind(this, e), setMembership = this.setMembership.bind(this, e), killGore = this.killGore.bind(this, e), greedIsGood = this.greedIsGood.bind(this, e), greedIsOkay = this.greedIsOkay.bind(this, e), setAttackBaseDamage = this.setAttackBaseDamage.bind(this, e), easyMode = this.easyMode.bind(this, e), hardMode = this.hardMode.bind(this, e), getEpic = this.getEpic.bind(this, e), savePlayer = this.savePlayer.bind(this, e), loadPlayer = this.loadPlayer.bind(this, e), autoClick = this.autoClick.bind(this, e), autoClickUI = this.autoClickUI.bind(this, e), autoClickScene = this.autoClickScene.bind(this, e), autoClickList = this.autoClickList.bind(this, e), completeTutorial = this.completeTutorial.bind(this, e), getGame = this.getGame.bind(this, e), setEpicArena = this.setEpicArena.bind(this, e), trigger = this.trigger.bind(this, e), setNextEpicArenaRound = this.setNextEpicArenaRound.bind(this, e), showAreaEvents = this.showAreaEvents.bind(this, e), showBounties = this.showAllBounties.bind(this, e), setWOWSpinTime = this.setWOWSpinTime.bind(this, e), setClientVersion = this.setClientVersion.bind(this, e), resetDayWOWSpins = this.resetDayWOWSpins.bind(this, e), resetNightWOWSpins = this.resetNightWOWSpins.bind(this, e), resetAllWOWSpins = this.resetAllWOWSpins.bind(this, e), setNightWOWRewardIndex = GameConstants.setNightWOWRewardIndex.bind(this, e), testRandom = this.testRandom.bind(this, e), enableSplitTestGroups = this.enableSplitTestGroups.bind(this, e), enableVerboseMetrics = this.enableVerboseMetrics.bind(this, e), changeDayLength = this.changeDayLength.bind(this, e), forceActivityZoneMonsterId = this.forceActivityZoneMonsterId.bind(this, e), enableDynamicLayer = this.enableDynamicLayer.bind(this, e), drawUIElementBounds = this.drawUIElementBounds.bind(this, e), openUIViewer = this.openUIViewer.bind(this, e), fsmLogging = this.fsmLogging.bind(this, e), setGameSpeed = this.setGameSpeed.bind(this, e), showDebugValue = this.showDebugValue.bind(this, e), hideDebugValue = this.hideDebugValue.bind(this, e), setLocalizationLanguage = this.setLocalizationLanguage.bind(this, e), enableDebugLocalization = this.enableDebugLocalization.bind(this, e), enableVerboseLocalization = this.enableVerboseLocalization.bind(this, e), stressTestParticles = this.stressTestParticles.bind(this, e), stressTestPlayerContainers = this.stressTestPlayerContainers.bind(this, e), snow = this.snow.bind(this, e), enableParticles = this.enableParticles.bind(this, e), spawnBuddyParticle = this.spawnBuddyParticle.bind(this, e), getCurrentDailyLocation = this.getCurrentDailyLocation.bind(this, e), unlockColiseumOpponent = this.unlockColiseumOpponent.bind(this, e), lockColiseumOpponent = this.lockColiseumOpponent.bind(this, e), setArenaLeaderboardScore = this.setArenaLeaderboardScore.bind(this, e), setMyArenaLeaderboardScore = this.setMyArenaLeaderboardScore.bind(this, e), setClassLeaderboardScore = this.setClassLeaderboardScore.bind(this, e), setCustomBounty = this.setCustomBounty.bind(this, e), clearCustomBounty = this.clearCustomBounty.bind(this, e), openMenu = this.openMenu.bind(this, e), closeMenus = this.closeMenus.bind(this, e), resetRegisterDate = this.resetRegisterDate.bind(this, e))
	},
	playScene: function(e, t, i) {
		e.prodigy.world.playScene(t + "-" + i)
	},
	debugQuest: function(e, t, i, a, s) {
		var t = e.prodigy.world.getZone(t);
		t.testQuest(i, a, s);
		try {
			e.state.states.TileScreen.process()
		} catch (r) {}
	},
	debugMap: function(e, t, i) {
		enablePlayerCards(!i), enablePopups(!i), enableWizards(!i), enableMonsters(!i), tp(t)
	},
	setState: function(e, t, i, a) {
		var t = e.prodigy.world.getZone(t);
		t.setState(i, a)
	},
	deleteState: function(e, t) {
		delete e.prodigy.player.state.data.zone[t]
	},
	initQuest: function(e) {
		var t, i = [],
			a = function(t) {
				var i = e.prodigy.player.state.data.zone[t],
					a = 0;
				return Util.isDefined(i) && Util.isDefined(i.quest) && (a |= i.quest.ID), a
			};
		t = a("lamplight"), t > 1 && i.push({
			ID: 13,
			type: "key"
		}), t = a("forest"), t > 4 && i.push({
			type: "spell",
			ID: 13
		}, {
			type: "item",
			ID: 67
		}), t > 8 && i.push({
			type: "spell",
			ID: 14
		}, {
			type: "item",
			ID: 69
		}), t > 10 && e.prodigy.player.backpack.consume("item", 69, 1), t > 13 && i.push({
			type: "spell",
			ID: 15
		}, {
			type: "key",
			ID: 3
		}), t = a("shiverchill"), t > 2 && i.push({
			type: "item",
			ID: 71
		}), t > 3 && (setState("shiverchill", "furnace", 1), i.push({
			type: "spell",
			ID: 19
		})), t > 4 && i.push({
			type: "item",
			ID: 75
		}), t > 5 && i.push({
			type: "item",
			ID: 72
		}), t > 6 && i.push({
			type: "hat",
			ID: 54
		}), t > 10 && (setState("shiverchill", "furnace", 2), i.push({
			type: "spell",
			ID: 20
		})), t > 12 && i.push({
			type: "outfit",
			ID: 47
		}, {
			type: "item",
			ID: 74,
			N: 5
		}), t > 14 && (setState("shiverchill", "furnace", 3), i.push({
			type: "spell",
			ID: 21
		})), t > 15 && i.push({
			type: "weapon",
			ID: 74
		}, {
			type: "key",
			ID: 4
		}), t = a("skywatch"), t > 2 && (setState("skywatch", "windowBroken", 1), i.push({
			type: "item",
			ID: 87,
			N: 1
		})), t > 3 && i.push({
			type: "key",
			ID: 8
		}), t > 4 && (setState("skywatch", "vines-D1", 1), setState("skywatch", "vines-D2", 1), setState("skywatch", "plug-D3", 1), setState("skywatch", "vines-D3", 1), setState("skywatch", "plug-B3", 1), setState("skywatch", "vines-B3", 1), setState("skywatch", "plug-C4", 1), setState("skywatch", "vines-C4", 1), i.push({
			type: "spell",
			ID: 25
		})), t > 6 && i.push({
			type: "item",
			ID: 81
		}), t > 7 && (i.push({
			type: "key",
			ID: 9
		}), e.prodigy.player.backpack.consume("item", 87, 1)), t > 8 && i.push({
			type: "outfit",
			ID: 5
		}), t > 10 && i.push({
			type: "spell",
			ID: 26
		}), t > 11 && i.push({
			type: "hat",
			ID: 8
		}), t > 12 && i.push({
			type: "item",
			ID: 83
		}), t > 13 && i.push({
			type: "spell",
			ID: 27
		}, {
			type: "key",
			ID: 10
		}), t = a("bonfire_spire"), t > 1 && setState("bonfire_spire", "lever1", 1), t > 2 && setState("bonfire_spire", "lever2", 1), t > 3 && (setState("bonfire_spire", "lever3", 1), i.push({
			type: "hat",
			ID: 65
		})), t > 4 && i.push({
			type: "spell",
			ID: 1
		}, {
			type: "item",
			ID: 88
		}), t > 5 && i.push({
			type: "spell",
			ID: 1
		}), t > 7 && i.push({
			type: "outfit",
			ID: 56
		}), t > 9 && i.push({
			type: "item",
			ID: 91,
			N: 1
		}), t > 10 && e.prodigy.player.backpack.consume("item", 91, 1), t > 11 && i.push({
			type: "spell",
			ID: 2
		}, {
			type: "item",
			ID: 92
		}), t > 12 && (i.push({
			type: "key",
			ID: 12
		}), e.prodigy.player.backpack.consume("item", 92, 1)), t > 13 && i.push({
			type: "weapon",
			ID: 81
		}), t > 14 && i.push({
			type: "spell",
			ID: 3
		}, {
			type: "key",
			ID: 11
		}), t = a("shipwreck_shore"), t > -1 && (setState("shipwreck_shore", "wizardC8", 0), setState("shipwreck_shore", "wizardA5", 0), setState("shipwreck_shore", "chestA3", 0), setState("shipwreck_shore", "chestA5", 0), setState("shipwreck_shore", "chestB5", 0), setState("shipwreck_shore", "chestB13", 0), setState("shipwreck_shore", "chestB10", 0), setState("shipwreck_shore", "chestBreathingBubble", 0), setState("shipwreck_shore", "mimic1", 0), setState("shipwreck_shore", "mimic2", 0), setState("shipwreck_shore", "inkA7", 0), setState("shipwreck_shore", "inkB6", 0), setState("shipwreck_shore", "inkB5", 0), setState("shipwreck_shore", "inkA5", 0), setState("shipwreck_shore", "inkC9", 0), setState("shipwreck_shore", "inkB7", 0), setState("shipwreck_shore", "squeak", 0)), t > 1 && i.push({
			type: "key",
			ID: 14
		}), t > 3 && i.push({
			type: "spell",
			ID: 7
		}), t > 4 && i.push({
			type: "key",
			ID: 15
		}), t > 5 && (setState("shipwreck_shore", "inkA7", 1), setState("shipwreck_shore", "inkB6", 1), setState("shipwreck_shore", "inkB5", 1), setState("shipwreck_shore", "inkA5", 1)), t > 6 && i.push({
			type: "spell",
			ID: 8
		}), t > 12 && i.push({
			type: "spell",
			ID: 9
		}, {
			type: "key",
			ID: 17
		});
		var s = Util.filterDuplicateKeys(e, i);
		s.length > 0 && e.prodigy.open.gotItem(s, null)
	},
	completeQuestRequirements: function(e, t) {
		var i, a = e.prodigy.world.zones[t],
			s = a.getCurrentQuest();
		if (Util.isDefined(s)) {
			var r = s.req;
			if ("item" === r.type) e.prodigy.player.backpack.add(r.type, r.ID, !1, r.N || 1);
			else if ("key" === r.type) e.prodigy.player.backpack.add(r.type, r.ID, !1, r.N || 1);
			else if ("pet" === r.type)
				for (i = 0; i < r.N; i++) a.defeatMonster(r.ID, i, r.U);
			else if ("seq" === r.type)
				for (i = 0; i < r.N; i++) a.completeSequence(s.ID, i)
		}
	},
	setParentEmail: function(e, t) {
		e.prodigy.player.setParentEmail(t)
	},
	addStars: function(e, t) {
		e.prodigy.player.addStars(t, null, null, !0)
	},
	setMembership: function(e) {
		e.prodigy.player.setMembership()
	},
	tpTowerFloor: function(e, t) {
		var i = 100 > t ? "A2" : "A3";
		e.prodigy.world.zones.darktower.maps[i].floor = t, e.prodigy.world.zones.darktower.maps[i].updateZoneNameFromCurrentFloor(), e.prodigy.world.zones.darktower.maps[i].cleared = !1, e.prodigy.world.teleport("darktower-" + i, 260, 550)
	},
	tp: function(e, t, i, a, s) {
		e.prodigy.world.teleport(t, i, a, null, {
			callback: s
		})
	},
	easyMode: function(e, t) {
		t && GameConstants.enableGameConstant("GameConstants.Debug.AUTO_ANSWER_CORRECTLY", !0), enableEducation(!t)
	},
	hardMode: function(e, t) {
		t && GameConstants.enableGameConstant("GameConstants.Debug.AUTO_ANSWER_CORRECTLY", !1), enableEducation(!t)
	},
	inspect: function(e, t) {
		t ? Util.log(e.prodigy.player[t].data) : Util.log(e.prodigy.player.data)
	},
	showLayer: function(e, t, i) {
		e.state.states.TileScreen[t].visible = i
	},
	showCollisions: function(e, t) {
		GameConstants.enableGameConstant("GameConstants.Debug.SHOW_COLLISIONS", t), e.state.states.TileScreen.showCollisions(t)
	},
	answer: function(e) {
		e.prodigy.education.question()
	},
	killGore: function(e, t, i) {
		i = Util.getOptionalParameter(i, 31);
		var a = 0;
		if (Util.getOptionalParameter(t, !0)) a = 200;
		else {
			if (Util.isNullOrUndefined(this.attackDamageCache[i])) return;
			a = this.attackDamageCache[i]
		}
		this.setAttackBaseDamage(e, i, a)
	},
	setAttackBaseDamage: function(e, t, i) {
		var a = Items.getItemObject("spell", t).data;
		Util.isNullOrUndefined(this.attackDamageCache[t]) && (this.attackDamageCache[t] = a.damage), a.damage = i
	},
	player: function(e) {
		return e.prodigy.player
	},
	hoard: function(e) {
		for (var t = 1; t < Items.data.boots.length; t++) e.prodigy.player.backpack.add("boots", t);
		for (var t = 1; t < Items.data.outfit.length; t++) e.prodigy.player.backpack.add("outfit", t);
		for (var t = 1; t < Items.data.weapon.length; t++) e.prodigy.player.backpack.add("weapon", t);
		for (var t = 1; t < Items.data.hat.length; t++) e.prodigy.player.backpack.add("hat", t);
		for (var t = 1; t < Items.data.item.length; t++) 95 !== t && e.prodigy.player.backpack.add("item", t);
		for (var t = 1; t < Items.data.key.length; t++) e.prodigy.player.backpack.add("key", t);
		for (var t = 1; t < Items.data.fossil.length; t++) e.prodigy.player.backpack.add("fossil", t);
		for (var t = 1; t < Items.data.relic.length; t++) e.prodigy.player.backpack.add("relic", t);
		for (var t = 1; t < Items.data.follow.length - 5; t++) e.prodigy.player.backpack.add("follow", t);
		for (var t = 0; 135 > t; t++) e.prodigy.player.house.add(t)
	},
	drDino: function(e) {
		for (var t = 13; 25 > t; t++) e.prodigy.player.backpack.add("fossil", t)
	},
	grabBag: function(e) {
		for (var t = 1; t < 29 * Math.random(); t++) e.prodigy.player.backpack.add("boots", Math.floor(28 * Math.random() + 1));
		for (var t = 1; t < 55 * Math.random(); t++) e.prodigy.player.backpack.add("outfit", Math.floor(54 * Math.random() + 1));
		for (var t = 1; t < 80 * Math.random(); t++) e.prodigy.player.backpack.add("weapon", Math.floor(79 * Math.random() + 1));
		for (var t = 1; t < 64 * Math.random(); t++) e.prodigy.player.backpack.add("hat", Math.floor(63 * Math.random() + 1));
		for (var t = 1; t < 78 * Math.random(); t++) e.prodigy.player.backpack.add("item", Math.floor(77 * Math.random() + 1));
		for (var t = 1; t < 21 * Math.random(); t++) e.prodigy.player.backpack.add("relic", Math.floor(20 * Math.random() + 1));
		for (var t = 1; t < 72 * Math.random(); t++) e.prodigy.player.backpack.add("dorm", Math.floor(71 * Math.random() + 1));
		for (var t = 1; t < 25 * Math.random(); t++) e.prodigy.player.backpack.add("fossil", Math.floor(24 * Math.random() + 1))
	},
	getItemType: function(e, t, i, a) {
		var s = [{
			type: t,
			ID: i,
			N: a || 1
		}];
		e.prodigy.open.gotItem(s)
	},
	getCurrency: function(e, t, i) {
		var a = [];
		a.push({
			type: "currency",
			ID: t,
			N: i
		}), e.prodigy.open.gotItem(a)
	},
	getKeyItems: function(e) {
		e.prodigy.player.backpack.add("key", 1), e.prodigy.player.backpack.add("key", 2), e.prodigy.player.backpack.add("key", 3), e.prodigy.player.backpack.add("key", 4), e.prodigy.player.backpack.add("key", 8), e.prodigy.player.backpack.add("key", 9), e.prodigy.player.backpack.add("key", 10), e.prodigy.player.backpack.add("key", 11), e.prodigy.player.backpack.add("key", 12), e.prodigy.player.backpack.add("key", 13)
	},
	getItem: function(e) {
		{
			var t = [],
				i = [{
					type: "hat",
					n: 63
				}, {
					type: "outfit",
					n: 54
				}, {
					type: "weapon",
					n: 79
				}, {
					type: "boots",
					n: 28
				}, {
					type: "relic",
					n: 10
				}],
				a = Math.floor(5 * Math.random()),
				s = i[a].type,
				r = Math.floor(2 * Math.random()),
				n = Math.floor(2 * Math.random());
			Math.floor(2 * Math.random())
		}
		n && t.push({
			type: s,
			ID: Math.floor(Math.random() * i[a].n + 1)
		});
		for (var o = 0; o < Math.floor(5 * Math.random()); o++) t.push({
			type: "item",
			ID: Math.floor(77 * Math.random() + 1)
		});
		if (r)
			for (var o = 0; o < Math.floor(5 * Math.random()); o++) t.push({
				type: "gold",
				N: 100
			});
		0 === t.length ? this.getItem(e) : e.prodigy.open.gotItem(t)
	},
	getPet: function(e, t, i, a, s) {
		t = Util.isDefined(t) ? t : Math.floor(Math.random() * Items.getItemCount("pet") + 1), i = Util.isDefined(i) ? i : Math.floor(99 * Math.random() + 1), a = Util.isDefined(a) ? a : GameConstants.MAX_SAFE_INTEGER, s = Util.isDefined(s) ? s : Prodigy.Creature.starsToLevel(i - 1), e.prodigy.open.gotItem([{
			type: "pet",
			ID: t,
			data: {
				ID: t,
				hp: a,
				stars: s,
				level: i
			}
		}])
	},
	getAllPets: function(e, t, i, a) {
		for (var s = Items.data.pet, r = 0; r < s.length; r++) {
			var n = s[r];
			Util.isNullOrUndefined(n) || getPet(n.ID, t, i, a)
		}
	},
	getEpic: function(e, t) {
		t = Util.isDefined(t) ? t : 125, t > 133 || 125 > t || (getPet(t, 20), player().backpack.add("follow", Items.getItem("pet", t).data.unlockFollow))
	},
	savePlayer: function(e) {
		var t = ["player", "game"],
			i = function(e, i) {
				return t.includes(e) ? (Util.log(e), void 0) : i
			},
			a = {
				savedPlayer: {},
				meta: {}
			};
		a.savedPlayer = e.prodigy.player, a.meta.loadPosition = e.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.GET_TARGET, e, [!0]);
		var s = JSON.stringify(a, i),
			r = document.createElement("a");
		r.download = e.prodigy.player.appearance.data.name + ".json", r.href = "data:," + s, r.click()
	},
	loadPlayer: function(e, t) {
		function i(t) {
			function i(e, t) {
				for (var a in t) e[a] = "object" == typeof t[a] ? "data" != a && Util.isDefined(e[a]) ? i(e[a], t[a]) : t[a] : t[a];
				return e
			}
			Util.log("LOADED PLAYER DATA");
			var a = JSON.parse(t);
			e.prodigy.player = i(e.prodigy.player, a.savedPlayer), Util.isDefined(a.meta.loadPosition) ? tp(a.savedPlayer.data.zone, a.meta.loadPosition.x, a.meta.loadPosition.y) : tp(a.savedPlayer.data.zone)
		}

		function a(e) {
			e.stopPropagation(), e.preventDefault();
			var t = e.target.files,
				a = new FileReader,
				s = t[0];
			a.onload = function(e) {
				i(e.target.result)
			}, a.readAsText(s)
		}
		if (Util.isDefined(t)) i(t);
		else {
			var s = document.createElement("input");
			s.type = "file", s.addEventListener("change", a, !1), s.click()
		}
	},
	getBounty: function(e) {
		e.prodigy.open.gotItem([{
			type: "bounty",
			N: 100
		}]), e.prodigy.player.addBountyScore(100)
	},
	getSpell: function(e, t) {
		e.prodigy.open.gotItem([{
			type: "spell",
			ID: Util.isDefined(t) ? t : Math.floor(35 * Math.random() + 1)
		}])
	},
	removeSpell: function(e, t) {
		for (var i = e.prodigy.player.data.spells, a = -1, s = 0; s < i.length; s++) i[s] === t && (a = s); - 1 !== a && (e.prodigy.player.data.spells.splice(a, 1), e.prodigy.player.updated = !0)
	},
	getGold: function(e, t) {
		var i = [];
		i.push({
			type: "gold",
			N: t
		}), e.prodigy.open.gotItem(i)
	},
	smallLoan: function(e, t) {
		e.prodigy.player.changeGold(t || 1e6)
	},
	bookWorm: function(e) {
		for (var t = 1; 37 > t; t++) 31 !== t && e.prodigy.player.addSpell(t)
	},
	setAchievementData: function(e, t, i) {
		e.prodigy.player.achievements.increment(t, i)
	},
	setArenaScore: function(e, t) {
		e.prodigy.player.data.arenaScore = t, e.prodigy.player.updated = !0
	},
	setArenaRank: function(e, t) {
		e.prodigy.player.data.arenaRank = t, e.prodigy.player.updated = !0
	},
	setArenaRankAndScore: function(e, t, i) {
		this.setArenaRank(e, t), this.setArenaScore(e, i)
	},
	mute: function(e) {
		e.prodigy.audio.setMute(!0)
	},
	greedIsGood: function(e) {
		this.mute(e), this.bookWorm(e), this.hoard(e), this.smallLoan(e), this.killGore(e), this.easyMode(e, !0)
	},
	greedIsOkay: function(e) {
		this.killGore(e), this.easyMode(e, !0), e.prodigy.player.isMember = !0
	},
	testVoice: function(e, t, i, a) {
		for (var s = e.prodigy.event.create(), r = i; a >= r; r++) s.text(r, t);
		s.start()
	},
	testEventDaily: function(e, t) {
		for (var i = null, a = null, s = 0; s < e.prodigy.skin.active.length; ++s)
			if (e.prodigy.skin.active[s] instanceof Prodigy.GameEvent) {
				i = e.prodigy.skin.active[s];
				for (var r = i.dailyPlacements, n = 0; n < r.length; ++n)
					if (!Util.isNullOrUndefined(r[n][t])) {
						a = r[n];
						break
					} break
			} if (!Util.isNullOrUndefined(a)) {
			var o = new Date;
			e.prodigy.player.data[i.daily].date = {
				d: o.getUTCDate(),
				m: o.getUTCMonth(),
				y: o.getUTCFullYear()
			}, e.prodigy.player.data[i.daily].isComplete = 0, e.prodigy.player.data[i.daily].dailyLocation = a, tp(t)
		}
	},
	changeDailyBonusDay: function(e) {
		var t = new Date;
		e.prodigy.player.data.dailyLoginBonus.date = {
			d: t.getUTCDate() + 1,
			m: t.getUTCMonth(),
			y: t.getUTCFullYear()
		}, e.prodigy.player.updated = !0
	},
	changeEventDay: function(e) {
		for (var t = null, i = 0; i < e.prodigy.skin.active.length; ++i)
			if (e.prodigy.skin.active[i] instanceof Prodigy.GameEvent) {
				t = e.prodigy.skin.active[i];
				break
			} if (!Util.isNullOrUndefined(t)) {
			var a = new Date;
			e.prodigy.player.data[t.daily].date = {
				d: a.getUTCDate() + 1,
				m: a.getUTCMonth(),
				y: a.getUTCFullYear()
			}, e.prodigy.player.updated = !0
		}
	},
	getCurrentDailyLocation: function(e) {
		for (var t = null, i = 0; i < e.prodigy.skin.active.length; ++i)
			if (e.prodigy.skin.active[i] instanceof Prodigy.GameEvent) {
				t = e.prodigy.skin.active[i];
				break
			} if (!Util.isNullOrUndefined(t))
			for (var a in e.prodigy.player.data[t.daily].dailyLocation) 0 === a.indexOf("lamplight") && Util.log(a, Util.DEBUG)
	},
	resetBreadcrumbFeature: function(e, t) {
		e.prodigy.breadcrumbManager.resetBreadcrumbs(Prodigy.Breadcrumbs[t])
	},
	resetAllBreadcrumbs: function(e) {
		for (var t in e.prodigy.breadcrumbManager.breadcrumbConfig.features) this.resetBreadcrumbFeature(e, t)
	},
	resetHouseVisitingBreadcrumbs: function(e) {
		this.resetBreadcrumbFeature(e, "FEATURE_HOUSE_VISITING")
	},
	resetHouseMovingBreadcrumbs: function(e) {
		this.resetBreadcrumbFeature(e, "FEATURE_HOUSE_MOVING")
	},
	resetDabBreadcrumbs: function(e) {
		this.resetBreadcrumbFeature(e, "BREADCRUMB_CLICKED_DAB")
	},
	currentBGM: function(e) {
		Util.log("Current BGM: " + e.prodigy.audio.currentBgm.key)
	},
	setRoulette: function(e, t) {
		Prodigy.Debug.ROULETTE = t
	},
	autoClick: function(e, t) {
		e.broadcaster.broadcast(Prodigy.Events.Debug.AUTO_CLICK, e, [t])
	},
	autoClickUI: function(e, t) {
		e.broadcaster.broadcast(Prodigy.Events.Debug.AUTO_CLICK_UI, e, [t])
	},
	autoClickScene: function(e, t) {
		e.broadcaster.broadcast(Prodigy.Events.Debug.AUTO_CLICK_SCENE, e, [t])
	},
	autoClickList: function(e) {
		e.broadcaster.broadcast(Prodigy.Events.Debug.AUTO_CLICK_LIST, e)
	},
	trigger: function(e, t, i) {
		return e.prodigy.automation.trigger(t, i)
	},
	completeTutorial: function(e) {
		var t = e.prodigy.player.tutorial;
		setQuest("house", 2), setQuest("lamplight", 3), e.prodigy.player.backpack.addKeyItem(13), t.setMenuValue(14, 0, 1), t.setMenuValue(3, 0, 1), t.setMenuValue(3, 1, 1), t.setMenuValue(3, 2, 1), t.setMenuValue(23, 0, 1)
	},
	resetSurvey: function(e) {
		e.prodigy.player.data.survey = 0
	},
	forceDrops: function(e, t) {
		GameConstants.setDrops(e, t)
	},
	getAllZoneDrops: function(e, t) {
		var i = [];
		"shipwreck_shore" === t && (i = [{
			type: "hat",
			ID: 39
		}, {
			type: "hat",
			ID: 40
		}, {
			type: "hat",
			ID: 76
		}, {
			type: "hat",
			ID: 77
		}, {
			type: "hat",
			ID: 78
		}, {
			type: "hat",
			ID: 79
		}, {
			type: "hat",
			ID: 80
		}, {
			type: "hat",
			ID: 81
		}, {
			type: "outfit",
			ID: 4
		}, {
			type: "outfit",
			ID: 35
		}, {
			type: "outfit",
			ID: 36
		}, {
			type: "outfit",
			ID: 57
		}, {
			type: "outfit",
			ID: 58
		}, {
			type: "outfit",
			ID: 59
		}, {
			type: "outfit",
			ID: 60
		}, {
			type: "outfit",
			ID: 61
		}, {
			type: "outfit",
			ID: 62
		}, {
			type: "boots",
			ID: 3
		}, {
			type: "boots",
			ID: 29
		}, {
			type: "boots",
			ID: 30
		}, {
			type: "boots",
			ID: 31
		}, {
			type: "boots",
			ID: 32
		}, {
			type: "boots",
			ID: 33
		}, {
			type: "weapon",
			ID: 19
		}, {
			type: "weapon",
			ID: 65
		}, {
			type: "weapon",
			ID: 66
		}, {
			type: "weapon",
			ID: 92
		}, {
			type: "weapon",
			ID: 93
		}, {
			type: "weapon",
			ID: 94
		}, {
			type: "weapon",
			ID: 95
		}, {
			type: "follow",
			ID: 130
		}, {
			type: "follow",
			ID: 131
		}, {
			type: "follow",
			ID: 132
		}, {
			type: "follow",
			ID: 133
		}, {
			type: "key",
			ID: 14
		}, {
			type: "key",
			ID: 15
		}, {
			type: "key",
			ID: 16
		}, {
			type: "key",
			ID: 17
		}, {
			type: "item",
			ID: 112
		}, {
			type: "item",
			ID: 113
		}, {
			type: "item",
			ID: 114
		}, {
			type: "spell",
			ID: 7
		}, {
			type: "spell",
			ID: 8
		}, {
			type: "spell",
			ID: 9
		}]);
		var a = Util.filterDuplicateKeys(e, i);
		a.length > 0 && e.prodigy.open.gotItem(a, null)
	},
	startPippetBattle: function(e, t) {
		for (var i = null, a = 0; a < Prodigy.PippetEncounter.data.spawns.length; a++) i = Prodigy.PippetEncounter.data.spawns[a], i.location === t && (e.prodigy.world.pippetEncounterDaily.init(), e.prodigy.world.pippetEncounterSpawn = i, tp(t))
	},
	battlePippet: function(e) {
		var t = e.prodigy.world.zones.bonfire_spire,
			i = t.maps.C1,
			a = {
				boss: {
					element: "shadow",
					attacks: [43],
					name: "Pippet",
					tag: "pippet",
					pippetBattle: !0,
					heartsCurveType: "A-",
					levelOffset: 3
				},
				drops: [{
					type: "currency",
					ID: 3,
					N: 1
				}],
				difficulty: 8
			},
			s = function() {
				e.prodigy.world.pippetEncounterDaily.complete(), e.prodigy.world.teleport(i.getLocation(), null, null)
			};
		e.prodigy.network.sendAnalytics("random-pippet-battles", "pippet-initiate-class-percent", "Events"), t.util.getBattle(i, "Pippet Battle!", a, s)()
	},
	setAttackOverride: function(e) {
		GameConstants.setAttackOverride(e)
	},
	setEscapeChance: function(e) {
		GameConstants.setEscapeChance(e)
	},
	getGame: function(e) {
		return e
	},
	addFriend: function(e, t) {
		e.prodigy.friendsListNetworkHandler.sendFriendRequest(t)
	},
	removeFriend: function(e, t) {
		e.prodigy.friendsListNetworkHandler.removeFriend(t)
	},
	getFriendsList: function(e) {
		Util.log(e.prodigy.friendsListNetworkHandler.friendsList, Util.DEBUG)
	},
	getDefaultFakeFriendData: function(e, t) {
		var i = {
			userID: 123,
			status: 1,
			appearance: {
				nick: "Nickname here",
				hairStyle: 1,
				face: 1,
				hair: {
					color: 1,
					style: 1
				},
				eyeColor: 1,
				gender: "female",
				skinColor: 1,
				name: "Name Here ",
				hairColor: 1
			},
			isMember: 1,
			data: {
				hp: 123,
				allowsHouseVisitors: !1,
				gold: 123,
				loss: 1,
				arenaScore: 0,
				tower: 0,
				level: 1,
				stars: 0,
				team: 0
			},
			equipment: {
				follow: 1
			}
		};
		return Util.getOptionalParameter(t, !0) && Util.log(i, Util.DEBUG), i
	},
	addFakeFriend: function(e, t) {
		var i = e.prodigy.friendsListNetworkHandler,
			a = Util.getOptionalParameter(t, this.getDefaultFakeFriendData(e, !1));
		a.isFake = !0, i.totalFriends++, i.friendsList.push(a)
	},
	removeFakeFriend: function(e, t, i) {
		i = Util.getOptionalParameter(i, !1);
		for (var a = e.prodigy.friendsListNetworkHandler, s = null, r = 0, n = 0; n < a.friendsList.length; n++) s = a.friendsList[n], !i && s.userID !== t || s.isFake !== !0 || (a.friendsList.splice(n, 1), a.totalFriends--, n--, r++);
		Util.log("Util.removeFakeFriend - number of fake friends removed: " + r, Util.DEBUG)
	},
	removeAllFakeFriends: function(e) {
		this.removeFakeFriend(e, 0, !0)
	},
	triggerFailure: function(e) {
		e.prodigy.friendsListNetworkHandler.networkCallFailure()
	},
	getAllPotions: function(e, t) {
		for (var i = [], a = 96; 111 >= a; a++) i.push({
			type: "item",
			ID: a,
			N: t || 1
		});
		e.prodigy.open.gotItem(i)
	},
	setEpicArena: function(e, t, i, a) {
		Util.isDefined(t) && Util.isDefined(i) && Util.isDefined(a) && (Prodigy.Menu.SlotMachine.FORCED_RESULT = [t, i, a])
	},
	showAreaEvents: function(e, t) {
		TileScreen.DEBUG_DRAW_AREA_EVENTS = t
	},
	setWOWSpinTime: function(e, t) {
		var i = t;
		(!Util.isDefined(i) || 0 >= i) && (i = -1), Prodigy.Component.Wheel.DEBUG_SPIN_TIME_MS = i, Wheel_A.DEBUG_SPIN_TIME_MS = i
	},
	resetDayWOWSpins: function(e) {
		Util.isDefined(e.prodigy.player.data.spinDate) && delete e.prodigy.player.data.spinDate.dates, delete e.prodigy.player.data.numSpins, e.prodigy.player.updated = !0
	},
	resetNightWOWSpins: function(e) {
		Util.isDefined(e.prodigy.player.data.spinDate) && delete e.prodigy.player.data.spinDate.twilightDates, e.prodigy.player.updated = !0
	},
	resetAllWOWSpins: function(e) {
		delete e.prodigy.player.data.spinDate, delete e.prodigy.player.data.numSpins, e.prodigy.player.updated = !0
	},
	setClientVersion: function(e, t) {
		e.prodigy.network.api.clientVersion = t
	},
	testRandom: function(e, t, i, a) {
		for (var s = 0, r = null, n = 0; t > n; n++) r = Prodigy.Lodash.shuffle(Prodigy.Lodash.range(i)), r[0] === a && s++;
		Util.log("Randomized " + a + " " + s + " times.", Util.INFO)
	},
	enableSplitTestGroups: function() {
		if (Player.DEBUG_SPLIT_GROUPS = [], !(arguments.length < 2))
			for (var e = 1; e < arguments.length; e++) Player.DEBUG_SPLIT_GROUPS.push(arguments[e])
	},
	enableVerboseMetrics: function(e, t) {
		Util.isDefined(t) ? NetworkManager.VERBOSE_ANALYTICS = t : Util.log("enableVerboseMetrics expects a boolean parameter.  No action taken.", Util.ERROR)
	},
	changeDayLength: function(e, t) {
		Util.DEBUG_DAY_LENGTH = Util.isDefined(t) ? t : 864e5
	},
	forceActivityZoneMonsterId: function(e, t) {
		Util.isDefined(t) ? (Prodigy.Activity_ZoneUtil.FORCE_MONSTER_TYPE = !0, Prodigy.Activity_ZoneUtil.MONSTER_ID = t) : Prodigy.Activity_ZoneUtil.FORCE_MONSTER_TYPE = !1
	},
	drawUIElementBounds: function(e, t) {
		for (var i = null, a = 0; a < e.prodigy.open.renderMenus.length; a++) i = e.prodigy.open.renderMenus[a], i.debugDrawUIElementBounds(t && i.visible)
	},
	openUIViewer: function(e) {
		e.prodigy.open.uiViewer.call(e.prodigy.open)
	},
	showAllBounties: function(e, t) {
		var i = e.prodigy.world.getZone(t);
		i.debugBounties = !0
	},
	openCubes: function(e) {
		0 !== e.prodigy.microtransaction.cubesToOpen.length && (e.prodigy.microtransaction.debugOpen = !0, e.prodigy.open.microtransactionLoot(null))
	},
	triggerCorrectAnswer: function(e, t) {
		t > 0 && e.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED),
			function i(e, t) {
				setTimeout(function() {
					--t ? (e.broadcaster.broadcast(Prodigy.Events.Microtransaction.QUESTION_ANSWERED), i(e, t)) : Util.log("Finished Answering Questions", Util.INFO)
				}, 1e3)
			}(e, t)
	},
	getCubes: function(e, t) {
		for (var i = 0; t > i; i++) e.broadcaster.broadcast(Prodigy.Events.Microtransaction.RECEIVE_CONJURE_CUBE, null, [{
			ID: 1,
			q: 1,
			isOpen: !1
		}])
	},
	setLevel: function(e, t) {
		e.prodigy.player.data.level = 0, e.prodigy.player.data.stars = 0;
		for (var i = 0; t > i; i++) e.prodigy.player.addStars(e.prodigy.player.getStarsToLevel())
	},
	skipBonusChance: function() {
		Prodigy.Menu.SlotMachine.SKIP_BONUS_CHANCE = !0
	},
	fsmLogging: function(e, t) {
		this.enableFSMLogging = t
	},
	enableDynamicLayer: function(e, t, i, a) {
		e.broadcaster.broadcast(Prodigy.Events.Map.ENABLE_DYNAMIC_LAYER, null, [e, t, i, a])
	},
	setGameSpeed: function(e, t) {
		if (GameConstants.setGameSpeed(t), !Util.isDefined(Prodigy.Debug.TWEEN_FUNCTIONS_OVERRIDDEN) || !Prodigy.Debug.TWEEN_FUNCTIONS_OVERRIDDEN) {
			var i = Phaser.TweenManager.prototype.add;
			Phaser.TweenManager.prototype.add = function(e) {
				e.timeScale = GameConstants.get("GameConstants.Debug.GAME_SPEED"), i.call(this, e)
			};
			var a = Phaser.Timer.prototype.add;
			Phaser.Timer.prototype.add = function(e, t, i) {
				return a.call(this, e / GameConstants.get("GameConstants.Debug.GAME_SPEED"), t, i)
			};
			var s = Phaser.Tween.prototype.delay;
			Phaser.Tween.prototype.delay = function(e, t) {
				return s.call(this, e / GameConstants.get("GameConstants.Debug.GAME_SPEED"), t)
			}, Prodigy.Debug.TWEEN_FUNCTIONS_OVERRIDDEN = !0
		}
		for (var r = e.tweens.getAll(), n = 0; n < r.length; n++) r[n].timeScale = t
	},
	startBattle: function(e, t, i, a) {
		t = Util.getOptionalParameter(t, 1), i = Util.getOptionalParameter(i, 5), a = Util.getOptionalParameter(a, "bg-battle-forest");
		var s = function(e, t, i, a) {
				e.prodigy.world.teleport(t, i, a)
			}.bind(this, e, e.prodigy.world.currentZone, e.prodigy.player.x, e.prodigy.player.y),
			r = [];
		if (t instanceof Array)
			for (var n = 0, o = t.length; o > n; ++n) r.push({
				ID: t[n]
			});
		else r.push({
			ID: t
		});
		e.prodigy.battle.start({
			pets: r,
			level: i,
			screen: a
		}, s, s, s)
	},
	automateHatSwitching: function(e, t) {
		this.hatSwitchEvent && e.time.events.remove(this.hatSwitchEvent);
		var i = function(a) {
			Items.getItemData("hat", a) ? (e.prodigy.player.equipment.equip(a, "hat"), this.hatSwitchEvent = e.time.events.add(t, i.bind(this, ++a))) : e.prodigy.player.equipment.unEquip("hat"), e.prodigy.user.reload()
		};
		i(1)
	},
	setNextEpicArenaRound: function(e, t) {
		var i = e.state.states.Battle;
		"Battle" !== e.state.current || Util.isNullOrUndefined(i.mods.epicArena) ? Util.log("Not in epic arena!") : i.mods.epicArena = t - 1
	},
	showDebugValue: function(e, t) {
		var i = e.broadcaster.broadcast(Prodigy.Events.Screen.GET_LAYER, e, ["debugLayout"]);
		if (!Util.isNullOrUndefined(i)) {
			var a = Prodigy.Framework.Debug.DebugValueRegistry.getRegisteredDebugValue(t);
			Util.isNullOrUndefined(a) || (GameConstants.get("GameConstants.Build.SHOW_DEBUG_VALUES").push(t), i.addRenderer(new a))
		}
	},
	hideDebugValue: function(e, t) {
		var i = e.broadcaster.broadcast(Prodigy.Events.Screen.GET_LAYER, e, ["debugLayout"]);
		if (!Util.isNullOrUndefined(i)) {
			var a = Prodigy.Framework.Debug.DebugValueRegistry.getRegisteredDebugValue(t);
			if (!Util.isNullOrUndefined(a)) {
				var s = GameConstants.get("GameConstants.Build.SHOW_DEBUG_VALUES"),
					r = s.indexOf(t);
				r > -1 && s.splice(r, 1), i.removeRenderer(i.findRendererByType(a))
			}
		}
	},
	enableVerboseLocalization: function(e, t) {
		e.prodigy.localization.setVerbose(t)
	},
	enableDebugLocalization: function(e, t, i) {
		e.prodigy.localization.setDebug(t, Util.getOptionalParameter(i, "*"))
	},
	setLocalizationLanguage: function(e, t) {
		e.prodigy.load.assets(["language-" + t], function() {
			var i = e.cache.getJSON("language-" + t);
			Util.isDefined(i) && e.prodigy.localization.setLanguage(i)
		})
	},
	stressTestParticles: function(e, t, i) {
		this.stressTestPlayerContainers(e, Prodigy.Debug.PARTICLE_STRESS_TEST_COMMON.users, i), this.clearEmitters(e);
		var a = t.particle;
		a.image = Prodigy.Debug.PARTICLE_STRESS_TEST_COMMON.image, a.frame = Prodigy.Debug.PARTICLE_STRESS_TEST_COMMON.frame;
		var s = t.emitter;
		s.repeat = Prodigy.Debug.PARTICLE_STRESS_TEST_COMMON.emitterRepeat;
		var r = e.particleStorm,
			n = null;
		r.clearData("basic"), r.addData("basic", a);
		for (var o = 0; o < this.stressTests.playerContainers.length; o++) n = r.createEmitter(Phaser.ParticleStorm.SPRITE_BATCH, Util.getOptionalParameter(s.force, new Phaser.Point(0, 0))), n.addToWorld(this.stressTests.playerContainers[o]), n.emit("basic", 50, -100, {
			repeat: s.repeat,
			frequency: s.frequency
		}), this.stressTests.emitters.push(n)
	},
	stressTestPlayerContainers: function(e, t, i) {
		for (var a = this.stressTests.playerContainers, s = 0; s < a.length; s++) a[s].destroy();
		a = [];
		for (var r = e.add.group(e.broadcaster.broadcast(Prodigy.Events.Screen.GET_LAYER, e, ["content"])), n = 80, o = 100, h = 1280 / n; t-- > 0;) {
			var l = new Player(e);
			Util.getOptionalParameter(i, !0) ? l.createRandom() : l.appearance.setAppearance({
				name: "test",
				nick: null,
				gender: "male",
				hair: {
					style: 0,
					color: 1
				},
				skinColor: 1,
				eyeColor: 1,
				face: 4
			});
			var d = t % h * n + 40,
				c = Math.floor(t / h) * o + o,
				p = e.prodigy.create.player(r, l, 1, d, c);
			p.reload(p.walk.bind(p)), this.stressTests.playerContainers.push(p)
		}
	},
	snow: function(e) {
		this.clearEmitters(e), this.dynamicSnow(e, "SMALL_SNOW"), this.dynamicSnow(e, "BIG_SNOW")
	},
	dynamicSnow: function(e, t) {
		var i = e.particleStorm,
			a = i.createEmitter(Phaser.ParticleStorm.SPRITE_BATCH),
			s = Prodigy.Lodash.cloneDeep(Prodigy.Debug.PARTICLE_STRESS_TEST_DATA[t].emitter);
		s.zone = i.createLineZone(-200, 0, 1280, 0), i.clearData(t), i.addData(t, Prodigy.Debug.PARTICLE_STRESS_TEST_DATA[t].particle), a.addToWorld(), a.emit(t, 0, 0, s), this.stressTests.emitters.push(a)
	},
	clearEmitters: function(e) {
		for (var t = this.stressTests.emitters, i = null, a = 0; a < t.length; a++) i = t[a], i.paused = !0, e.particleStorm.removeEmitter(i), i.destroy();
		t = []
	},
	enableParticles: function(e, t) {
		for (var i = this.stressTests.emitters, a = 0; a < i.length; a++) i[a].paused = !t
	},
	spawnBuddyParticle: function(e, t, i, a, s, r) {
		var n = e.prodigy.user;
		Util.isNullOrUndefined(n.follow) || (n.follow.destroy(), n.follow = null);
		var o = e.broadcaster.broadcast("Prodigy.Events.Screen.GET_LAYER", e, ["content"]),
			h = e.broadcaster.broadcast("Prodigy.Events.Screen.GET_LAYER", e, ["path"]);
		e.particleStorm.clearData(String(GameConstants.MAX_SAFE_INTEGER)), Items.itemMap["particleEffect-" + GameConstants.MAX_SAFE_INTEGER] = {
			data: i
		}, Items.itemMap["follow-" + t].data.particleEffects = [{
			ID: GameConstants.MAX_SAFE_INTEGER,
			x: Util.getOptionalParameter(a, 0),
			y: Util.getOptionalParameter(s, 0),
			inFront: Util.getOptionalParameter(r, !0)
		}];
		var l = e.prodigy.create.follow(o, t, 1, n, h, null);
		Util.isNullOrUndefined(l.reload) || l.reload(), n.follow = l
	},
	unlockColiseumOpponent: function(e, t) {
		var i = 5 * t,
			a = Prodigy.Creature.starsToLevel(i - 1),
			s = Util.getOptionalParameter(e.prodigy.player.data.stars, 0);
		a > s && e.prodigy.player.addStars(a - s), t > e.prodigy.player.getColiseum() && (e.prodigy.player.setColiseum(t), e.prodigy.player.updated = !0)
	},
	lockColiseumOpponent: function(e, t) {
		t < e.prodigy.player.getColiseum() && (e.prodigy.player.setColiseum(t), e.prodigy.player.updated = !0)
	},
	setArenaLeaderboardScore: function(e, t, i) {
		var a = this.updateLeaderboardData(e, Prodigy.Container.ArenaLeaderboard, t, "arenaScore", i);
		Util.isNullOrUndefined(a) || (a.setPage(a.page), a.showTopPlayer(a.leaders[0]))
	},
	setMyArenaLeaderboardScore: function(e, t, i) {
		var a = this.updateLeaderboardData(e, Prodigy.Container.Arena, t, "arenaScore", i);
		Util.isNullOrUndefined(a) || a.setPage(a.page)
	},
	setClassLeaderboardScore: function(e, t, i) {
		var a = this.updateLeaderboardData(e, Prodigy.Container.Leaderboard, t, "level", i);
		Util.isNullOrUndefined(a) || (a.setPage(a.page), a.showTopPlayer(a.leaders[0]))
	},
	updateLeaderboardData: function(e, t, i, a, s) {
		var r = e.broadcaster.broadcast(Prodigy.Events.Debug.GET_UI_ELEMENT, e, [t]);
		if (!Util.isNullOrUndefined(r)) {
			r.leaders[i - 1].data[a] = s, r.leaders.sort(function(e, t) {
				return e.data[a] === t.data[a] ? 0 : e.data[a] < t.data[a] ? 1 : -1
			});
			for (var n = 0; n < r.leaders.length; ++n) r.leaders[n].place = n + 1
		}
		return r
	},
	setCustomBounty: function(e, t, i) {
		if (t > -1 && 3 > t && (this.bountyOverrides[t] = i, Util.isNullOrUndefined(i.preName) || "string" != typeof i.preName || (i.preName = e.prodigy.bounty._name.indexOf(i.preName)), Util.isNullOrUndefined(i.postName) || "string" != typeof i.postName || (i.postName = e.prodigy.bounty._name2.indexOf(i.postName)), Util.isNullOrUndefined(i.title) || "string" != typeof i.title || (i.title = e.prodigy.bounty._title.indexOf(i.title)), Util.isNullOrUndefined(i.monster) || (Util.isNullOrUndefined(i.zone) ? delete i.monster : i.monster = e.prodigy.world.zones[i.zone].monsters.indexOf(i.monster)), Util.isNullOrUndefined(i.map) || Util.isNullOrUndefined(i.zone) && delete i.map, Util.isNullOrUndefined(i.reward) || (i.reward = e.prodigy.bounty._reward.indexOf(i.reward)), !Util.isNullOrUndefined(i.location)))
			if (Util.isNullOrUndefined(i.zone) || Util.isNullOrUndefined(i.map)) delete i.location;
			else {
				var a = e.prodigy.world.zones[i.zone].maps[i.map];
				i.location >= a.coord.length && delete i.location
			}
	},
	clearCustomBounty: function(e, t) {
		delete this.bountyOverrides[t]
	},
	openMenu: function(e, t) {
		var i = this.getMenus(e);
		if (i.hasOwnProperty(t)) {
			var a = Array.prototype.slice.call(arguments, 2);
			0 === a.length && (a = i[t]), e.prodigy.open[t].apply(e.prodigy.open, a)
		} else Util.log("Menu is not supported", Util.ERROR)
	},
	getMenus: function(e) {
		return function() {
			var t = function() {},
				i = function() {
					var t = new Player(e);
					return t.init(e.prodigy.player.data), e.prodigy.create.player(null, t)
				},
				a = {
					chat: [],
					toyStore: [],
					nameChange: [!0],
					advancedNameChange: [!0, null, !0],
					achievement: [
						[e.prodigy.achievements.getData(1)]
					],
					toyUnlock: [],
					rankStore: [Object.assign({}, e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.ARENA_REWARDS), {
						callback: function() {
							return 0
						}
					})],
					rating: [],
					choosePet: [1],
					createAccount: [],
					server: [
						[{
							id: "1",
							full: 0,
							name: "Server 1",
							meta: {
								tag: "fire"
							}
						}, {
							id: "2",
							full: 0,
							name: "Server 2",
							meta: {
								tag: "earth"
							}
						}, {
							id: "3",
							full: 100,
							name: "Server 3",
							meta: {
								tag: "air"
							}
						}, {
							id: "4",
							full: 0,
							name: "Server 4",
							meta: {
								tag: "water"
							}
						}, {
							id: "5",
							full: 75,
							name: "Server 5",
							meta: {
								tag: "wizard"
							}
						}, {
							id: "6",
							full: 0,
							name: "Server 6",
							meta: {
								tag: "zone-ice"
							}
						}], null, !1
					],
					serverSelectMode: [
						[{
							id: "1",
							full: 0,
							name: "Server 1",
							meta: {
								tag: "fire"
							}
						}, {
							id: "2",
							full: 0,
							name: "Server 2",
							meta: {
								tag: "earth"
							}
						}, {
							id: "3",
							full: 100,
							name: "Server 3",
							meta: {
								tag: "air"
							}
						}, {
							id: "4",
							full: 0,
							name: "Server 4",
							meta: {
								tag: "water"
							}
						}, {
							id: "5",
							full: 75,
							name: "Server 5",
							meta: {
								tag: "wizard"
							}
						}, {
							id: "6",
							full: 0,
							name: "Server 6",
							meta: {
								tag: "zone-ice"
							}
						}], t
					],
					houseEditorMenu: [null, e.state.states.TileScreen],
					"catch": [null, t],
					battle: [i(), null, i()],
					memberPrompt: [],
					playAtHomePrompt: [],
					parentalLinkInfoPrompt: [Prodigy.Menu.ParentLinkBenefitsConfig.ANALYTICS_SOURCE_SETTINGS],
					parentalLinkSuccessPrompt: [],
					mailerOpenMail: [{
						data: {
							id: 1,
							message: "This is test mail",
							subject: "TEST",
							attachments: []
						}
					}],
					friendRequests: [t],
					itemInfo: [Object.assign({}, Items.getItem("hat", 1), {
						cost: [{
							type: "currency",
							ID: 1,
							N: 50
						}]
					}), t, "buy"],
					houseItemInfo: [Object.assign({}, Items.getItem("dormbg", 2), {
						cost: [{
							type: "currency",
							ID: 1,
							N: 50
						}]
					}), t, "buy"],
					bountyBoard: [],
					social: [Prodigy.Menu.Social.LEADERBOARD],
					boostSelect: [
						[{
							icon: {
								type: "item",
								ID: 47
							},
							d: "More gears"
						}, {
							icon: {
								type: "fossil",
								ID: 1
							},
							d: "Slow time"
						}, {
							icon: "star2",
							d: "Multiplier"
						}], t
					],
					card: [e.prodigy.player, !0, !0],
					arena: [],
					stylist: [],
					membership: [Prodigy.Menu.MemberAd.NICKNAME],
					darkTowerMemberGate: [],
					nicknamer: [
						[{
							pre: "Buccaneer ",
							req: [{
								rtype: "item",
								type: "outfit",
								ID: 36
							}, {
								rtype: "item",
								type: "hat",
								ID: 40
							}, {
								rtype: "item",
								type: "weapon",
								ID: 65
							}],
							fail: "You need to buy the Pirate set to unlock!"
						}, {
							pre: "Captain ",
							req: [{
								rtype: "quest",
								zone: "shipwreck_shore",
								Q: 11
							}],
							fail: "You need to complete the Shipwreck Shore quest to unlock!"
						}, {
							pre: "Treasure Hunter ",
							req: [{
								rtype: "pet",
								ID: 98
							}],
							fail: "You need to catch a Mimic to unlock!"
						}, {
							pre: "First-mate ",
							member: !0,
							fail: "You need to become a member to unlock!"
						}, {
							post: "beard the Pirate",
							member: !0,
							fail: "You need to become a member to unlock!"
						}]
					],
					gotItem: [
						[{
							type: "gold",
							N: 10
						}]
					],
					message: ["Message box body", t, null, "Title"],
					alert: ["Alert body", t, null, "Title"],
					messageBox: ["Message box yes/no body", t, t, null, "Title"],
					messageBoxGeneric: ["Message box generic body", t, t, t, null, null, "ui-house-preview", {
						modifyProperty: [{
							element: "yesText",
							property: "text",
							value: "400"
						}, {
							element: "membershipGraphic",
							property: "visible",
							value: !1
						}, {
							element: "houseGraphic",
							property: "atlasName",
							value: Items.getIconAtlas({
								type: "dormbg",
								ID: 12
							})
						}, {
							element: "houseGraphic",
							property: "frameName",
							value: Items.getIconFrame({
								type: "dormbg",
								ID: 12
							})
						}]
					}],
					messageBoxOkay: ["Okay message body", "OK", t, null, "Title"],
					zoneProgress: [Prodigy.Menu.WorldMap.BTNS[0], t, t],
					titanProgress: [!0],
					character: [],
					backpack: [],
					pouch: ["hat", t, !0],
					settings: [],
					map: [],
					store: [e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.COMPANION_SHOP)],
					stylistStore: [e.prodigy.stores.getStore(e.prodigy.stores.SHOPS.STYLIST), null, {
						shopkeeperTag: "store-stylist",
						shopkeeperFrame: "stylist-npc-portrait",
						Y: 40,
						scaleX: 1,
						scaleY: 1
					}],
					buyToy: [133, !1],
					slotMachine: [133, !1],
					battleSummary: [null, {
						totalStars: 50,
						memberStarsEarned: 0
					}],
					battleLevel: [e.prodigy.player, {
						type: Prodigy.Menu.BattleBase.LEVEL_UP,
						source: e.prodigy.player
					}],
					battlePotionSelect: [],
					confirmPotionUse: [Items.getItem("item", 102), e.prodigy.player],
					potionPvpPopup: [],
					epicErrorMessage: ["You can only use one Epic attack per battle!", {
						showClose: !1
					}],
					questDescription: [e.prodigy.world.zones.activity_zone.util.getDailyQuestData(0), t]
				};
			return function() {
				return a
			}
		}()()
	},
	closeMenus: function(e) {
		e.prodigy.open.menuCloseAll()
	},
	resetRegisterDate: function(e) {
		e.prodigy.player.registerDate = new Date(0)
	}
}, Prodigy.Debug.PARTICLE_STRESS_TEST_COMMON = {
	users: 50,
	image: "particles",
	frame: "particle",
	emitterRepeat: -1
}, Prodigy.Debug.PARTICLE_STRESS_TEST_DATA = {
	SMALL_SNOW: {
		particle: {
			image: "font-general",
			frame: "42-16",
			lifespan: 8e3,
			vy: {
				min: 2,
				max: 2
			},
			vx: {
				min: .5,
				max: 1
			},
			rotation: {
				value: 0,
				delta: {
					min: -2,
					max: 2
				}
			}
		},
		emitter: {
			repeat: -1,
			frequency: 50
		}
	},
	BIG_SNOW: {
		particle: {
			image: "font-general",
			frame: "42-30",
			lifespan: 5e3,
			vy: {
				min: 3,
				max: 3
			},
			vx: {
				min: .25,
				max: .75
			},
			rotation: {
				value: 0,
				delta: {
					min: -3,
					max: 3
				}
			}
		},
		emitter: {
			repeat: -1,
			frequency: 150
		}
	},
	LOW_LIFESPAN_ALL_OFF: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 50
		}
	},
	MED_LIFESPAN_ALL_OFF: {
		particle: {
			lifespan: 2e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 50
		}
	},
	HIGH_LIFESPAN_ALL_OFF: {
		particle: {
			lifespan: 4e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 50
		}
	},
	MED_FREQUENCY_ALL_OFF: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 100
		}
	},
	HIGH_FREQUENCY_ALL_OFF: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 500
		}
	},
	SCALE_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			},
			scale: {
				min: .8,
				max: 1.3
			}
		},
		emitter: {
			frequency: 50
		}
	},
	SCALE_INTERPOLATE_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			},
			scale: {
				value: 2,
				control: Phaser.ParticleStorm.Graph.CONTROL_LINEAR
			}
		},
		emitter: {
			frequency: 50
		}
	},
	ROTATION_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			},
			rotation: {
				initial: 0,
				value: 360
			}
		},
		emitter: {
			frequency: 50
		}
	},
	FORCE_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			}
		},
		emitter: {
			frequency: 50,
			force: new Phaser.Point(1, 0)
		}
	},
	ALPHA_ON_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			},
			alpha: {
				min: .2,
				max: .8
			}
		},
		emitter: {
			frequency: 50
		}
	},
	ALPHA_INTERPOLATE_ONLY: {
		particle: {
			lifespan: 1e3,
			vx: {
				min: -1,
				max: 1
			},
			vy: {
				min: -1,
				max: 1
			},
			alpha: {
				value: 1,
				control: Phaser.ParticleStorm.Graph.CONTROL_LINEAR
			}
		},
		emitter: {
			frequency: 50
		}
	}
}, Prodigy.ChatManager = function() {
	for (var e = 0; e < Prodigy.ChatManager.CHAT.length; e++) Prodigy.ChatManager.CHAT[e] = Util.capitalize(Prodigy.ChatManager.CHAT[e])
}, Prodigy.ChatManager.prototype = {
	constructor: Prodigy.ChatManager,
	getEmotes: function() {
		return Items.getRawItems("emote")
	},
	getPhrases: function() {
		return Prodigy.ChatManager.CHAT
	},
	getPhrase: function(e) {
		return this.getPhrases()[e]
	},
	getPhraseID: function(e) {
		for (var t = this.getPhrases(), i = 0; i < t.length; i++)
			if (t[i] === e) return i;
		return 0
	},
	addItems: function() {
		for (var e in Items.data)
			if ("female-hair" !== e && "male-hair" !== e) {
				var t = Items.data[e];
				if ("hair" !== e)
					for (var i = 0; i < t.length; i++) Prodigy.ChatManager.CHAT.push(Util.capitalize(t[i].data.name))
			}
	}
}, Prodigy.ChatManager.CHAT = ["all right", "all good", "animals!", "are you coming?", "are you leaving?", "are you staying?", "are you having fun?", "bad", "busy", "bye", "bye bye", "boring", "bought it", "but...", "barely", "because", "can't right now", "check it out", "come over here", "crud", "do you have a minute?", "do you have...", "did you see that?", "did you catch...", "don't bother", "dude", "depends", "everyone look!", "elementary", "follow me", "friends?", "forget it", "fun!", "found you!", "found it!", "funderful", "freaky", "go away", "good", "goodbye", "greetings!", "good morning", "good night", "good afternoon", "good to know", "ghosts!", "great!", "guess again", "guess", "golly", "got to go", "hi", "hello", "hello there!", "hey", "how are you?", "how?", "happy", "help me", "i caught a...", "i got a...", "i have to go", "i have to leave", "i leveled up!", "i love Prodigy!", "i like your hair", "i like your outfit", "i like your hat", "i like your wand", "i like your pet", "i like this place", "i don't like it here", "i like it here", "it's spooky here", "it's super rare!", "it's time", "i'm rich!", "just kidding!", "just you wait", "joking!", "jealous?", "keep going", "keep it up!", "keep walking", "leave me alone", "look", "look at this!", "love it!", "let's go!", "let's battle!", "let me see", "locked!", "my favorite is...", "my favorite item is...", "my favorite pet is...", "maybe", "make me", "made it!", "many thanks!", "made tons of gold!", "neat", "no", "not right now", "not today", "never mind", "nah", "no can do", "never", "now?", "now", "nooooo way!", "over", "over here", "one of these is a...", "okay", "ominous", "puyoy!", "perhaps", "party time!", "pretty cool...", "practice!", "quack quack", "quite", "quiet!", "right", "right behind you", "ribbit!", "right over here", "right there", "see you later", "see ya", "see?", "sorry", "safe and sound!", "shhhhh!", "sounds like...", "seems like it", "someone said so", "someday...", "thank you", "there you are", "think about it", "time for bed", "time for dinner!", "time for lunch!", "time for supper!", "time to get up", "time to go", "terrible", "tell you what...", "very good", "what's up?", "who?", "who are you?", "why?", "what?", "where?", "yes", "you coming?", "you look cool!", "you still there?", "yolo!", "you're welcome", "dragons!!!", "dragons are coming!", "dragons are here!", "dragons are COOL!", "i want a Dragon.", "have you seen the Dragons?", "chill & Char are cool!", "tidus is cool!", "eclipse is cool!", "luma is cool!", "chill & Char are my favorite.", "tidus is my favorite.", "eclipse is my favorite.", "luma is my favorite.", "i like Dragons.", "abracaDABra", "i feel like DANCING!", "let's Dance!", "show me your funny face", "i always ask my parents", "my parents are the best", "being a member is the best", "my teacher is awesome", "zzz"], Prodigy.BountyManager = function(e) {
	this.game = e, this._reward = [1, 1, 3, 1, 3, 5, 3, 1, 1, 5, 1], this._mode = ["pet"], this._MAX_BOUNTIES = 3, this._name = ["Aze", "Apple", "Ame", "Ave", "Accu", "Ah", "Atu", "Aitro", "Ava", "Alba", "Ami", "Auri", "Aura", "Bri", "Buri", "Blobo", "Blu", "Bra", "Bron", "Bri", "Bizu", "Bamo", "Brede", "Bru", "Bro", "Bil", "Ca", "Cami", "Copmero", "Caru", "Cray", "Ci", "Car", "Ces", "Char", "Cha", "Da", "Dar", "De", "Dra", "Dub", "Du", "Dere", "Doe", "Dev", "Ecar", "Ed", "Emu", "Ever", "Eli", "Eli", "Em", "Erme", "Eta", "Ferni", "Fran", "Fruit", "Gri", "Geo", "Gero", "Gio", "Gra", "Gre", "Ham", "Hu", "Har", "Hay", "Hec", "Hev", "Homu", "Hunt", "If", "Iri", "Isa", "Iro", "Ic", "Jaco", "Jav", "Jelly", "Jim", "Jer", "Jamu", "Kal", "Kam", "Ke", "Ki", "La", "Lar", "Law", "Leo", "Lev", "Lam", "Log", "Lucas", "Lui", "Mal", "Man", "Mar", "My", "Na", "North", "Ni", "Nym", "Nol", "Obe", "Oma", "On", "Ozz", "Own", "Py", "Pa", "Pey", "Phil", "Par", "Pre", "Ral", "Ra", "Ric", "Ri", "Rob", "Ro", "Roh", "Roe", "Rom", "Sa", "Sco", "Se", "Seb", "Ser", "Sha", "Spe", "Ste", "Ter", "Tho", "Ti", "Tra", "Tre", "Tri", "Ty", "Va", "Vi", "Vin", "Wal", "Wa", "Way", "Wes", "Wil", "Wi", "Wy", "Yo", "Za"], this._name2 = ["ron", "cup", "rush", "ria", "lomo", "sari", "da", "siri", "pos", "lin", "tru", "rious", "ri", "yte", "ros", "lya", "bos", "kin", "rt", "zipher", "son", "bloor", "math", "buu", "steak", "flace", "tato", "ium", "iar", "lious", "lo", "lio", "tion", "til", "lite", "ser", "kar", "ton", "vous", "cas", "foth", "vicus", "lith", "lik", "vin", "lae", "frost", "ras", "masa", "roth", "tark", "pus", "cico", "isan", "chi", "gtre", "rth", "mith", "phith", "pott", "nibo", "finik", "nmy", "goroth", "bro", "tik", "ford", "tis", "ier", "lus", "ear", "ret", "los", "a", "lak", "como", "ios", "bo", "ini", "old", "esch", "erio", "tara", "moth", "an", "tus", "brak", "nid", "ious", "bu", "goth", "art", "si", "aki", "ikir", "oth", "sil", "cuo", "io", "so", "vus", "with", "cho", "rys", "ron", "rin", "ith", "mat", "ra", "thos", "ci", "tri", "ius", "kos", "sa", "igos", "yn", "ard", "cha", "led", "obo", "gear", "ule"], this._title = [" the Firemonger", " of the Void", " the Waterweaver", " the Earthshaker", " the Windcaller", " Burrowich", " the Digger", " the Therapist", " of Malakai", " Geronido", " Masterflash", " Meganoth", " Seratone", " the Goldwatch", " Passimore", " of the Gatewatch", " the Alchemical", " the Pacifier", " the Ultraverser", ", Chewer of Bones", " the Great", " Bergenwharph", " of Tsao", " of Ruples", " HwyLisco", ", Observer of Hew", ", Shade of Liu", ", Temp of Jude"]
}, Prodigy.BountyManager.prototype = {
	constructor: Prodigy.BountyManager,
	getMap: function(e) {
		var t = this.getZone(e),
			i = e.map;
		if (Util.isNullOrUndefined(i)) {
			var a = [];
			for (var s in this.game.prodigy.world.zones[t].maps) Util.isDefined(this.game.prodigy.world.zones[t].maps[s].coord) && a.push(s);
			var r = new Prodigy.SeededRandomGenerator(e.seed);
			i = a[Math.floor(r.jumpFromStart(1) * a.length)]
		}
		return i
	},
	getZone: function(e) {
		var t = e.zone;
		if (Util.isNullOrUndefined(t)) {
			var i = [];
			for (var a in this.game.prodigy.world.zones) "house" !== a && "lamplight" !== a && Util.isDefined(this.game.prodigy.world.zones[a].monsters) && i.push(a);
			var s = new Prodigy.SeededRandomGenerator(e.seed);
			t = i[Math.floor(s.jumpFromStart(0) * i.length)]
		}
		return t
	},
	getMode: function(e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(t.jumpFromStart(7) * this._mode.length);
		return this._mode[i]
	},
	getMonster: function(e) {
		var t = this.getZone(e),
			i = e.monster;
		if (Util.isNullOrUndefined(i)) {
			var a = new Prodigy.SeededRandomGenerator(e.seed);
			i = Math.floor(a.jumpFromStart(2) * this.game.prodigy.world.zones[t].monsters.length)
		}
		return this.game.prodigy.world.zones[t].monsters[i]
	},
	getTeam: function(e) {
		for (var t = new Prodigy.SeededRandomGenerator(e.seed), i = 2464565433 * t.jumpFromStart(2), a = new Prodigy.SeededRandomGenerator(i), s = Math.floor(3 * a.jumpFromStart(0) + 2), r = [], n = 0, o = 1; s >= o; o++) n = Math.floor(a.jumpFromStart(o) * this.game.prodigy.world.zones[this.getZone(e)].monsters.length), r.push({
			ID: this.game.prodigy.world.zones[this.getZone(e)].monsters[n],
			level: this.getLevel(e),
			nickname: this.getName({
				seed: e.seed * a.jumpFromStart(o)
			})
		});
		return r
	},
	getName: function(e) {
		var t = e.preName,
			i = new Prodigy.SeededRandomGenerator(e.seed);
		Util.isNullOrUndefined(t) && (t = Math.floor(i.jumpFromStart(3) * this.game.prodigy.bounty._name.length));
		var a = e.postName,
			s = new Prodigy.SeededRandomGenerator(1e6 * i.jumpFromStart(3));
		Util.isNullOrUndefined(a) && (a = Math.floor(s.jumpFromStart(0) * this._name2.length));
		var r = this._name[t] + this._name2[a];
		if (5 === this.getReward(e)) {
			var n = e.title;
			Util.isNullOrUndefined(n) && (s = new Prodigy.SeededRandomGenerator(1e6 * i.jumpFromStart(3)), n = Math.floor(s.jumpFromStart(1) * this._title.length)), r += this._title[n]
		}
		return r
	},
	getCoord: function(e) {
		var t = this.game.prodigy.world.zones[this.getZone(e)],
			i = t.maps[this.getMap(e)],
			a = e.location;
		if (Util.isNullOrUndefined(a)) {
			var s = new Prodigy.SeededRandomGenerator(e.seed);
			a = Math.floor(s.jumpFromStart(4) * i.coord.length)
		}
		return i.coord[a]
	},
	getReward: function(e) {
		var t = e.reward;
		if (Util.isNullOrUndefined(t)) {
			var i = new Prodigy.SeededRandomGenerator(e.seed);
			t = Math.floor(i.jumpFromStart(5) * this.game.prodigy.bounty._reward.length)
		}
		return this.game.prodigy.bounty._reward[t]
	},
	getLevel: function(e) {
		var t = e.level;
		if (Util.isNullOrUndefined(t)) {
			{
				var i, a = new Prodigy.SeededRandomGenerator(e.seed);
				Math.floor(100 * a.jumpFromStart(6))
			}
			i = 5 === this.getReward(e) ? Math.floor(9 * a.jumpFromStart(6) + 11) : 3 === this.getReward(e) ? Math.floor(4 * a.jumpFromStart(6) + 6) : Math.floor(4 * a.jumpFromStart(6) + 1), t = this.game.prodigy.player.kennel.getAvgTeamLv() + i, t > 100 && (t = 100)
		}
		return t
	},
	getBounties: function() {
		for (var e, t = [], i = 0; i < this._MAX_BOUNTIES; i++)
			if (e = 84 + i, this.game.prodigy.player.backpack.hasItem("item", e)) {
				var a = this.getBounty(i);
				a.ID = e, a.seed = this.game.prodigy.player.backpack.getItemData(e, "seed"), a.complete = this.game.prodigy.player.backpack.getItemData(e, "complete"), t.push(a)
			} return t
	},
	hasBounty: function(e, t) {
		var i = this.getBounties();
		if (Util.isDefined(i))
			for (var a = 0; a < i.length; a++) {
				var s = this.getZone(i[a]);
				if (s === e) {
					var r = this.getMap(i[a]);
					if (r === t && !Util.isDefined(i[a].complete)) return i[a]
				}
			}
		return !1
	},
	compareBounties: function(e, t) {
		return this.getZone(e) === this.getZone(t) && this.getMap(e) === this.getMap(t)
	},
	placeBounty: function(e, t, i) {
		var a, s, r = this.getLevel(e),
			n = this.getCoord(e);
		if ("pet" === this.getMode(e)) {
			var o = this.getMonster(e),
				h = this.getName(e);
			a = {
				intro: "Bounty Battle!",
				randDir: !0,
				encounter: [{
					ID: o,
					nickname: h
				}],
				level: r,
				bounty: e
			}, s = i.addBounty(this.game, t, 9, n.x, n.y, !1, a), s.showName(!0, h)
		} else "team" === this.getMode(e) && (a = {
			encounter: [{
				ID: this.getTeam(e)[0].ID,
				nickname: this.getTeam(e)[0].nickname
			}],
			level: r,
			intro: "Bounty Battle!",
			bounty: e,
			screen: "bg-battle-mountain",
			pets: this.getTeam(e).slice(1, this.getTeam(e).length)
		}, s = i.addBounty(this.game, t, 9, n.x, n.y, !1, a))
	},
	placeBountyHere: function(e, t, i, a) {
		var s = this.getLevel(e);
		if (Util.isDefined(i.coord)) {
			var r, n, o = i.coord[a];
			if ("pet" === this.getMode(e)) {
				var h = this.getMonster(e),
					l = this.getName(e);
				r = {
					intro: "Bounty Battle!",
					randDir: !0,
					encounter: [{
						ID: h,
						nickname: l
					}],
					level: s,
					bounty: e
				}, n = i.addBounty(this.game, t, 9, o.x, o.y, !1, r), n.showName(!0, l)
			} else "team" === this.getMode(e) && (r = {
				encounter: [{
					ID: this.getTeam(e)[0].ID,
					nickname: this.getTeam(e)[0].nickname
				}],
				level: s,
				intro: "Bounty Battle!",
				bounty: e,
				screen: "bg-battle-mountain",
				pets: this.getTeam(e).slice(1, this.getTeam(e).length)
			}, n = i.addBounty(this.game, t, 9, o.x, o.y, !1, r))
		}
	},
	getBounty: function(e) {
		var t = {};
		return GameConstants.get("GameConstants.Build.DEBUG") && !Util.isNullOrUndefined(this.game.prodigy.debug.bountyOverrides[e]) && (t = this.game.prodigy.debug.bountyOverrides[e]), t.seed = this.game.prodigy.player.state.get("world-bounties")[e], t
	},
	generateBounties: function(e) {
		for (var t, i, a = this.game.prodigy.player.state.get("world-bounties") || [], s = new Prodigy.SeededRandomGenerator(e), r = 0; r < this._MAX_BOUNTIES; r++)
			if (!Util.isDefined(this.game.prodigy.player.state.get("world-bounties")) || this.game.prodigy.player.state.get("world-bounties").length < 3) {
				for (t = 175451218 * s.jumpFromStart(r), i = 1; !this.checkValidBounty(t, r);) t = s.jumpFromStart(r) * i * 175451218, i++;
				a.push(t), this.game.prodigy.world.setState("bounties", a)
			} else if (!this.game.prodigy.player.backpack.hasItem("item", r + 84)) {
			for (t = 175451218 * s.jumpFromStart(r), i = 1; !this.checkValidBounty(t, r);) t = s.jumpFromStart(r) * i * 175451218, i++;
			a[r] = t
		}
		this.game.prodigy.world.setState("bounties", a)
	},
	checkValidBounty: function(e, t) {
		if (Util.isDefined(this.game.prodigy.player.state.get("world-bounties")))
			for (var i = 0; t > i; i++)
				if (this.game.prodigy.player.state.get("world-bounties")[i] > 0) {
					if (this.game.prodigy.bounty.compareBounties({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}, {
							seed: e
						})) return !1;
					if (this.getReward({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}) > 1 && this.getReward({
							seed: e
						}) > 1) return !1;
					if (this.getName({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}) === this.getName({
							seed: e
						})) return !1
				} return !0
	},
	completeBounty: function(e) {
		this.game.prodigy.player.backpack.setItemData(e.ID, "complete", 1)
	},
	getText: function(e) {
		var t = e.description;
		if (Util.isNullOrUndefined(t)) {
			var i = new Prodigy.SeededRandomGenerator(e.seed);
			t = Math.floor(4.9 * i.jumpFromStart(8))
		}
		return t
	}
}, Prodigy.SeededRandomGenerator = function(e) {
	this.seed = e, this.cur_seed = e
}, Prodigy.SeededRandomGenerator.prototype = {
	next: function() {
		return this.cur_seed = this.cur_seed + Prodigy.SeededRandomGenerator.CONSTANT, this.generate(this.cur_seed)
	},
	jumpFromStart: function(e) {
		for (var t = 0, i = 0; e >= i; i++) t = this.generate(this.seed + i * Prodigy.SeededRandomGenerator.CONSTANT);
		return t
	},
	jump: function(e) {
		for (var t = this.generate(), i = 0; e > i; i++) t = this.next();
		return t
	},
	generate: function(e) {
		var t = e || this.seed;
		return (9301 * t + 49297) % 233280 / 233280
	}
}, Prodigy.SeededRandomGenerator.CONSTANT = 2949751391065249e4, Prodigy.Breadcrumbs.BreadcrumbConfig = function() {
	this.features = {}, this.setup()
}, Prodigy.Breadcrumbs.BreadcrumbConfig.prototype = {
	constructor: Prodigy.Breadcrumbs.BreadcrumbConfig,
	addFeature: function(e) {
		var t = {
			name: e,
			breadcrumbs: {},
			addBreadcrumb: function(e, t, i) {
				return t >= 0 && 32 > t ? this.breadcrumbs[e] = {
					index: t,
					completes: i
				} : Util.log("addBreadcrumb - Breadcrumb was not added. index must be between [0, 32], provided index was " + t, Util.ERROR), this
			}
		};
		return this.features[e] = t, t
	},
	setup: function() {}
}, Prodigy.Breadcrumbs.GameBreadcrumbConfig = function() {
	Prodigy.Breadcrumbs.BreadcrumbConfig.call(this)
}, Prodigy.extends(Prodigy.Breadcrumbs.GameBreadcrumbConfig, Prodigy.Breadcrumbs.BreadcrumbConfig, {
	constructor: Prodigy.Breadcrumbs.GameBreadcrumbConfig,
	setup: function() {
		this.addFeature(Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON, 0).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE, 1, [Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON]).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON, 2, [Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE]).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_VISIT_BUTTON, 3), this.addFeature(Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON, 0).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE, 1, [Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON]).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_MOVE_BUTTON, 2, [Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE]), this.addFeature(Prodigy.Breadcrumbs.FEATURE_STYLIST).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_STYLIST_BUTTON, 0), this.addFeature(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_EMOTE_BUTTON, 0).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DANCE_BUTTON, 1).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON, 2, [Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DANCE_BUTTON, Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_EMOTE_BUTTON]), this.addFeature(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_WATCHED_INTRO, 0).addBreadcrumb(Prodigy.Breadcrumbs.BREADCRUMB_TITAN_HARVEY_TALKED, 1)
	}
}), Prodigy.Breadcrumbs.FEATURE_HOUSE_MOVING = "FEATURE_HOUSE_MOVING", Prodigy.Breadcrumbs.FEATURE_HOUSE_VISITING = "FEATURE_HOUSE_VISITING", Prodigy.Breadcrumbs.FEATURE_STYLIST = "FEATURE_STYLIST", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_BUTTON = "BREADCRUMB_CLICKED_WORLD_MAP_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_WORLD_MAP_HOUSE = "BREADCRUMB_CLICKED_WORLD_MAP_HOUSE", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON = "BREADCRUMB_CLICKED_HOUSE_LOCK_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_HOUSE_MOVE_BUTTON = "BREADCRUMB_CLICKED_HOUSE_MOVE_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_VISIT_BUTTON = "BREADCRUMB_CLICKED_CARD_VISIT_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_CARD_STYLIST_BUTTON = "BREADCRUMB_CLICKED_CARD_STYLIST_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB = "BREADCRUMB_CLICKED_DAB", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_EMOTE_BUTTON = "BREADCRUMB_CLICKED_DAB_EMOTE_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DANCE_BUTTON = "BREADCRUMB_CLICKED_DAB_DANCE_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_CLICKED_DAB_DAB_BUTTON = "BREADCRUMB_CLICKED_DAB_DAB_BUTTON", Prodigy.Breadcrumbs.BREADCRUMB_TITAN_INTRO = "BREADCRUMB_TITAN_INTRO", Prodigy.Breadcrumbs.BREADCRUMB_TITAN_WATCHED_INTRO = "BREADCRUMB_TITAN_WATCHED_INTRO", Prodigy.Breadcrumbs.BREADCRUMB_TITAN_HARVEY_TALKED = "BREADCRUMB_TITAN_HARVEY_TALKED", Prodigy.Breadcrumbs.BreadcrumbManager = function(e, t) {
	this.dataSource = e, this.breadcrumbConfig = t
}, Prodigy.Breadcrumbs.BreadcrumbManager.prototype = {
	constructor: Prodigy.Breadcrumbs.BreadcrumbManager,
	completeBreadcrumb: function(e, t) {
		var i = "breadcrumbs-" + e;
		if (!this.isBreadcrumbComplete(e, t)) {
			var a = this.breadcrumbConfig.features[e];
			if (Util.isDefined(a)) {
				var s = a.breadcrumbs[t];
				if (Util.isDefined(s)) {
					var r = this.dataSource.get(i);
					if (Util.isNullOrUndefined(r) && this.dataSource.set(i, 0), r = this.dataSource.get(i), this.dataSource.set(i, r | Math.pow(2, s.index)), Util.isDefined(s.completes) && s.completes.length > 0)
						for (var n = 0; n < s.completes.length; n++) this.completeBreadcrumb(e, s.completes[n])
				} else Util.log("BreadcrumbManager.completeBreadcrumb - Couldn't find breadcrumb named: " + t + " for feature: " + e + ". No action taken.", Util.ERROR)
			} else Util.log("BreadcrumbManager.completeBreadcrumb - Couldn't find feature named: " + e + ". No action taken.", Util.ERROR)
		}
	},
	isBreadcrumbComplete: function(e, t) {
		var i = this.dataSource.get("breadcrumbs-" + e),
			a = this.breadcrumbConfig.features[e];
		if (Util.isDefined(a)) {
			var s = a.breadcrumbs[t];
			if (Util.isDefined(s)) {
				var r = Math.pow(2, s.index);
				return !Util.isNullOrUndefined(i) && (i & r) === r
			}
		}
		return !1
	},
	resetBreadcrumbs: function(e) {
		var t = "breadcrumbs-" + e,
			i = this.breadcrumbConfig.features[e];
		if (Util.isDefined(i)) {
			var a = this.dataSource.get(t);
			Util.isNullOrUndefined(a) || this.dataSource.set(t, 0)
		}
	}
}, Prodigy.FunnelEventIDs = {}, Prodigy.FunnelEventIDs.FUNNEL_BUY_MEMBER_ITEM = "Buy-Member-Item", Prodigy.FunnelEventIDs.FUNNEL_SECOND_WHEEL_SPIN = "Second-Wheel-Spin", Prodigy.FunnelEventIDs.FUNNEL_ENTER_DARK_TOWER = "Enter-Dark-Tower", Prodigy.FunnelEventIDs.FUNNEL_CATCH_MORE_PETS = "Catch-More-Pets", Prodigy.FunnelEventIDs.FUNNEL_OPEN_MEMBER_CHEST_BATTLE = "Open-Member-Chest-Battle", Prodigy.FunnelEventIDs.FUNNEL_OPEN_MEMBER_CHEST_WORLD = "Open-Member-Chest-World", Prodigy.FunnelEventIDs.FUNNEL_EQUIP_NEW_LOCKED_ITEM = "Equip-New-Locked-Item", Prodigy.FunnelEventIDs.FUNNEL_EQUIP_BACKPACK_LOCKED_ITEM = "Equip-Backpack-Locked-Item", Prodigy.FunnelEventIDs.FUNNEL_EQUIP_CARD_LOCKED_ITEM = "Equip-Card-Locked-Item", Prodigy.FunnelEventIDs.FUNNEL_UNLOCK_HOUSE = "Unlock-House", Prodigy.FunnelEventIDs.FUNNEL_CATCH_PET_AGAIN = "Catch-Pet-Again", Prodigy.FunnelEventIDs.FUNNEL_USE_BOOST = "Use-Boost", Prodigy.FunnelEventIDs.FUNNEL_GET_MEMBER_STARS = "Get-Member-Stars", Prodigy.FunnelEventIDs.FUNNEL_CLICK_HUD_BUTTON = "Click-HUD-Button", Prodigy.FunnelEventIDs.STAGE_CLICK_ITEM = "Click-Item", Prodigy.FunnelEventIDs.STAGE_CLICK_BUY = "Click-Buy", Prodigy.FunnelEventIDs.STAGE_CLICK_MEMBERSHIP = "Click-Membership", Prodigy.FunnelEventIDs.STAGE_CLICK_PARENT_CONFIRMATION = "Click-Parent-Confirmation", Prodigy.FunnelEventIDs.STAGE_CLICK_SPIN_AGAIN = "Click-Spin-Again", Prodigy.FunnelEventIDs.STAGE_ENTER_TOWER = "Enter-Tower", Prodigy.FunnelEventIDs.STAGE_CATCH_PET = "Catch-Pet", Prodigy.FunnelEventIDs.STAGE_OPEN_CHEST = "Open-Chest", Prodigy.FunnelEventIDs.STAGE_EQUIP_ITEM = "Equip-Item", Prodigy.FunnelEventIDs.STAGE_CLICK_UNLOCK = "Click-Unlock", Prodigy.FunnelEventIDs.STAGE_CATCH_PET_FAIL = "Catch-Pet-Fail", Prodigy.FunnelEventIDs.STAGE_TRY_AGAIN = "Try-Again", Prodigy.FunnelEventIDs.STAGE_CLICK_BOOST = "Click-Boost", Prodigy.FunnelEventIDs.STAGE_CLICK_STARS = "Click-Stars", Prodigy.FunnelEventIDs.STAGE_CLICK_BUTTON = "Click-Button";
var NetworkManager = function() {
	function e(e) {
		$(document).ajaxError(function() {
			Util.log(arguments)
		}), this.player = null, this.game = e, this.open = new Prodigy.MenuFactory(e), this.inactiveTimer = null, this.isInactiveDialogOpen = !1, this.socketConnected = !0;
		var t = {
			clientVersion: this.game.clientVersion
		};
		this.api = new ApiClient(t, {
			503: this.initBoot.bind(this)
		}), this.api.generic_ajax_error = this.onError.bind(this), setInterval(this.updateCharacter.bind(this), 3e3)
	}
	return e.LOGIN = {
		200: "All Good!",
		400: "Incorrect Username Or Password",
		401: "Incorrect Username Or Password",
		403: "Access is Forbidden!",
		503: "Prodigy Is Temporarily Offline.",
		500: "Prodigy Is Temporarily Offline.",
		0: "Prodigy Is Temporarily Offline."
	}, e.SKILLS = {
		0: "There was an error loading your skills. Please try again."
	}, e.VERBOSE_ANALYTICS = !1, e.emitMessageCount = 0, e.messageSchemas = {
		info: ["userID", "target.x", "target.y", "appearance.name", "appearance.nick", "appearance.gender", "appearance.hair.style", "appearance.hair.color", "appearance.skinColor", "appearance.eyeColor", "appearance.face", "isMember", "equipment.boots", "equipment.follow", "equipment.hat", "equipment.outfit", "equipment.weapon", "data.level", "data.win", "data.loss", "data.arenaScore", "data.gold", "data.tower", "data.stars", "data.hp", "data.allowsHouseVisitors", "data.versionID"]
	}, e.prototype.getKey = function() {
		return this.api.uniqueKey
	}, e.prototype.openWebsite = function(e, t) {
		t = Util.isDefined(t) ? t : !0;
		try {
			var i = "https://" + e;
			t ? window.open(i) : window.location.href = i
		} catch (a) {}
	}, e.prototype.sendNotification = function(e) {
		var t = this.game.prodigy.player.owners;
		e.timestamp = new Date;
		var i = "https://www.prodigygame.org/notification-api/v1/";
		try {
			document.domain.indexOf("prodigygame.com") >= 0 && (i = "https://prodigygame.com/notification-api/v1/")
		} catch (a) {}
		for (var s = 0; s < t.length; s++) try {
			$.ajax({
				url: i + t[s].ownerID,
				type: "POST",
				data: e
			})
		} catch (a) {}
	}, e.prototype.getErrorMessage = function(e, t) {
		return Util.isDefined(e) && Util.isDefined(t) ? t[e] : Util.isDefined(t) ? t[0] : "There was an error with your request"
	}, e.prototype.sendAnalytics = function(e, t, i) {
		if (!Util.isDefined(this.player) || !this.loggedIn) return Util.log("GAQ " + i + ", " + e + ", " + t), void 0;
		Util.isDefined(i) || (i = this.player.isMember ? "Member-Events" : "Non-Member-Events", this.player.isMember && 1 === this.player.data.nm && (i = "New-Member-Events")), Util.log("GAQ " + i + ", " + e + ", " + t);
		try {
			_gaq.push(["_trackEvent", i + "", e + "", t + ""])
		} catch (a) {}
	}, e.prototype.sendToyEvent = function(e, t, i) {
		try {
			var a = {};
			a.stage = t, a.type = e, Util.isNullOrUndefined(i) || (a.toy_id = i), this.sendEvent("toy-event", a)
		} catch (s) {}
	}, e.prototype.sendZoneEvent = function(e, t) {
		try {
			var i = this.game.prodigy.world.getCurrentMap();
			if (Util.isDefined(i)) {
				var a = i.split("-");
				if (2 === a.length) {
					var s = {};
					s.type = e, s.zoneName = a[0], s.mapName = a[1], s.metadata = t || "", this.sendEvent("zone-event", s)
				}
			}
		} catch (r) {}
	}, e.prototype.sendItemChangeEvent = function(e, t) {
		try {
			var i = this.game.prodigy.world.getCurrentMap();
			if (Util.isDefined(i)) {
				var a = i.split("-");
				if (2 === a.length) {
					var s = {};
					s.type = e, s.zoneName = a[0], s.mapName = a[1], s.itemType = t.type, s.itemID = t.ID, s.itemN = t.N || 1, this.sendEvent("item-change-event", s)
				}
			}
		} catch (r) {}
	}, e.prototype.sendConversionFunnelEvent = function(e, t, i) {
		if ("1" !== Util.getUrlVariable("iosApp")) try {
			var a = this.game.prodigy.player,
				s = a.locationSelectionType === GameConstants.get("GameConstants.LocationSelection.HOME"),
				r = {
					funnelName: e,
					stageTag: t,
					selectedPlayingFromHome: s,
					metadata: i || ""
				};
			this.sendEvent("conversion-funnel-event", r)
		} catch (n) {}
	}, e.prototype.sendEvent = function(t, i, a) {
		var s = this.game.prodigy.player,
			r = Util.isDefined(a) ? a : !1;
		try {
			Util.isDefined(i) || (i = {}, r = !0), r && (i.member = s.isMember, i.data = s.data, i.backpack = s.backpack.data || {}, i.kennel = s.kennel.data || {}, i.equipment = s.equipment.data || {}, i.state = s.state.data || {}), i.userTest = s.userID % GameConstants.get("GameConstants.Features.SplitTests.USER_ID_MOD"), i.gradeTest = s.grade % 4, i.classTest = Util.isDefined(s.classIDs) && s.classIDs.length > 0 ? s.classIDs[s.classIDs.length - 1] % 4 : 4, i.token = this.api.uniqueKey, i.date = (new Date).getTime();
			var n = {
				name: t,
				details: i,
				user: {
					userID: s.userID
				}
			};
			GameConstants.get("GameConstants.Build.DEBUG") && e.VERBOSE_ANALYTICS ? Util.log("NetworkManager.sendEvent " + JSON.stringify(n)) : Util.log("NetworkManager.sendEvent " + n.name), this.api.track(JSON.stringify(n), {
				200: function() {}
			})
		} catch (o) {}
	}, e.prototype.log = function(e, t) {
		Util.isDefined(this.player) && (t.userID = this.player.userID), Util.log("MSG = debug, " + e + ", " + JSON.stringify(t)), this.api.log("debug", e, t)
	}, e.prototype.initBoot = function() {
		-1 === this.bootCount && this.loggedIn && (this.bootCount = (new Date).getTime() + 7e4, this.bootMsg = "Prodigy is going offline, and you will be logged off in ")
	}, e.prototype.onError = function(e, t, i) {
		Util.log("FAIL : " + e + " , " + t + ", " + i), !Util.isDefined(this.updateFailedTime) && this.loggedIn && Util.isDefined(e) && -1 !== e.indexOf("update") && (this.updateFailedTime = (new Date).getTime(), Util.log("logout countdown"))
	}, e.prototype.getCharData = function(e, t, i, a) {
		Util.isDefined(a) || (a = function() {}), Util.isDefined(i) || (i = function() {}), this.api.getUser(e, t, {
			200: i,
			401: a,
			206: a,
			503: a,
			340: a,
			0: a,
			500: a
		})
	}, e.prototype.canUseMP = function() {
		return this.loggedIn && this.socketConnected && Util.isDefined(this.zone)
	}, e.prototype.getWorldList = function(e, t) {
		this.api.getWorldList({
			200: e,
			400: t,
			500: t,
			503: t,
			0: t
		})
	}, e.prototype.startMatchmaking = function(e, t, i, a, s) {
		this.api.startMatchmaking(e, t, i, {
			200: a,
			400: s,
			500: s,
			0: s
		})
	}, e.prototype.quitMatchmaking = function(e, t) {
		this.api.quitMatchmaking({
			200: e,
			400: t,
			500: t,
			0: t
		})
	}, e.prototype.joinMultiplayerServer = function(e, t, i, a, s) {
		this.socketConnectFailed = !1, a = this.onDisconnect.bind(this, a), this.api.joinMultiplayerServer(e.id, t, {
			200: this.joinSuccess.bind(this, e, i),
			400: a,
			500: a,
			0: a,
			503: a,
			409: a,
			504: a,
			502: s
		}, this.onMessage.bind(this), this.onPlayerList.bind(this), this.onDisconnect.bind(this, null), this.onPlayerJoined.bind(this), this.onPlayerLeft.bind(this))
	}, e.prototype.joinSuccess = function(e, t) {
		this.game.prodigy.player.world = e, this.socketConnected = !0, t()
	}, e.prototype.setZone = function(e) {
		this.zone = e, this.loggedIn && this.api.switchZones(e.zoneName, {
			200: function() {},
			401: function() {},
			409: function() {}
		})
	}, e.prototype.verifyClassCode = function(e, t, i) {
		this.api.verifyClassCode(e, {
			200: t,
			400: i,
			500: i,
			0: i,
			404: i,
			503: i,
			504: i
		})
	}, e.prototype.attachClassCode = function(e, t, i) {
		this.api.attachStudentUsingClassCode(e, {
			200: t,
			400: i,
			500: i,
			0: i,
			404: i,
			503: i,
			504: i
		})
	}, e.prototype.emitMessage = function(t) {
		if (this.canUseMP()) {
			e.emitMessageCount++, Util.isDefined(t.action) && Util.isDefined(t.data) && Util.log("[" + e.emitMessageCount + "] emitMessage called action: " + t.action);
			var i = e.messageSchemas[t.action];
			return Util.isNullOrUndefined(i) || this.compressMessage(t, i), this.api.emitMessage(t, {
				200: function() {}
			})
		}
	}, e.prototype.onMessage = function(t) {
		if (this.canUseMP()) {
			var i = e.messageSchemas[t.action];
			Util.isNullOrUndefined(i) || this.decompressMessage(t, i), this.game.prodigy.messageListener.onMessage(t), Util.isDefined(this.zone.onMessage) && this.zone.onMessage(t)
		}
	}, e.prototype.onPlayerList = function(e) {
		Util.log("playerList " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerList) && this.zone.onPlayerList(e)
	}, e.prototype.onDisconnect = function(e, t) {
		Util.log("disconnect " + t), this.socketConnected = !1, this.socketConnectFailed = !0, Util.isDefined(e) && e()
	}, e.prototype.onPlayerJoined = function(e) {
		Util.log("join " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerJoined) && this.zone.onPlayerJoined(e)
	}, e.prototype.onPlayerLeft = function(e) {
		Util.log("left " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerLeft) && this.zone.onPlayerLeft(e)
	}, e.prototype.getFriendsList = function(e, t) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test get friend list", Util.DEV), this.game.time.events.add(1e3, e.bind(this, {
			data: [{
				userID: 5339281,
				status: 0
			}, {
				userID: 5339282,
				status: 1
			}, {
				userID: 5339279,
				status: 1
			}],
			meta: {
				friendsCap: 20,
				totalFriends: 3
			}
		}), this)) : this.api.getFriendList({
			200: e,
			400: t,
			401: t,
			404: t,
			406: t,
			409: t,
			423: t,
			500: t,
			503: t,
			0: t
		})
	}, e.prototype.getTotalFriendRequests = function(e, t) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test get total friend requests", Util.DEV), this.game.time.events.add(2, e.bind(this, {
			data: {
				pendingRequests: 1
			},
			meta: {
				friendsCap: 20,
				totalFriends: 3
			}
		}), this)) : this.api.getTotalFriendRequests({
			200: e,
			400: t,
			401: t,
			404: t,
			406: t,
			409: t,
			423: t,
			500: t,
			503: t,
			0: t
		})
	}, e.prototype.getFriendRequestList = function(e, t, i, a) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test get friend request list", Util.DEV), this.game.time.events.add(2, i.bind(this, {
			data: [{
				userID: 15263772
			}],
			meta: {
				friendsCap: 20,
				totalFriends: 3
			}
		}), this)) : this.api.getFriendRequestList(e, t, {
			200: i,
			400: a,
			401: a,
			404: a,
			406: a,
			409: a,
			423: a,
			500: a,
			503: a,
			0: a
		})
	}, e.prototype.sendFriendRequest = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test send friend request", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.sendFriendRequest(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.cancelFriendRequest = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test cancel friend request", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.cancelFriendRequest(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.acceptFriendRequest = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test accept friend request", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.acceptFriendRequest(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.rejectFriendRequest = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test reject friend request", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.rejectFriendRequest(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.removeFriend = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test remove friend", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.removeFriend(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.getFriendshipStatus = function(e, t, i) {
		GameConstants.get("GameConstants.FriendsList.TEST_FRIENDS_LIST") ? (Util.log("Test get friendship status", Util.DEV), this.game.time.events.add(2, t.bind(this, e), this)) : this.api.getFriendshipStatus(e, {
			200: t,
			400: i,
			401: i,
			404: i,
			406: i,
			409: i,
			423: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.getTotalMail = function(e, t) {
		GameConstants.get("GameConstants.Mailer.TEST_MAIL") ? (Util.log("Test get total mail", Util.DEV), this.game.time.events.add(2, e.bind(this, Prodigy.UI.YourMail.TOTAL_MAIL), this)) : this.api.getTotalMail(this.game.prodigy.player.registerDate, {
			200: e,
			400: t,
			409: t,
			500: t,
			502: t,
			0: t
		})
	}, e.prototype.getAllMail = function(e, t, i, a) {
		GameConstants.get("GameConstants.Mailer.TEST_MAIL") ? this.game.time.events.add(2, i.bind(this, Prodigy.UI.YourMail.MAIL.slice(e * t, t)), this) : this.api.getAllMail(this.game.prodigy.player.registerDate, e, t, {
			200: i,
			400: a,
			403: a,
			404: a,
			409: a,
			500: a,
			502: a,
			0: a
		})
	}, e.prototype.markAsRead = function(e, t, i, a) {
		if (GameConstants.get("GameConstants.Mailer.TEST_MAIL")) {
			Prodigy.UI.YourMail.TOTAL_MAIL = {
				totalUnread: 0
			};
			for (var s = 0; s < Prodigy.UI.YourMail.MAIL.length; s++) {
				var r = Prodigy.UI.YourMail.MAIL[s];
				r.id === e && (r.isOpened = !0), r.isOpened || Prodigy.UI.YourMail.TOTAL_MAIL.totalUnread++
			}
			this.game.time.events.add(2, i.bind(this), this)
		} else this.api.openMail(e, t, {
			200: i,
			400: a,
			409: a,
			500: a,
			502: a,
			0: a
		})
	}, e.prototype.deleteMail = function(e, t, i) {
		if (GameConstants.get("GameConstants.Mailer.TEST_MAIL")) {
			for (var a = 0; a < Prodigy.UI.YourMail.MAIL.length; a++)
				if (Prodigy.UI.YourMail.MAIL[a].id === e) {
					Prodigy.UI.YourMail.MAIL.splice(a, 1);
					break
				} Prodigy.UI.YourMail.TOTAL_MAIL = {
				totalUnread: 0
			};
			for (var a = 0; a < Prodigy.UI.YourMail.MAIL.length; a++) {
				var s = Prodigy.UI.YourMail.MAIL[a];
				s.isOpened || Prodigy.UI.YourMail.TOTAL_MAIL.totalUnread++
			}
			this.game.time.events.add(2, t.bind(this), this)
		} else this.api.deleteMail(e, {
			200: t,
			400: i,
			409: i,
			500: i,
			502: i,
			0: i
		})
	}, e.prototype.getTitans = function(e, t) {
		this.api.getTitans({
			200: e,
			404: t,
			400: t,
			409: t,
			500: t,
			502: t,
			0: t
		})
	}, e.prototype.getTitan = function(e, t, i) {
		this.api.getTitan(e, {
			200: t,
			400: i,
			404: i,
			409: i,
			500: i,
			502: i,
			0: i
		})
	}, e.prototype.hitTitan = function(e, t, i) {
		this.api.hitTitan(e, {
			200: t,
			400: i,
			404: i,
			409: i,
			500: i,
			502: i,
			0: i
		})
	}, e.prototype.getTitanUserData = function(e, t) {
		this.api.getTitanUserData({
			200: e,
			400: t,
			404: t,
			409: t,
			500: t,
			502: t,
			0: t
		})
	}, e.prototype.getGiftBoxes = function(e, t) {
		this.api.getGiftBoxes({
			200: e,
			400: t,
			401: t,
			403: t,
			404: t,
			409: t,
			500: t,
			503: t,
			0: t
		})
	}, e.prototype.updateGiftBox = function(e, t, i, a) {
		this.api.updateGiftBox(e, t, {
			200: i,
			400: a,
			401: a,
			403: a,
			409: a,
			500: a,
			503: a,
			0: a
		})
	}, e.prototype.addGiftBox = function(e, t, i) {
		this.api.addGiftBox(e, {
			200: t,
			400: i,
			401: i,
			403: i,
			409: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.getLeaderboard = function(e, t, i, a) {
		this.api.getLeaderboard(t, e, 30, {
			200: i,
			400: a,
			500: a,
			0: a
		})
	}, e.prototype.getPVPLeaderboard = function(e, t, i, a, s, r) {
		this.api.getPvpLeaderboard(e, t, i, a, {
			200: s,
			400: r,
			500: r,
			0: r
		})
	}, e.prototype.completeAssignment = function(e) {
		this.api.completeAssignment(e, {
			200: null
		})
	}, e.prototype.answerQuestion = function(e) {
		this.api.saveAnswer(e, {
			200: null
		})
	}, e.prototype.updatePlanStudent = function(e) {
		this.api.updatePlanStudent(e.id, e.currentSkillId, e.hasFailed, {
			200: null
		})
	}, e.prototype.finishPlacement = function(e, t) {
		this.api.updatePlacementTest(e, t, {
			200: null
		})
	}, e.prototype.updateUser = function(e, t) {
		this.api.updateUser(e, {
			200: t,
			400: t,
			500: t,
			401: t,
			0: t
		})
	}, e.prototype.updateUserAbility = function(e) {
		this.api.updateUserAbility(e, {
			200: null
		})
	}, e.prototype.loadSkills = function(e, t, i, a) {
		this.loggedIn && this.api.loadSkills(e, t, {
			200: i,
			401: a,
			409: a
		})
	}, e.prototype.setInstance = function(e) {
		this.api.selectInstance("", e, {
			200: null,
			401: null,
			409: function() {}
		})
	}, e.prototype.createPlayer = function(e, t, i, a, s) {
		this.api.create(e, t, i, {
			200: s,
			400: this.processCreate.bind(this, !0, a),
			426: this.processCreate.bind(this, "versionError", a),
			500: this.processCreate.bind(this, !0, a),
			503: this.processCreate.bind(this, "disabled", a),
			0: this.processCreate.bind(this, !0, a)
		})
	}, e.prototype.createPlayerWithGoogle = function(e, t, i, a, s) {
		this.api.createGoogle(e, t, i, {
			200: s,
			400: this.processCreate.bind(this, !0, a),
			426: this.processCreate.bind(this, "versionError", a),
			500: this.processCreate.bind(this, !0, a),
			503: this.processCreate.bind(this, "disabled", a),
			0: this.processCreate.bind(this, !0, a)
		})
	}, e.prototype.createCharacter = function(e, t, i, a) {
		this.api.createCharacter(e, t, {
			200: a,
			400: i,
			500: i,
			503: i,
			0: i
		})
	}, e.prototype.adminLogin = function(e, t, i, a, s, r, n) {
		if (this.player = a, Util.isDefined(this.loginTimer) && window.clearInterval(this.loginTimer), Util.isDefined(n) ? n++ : n = 1, n > 5) return s(), void 0;
		var o = this.adminLogin.bind(this, e, t, i, a, s, r, n);
		this.api.adminLogin(e, t, i, {
			401: this.processLogin.bind(this, !1, s, o),
			403: this.processLogin.bind(this, !1, s, o),
			206: this.processLogin.bind(this, !0, r, o),
			200: this.processLogin.bind(this, !0, r, o),
			503: this.processLogin.bind(this, !1, s, o),
			340: this.processLogin.bind(this, !1, s, o),
			0: this.processLogin.bind(this, !1, s, o),
			500: this.processLogin.bind(this, !1, s, o)
		})
	}, e.prototype.login = function(e, t, i, a, s, r) {
		if (this.player = i, Util.isDefined(this.loginTimer) && window.clearInterval(this.loginTimer), Util.isDefined(r) ? r++ : r = 1, r > 5) return a(), void 0;
		var n = this.login.bind(this, e, t, i, a, s, r);
		this.api.login("prodigy", {
			username: e,
			password: t
		}, {
			400: this.processLogin.bind(this, !1, a, n),
			401: this.processLogin.bind(this, !1, a, n),
			426: this.processLogin.bind(this, "versionError", a, n),
			206: this.processLogin.bind(this, !0, s, n),
			200: this.processLogin.bind(this, !0, s, n),
			503: this.processLogin.bind(this, !1, a, n),
			340: this.processLogin.bind(this, !1, a, n),
			0: this.processLogin.bind(this, !1, a, n),
			500: this.processLogin.bind(this, !1, a, n)
		})
	}, e.prototype.loginWithGoogle = function(e, t, i, a) {
		this.player = t;
		var s = null;
		this.api.login("google", {
			idToken: e
		}, {
			400: this.processLogin.bind(this, !1, i, s),
			401: this.processLogin.bind(this, !1, i, s),
			404: this.processLogin.bind(this, !1, i, s),
			426: this.processLogin.bind(this, "versionError", i, s),
			206: this.processLogin.bind(this, !0, a, s),
			200: this.processLogin.bind(this, !0, a, s),
			503: this.processLogin.bind(this, !1, i, s),
			340: this.processLogin.bind(this, !1, i, s),
			0: this.processLogin.bind(this, !1, i, s),
			500: this.processLogin.bind(this, !1, i, s)
		})
	}, e.prototype.processCreate = function(e, t) {
		return "versionError" === e ? (this.versionError(), void 0) : "disabled" === e ? (this.disabled(), void 0) : (t(), void 0)
	}, e.prototype.processLogin = function(e, t, i, a, s) {
		return "versionError" === e ? (this.versionError(), void 0) : e || !Util.isDefined(i) || 0 !== s && 500 !== s && 340 !== s ? (e && (this.loggedIn = !0, this.updateID = 0, this.bootCount = -1, this.updateFailedTime = null, this.player.init(a), this.game.broadcaster.broadcast(Prodigy.Events.GameObj.PLAYER_INITIALIZED, null, []), Util.isSchoolHours() ? (this.sendAnalytics("School", "", "Login-Events"), this.sendEvent("login", {
			loginFrom: "school"
		})) : (this.sendAnalytics("Home", "", "Login-Events"), this.sendEvent("login", {
			loginFrom: "home"
		}))), Util.isDefined(t) && t(a, s), void 0) : (this.loginTimer = setInterval(i, 1e3), void 0)
	}, e.prototype.versionError = function() {
		this.open.messageBoxOkay("Your game seems to be out-of-date! Press OKAY to reload.", "OKAY", window.location.reload.bind(window.location))
	}, e.prototype.disabled = function() {
		this.open.messageBoxOkay("Uh oh! It looks like you'll have to try again later.", "OKAY", window.location.reload.bind(window.location))
	}, e.prototype.logout = function(e) {
		if (this.loggedIn = !1, this.api.logout({
				200: function() {}
			}), !e) {
			var t = Util.removeParamsFromUrl(window.location.href, ["action", "idToken", "email"]);
			t.length === window.location.href.length ? window.location.reload() : window.location.href = t
		}
	}, e.prototype.setSaveCallback = function(e, t) {
		this.saveCallback = e, this._forceUpdate = t
	}, e.prototype.setParentEmail = function(e, t, i) {
		Util.log("Setting email: " + e), this.api.setParentEmail(e, {
			200: t,
			401: i,
			500: i,
			0: i
		})
	}, e.prototype.updateCharacter = function() {
		if (!this.saving) {
			if (!(this._forceUpdate || this.loggedIn && Util.isDefined(this.player) && Util.isDefined(this.zone))) return Util.isDefined(this.saveCallback) && (this.saveCallback(), delete this.saveCallback), void 0;
			if (Util.isDefined(this.updateFailedTime) && -1 === this.bootCount && ((new Date).getTime() - this.updateFailedTime) / 1e3 > 120 && (this.bootCount = (new Date).getTime() + 6e4, this.bootMsg = "Cannot connect to Prodigy...you will be logged off in "), -1 !== this.bootCount) {
				var e = this.bootCount - (new Date).getTime();
				0 > e ? this.logout() : this.zone.showMessage(this.bootMsg + Math.floor(e / 1e3) + " seconds", 5e3)
			}
			if (this.player.saveEnabled) {
				var t = this.player.getUpdatedData(this.processPlayer);
				this.processFriendsList && Util.isDefined(this.game.prodigy.friendsListNetworkHandler.initCallback) && this.game.prodigy.friendsListNetworkHandler.getTotalFriendRequests(), this.processPlayer = !1, this.processFriendsList = !1;
				var i = !Util.isEmptyObject(t);
				i || Util.isDefined(this.lastUpdate) && !((new Date).getTime() - this.lastUpdate > 3e4) || (i = !0), i && (GameConstants.get("GameConstants.Debug.AUTOSAVE_ENABLED") || (i = !1)), this.saving = i, i ? this.api.updateCharacter(t, {
					401: this.processUpdate.bind(this, !1, !1, null),
					404: this.processUpdate.bind(this, !1, !1, null),
					409: this.processUpdate.bind(this, !1, !0, null),
					503: this.processUpdate.bind(this, !1, !0, null),
					0: this.processUpdate.bind(this, !1, !1, null),
					200: this.processUpdate.bind(this, !0, !1, this.saveCallback)
				}) : Util.isDefined(this.saveCallback) && (this.saveCallback(), delete this.saveCallback)
			} else Util.isDefined(this.saveCallback) && (this.saveCallback(), delete this.saveCallback)
		}
	}, e.prototype.processUpdate = function(e, t, i) {
		return this.saving = !1, this.sendAnalytics("Player-Alive", "", "Login-Events"), "versionError" === t ? (this.versionError(), void 0) : (e || (!Util.isDefined(this.updateFailedTime) && this.loggedIn && (this.updateFailedTime = (new Date).getTime()), t && -1 === this.bootCount && this.loggedIn && (this.bootMsg = "You have logged in elsewhere...you will be logged off in ", this.bootCount = (new Date).getTime() + 5e3), Util.log("network update fail"), this.hasFailedUpdate = !0), e && (delete this._forceUpdate, i === this.saveCallback && delete this.saveCallback, Util.isDefined(i) && i(), this.updateFailedTime = null, this.lastUpdate = (new Date).getTime(), this.processFriendsList = this.hasFailedUpdate, this.hasFailedUpdate = !1), this.processPlayer = !e, void 0)
	}, e.prototype.startInactiveTimer = function() {
		this.stopInactiveTimer(), this.loggedIn && (this.game.input.onDown.add(this.startInactiveTimer.bind(this), this), this.inactiveTimer = setTimeout(this.showInactiveDialog.bind(this), 1e3 * GameConstants.get("GameConstants.Inactivity.DIALOG_TIMER_SECONDS")))
	}, e.prototype.stopInactiveTimer = function() {
		Util.isNullOrUndefined(this.inactiveTimer) || (this.game.input.onDown.removeAll(this), clearTimeout(this.inactiveTimer), this.inactiveTimer = null)
	}, e.prototype.showInactiveDialog = function() {
		if (!this.isActivityDialogOpen) {
			this.isActivityDialogOpen = !0;
			var e = new Prodigy.UI.MessageBox(this.game);
			e.preprocess("You have been inactive for a while. If you do nothing, you will be logged out soon."), e.queuePostCreateCallback(e.setOkay.bind(e, "I'm here", null)), e.setCloseCallback(this.handleInactiveDialogClosed.bind(this)), this.game.add.existing(e)
		}
		this.inactiveTimer = setTimeout(this.logout.bind(this), 1e3 * GameConstants.get("GameConstants.Inactivity.LOG_OUT_TIMER_SECONDS"))
	}, e.prototype.handleInactiveDialogClosed = function() {
		this.isActivityDialogOpen = !1
	}, e.prototype.compressMessage = function(e, t) {
		for (var i = [], a = 0; a < t.length; a++) {
			for (var s = t[a].split("."), r = e.data, n = 0; n < s.length; n++) {
				var o = s[n];
				if (!r.hasOwnProperty(o)) {
					i.push(null), r = null;
					break
				}
				if (r = r[o], Util.isNullOrUndefined(r)) {
					i.push(null);
					break
				}
			}
			Util.isNullOrUndefined(r) || i.push(r)
		}
		e.data = LZString.compressToUTF16(JSON.stringify(i))
	}, e.prototype.decompressMessage = function(e, t) {
		for (var i = JSON.parse(LZString.decompressFromUTF16(e.data)), a = {}, s = 0; s < t.length && s < i.length; s++) {
			var r = i[s];
			if (!Util.isNullOrUndefined(r)) {
				for (var n = t[s].split("."), o = n[0], h = a, l = 0; l < n.length; l++) o = n[l], h.hasOwnProperty(o) || (h[o] = {}), l + 1 < n.length && (h = h[o]);
				h[o] = r
			}
		}
		e.data = a
	}, e
}();
window.StripeUtilities = {}, window.StripeUtilities.StripeCheckoutWrapper = function(e, t, i) {
	var a, s, r, n = {},
		o = {},
		i = i || {},
		h = "https://s3.amazonaws.com/stripe-uploads/acct_1uHJuagHrUveG4F55AQkmerchant-icon-1423856248513-Prodigy-Ed-Small.jpg",
		l = "initializing",
		d = function(e, t, i, a) {
			return n = {
				itemId: e,
				itemType: t,
				itemDescription: i,
				amount: a
			}, o = {
				name: "www.prodigygame.com",
				zipCode: !0,
				description: i,
				amount: a
			}
		},
		c = function(e, t, i, s) {
			l = "checkout_active", a.open(d(e, t, i, s)), _.defer(function() {
				$(".stripe_checkout_app").css("background-color", "#000")
			})
		},
		p = function() {
			"production" === t ? (s = "pk_live_M3pcr0YEp4395yqH5gHVsmhc", r = "https://www.prodigygame.com/membership-api/v1/") : "staging" === t ? (s = "pk_test_IMt6DAznCfweWxpQMYEbDRFr", r = "https://www.prodigygame.org/membership-api/v1/") : (s = "pk_test_ZYIDOnDhEw9Dia61ad2FGHmH", r = "https://danny-qa.prodigygame.org/membership-api/v1/"), a = StripeCheckout.configure({
				key: s,
				image: h,
				locale: "auto",
				allowRememberMe: !1,
				token: function(t) {
					l = "token_generated", $.post(r + "users/" + e + "/purchase-item", {
						token: t,
						itemInformation: n
					}).done(function(e) {
						l = "purchase_complete", "function" == typeof i.onSuccess && i.onSuccess(e)
					}).fail(function(e) {
						console.warn("StripeCheckoutWrapper - Failed to complete Transaction"), l = "purchase_failed", "function" == typeof i.onFail && i.onFail(e)
					})
				},
				closed: function() {
					"function" == typeof i.onClose && i.onClose(), "checkout_active" === l && i.onUserCancel()
				}
			}), window.addEventListener("popstate", function() {
				a.close()
			}), l = "initialized"
		};
	return p(), {
		purchase: c
	}
}, Prodigy.NetworkHandlers.NetworkHandler = function(e) {
	this.game = e
}, Prodigy.NetworkHandlers.NetworkHandler.prototype = {
	constructor: Prodigy.NetworkHandlers.NetworkHandler
}, Prodigy.NetworkHandlers.MicrotransactionNetworkHandler = function(e) {
	Prodigy.NetworkHandlers.NetworkHandler.call(this, e), this.setup(e)
}, Prodigy.extends(Prodigy.NetworkHandlers.MicrotransactionNetworkHandler, Prodigy.NetworkHandlers.NetworkHandler, {
	constructor: Prodigy.NetworkHandlers.MicrotransactionNetworkHandler,
	setup: function(e) {
		e.broadcaster.addAppListener(Prodigy.Events.Microtransaction.GET_CONJURE_CUBES, this.getConjureCubes.bind(this), this, "ProdigyMicrotransactionButton", !0), e.broadcaster.addAppListener(Prodigy.Events.Microtransaction.RECEIVE_CONJURE_CUBE, this.addConjureCube.bind(this), this, null, !0), e.broadcaster.addAppListener(Prodigy.Events.Microtransaction.MARK_AS_OPEN, this.openConjureCube.bind(this), this, "ProdigyMicrotransactionMenu", !0), e.broadcaster.addAppListener(Prodigy.Events.Microtransaction.QUESTION_ANSWERED, this.questionAnswered.bind(this), this, null, !0)
	},
	getConjureCubes: function() {
		this.game.prodigy.network.getGiftBoxes(this.getConjureCubesSuccess.bind(this), this.getConjureCubesFailure.bind(this))
	},
	getConjureCubesSuccess: function(e) {
		Util.isDefined(e) && (this.game.prodigy.microtransaction.gotNetworkCubes = !0, this.game.prodigy.microtransaction.setupMicrotransactions(e))
	},
	getConjureCubesFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not get total boxes.", Util.ERROR)
	},
	addConjureCube: function(e) {
		Util.isDefined(e) && Util.isDefined(e.ID) && this.game.prodigy.network.addGiftBox(e.ID, this.addConjureCubeSuccessful.bind(this, e.callback), this.addConjureCubeFailure.bind(this, e.callback))
	},
	addConjureCubeSuccessful: function(e, t) {
		Util.isDefined(t) && this.game.prodigy.microtransaction.receiveConjureCube(e, t)
	},
	addConjureCubeFailure: function(e) {
		Util.log("Could not receive gift", Util.ERROR), e()
	},
	questionAnswered: function(e, t) {
		if (Util.isDefined(e) || Util.isDefined(this.game.prodigy.microtransaction.currentCube) && Util.isDefined(this.game.prodigy.microtransaction.playerConjureCubes)) {
			var i = e || this.game.prodigy.microtransaction.currentCube.boxIndex,
				a = this.game.prodigy.microtransaction.playerConjureCubes[i];
			Util.isDefined(a.q) && (a.q -= Util.isDefined(t) ? t : 1, a.q < 0 && (a.q = 0), this.game.prodigy.network.updateGiftBox(i, a, this.questionAnsweredSuccessful.bind(this, t), this.questionAnsweredFailure.bind(this)))
		}
	},
	questionAnsweredSuccessful: function(e, t) {
		Util.isDefined(t) && this.game.prodigy.microtransaction.answeredQuestion(e)
	},
	questionAnsweredFailure: function() {
		Util.log("Could not answer question.", Util.ERROR)
	},
	openConjureCube: function() {
		if (Util.isDefined(this.game.prodigy.microtransaction.cubesToOpen) && Util.isDefined(this.game.prodigy.microtransaction.playerConjureCubes)) {
			var e = this.game.prodigy.microtransaction.cubesToOpen[this.game.prodigy.microtransaction.cubesToOpen.length - 1],
				t = this.game.prodigy.microtransaction.playerConjureCubes[e];
			Util.isDefined(t.isOpen) && (t.isOpen = !0, this.game.prodigy.network.updateGiftBox(e, t, this.openConjureCubeSuccessful.bind(this), this.openConjureCubeFailure.bind(this)))
		}
	},
	openConjureCubeSuccessful: function() {
		this.game.prodigy.open.microtransactionLoot()
	},
	openConjureCubeFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not open gift box.", Util.ERROR)
	}
}), Prodigy.NetworkHandlers.MailerNetworkHandler = function(e) {
	Prodigy.NetworkHandlers.NetworkHandler.call(this, e), this.setup(e)
}, Prodigy.extends(Prodigy.NetworkHandlers.MailerNetworkHandler, Prodigy.NetworkHandlers.NetworkHandler, {
	constructor: Prodigy.NetworkHandlers.MailerNetworkHandler,
	setup: function(e) {
		e.broadcaster.addAppListener(Prodigy.Events.Mailer.GET_TOTAL_MAIL, this.getTotalMail.bind(this), this, "ProdigyMailerButton", !0), e.broadcaster.addAppListener(Prodigy.Events.Mailer.GET_TOTAL_MAIL, this.getTotalMail.bind(this), this, "ProdigyMailer", !0), e.broadcaster.addAppListener(Prodigy.Events.Mailer.GET_ALL_MAIL, this.getAllMail.bind(this), this, "ProdigyMailer", !0), e.broadcaster.addAppListener(Prodigy.Events.Mailer.MARK_AS_READ, this.markAsRead.bind(this), this, "ProdigyMailView", !0), e.broadcaster.addAppListener(Prodigy.Events.Mailer.DELETE_MAIL, this.deleteMail.bind(this), this, "ProdigyMailer", !0), e.broadcaster.removeAppListener(Prodigy.Events.NetworkHandlers.SETUP, this, "NetworkHandlers"), this.totalMail = {}
	},
	getTotalMail: function(e) {
		this.game.prodigy.network.getTotalMail(this.getTotalMailSuccess.bind(this, e), this.getTotalMailFailure.bind(this))
	},
	getTotalMailSuccess: function(e, t) {
		this.totalMail = t, this.game.broadcaster.broadcast(Prodigy.Events.Mailer.UPDATE_MAIL_COUNTERS, "ProdigyMailerButton", [t]), Util.isDefined(e) && e(t)
	},
	getTotalMailFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not get total mail.", Util.ERROR)
	},
	getAllMail: function(e, t, i) {
		this.game.prodigy.network.getAllMail(t, i, this.getAllMailSuccess.bind(this, e), this.getAllMailFailure.bind(this))
	},
	getAllMailSuccess: function(e, t) {
		Util.isDefined(e) && e(t)
	},
	getAllMailFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not get all mail.", Util.ERROR)
	},
	markAsRead: function(e, t) {
		this.game.prodigy.network.markAsRead(t.id, t, this.markAsReadSuccessful.bind(this, e), this.markAsReadFailure.bind(this))
	},
	markAsReadSuccessful: function(e, t) {
		Util.isDefined(e) && e(t)
	},
	markAsReadFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not mark as read.", Util.ERROR)
	},
	deleteMail: function(e, t) {
		Util.isDefined(e) ? this.game.prodigy.network.deleteMail(e.id, this.deleteMailSuccessful.bind(this, e, t), this.deleteMailFailure.bind(this)) : Util.log("Mail model data is not defined.", Util.ERROR)
	},
	deleteMailSuccessful: function(e, t) {
		var i = e.isOpened;
		this.game.broadcaster.broadcast(Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL, "ProdigyMailView" + t, [e, t, i]), this.game.broadcaster.broadcast(Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL, "ProdigyMailer", [e, t, i])
	},
	deleteMailFailure: function() {
		this.game.input.enabled = !0, Util.log("Could not delete mail.", Util.ERROR)
	}
}), Prodigy.NetworkHandlers.FriendsListNetworkHandler = function(e) {
	Prodigy.NetworkHandlers.NetworkHandler.call(this, e), this.pendingRequests = null, this.friendsCap = null, this.totalFriends = null, this.friendsList = [], this.friendRequestList = [], this.initCallback = null
}, Prodigy.extends(Prodigy.NetworkHandlers.FriendsListNetworkHandler, Prodigy.NetworkHandlers.NetworkHandler, {
	constructor: Prodigy.NetworkHandlers.FriendsListNetworkHandler,
	init: function(e) {
		Util.isDefined(this.initCallback) || (this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.SEND_REQUEST, this.sendFriendRequest.bind(this), this, "Card", !0), this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.CANCEL_REQUEST, this.cancelFriendRequest.bind(this), this, "Card", !0), this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.REMOVE_FRIEND, this.removeFriend.bind(this), this, "Card", !0), this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.GET_TOTAL_FRIEND_REQUESTS, this.getFriendsList.bind(this), this, "FriendsList", !0), this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.CLEAR_FRIEND_REQUESTS_CACHE, this.clearFriendRequestsCache.bind(this), this, "FriendsList", !0), this.game.broadcaster.addAppListener(Prodigy.Events.FriendsList.SEND_QUEST_UPDATE, this.updateFriendQuest.bind(this), this, "FriendsList", !0), this.getTotalFriendRequests()), this.initCallback = e
	},
	updateFriendQuest: function(e) {
		for (var t = 0; t < this.friendsList.length; t++)
			if (this.friendsList[t].userID === e.userID) {
				this.friendsList[t].zone = e.zone;
				break
			}
	},
	getTotalFriendRequests: function() {
		this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.loading(!0), this.game.prodigy.network.getTotalFriendRequests(this.getTotalFriendRequestsSuccess.bind(this), this.networkCallFailure.bind(this)))
	},
	getTotalFriendRequestsSuccess: function(e) {
		this.pendingRequests = e.data.pendingRequests, this.friendsCap = e.meta.friendsCap, this.totalFriends = e.meta.totalFriends, this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.GET_TOTAL_FRIEND_REQUESTS, "FriendsList", [this.pendingRequests])
	},
	getFriendsList: function() {
		this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.loading(!0), this.game.prodigy.network.getFriendsList(this.getFriendsListSuccess.bind(this), this.networkCallFailure.bind(this)))
	},
	getFriendsListSuccess: function(e) {
		this.game.prodigy.loading(!1), this.friendsList = e.data, this.friendsCap = e.meta.friendsCap, this.totalFriends = e.meta.totalFriends, this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.GOT_FRIENDS_LIST, "FriendsList", [this.friendsList]), this.getUserAppearance(this.friendsList), Util.isDefined(this.initCallback) && this.initCallback(this.pendingRequests)
	},
	getFriendRequestList: function(e, t) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.getFriendRequestList(e || this.friendRequestList.length, t, this.getFriendRequestListSuccess.bind(this), this.networkCallFailure.bind(this))
	},
	getFriendRequestListSuccess: function(e) {
		this.game.prodigy.loading(!1), this.friendsCap = e.meta.friendsCap, this.totalFriends = e.meta.totalFriends;
		for (var t = this.friendRequestList.length, i = 0; i < e.data.length; i++) {
			for (var a = !0, s = 0; t > s; s++)
				if (e.data[i].userID === this.friendRequestList[s].userID) {
					a = !1;
					break
				} a && this.friendRequestList.push(e.data[i])
		}
		var r = "",
			n = "";
		for (i = 0; i < this.friendRequestList.length; i++) n = this.friendRequestList[i].userID + ",", r = r.concat(n);
		r = r.replace(/,$/, ""), r.length > 0 && this.game.prodigy.network.getCharData(r, ["appearance", "state"], this.getUserData.bind(this), null)
	},
	getUserData: function(e) {
		for (var t in e)
			for (var i = 0; i < this.friendRequestList.length; i++)
				if (this.friendRequestList[i].userID == t)
					if (Util.isDefined(e[t].appearance)) {
						var a = JSON.parse(e[t].appearance);
						this.friendRequestList[i].name = Util.isDefined(a.nick) && "" !== a.nick ? a.nick : a.name
					} else this.friendRequestList[i].name = t;
		this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.GOT_FRIEND_REQUEST_LIST, "FriendsList", [this.friendRequestList])
	},
	clearFriendRequestsCache: function() {
		this.friendRequestList = []
	},
	sendFriendRequest: function(e) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.sendFriendRequest(e, this.sendFriendRequestSuccess.bind(this, e), this.networkCallFailure.bind(this))
	},
	sendFriendRequestSuccess: function(e, t) {
		if (this.game.prodigy.loading(!1), "ACCEPT" === t.data.action) this.acceptFriendRequestSuccess(e, 0, t);
		else {
			this.friendsCap = t.meta.friendsCap, this.totalFriends = t.meta.totalFriends, this.friendsList.push({
				userID: e,
				status: 0
			}), this.getUserAppearance(this.friendsList.slice(this.friendsList.length - 1, this.friendsList.length));
			var i = {
				action: "friendRequestReceived",
				target: e,
				data: {
					userID: this.game.prodigy.player.userID
				}
			};
			this.game.prodigy.network.emitMessage(i);
			var a = function() {
				this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_SENT, "FriendsList", [e]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_SENT, "Card", [])
			}.bind(this);
			this.game.prodigy.open.message("You have sent this player a request to become friends!", a, null, "Friend Request Sent")
		}
	},
	friendRequestReceived: function() {
		this.pendingRequests++, this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_RECEIVED, "HUD", [this.pendingRequests]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_RECEIVED, "FriendsList", [this.pendingRequests])
	},
	cancelFriendRequest: function(e) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.cancelFriendRequest(e, this.cancelFriendRequestSuccess.bind(this, e), this.networkCallFailure.bind(this))
	},
	cancelFriendRequestSuccess: function(e, t) {
		this.game.prodigy.loading(!1), this.friendsCap = t.meta.friendsCap, this.totalFriends = t.meta.totalFriends, this.removeUserFromArray(this.friendsList, e);
		var i = {
			action: "friendRequestCancelled",
			target: e,
			data: {
				userID: this.game.prodigy.player.userID
			}
		};
		this.game.prodigy.network.emitMessage(i);
		var a = function() {
			this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_CANCELLED, "FriendsList", [e]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_CANCELLED, "Card", [e])
		}.bind(this);
		this.game.prodigy.open.message("You have cancelled your friend request with this player.", a, null, "Friend Request Cancelled")
	},
	friendRequestCancelled: function(e) {
		this.pendingRequests--, this.removeUserFromArray(this.friendRequestList, e.userID), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_CANCELLED, "HUD", [this.pendingRequests]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_CANCELLED, "FriendsList", [this.pendingRequests]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_CANCELLED, "FriendRequests", [this.friendRequestList])
	},
	acceptFriendRequest: function(e, t) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.acceptFriendRequest(e, this.acceptFriendRequestSuccess.bind(this, e, t), this.networkCallFailure.bind(this, e, t))
	},
	acceptFriendRequestSuccess: function(e, t, i) {
		this.game.prodigy.loading(!1), Util.isDefined(i) && (this.friendsCap = i.meta.friendsCap, this.totalFriends = i.meta.totalFriends), this.friendsList.push({
			userID: e,
			status: 1
		}), this.getUserAppearance(this.friendsList.slice(this.friendsList.length - 1, this.friendsList.length)), this.removeUserFromArray(this.friendRequestList, e), this.pendingRequests--;
		var a = {
			action: "friendRequestAccepted",
			target: e,
			data: {
				userID: this.game.prodigy.player.userID,
				requestID: t
			}
		};
		this.game.prodigy.network.emitMessage(a), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, "FriendsList", [e, t]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, "HUD", [this.pendingRequests]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, "Card", [])
	},
	friendRequestAccepted: function(e) {
		this.setFriendStatus(this.friendsList, e.userID, 1), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, "FriendsList", [e.userID, e.requestID]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_ACCEPTED, "Card", [])
	},
	getUserAppearance: function(e) {
		for (var t = "", i = "", a = 0; a < e.length; a++) i = e[a].userID + ",", t = t.concat(i);
		t = t.replace(/,$/, ""), t.length > 0 && this.game.prodigy.network.getCharData(t, ["appearance", "isMember", "equipment", "data", "state"], this.onGetUserAppearance.bind(this), this.networkCallFailure.bind(this))
	},
	onGetUserAppearance: function(e) {
		for (var t in e)
			for (var i = 0; i < this.friendsList.length; i++) this.friendsList[i].userID === parseFloat(t) && (Util.isNullOrUndefined(e[t]) || (Util.isNullOrUndefined(e[t].appearance) || (this.friendsList[i].appearance = JSON.parse(e[t].appearance)), Util.isNullOrUndefined(e[t].isMember) || (this.friendsList[i].isMember = JSON.parse(e[t].isMember)), Util.isNullOrUndefined(e[t].data) || (this.friendsList[i].data = JSON.parse(e[t].data)), Util.isNullOrUndefined(e[t].equipment) || (this.friendsList[i].equipment = JSON.parse(e[t].equipment)), Util.isNullOrUndefined(e[t].state) || (this.friendsList[i].zone = JSON.parse(e[t].state).zone), Util.isNullOrUndefined(this.friendsList[i].userID) || this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.FRIENDS_APPEARANCE_UPDATED, "" + this.friendsList[i].userID, [this.friendsList[i]])))
	},
	getFriendQuestProgress: function(e) {
		for (var t = [], i = 0; i < this.friendsList.length; i++) {
			var a = {},
				s = this.friendsList[i];
			a.questProgress = Util.isNullOrUndefined(s.zone) || Util.isNullOrUndefined(s.zone[e]) || Util.isNullOrUndefined(s.zone[e].quest) || Util.isNullOrUndefined(s.zone[e].quest.ID) ? 0 : s.zone[e].quest.ID, Util.isNullOrUndefined(s.appearance) || Util.isNullOrUndefined(s.appearance.name) || Util.isNullOrUndefined(s.data) || Util.isNullOrUndefined(s.data.level) || Util.isNullOrUndefined(s.userID) || (a.name = s.appearance.name, a.appearance = s.appearance, a.level = s.data.level, a.isMember = s.isMember || 0, a.userID = s.userID, t.push(a))
		}
		return t
	},
	getFriend: function(e) {
		for (var t = 0; t < this.friendsList.length; t++)
			if (this.friendsList[t].userID === e) {
				var i = new Player(this.game);
				return i.init(this.friendsList[t]), i
			}
	},
	rejectFriendRequest: function(e, t) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.rejectFriendRequest(e, this.rejectFriendRequestSuccess.bind(this, e, t), this.networkCallFailure.bind(this, e, t))
	},
	rejectFriendRequestSuccess: function(e, t, i) {
		this.game.prodigy.loading(!1), this.friendsCap = i.meta.friendsCap, this.totalFriends = i.meta.totalFriends, this.removeUserFromArray(this.friendRequestList, e), this.pendingRequests--;
		var a = {
			action: "friendRequestRejected",
			target: e,
			data: {
				userID: this.game.prodigy.player.userID,
				requestID: t
			}
		};
		this.game.prodigy.network.emitMessage(a), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_REJECTED, "FriendsList", [e, t]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_REJECTED, "HUD", [this.pendingRequests])
	},
	friendRequestRejected: function(e) {
		this.removeUserFromArray(this.friendsList, e.userID), this.totalFriends--, this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_REJECTED, "FriendsList", [e.userID, e.requestID]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.REQUEST_REJECTED, "Card", [])
	},
	removeFriend: function(e) {
		this.game.prodigy.loading(!0), this.game.prodigy.network.removeFriend(e, this.removeFriendSuccess.bind(this, e), this.networkCallFailure.bind(this))
	},
	removeFriendSuccess: function(e, t) {
		this.game.prodigy.loading(!1), this.friendsCap = t.meta.friendsCap, this.totalFriends = t.meta.totalFriends, this.removeUserFromArray(this.friendsList, e);
		var i = {
			action: "friendRemoved",
			target: e,
			data: {
				userID: this.game.prodigy.player.userID
			}
		};
		this.game.prodigy.network.emitMessage(i), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.FRIEND_REMOVED, "FriendsList", [e]), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.FRIEND_REMOVED, "Card", [])
	},
	friendRemoved: function(e) {
		this.removeUserFromArray(this.friendsList, e.userID), this.totalFriends--, this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.FRIEND_REMOVED, "FriendsList", []), this.game.broadcaster.broadcast(Prodigy.Events.FriendsList.FRIEND_REMOVED, "Card", [])
	},
	networkCallFailure: function(e, t, i, a) {
		this.game.prodigy.loading(!1)//, 423 === a ? this.game.prodigy.open.message("You can't add any more friends because your friends list is full!", null, null, "Oops!") : 406 === a ? "cancelFriendRequest" === i && Util.log("Illogical friend request cancellation") : this.game.prodigy.open.message("Oops! That feature isn't working right now. Please try again later!", null, null, "Oops!")
	},
	removeUserFromArray: function(e, t) {
		for (var i = 0; i < e.length; i++) t === e[i].userID && e.splice(i, 1)
	},
	setFriendStatus: function(e, t, i) {
		for (var a = 0; a < e.length; a++) t === e[a].userID && (e[a].status = i)
	},
	hasPendingRequests: function() {
		return this.pendingRequests > 0
	},
	broadcastQuestUpdateToFriends: function() {
		for (var e = 0; e < this.friendsList.length; e++)
			if (!Util.isNullOrUndefined(this.game.prodigy.player.userID)) {
				var t = {
					action: "friendQuestUpdate",
					target: this.friendsList[e].userID,
					data: {
						userID: this.game.prodigy.player.userID,
						zone: this.game.prodigy.player.state.data.zone
					}
				};
				this.game.prodigy.network.emitMessage(t)
			}
	}
}), Prodigy.NetworkHandlers.TitansNetworkHandler = function(e) {
	Prodigy.NetworkHandlers.NetworkHandler.call(this, e), this.initCallback = null, e.broadcaster.addAppListener(Prodigy.Events.NetworkHandlers.SETUP, this.setup.bind(this), this, "NetworkHandlers", !0)
}, Prodigy.extends(Prodigy.NetworkHandlers.TitansNetworkHandler, Prodigy.NetworkHandlers.NetworkHandler, {
	constructor: Prodigy.NetworkHandlers.TitansNetworkHandler,
	setup: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.NetworkHandlers.SETUP, this, "NetworkHandlers"), this.getTitanUserData()
	},
	getTitans: function() {
		this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.loading(!0), this.game.prodigy.network.getTitans(this.getTitansSuccess.bind(this), this.networkCallFailure.bind(this)))
	},
	getTitan: function(e, t) {
		Util.isNullOrUndefined(t) && (t = "Titan"), this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.loading(!0), this.game.prodigy.network.getTitan(e, this.getTitanSuccess.bind(this, t), this.networkCallFailure.bind(this)))
	},
	hitTitan: function(e) {
		this.game.prodigy.player.hasCompletedTutorial() && (this.game.prodigy.loading(!0), this.game.prodigy.network.hitTitan(e, this.hitTitanSucess.bind(this), this.networkCallFailure.bind(this)))
	},
	getTitanUserData: function() {
		this.game.prodigy.player.hasCompletedTutorial() && this.game.prodigy.network.getTitanUserData(null, null)
	},
	getTitansSuccess: function(e) {
		this.game.prodigy.loading(!1), this.titan = e, this.game.broadcaster.broadcast(Prodigy.Events.Titan.GOT_TITANS, "Titan", [e]), Util.isDefined(this.initCallback)
	},
	getTitanSuccess: function(e, t) {
		this.game.prodigy.loading(!1), this.titan = t, this.game.broadcaster.broadcast(Prodigy.Events.Titan.GOT_TITAN, e, [t]), Util.isDefined(this.initCallback)
	},
	hitTitanSucess: function(e) {
		this.game.prodigy.loading(!1), this.titan.hits = e.hits, Util.isDefined(this.initCallback)
	},
	networkCallFailure: function() {
		this.game.prodigy.loading(!1), Util.log("Error: Titan network call failure")
	},
	isTitanAlive: function() {
		return Util.isNullOrUndefined(this.titan) || Util.isNullOrUndefined(this.titan.id) ? !1 : this.titan.health > 0 && this.titan.processed !== !0
	}
}), Prodigy.UI.UIUtil = function() {}, Prodigy.UI.UIUtil.floodFillImages = function(e, t, i, a, s, r) {
	var n = [],
		o = r[0],
		h = new Phaser.Image(e, i.x, i.y, s, o),
		l = {
			width: h.width,
			height: h.height
		};
	h.destroy();
	for (var d = Math.max(1, Math.ceil((a.x - i.x) / l.width)), c = Math.max(1, Math.ceil((a.y - i.y) / l.height)), p = 0; d > p; p++)
		for (var g = 0; c > g; g++) o = r[Math.floor(Math.random() * r.length)], h = t.add(new Phaser.Image(e, i.x + p * l.width, i.y + g * l.height, s, o)), n.push(h);
	return n
}, Prodigy.UI.LayoutElement = function(e, t, i) {
	Phaser.Group.call(this, e, t), this.game = e, this.dirty = !0, this.layoutType = i.type, this.alignment = i.alignment || "top", this.spacing = i.spacing || 0, this.startOffset = i.offset || 0, this.ignoreInvisible = i.ignoreInvisible || !1, this.game.broadcaster.addAppListener(Prodigy.Event.UI.CHILD_ADDED, this.parentModified.bind(this), this, this.parent), this.game.broadcaster.addAppListener(Prodigy.Event.UI.CHILD_REMOVED, this.parentModified.bind(this), this, this.parent), this.calculateChildren()
}, Prodigy.extends(Prodigy.UI.LayoutElement, Phaser.Group, {
	constructor: Prodigy.UI.LayoutElement,
	calculateChildren: function() {
		this.dirty = !1, "vertical" === this.layoutType ? this.alignVertical() : "horizontal" === this.layoutType && this.alignHorizontal()
	},
	alignVertical: function() {
		var e = this.startOffset;
		"center" === this.alignment ? e += Math.round((this.parent.height - this.getContentHeight()) / 2) : "bottom" === this.alignment && (e += Math.round(this.parent.height - this.getContentHeight()));
		for (var t = 0; t < this.parent.children.length; t++)
			if (this.parent.children[t] instanceof Prodigy.UI.UIElement && this.parent.children[t].visible) {
				if (this.ignoreInvisible && this.parent.children[t].visible === !1) continue;
				this.parent.children[t].y = e, e += this.parent.children[t].height + this.spacing
			}
	},
	alignHorizontal: function() {
		var e = this.startOffset;
		"center" === this.alignment ? e += Math.round((this.parent.width - this.getContentWidth()) / 2) : "right" === this.alignment && (e += this.parent.width - this.getContentWidth());
		for (var t = 0; t < this.parent.children.length; t++)
			if (this.parent.children[t] instanceof Prodigy.UI.UIElement && this.parent.children[t].visible) {
				if (this.ignoreInvisible && this.parent.children[t].visible === !1) continue;
				this.parent.children[t].x = e, e += this.parent.children[t].width + this.spacing
			}
	},
	getContentHeight: function() {
		for (var e = (this.parent.children.length - 1) * this.spacing, t = 0; t < this.parent.children.length; t++)
			if (this.parent.children[t] instanceof Prodigy.UI.UIElement && this.parent.children[t].visible) {
				if (this.ignoreInvisible && this.parent.children[t].visible === !1) continue;
				e += this.parent.children[t].height
			} return e
	},
	getContentWidth: function() {
		for (var e = (this.parent.children.length - 1) * this.spacing, t = 0; t < this.parent.children.length; t++)
			if (this.parent.children[t] instanceof Prodigy.UI.UIElement && this.parent.children[t].visible) {
				if (this.ignoreInvisible && this.parent.children[t].visible === !1) continue;
				e += this.parent.children[t].width
			} return e
	},
	preUpdate: function() {
		Phaser.Group.prototype.preUpdate.call(this), this.dirty && this.calculateChildren()
	},
	parentModified: function() {
		this.dirty = !0
	},
	destroy: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Event.UI.CHILD_ADDED, this.parentModified.bind(this), this.parent), this.game.broadcaster.removeAppListener(Prodigy.Event.UI.CHILD_REMOVED, this.parentModified.bind(this), this.parent), Phaser.Group.prototype.destroy.call(this)
	}
}), Prodigy.UI.UIElement = function(e, t) {
	Phaser.Group.call(this, e, t), this.name = "", this.debugOverlay = null, this.dimensionPlaceholderImage = null
}, Prodigy.extends(Prodigy.UI.UIElement, Phaser.Group, {
	constructor: Prodigy.UI.UIElement,
	isDimensionPlaceholderNeeded: function(e) {
		return Util.isDefined(e.width) && e.width > this.width || Util.isDefined(e.height) && e.height > this.height
	},
	processRelativeFields: function(e, t) {
		Util.isDefined(e.relativeWidth) && (e.width = Math.floor(t.width * e.relativeWidth)), Util.isDefined(e.relativeHeight) && (e.height = Math.floor(t.height * e.relativeHeight)), Util.isDefined(e.relativeX) ? e.x = Math.floor(t.width * e.relativeX) : Util.isDefined(e.x) || (e.x = 0), Util.isDefined(e.relativeY) ? e.y = Math.floor(t.height * e.relativeY) : Util.isDefined(e.y) || (e.y = 0), Util.isDefined(e.visible) && (this.visible = e.visible)
	},
	populate: function(e) {
		var t = 0,
			i = 0;
		Util.isDefined(e.name) && (this.name = e.name), this.isDimensionPlaceholderNeeded(e) && (Util.isDefined(this.dimensionPlaceholderImage) && this.dimensionPlaceholderImage.destroy(), this.dimensionPlaceholderImage = new Phaser.Image(this.game, 0, 0, "core", "empty"), this.add(this.dimensionPlaceholderImage), Util.isDefined(e.width) && (this.dimensionPlaceholderImage.width = e.width), Util.isDefined(e.height) && (this.dimensionPlaceholderImage.height = e.height)), Util.isDefined(e.anchorX) && (t = -Math.floor(e.anchorX * this.width)), Util.isDefined(e.anchorY) && (i = -Math.floor(e.anchorY * this.height)), Util.isDefined(e.x) && (this.x = e.x), Util.isDefined(e.y) && (this.y = e.y), this.x += t, this.y += i
	},
	postPopulate: function() {},
	setActive: function(e) {
		this.isActive = e;
		for (var t = 0; t < this.children.length; t++) Util.isDefined(this.children[t].setActive) && this.children[t].setActive(e)
	},
	debugDrawBounds: function(e) {
		if (e && !Util.isDefined(this.debugOverlay)) {
			var t = new Phaser.Graphics(this.game, 0, 0);
			t.lineStyle(2, 16711680, .5), t.drawRect(0, 0, this.width, this.height), this.debugOverlay = this.add(t)
		} else !e && Util.isDefined(this.debugOverlay) && (this.debugOverlay.destroy(), this.debugOverlay = null)
	},
	addChild: function(e) {
		var t = Phaser.Group.prototype.addChild.call(this, e);
		return Util.isNullOrUndefined(this.game) || this.game.broadcaster.broadcast(Prodigy.Event.UI.CHILD_ADDED, this), t
	},
	removeChild: function(e) {
		var t = Phaser.Group.prototype.removeChild.call(this, e);
		return Util.isNullOrUndefined(this.game) || this.game.broadcaster.broadcast(Prodigy.Event.UI.CHILD_REMOVED, this), t
	}
}), Prodigy.UI.Button = function(e, t) {
	this.onClickCallback = null, this.onUpCallback = null, this.onOverCallback = null, this.onOutCallback = null, this.isActive = !0, Prodigy.UI.UIElement.call(this, e, t), this.onDestroy.add(this.handleDestroy.bind(this))
}, Prodigy.extends(Prodigy.UI.Button, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.Button,
	populate: function(e) {
		Prodigy.UI.UIElement.prototype.populate.call(this, e), GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.name) && this.game.prodigy.automation.addTrigger({
			ID: "autoclick-" + this.name,
			context: this,
			callback: function() {
				return {
					x: this.worldPosition.x,
					y: this.worldPosition.y
				}
			}.bind(this)
		}), this.onClickCallback = null, this.onUpCallback = null, this.onOverCallback = null, this.onOutCallback = null, this.defaultY = this.y, this.broadcasts = e.broadcasts, this.setupCollisionBlock(e)
	},
	handleDestroy: function() {
		GameConstants.get("GameConstants.Build.DEBUG") && Util.isDefined(this.name) && this.game.prodigy.automation.removeAllTriggers(this)
	},
	setupCollisionBlock: function(e) {
		this.collisionBlock = this.add(this.game.prodigy.create.sprite(0, 0, "core", "empty")), this.collisionBlock.width = e.width, this.collisionBlock.height = e.height, this.collisionBlock.inputEnabled = !0, this.collisionBlock.events.onInputDown.add(this.onDown.bind(this)), this.collisionBlock.events.onInputUp.add(this.onUp.bind(this)), this.collisionBlock.events.onInputOver.add(this.onOver.bind(this)), this.collisionBlock.events.onInputOut.add(this.onOut.bind(this))
	},
	broadcastAll: function() {
		Util.isDefined(this.broadcasts) && this.broadcasts.forEach(function(e) {
			this.game.broadcaster.broadcast(e.type, this.game.prodigy.open.menus[this.game.prodigy.open.menus.length - 1], e.params)
		}.bind(this))
	},
	onDown: function() {
		this.visible && this.isActive && (this.y = this.defaultY, this.game.prodigy.audio.playSFX(Prodigy.Controller.AudioController.SFX_PACKS.UI, "pop"), Util.isDefined(this.onClickCallback) && this.onClickCallback(), this.broadcastAll())
	},
	onUp: function() {
		this.visible && this.isActive && (this.y = this.defaultY - 3, Util.isDefined(this.onUpCallback) && this.onUpCallback())
	},
	onOver: function() {
		this.visible && this.isActive && (this.y = this.defaultY - 3, Util.isDefined(this.onOverCallback) && this.onOverCallback())
	},
	onOut: function() {
		this.visible && this.isActive && (this.y = this.defaultY, Util.isDefined(this.onOutCallback) && this.onOutCallback())
	},
	setActive: function(e) {
		Prodigy.UI.UIElement.prototype.setActive.call(this, e), this.y = this.defaultY
	}
}), Prodigy.UI.Text = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t)
}, Prodigy.extends(Prodigy.UI.Text, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.Text,
	populate: function(e) {
		Prodigy.UI.UIElement.prototype.populate.call(this, e), this.sprites = [], this.boundsWidth = e.width || 1280, this.fontSize = Util.isDefined(e.fontSize) ? e.fontSize : 20, this.align = e.horizontalAlignment || "center", this.font = e.font || "general", this.fontName = "font-" + this.font, this.lineHeight = e.lineHeight, this.monoSpace = e.monoSpace, this.iconOffsetY = e.iconOffsetY || 0, this.icons = [], this.forceUpperCase = e.forceUpperCase || !1, this.numberOfLines = 1, this.verticalAlign = e.verticalAlignment || "top", Util.isDefined(e.text) && this.setText(e.text)
	},
	setText: function(e) {
		if (Util.isDefined(this.game)) {
			Util.isDefined(this.forceUpperCase) && this.forceUpperCase && (e = e.toUpperCase());
			var t = 0,
				i = 0,
				a = 0,
				s = [];
			this.text = e;
			for (var r = 0, n = null, o = 0; o < this.sprites.length; o++) this.sprites[o].kill();
			Util.isDefined(this.icon) && this.icon.destroy(), this.numberOfLines = 1;
			for (var h = 0; h < e.length; h++) {
				var l = e.charCodeAt(h),
					d = null;
				if (91 !== l) {
					if (93 === l) d = n, n = null;
					else if (Util.isDefined(n)) {
						r++, n += e[h];
						continue
					}
					var o = h - r,
						c = this.monoSpace || 10;
					if (o >= this.sprites.length) {
						var p = this.game.prodigy.create.sprite(t, i, this.fontName);
						this.add(p), this.sprites.push(p)
					} else this.sprites[o].revive();
					if (this.sprites[o].x = t, this.sprites[o].y = i, Util.isDefined(d) ? (-1 !== d.indexOf("icon-") ? (this.icon = this.game.prodigy.icon.createIcon(t, i, d, !1, null, 40, 40), this.add(this.icon), this.sprites[o] = this.icon) : ("icons" !== this.sprites[o].key && this.sprites[o].loadTexture("icons"), this.sprites[o].frameName = d), this.sprites[o].y += this.iconOffsetY) : (this.sprites[o].key !== this.fontName && this.sprites[o].loadTexture(this.fontName), 10 !== l && (this.sprites[o].frameName = l + "-" + this.fontSize)), 32 === l || h === e.length - 1 || 10 === l) {
						var g = 0 === this.fontSize ? 26 : this.fontSize,
							u = this.lineHeight || g + 5;
						if (t >= this.boundsWidth) {
							var y = t;
							t = 0, i += u;
							for (var m = a; o >= m; m++) this.sprites[m].x = t, this.sprites[m].y = i, "icons" === this.sprites[m].key && (this.sprites[m].y += (this.sprites[m].height - g) / 2), t += this.monoSpace || this.sprites[m].width;
							s.push(y - t), this.numberOfLines++, "center" == this.align && (t -= c)
						} else 10 === l && (this.sprites[o].kill(), i += u, t = 0, this.numberOfLines++);
						a = o + 1, 32 === l && (t += c)
					}
					10 !== l && (t += this.monoSpace || this.sprites[o].width), h === e.length - 1 && s.push(t)
				} else r++, n = ""
			}
			if (this.lines = s.length, Util.isDefined(this.align) && "left" !== this.align)
				for (var f = -1, b = 0, h = -1, o = 0; o < this.sprites.length; o++) {
					var p = this.sprites[o];
					f !== p.y && (f = p.y, h++, Util.isDefined(s[h]) && ("center" === this.align ? b = Math.floor((this.boundsWidth - s[h]) / 2) : "right" === this.align && (b = Math.floor(this.boundsWidth - s[h])))), p.x += b
				}
			if (Util.isDefined(this.verticalAlign) && "top" !== this.verticalAlign && Util.isDefined(this.sprites[0])) {
				var v = 0,
					P = this.sprites[0].height * this.numberOfLines;
				"center" === this.verticalAlign ? v = Math.round((this.height - P) / 2) : "bottom" === this.verticalAlign && (v = Math.round(this.height - P));
				for (var o = 0; o < this.sprites.length; o++) this.sprites[o].y += v
			}
		}
	},
	setCenterAnchor: function() {
		for (var e = this.width >> 1, t = this.height >> 1, i = 0; i < this.sprites.length; i++) this.sprites[i].x -= e, this.sprites[i].y -= t
	}
}), Prodigy.UI.GraphicBase = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t)
}, Prodigy.extends(Prodigy.UI.GraphicBase, Prodigy.UI.UIElement, {
	createImage: function() {}
}), Prodigy.UI.Graphic = function(e, t) {
	Prodigy.UI.GraphicBase.call(this, e, t), this.image = null
}, Prodigy.extends(Prodigy.UI.Graphic, Prodigy.UI.GraphicBase, {
	populate: function(e) {
		var t = Util.isDefined(e.frameName) ? e.frameName : "",
			i = Util.isDefined(e.atlasName) ? e.atlasName : "ui-shared";
		this.createImage(i, t), Prodigy.UI.UIElement.prototype.populate.call(this, e), Util.isDefined(e.tint) && (this.image.tint = e.tint)
	},
	createImage: function(e, t) {
		this.image = this.add(new Phaser.Image(this.game, 0, 0, e, t))
	},
	flipHorizontally: function() {
		this.image.pivot.setTo(this.image.width, 0), this.image.scale.x *= -1
	},
	setActive: function(e) {
		this.image.tint = e ? 16777215 : 5789784, Prodigy.UI.GraphicBase.prototype.setActive.call(this, e)
	}
}), Prodigy.UI.SlicedBanner = function(e, t) {
	Prodigy.UI.GraphicBase.call(this, e, t), this.images = [], this.text = null
}, Prodigy.UI.SlicedBanner.SLICE_MIDDLE = "-middle", Prodigy.UI.SlicedBanner.SLICE_LEFT = "-left", Prodigy.UI.SlicedBanner.SLICE_RIGHT = "-right", Prodigy.UI.SlicedBanner.SLICE_BOTTOM_LEFT = "-bottomLeft", Prodigy.UI.SlicedBanner.SLICE_BOTTOM_RIGHT = "-bottomRight", Prodigy.extends(Prodigy.UI.SlicedBanner, Prodigy.UI.GraphicBase, {
	populate: function(e) {
		Prodigy.UI.GraphicBase.prototype.populate.call(this, e);
		var t = Util.isDefined(e.baseFrameName) ? e.baseFrameName : "",
			i = Util.isDefined(e.atlasName) ? e.atlasName : "ui-shared",
			a = Util.isDefined(e.text) ? e.text : "";
		this.createImage(i, t, a, e.isThreeSlice)
	},
	createImage: function(e, t, i, a) {
		this.text = new Prodigy.UI.Text(this.game, this);
		var s = a ? 0 : 68,
			r = 40;
		if (a) {
			var n = this.add(new Phaser.Image(this.game, 1, 0, e, t + Prodigy.UI.SlicedBanner.SLICE_LEFT)),
				o = n.width;
			this.images.push(n), n = this.add(new Phaser.Image(this.game, this.width - o - s, 0, e, t + Prodigy.UI.SlicedBanner.SLICE_RIGHT)), this.images.push(n);
			var h = this.add(new Phaser.Image(this.game, o, 0, e, t + Prodigy.UI.SlicedBanner.SLICE_MIDDLE));
			this.images.push(h), h.scale.x = (n.x - o + 1) / h.width
		} else {
			var n = this.add(new Phaser.Image(this.game, 0, r, e, t + Prodigy.UI.SlicedBanner.SLICE_BOTTOM_LEFT)),
				o = n.width;
			this.images.push(n), n = this.add(new Phaser.Image(this.game, this.width - o, r, e, t + Prodigy.UI.SlicedBanner.SLICE_BOTTOM_RIGHT)), this.images.push(n), n = this.add(new Phaser.Image(this.game, s, 0, e, t + Prodigy.UI.SlicedBanner.SLICE_LEFT)), o = n.width, this.images.push(n), n = this.add(new Phaser.Image(this.game, this.width - o - s, 0, e, t + Prodigy.UI.SlicedBanner.SLICE_RIGHT)), this.images.push(n), this.images = this.images.concat(this.createMiddleImages({
				x: o + s,
				y: 0
			}, {
				x: this.width - o - s,
				y: 0
			}, e, t))
		}
		var l = .05,
			d = {
				type: "Text",
				name: "bannerText",
				anchorX: .5,
				anchorY: 0,
				relativeX: .5,
				relativeY: a ? -.13 : 0,
				relativeWidth: (this.width - 2 * s) / this.width - l,
				height: 80,
				text: i,
				font: "ui",
				fontSize: 0,
				horizontalAlignment: "center",
				verticalAlignment: "center",
				forceUpperCase: !0,
				lineHeight: 35
			};
		this.addChild(this.text), this.text.processRelativeFields(d, {
			width: this.width,
			height: this.height
		}), this.text.populate(d)
	},
	createMiddleImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getMiddleImageFrames(a))
	},
	getMiddleImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedBanner.SLICE_MIDDLE]
	},
	setText: function(e) {
		Util.isDefined(this.text) && this.text.setText(e)
	}
}), Prodigy.UI.SlicedGraphic = function(e, t) {
	Prodigy.UI.GraphicBase.call(this, e, t), this.images = [], this.sliceType = ""
}, Prodigy.UI.SlicedGraphic.SLICE_TOP = "-top", Prodigy.UI.SlicedGraphic.SLICE_BOTTOM = "-bottom", Prodigy.UI.SlicedGraphic.SLICE_LEFT = "-left", Prodigy.UI.SlicedGraphic.SLICE_RIGHT = "-right", Prodigy.UI.SlicedGraphic.SLICE_MIDDLE = "-middle", Prodigy.UI.SlicedGraphic.SLICE_TOP_LEFT = "-topLeft", Prodigy.UI.SlicedGraphic.SLICE_TOP_RIGHT = "-topRight", Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_LEFT = "-bottomLeft", Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_RIGHT = "-bottomRight", Prodigy.extends(Prodigy.UI.SlicedGraphic, Prodigy.UI.GraphicBase, {
	populate: function(e) {
		Prodigy.UI.GraphicBase.prototype.populate.call(this, e);
		var t = Util.isDefined(e.baseFrameName) ? e.baseFrameName : "",
			i = Util.isDefined(e.atlasName) ? e.atlasName : "ui-shared";
		if (this.isVertical = Util.isDefined(e.isVertical) ? e.isVertical : !1, Util.isDefined(e.sliceType) ? this.sliceType = e.sliceType : Util.log("SlicedGraphic.populate - no sliceType provided for SlicedGraphic named: " + this.name + ". This SlicedGraphic won't render.", Util.ERROR), this.createImage(i, t), Util.isDefined(e.tint))
			for (var a = 0; a < this.images.length; a++) this.images[a].tint = e.tint
	},
	createImage: function(e, t) {
		"three" === this.sliceType ? this.create3SlicedImages(e, t) : "threeScale" === this.sliceType ? this.create3SlicedImagesScaled(e, t) : "nine" === this.sliceType ? this.create9SlicedImages(e, t) : "nineScale" === this.sliceType ? this.create9SlicedImagesScaled(e, t) : Util.log("SlicedGraphic.populate - no definition for sliceType: " + this.sliceType + " for SlicedGraphic named: " + this.name + ". This SlicedGraphic won't render.", Util.ERROR), this.disableSmoothing()
	},
	create9SlicedImages: function(e, t) {
		var i = this.add(new Phaser.Image(this.game, 0, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_TOP_LEFT)),
			a = {
				width: i.width,
				height: i.height
			};
		this.images.push(i), i = this.add(new Phaser.Image(this.game, this.width - a.width, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_TOP_RIGHT)), this.images.push(i), i = this.add(new Phaser.Image(this.game, this.width - a.width, this.height - a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_RIGHT)), this.images.push(i), i = this.add(new Phaser.Image(this.game, 0, this.height - a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_LEFT)), this.images.push(i), this.images = this.images.concat(this.createTopImages({
			x: a.width,
			y: 0
		}, {
			x: this.width - a.width,
			y: 0
		}, e, t)), this.images = this.images.concat(this.createBottomImages({
			x: a.width,
			y: this.height - a.height
		}, {
			x: this.width - a.width,
			y: this.height - a.height
		}, e, t)), this.images = this.images.concat(this.createLeftImages({
			x: 0,
			y: a.height
		}, {
			x: 0,
			y: this.height - a.height
		}, e, t)), this.images = this.images.concat(this.createRightImages({
			x: this.width - a.width,
			y: a.height
		}, {
			x: this.width - a.width,
			y: this.height - a.height
		}, e, t)), this.images = this.images.concat(this.createMiddleImages({
			x: a.width,
			y: a.height
		}, {
			x: this.width - a.width,
			y: this.height - a.height
		}, e, t))
	},
	create9SlicedImagesScaled: function(e, t) {
		var i = this.add(new Phaser.Image(this.game, 0, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_TOP_LEFT)),
			a = {
				width: i.width,
				height: i.height
			};
		this.images.push(i), i = this.add(new Phaser.Image(this.game, this.width - a.width, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_TOP_RIGHT)), this.images.push(i), i = this.add(new Phaser.Image(this.game, this.width - a.width, this.height - a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_RIGHT)), this.images.push(i), i = this.add(new Phaser.Image(this.game, 0, this.height - a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM_LEFT)), this.images.push(i);
		var s = this.images[1].x - a.width,
			r = this.images[3].y - a.height,
			n = this.add(new Phaser.Image(this.game, a.width, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_TOP));
		n.scale.x = s / n.width;
		var o = this.add(new Phaser.Image(this.game, a.width, this.images[2].y, e, t + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM));
		o.scale.x = s / o.width;
		var h = this.add(new Phaser.Image(this.game, 0, a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_LEFT));
		h.scale.y = r / h.height;
		var l = this.add(new Phaser.Image(this.game, this.images[1].x, a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_RIGHT));
		l.scale.y = r / l.height;
		var d = this.add(new Phaser.Image(this.game, a.width, a.height, e, t + Prodigy.UI.SlicedGraphic.SLICE_MIDDLE));
		d.scale.x = s / d.width, d.scale.y = r / d.height, this.images.push(n), this.images.push(o), this.images.push(h), this.images.push(l), this.images.push(d)
	},
	resize: function(e, t) {
		for (var i = 0; i < this.images.length; i++) this.images[i].x = 0, this.images[i].y = 0, this.images[i].scale.x = 1, this.images[i].scale.y = 1;
		if ("nineScale" === this.sliceType) {
			var a = {
				width: this.images[0].width,
				height: this.images[0].height
			};
			this.images[0].x = 0, this.images[0].y = 0, this.images[1].x = e - a.width, this.images[1].y = 0, this.images[2].x = e - a.width, this.images[2].y = t - a.height, this.images[3].x = 0, this.images[3].y = t - a.height;
			var s = this.images[1].x - a.width,
				r = this.images[3].y - a.height;
			this.images[4].x = a.width, this.images[4].y = 0, this.images[4].scale.x = s / this.images[4].width, this.images[5].x = a.width, this.images[5].y = this.images[2].y, this.images[5].scale.x = s / this.images[5].width, this.images[6].x = 0, this.images[6].y = a.height, this.images[6].scale.y = r / this.images[6].height, this.images[7].x = this.images[1].x, this.images[7].y = a.height, this.images[7].scale.y = r / this.images[7].height, this.images[8].x = a.width, this.images[8].y = a.height, this.images[8].scale.x = s / this.images[8].width, this.images[8].scale.y = r / this.images[8].height
		} else if ("threeScale" === this.sliceType) {
			var n = this.images[0].width;
			if (this.isVertical) this.images[2].y = n, this.images[1].y = t - n, this.images[2].scale.x = (this.images[1].y - n + 1) / this.images[2].width;
			else {
				var n = this.images[0].width;
				this.images[2].x = n, this.images[1].x = e - n, this.images[2].scale.x = (this.images[1].x - n + 1) / this.images[2].width
			}
		}
	},
	create3SlicedImages: function(e, t) {
		var i = new Phaser.Image(this.game, 0, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_LEFT);
		this.isVertical && (i.y = this.height - i.height), this.add(i);
		var a = i.width;
		if (this.images.push(i), i = new Phaser.Image(this.game, this.width - a, 0, e, t + Prodigy.UI.SlicedGraphic.SLICE_RIGHT), this.isVertical && (i.x = 0), this.add(i), this.images.push(i), this.isVertical) {
			this.images = this.images.concat(this.createMiddleImages({
				x: 0,
				y: i.height
			}, {
				x: 0,
				y: this.height - i.height
			}, e, t));
			for (var s = 0; s < this.images.length; s++) this.images[s].angle = 270, this.images[s].y += this.images[s].height
		} else this.images = this.images.concat(this.createMiddleImages({
			x: a,
			y: 0
		}, {
			x: this.width - a,
			y: 0
		}, e, t))
	},
	create3SlicedImagesScaled: function(e, t) {
		if (this.isVertical) {
			var i = this.add(new Phaser.Image(this.game, 0, 0, e, t + "-left")),
				a = i.width;
			i.angle = 90, this.images.push(i), i = this.add(new Phaser.Image(this.game, 0, this.height - a, e, t + "-right")), i.angle = 90, this.images.push(i);
			var s = this.add(new Phaser.Image(this.game, 0, a, e, t + "-middle"));
			s.angle = 90, this.images.push(s), s.scale.x = (i.y - a) / s.width
		} else {
			var i = this.add(new Phaser.Image(this.game, 0, 0, e, t + "-left")),
				r = i.width;
			this.images.push(i), i = this.add(new Phaser.Image(this.game, this.width - r, 0, e, t + "-right")), this.images.push(i);
			var s = this.add(new Phaser.Image(this.game, r, 0, e, t + "-middle"));
			this.images.push(s), s.scale.x = (i.x - r) / s.width
		}
	},
	createTopImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getTopImageFrames(a))
	},
	createBottomImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getBottomImageFrames(a))
	},
	createLeftImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getLeftImageFrames(a))
	},
	createRightImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getRightImageFrames(a))
	},
	createMiddleImages: function(e, t, i, a) {
		return Prodigy.UI.UIUtil.floodFillImages(this.game, this, e, t, i, this.getMiddleImageFrames(a))
	},
	getTopImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedGraphic.SLICE_TOP]
	},
	getBottomImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM]
	},
	getLeftImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedGraphic.SLICE_LEFT]
	},
	getRightImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedGraphic.SLICE_RIGHT]
	},
	getMiddleImageFrames: function(e) {
		return [e + Prodigy.UI.SlicedGraphic.SLICE_MIDDLE]
	},
	disableSmoothing: function() {
		for (var e = 0; e < this.images.length; e++) this.images[e].smoothed = !1
	},
	setActive: function(e) {
		for (var t = e ? 16777215 : 5789784, i = 0; i < this.images.length; i++) this.images[i].tint = t;
		Prodigy.UI.GraphicBase.prototype.setActive.call(this, e)
	}
}), Prodigy.UI.WoodSlicedPanel = function(e, t) {
	Prodigy.UI.SlicedGraphic.call(this, e, t)
}, Prodigy.UI.WoodSlicedPanel.MAX_SIDE_NOTCHES = 3, Prodigy.extends(Prodigy.UI.WoodSlicedPanel, Prodigy.UI.SlicedGraphic, {
	getTopImageFrames: function(e) {
		var t = Prodigy.UI.SlicedGraphic.prototype.getTopImageFrames.call(this, e);
		return t.concat([e + Prodigy.UI.SlicedGraphic.SLICE_TOP + "-alt"])
	},
	getBottomImageFrames: function(e) {
		var t = Prodigy.UI.SlicedGraphic.prototype.getBottomImageFrames.call(this, e);
		return t.concat([e + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM + "-alt"])
	},
	getLeftImageFrames: function(e) {
		var t = Prodigy.UI.SlicedGraphic.prototype.getLeftImageFrames.call(this, e);
		return t.concat([e + Prodigy.UI.SlicedGraphic.SLICE_LEFT + "-alt"])
	},
	getRightImageFrames: function(e) {
		var t = Prodigy.UI.SlicedGraphic.prototype.getRightImageFrames.call(this, e);
		return t.concat([e + Prodigy.UI.SlicedGraphic.SLICE_RIGHT + "-alt"])
	},
	getMiddleImageFrames: function(e) {
		var t = Prodigy.UI.SlicedGraphic.prototype.getMiddleImageFrames.call(this, e);
		return t.concat([e + Prodigy.UI.SlicedGraphic.SLICE_MIDDLE + "-alt", e + Prodigy.UI.SlicedGraphic.SLICE_MIDDLE + "-alt2", e + Prodigy.UI.SlicedGraphic.SLICE_MIDDLE + "-alt3"])
	},
	createTopImages: function(e, t, i, a) {
		var s = Prodigy.UI.SlicedGraphic.prototype.createTopImages.call(this, e, t, i, a);
		return this.generateNotchReplacements(s, a + Prodigy.UI.SlicedGraphic.SLICE_TOP + "-notch"), s
	},
	createBottomImages: function(e, t, i, a) {
		var s = Prodigy.UI.SlicedGraphic.prototype.createBottomImages.call(this, e, t, i, a);
		return this.generateNotchReplacements(s, a + Prodigy.UI.SlicedGraphic.SLICE_BOTTOM + "-notch"), s
	},
	createLeftImages: function(e, t, i, a) {
		var s = Prodigy.UI.SlicedGraphic.prototype.createLeftImages.call(this, e, t, i, a);
		return this.generateNotchReplacements(s, a + Prodigy.UI.SlicedGraphic.SLICE_LEFT + "-notch"), s
	},
	createRightImages: function(e, t, i, a) {
		var s = Prodigy.UI.SlicedGraphic.prototype.createRightImages.call(this, e, t, i, a);
		return this.generateNotchReplacements(s, a + Prodigy.UI.SlicedGraphic.SLICE_RIGHT + "-notch"), s
	},
	generateNotchReplacements: function(e, t) {
		for (var i = Math.floor(Math.random() * Prodigy.UI.WoodSlicedPanel.MAX_SIDE_NOTCHES), a = 0; i > a; a++) e[Math.floor(Math.random() * e.length)].frameName = t
	}
}), Prodigy.UI.Slider = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t), this.onScrollChangeCallback = null
}, Prodigy.extends(Prodigy.UI.Slider, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.Slider,
	populate: function(e) {
		this.thumbFrameName = Util.isDefined(e.thumbFrameName) ? e.thumbFrameName : "", this.activeTrackBaseFrameName = Util.isDefined(e.activeTrackBaseFrameName) ? e.activeTrackBaseFrameName : "", this.inactiveTrackBaseFrameName = Util.isDefined(e.inactiveTrackBaseFrameName) ? e.inactiveTrackBaseFrameName : "", this.endCapAtlas = Util.isDefined(e.endCapAtlas) ? e.endCapAtlas : "", this.endCapFrameName = Util.isDefined(e.endCapFrameName) ? e.endCapFrameName : "", this.arrowFrameName = Util.isDefined(e.arrowFrameName) ? e.arrowFrameName : "", this.isVertical = Util.isDefined(e.isVertical) ? e.isVertical : !1, this.atlasName = Util.isDefined(e.atlasName) ? e.atlasName : "ui-shared", this.clickPercentageMovement = Util.isDefined(e.clickPercentageMovement) ? e.clickPercentageMovement : .05, this.isInteractive = Util.isNullOrUndefined(e.isInteractive) ? !0 : e.isInteractive, this.hideInactive = Util.isNullOrUndefined(e.hideInactive) ? !1 : e.hideInactive, this.showHead = Util.isNullOrUndefined(e.showHead) ? !1 : e.showHead, this.thumbAnchor = Util.isDefined(e.thumbAnchor) ? e.thumbAnchor : {
			x: 0,
			y: 0
		};
		var t = Util.isDefined(e.trackPadding) ? e.trackPadding : 0;
		Prodigy.UI.UIElement.prototype.populate.call(this, e);
		var i = {
				width: 0,
				height: 0
			},
			a = 1,
			s = this.game.cache.getFrameData(this.atlasName);
		if (Util.isDefined(s)) {
			var r = s.getFrameByName(this.arrowFrameName);
			Util.isDefined(r) && (i.width = r.width, i.height = r.height), r = s.getFrameByName(this.activeTrackBaseFrameName + "-middle"), Util.isDefined(r) && (a = r.height)
		}
		Util.isNullOrUndefined(e.children) && (e.children = [], i.width > 0 && i.height > 0 && e.children.push({
			type: "Button",
			name: "lessButton",
			anchorX: this.isVertical ? .5 : 0,
			anchorY: this.isVertical ? 1 : .5,
			relativeX: this.isVertical ? .5 : 0,
			relativeY: this.isVertical ? 1 : .5,
			width: i.width,
			height: i.height,
			children: [{
				type: "Graphic",
				name: "lessButtonGraphic",
				atlasName: this.atlasName,
				frameName: this.arrowFrameName
			}]
		}, {
			type: "Button",
			name: "moreButton",
			anchorX: this.isVertical ? .5 : 1,
			anchorY: this.isVertical ? 0 : .5,
			relativeX: this.isVertical ? .5 : 1,
			relativeY: this.isVertical ? 0 : .5,
			width: i.width,
			height: i.height,
			children: [{
				type: "Graphic",
				name: "moreButtonGraphic",
				atlasName: this.atlasName,
				frameName: this.arrowFrameName
			}]
		}), e.children.push({
			type: "SlicedGraphic",
			name: "inactiveTrack",
			anchorX: this.isVertical ? .5 : 0,
			anchorY: this.isVertical ? 0 : .5,
			x: this.isVertical ? 0 : i.width + t,
			y: this.isVertical ? i.height + t : null,
			relativeX: this.isVertical ? .5 : null,
			relativeY: this.isVertical ? null : .5,
			sliceType: "threeScale",
			isVertical: this.isVertical,
			baseFrameName: this.inactiveTrackBaseFrameName,
			width: this.isVertical ? a : this.width - 2 * (i.width + t),
			height: this.isVertical ? this.height - 2 * (i.height + t) : a
		}, {
			type: "SlicedGraphic",
			name: "activeTrack",
			anchorX: this.isVertical ? .5 : 0,
			anchorY: this.isVertical ? 0 : .5,
			x: this.isVertical ? 0 : i.width + t,
			y: this.isVertical ? i.height + t : 0,
			relativeX: this.isVertical ? .5 : null,
			relativeY: this.isVertical ? null : .5,
			sliceType: "threeScale",
			isVertical: this.isVertical,
			baseFrameName: this.activeTrackBaseFrameName,
			width: this.isVertical ? a : this.width - 2 * (i.width + t),
			height: this.isVertical ? this.height - 2 * (i.height + t) : a
		}))
	},
	postPopulate: function() {
		if (this.activeTrack = this.iterate("name", "activeTrack", Phaser.Group.RETURN_CHILD), this.inactiveTrack = this.iterate("name", "inactiveTrack", Phaser.Group.RETURN_CHILD), this.isInteractive) {
			this.setupButtons();
			var e = this.add(this.game.prodigy.create.sprite(0, 0, "core", "empty"));
			e.width = this.activeTrack.width, e.height = this.activeTrack.height, e.x = this.activeTrack.x, e.y = this.activeTrack.y, e.inputEnabled = !0, e.events.onInputDown.add(this.onTrackClick.bind(this))
		}
		if (this.hideInactive && (this.inactiveTrack.visible = !1), this.thumbSprite = this.game.prodigy.create.sprite(0, 0, this.atlasName, this.thumbFrameName, this.thumbAnchor), "" === this.thumbFrameName && (this.thumbSprite = this.game.prodigy.create.sprite(0, 0, "core", "empty")), this.thumbSprite.y = Util.getCenteredXY(0, this.thumbSprite.height, 0, this.activeTrack.y, 0, this.activeTrack.height).y, "" !== this.endCapAtlas) {
			var t = this.getMaxThumbPosition();
			this.add(this.game.prodigy.create.sprite(t.x, t.y, this.endCapAtlas, this.endCapFrameName))
		}
		this.add(this.thumbSprite), this.showHead && (this.playerHead = this.game.prodigy.create.player(this.thumbSprite, this.game.prodigy.player, 1, 25, 105, !0), this.playerHead.startLoad()), this.clampThumbWithinTrack();
		var i = this.getMinThumbPosition(),
			a = this.getMaxThumbPosition(),
			s = new Phaser.Rectangle(this.isVertical ? a.x : i.x, this.isVertical ? a.y : i.y, this.isVertical ? this.thumbSprite.width : this.activeTrack.width + this.thumbSprite.width, this.isVertical ? this.activeTrack.height + this.thumbSprite.height : this.thumbSprite.height),
			r = Prodigy.DrawUtil.createBox(this.game, 0, 0, this.activeTrack.width, this.activeTrack.height, 0, 1);
		this.thumbSprite.addChild(r), r.x = this.isVertical ? this.activeTrack.x - this.thumbSprite.x : -this.activeTrack.width, r.y = this.isVertical ? 0 : this.activeTrack.y - this.thumbSprite.y, r.x += this.isVertical ? 0 : .5 * this.thumbSprite.width, r.y += this.isVertical ? .5 * this.thumbSprite.height : 0, this.activeTrack.mask = r, this.isInteractive && (this.thumbSprite.inputEnabled = !0, this.thumbSprite.input.enableDrag(), this.thumbSprite.input.boundsRect = s, this.thumbSprite.events.onDragStop.add(this.onDragStop, this))
	},
	setupButtons: function() {
		var e = this.iterate("name", "lessButton", Phaser.Group.RETURN_CHILD),
			t = this.iterate("name", "moreButton", Phaser.Group.RETURN_CHILD);
		if (Util.isDefined(e)) {
			var i = e.iterate("name", "lessButtonGraphic", Phaser.Group.RETURN_CHILD);
			i.flipHorizontally(), e.onClickCallback = this.onLessButtonClick.bind(this)
		}
		Util.isDefined(t) && (t.onClickCallback = this.onMoreButtonClick.bind(this))
	},
	setPercentComplete: function(e, t) {
		this.setPercentCompleteOffset(e, 0, t)
	},
	setPercentCompleteOffset: function(e, t, i) {
		Util.isDefined(i) || (i = !1);
		var a = this.isVertical ? this.getMinThumbPosition().y : this.getMinThumbPosition().x,
			s = this.isVertical ? this.getMaxThumbPosition().y : this.getMaxThumbPosition().x,
			r = Phaser.Math.linear(a, s + t, e);
		this.thumbSprite.x = this.isVertical ? this.thumbSprite.x : r, this.thumbSprite.y = this.isVertical ? r : this.thumbSprite.y, this.clampThumbWithinTrack(), i || this.onScrollChange()
	},
	getPositionAtPercent: function(e) {
		var t = this.isVertical ? this.getMinThumbPosition().y : this.getMinThumbPosition().x,
			i = this.isVertical ? this.getMaxThumbPosition().y : this.getMaxThumbPosition().x;
		return Phaser.Math.linear(t, i, e)
	},
	getPositionAtPercentOffset: function(e, t) {
		var i = this.isVertical ? this.getMinThumbPosition().y : this.getMinThumbPosition().x,
			a = this.isVertical ? this.getMaxThumbPosition().y : this.getMaxThumbPosition().x;
		return Phaser.Math.linear(i, a + t, e)
	},
	adjustThumbPosition: function(e, t) {
		this.thumbSprite.x += e, this.thumbSprite.y += t, this.clampThumbWithinTrack()
	},
	clampThumbWithinTrack: function() {
		var e = this.getMaxThumbPosition(),
			t = this.getMinThumbPosition();
		this.thumbSprite.x = Phaser.Math.clamp(this.thumbSprite.x, t.x, e.x), this.thumbSprite.y = Phaser.Math.clamp(this.thumbSprite.y, e.y, t.y)
	},
	onDragStop: function() {
		this.onScrollChange()
	},
	onTrackClick: function(e, t) {
		var i = this.isVertical ? t.y : t.x,
			a = this.isVertical ? e.world.y : e.world.x,
			s = this.isVertical ? e.y : e.x,
			r = this.isVertical ? e.height : e.width,
			n = this.isVertical ? this.thumbSprite.height : this.thumbSprite.width,
			o = (i - a) / r,
			h = Math.floor(s + r * o - .5 * n);
		this.isVertical ? this.thumbSprite.y = h : this.thumbSprite.x = h, this.clampThumbWithinTrack(), this.onScrollChange()
	},
	onMoreButtonClick: function() {
		this.adjustThumbPosition(this.isVertical ? 0 : this.activeTrack.width * this.clickPercentageMovement, this.isVertical ? -this.activeTrack.height * this.clickPercentageMovement : 0), this.onScrollChange()
	},
	onLessButtonClick: function() {
		this.adjustThumbPosition(this.isVertical ? 0 : -this.activeTrack.width * this.clickPercentageMovement, this.isVertical ? this.activeTrack.height * this.clickPercentageMovement : 0), this.onScrollChange()
	},
	onScrollChange: function() {
		if (Util.isDefined(this.onScrollChangeCallback)) {
			var e = this.isVertical ? this.thumbSprite.y : this.thumbSprite.x,
				t = this.isVertical ? this.getMinThumbPosition().y : this.getMinThumbPosition().x,
				i = this.isVertical ? this.getMaxThumbPosition().y : this.getMaxThumbPosition().x,
				a = i - t,
				s = 1;
			0 !== a && (s = (e - t) / a), this.onScrollChangeCallback(s)
		}
	},
	getMaxThumbPosition: function() {
		var e, t;
		return this.isVertical ? (e = Util.getCenteredXY(this.thumbSprite.width, 0, this.activeTrack.x, 0, this.activeTrack.width, 0).x, t = this.activeTrack.y - .5 * this.thumbSprite.height) : (e = this.activeTrack.x + this.activeTrack.width - .5 * this.thumbSprite.width, t = Util.getCenteredXY(0, this.thumbSprite.height, 0, this.activeTrack.y, 0, this.activeTrack.height).y), {
			x: e,
			y: t
		}
	},
	getMinThumbPosition: function() {
		var e = 0,
			t = 0;
		return this.isVertical ? (e = Util.getCenteredXY(this.thumbSprite.width, 0, this.activeTrack.x, 0, this.activeTrack.width, 0).x, t = this.activeTrack.y + this.activeTrack.height - .5 * this.thumbSprite.height) : (e = this.activeTrack.x - .5 * this.thumbSprite.width, t = Util.getCenteredXY(0, this.thumbSprite.height, 0, this.activeTrack.y, 0, this.activeTrack.height).y), {
			x: e,
			y: t
		}
	}
}), Prodigy.UI.Tab = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t)
}, Prodigy.extends(Prodigy.UI.Tab, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.Tab,
	populate: function(e) {
		Prodigy.UI.UIElement.prototype.populate.call(this, e), this.groupID = e.groupID || 0, this.tabID = e.tabID || 0, this.game.broadcaster.addAppListener(Prodigy.Event.UI.TAB_BUTTON_CLICKED, this.checkTabClick.bind(this), this, this.game.prodigy.open.menus[this.game.prodigy.open.menus.length - 1])
	},
	checkTabClick: function(e, t) {
		this.visible = this.groupID === e && this.tabID === t, this.visible && this.select()
	},
	select: function() {
		this.game.broadcaster.broadcast(Prodigy.Event.UI.TAB_SELECTED, this.game.prodigy.open.menus[this.game.prodigy.open.menus.length - 1], [this.groupID, this.tabID])
	}
}), Prodigy.UI.TabButton = function(e, t) {
	Prodigy.UI.Button.call(this, e, t)
}, Prodigy.extends(Prodigy.UI.TabButton, Prodigy.UI.Button, {
	constructor: Prodigy.UI.TabButton,
	populate: function(e) {
		Prodigy.UI.Button.prototype.populate.call(this, e), this.groupID = e.groupID || 0, this.tabID = e.tabID || 0, Util.isDefined(this.broadcasts) || (this.broadcasts = []), this.broadcasts.push({
			type: Prodigy.Event.UI.TAB_BUTTON_CLICKED,
			params: [this.groupID, this.tabID]
		}), this.game.broadcaster.addAppListener(Prodigy.Event.UI.TAB_SELECTED, this.onTabSelected.bind(this), this, this.game.prodigy.open.menus[this.game.prodigy.open.menus.length - 1])
	},
	onTabSelected: function(e, t) {
		var i = this.groupID === e && this.tabID === t;
		this.setActive(!i)
	}
}), Prodigy.UI.ScrollView = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t), this.scrollBar = null, this.contents = null, this.maxScrollDist = 0, this.viewHeight = 0, this.viewWidth = 0, this.contentsArray = [], this.clickDragTresh = 4, this.maxDistanceThisScroll = 0, this.dirty = !1, this.mouseWheelPixelDistance = 20, this.onDestroy.add(this.stopWheelListener.bind(this))
}, Prodigy.extends(Prodigy.UI.ScrollView, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.ScrollView,
	populate: function(e) {
		Prodigy.UI.UIElement.prototype.populate.call(this, e), this.viewHeight = this.height, this.viewWidth = this.width, this.setupScrollWheel(), Util.isNullOrUndefined(e.scrollContentsName) || (this.contentsName = e.scrollContentsName), Util.isNullOrUndefined(e.enableTouchScroll) ? Util.log('Scroll view needs a property named "scrollContentsName" which points to the view to scroll', Util.ERROR) : this.enableTouchScroll = e.enableTouchScroll
	},
	postPopulate: function() {
		for (var e = 0; e < this.children.length; e++)
			if (this.children[e].name === this.contentsName) {
				this.contents = this.children[e];
				break
			} this.setupMask(), this.calculateMaxScrollDist(), this.setupVisibleIndicies()
	},
	linkScrollBar: function(e) {
		this.scrollBar = e, this.scrollBar.onDragUpdateCallbacks.push(this.setToScrollPercent.bind(this)), this.scrollBar.setThumbRatio(this.viewHeight / this.contents.height)
	},
	calculateMaxScrollDist: function() {
		var e = Math.max(0, this.contents.height / this.viewHeight - 1);
		this.maxScrollDist = this.viewHeight * e
	},
	setToScrollPercent: function(e) {
		e = Math.min(Math.max(e, 0), 1), this.contents.y = Math.round(this.maxScrollDist * e * -1), Util.isNullOrUndefined(this.scrollBar) || this.scrollBar.setPercent(Math.abs(this.contents.y) / this.maxScrollDist), this.dirty = !0
	},
	setupMask: function() {
		this.rectMask = this.game.add.graphics(0, 0), this.add(this.rectMask), this.rectMask.beginFill(0), this.rectMask.drawRect(this.x, this.y, this.viewWidth, this.viewHeight), this.rectMask.endFill(), this.contents.mask = this.rectMask, this.enableTouchScroll && (this.rectMask.inputEnabled = !0, this.rectMask.input.enableDrag(!1), this.rectMask.input.allowVerticalDrag = !0, this.rectMask.input.updateDrag = this.dragView.bind(this), this.rectMask.input.stopDrag = this.stopDrag.bind(this))
	},
	dragView: function(e) {
		if (!(this.maxScrollDist <= 0)) {
			Util.isNullOrUndefined(this.scrollStartPos) && (this.scrollStartPos = this.contents.y);
			var t = e.y - e.positionDown.y,
				i = this.scrollStartPos + t;
			this.maxDistanceThisScroll = Math.max(this.maxDistanceThisScroll, Math.abs(t)), i < -1 * this.maxScrollDist ? i = -1 * this.maxScrollDist : i > 0 && (i = 0), this.contents.y = Math.round(i), Util.isNullOrUndefined(this.scrollBar) || this.scrollBar.setPercent(Math.abs(this.contents.y) / this.maxScrollDist), this.dirty = !0
		}
	},
	simulateDepthClick: function(e, t) {
		if (Phaser.Rectangle.containsPoint(e.getBounds(), t.position))
			if (e instanceof Prodigy.UI.Button) e.onDown();
			else
				for (var i = 0; i < e.children.length; i++) this.simulateDepthClick(e.children[i], t)
	},
	updateScrollVisibility: function() {
		for (var e = this.rectMask.getLocalBounds(), t = 0; t < this.contentsArray.length; t++) {
			var i = this.contentsArray[t],
				a = new Phaser.Rectangle(i.x + this.contents.x, i.y + this.contents.y, i.width, i.height);
			this.contentsArray[t].alpha = this.checkOverlap(a, e) ? 1 : 0
		}
	},
	stopDrag: function(e) {
		if (Phaser.InputHandler.prototype.stopDrag.call(this.rectMask.input, e), this.scrollStartPos = null, this.maxDistanceThisScroll <= this.clickDragTresh)
			for (var t = 0; t < this.contentsArray.length; t++) this.contentsArray[t].alpha > 0 && this.simulateDepthClick(this.contentsArray[t], e);
		this.maxDistanceThisScroll = 0
	},
	checkOverlap: function(e, t) {
		return Phaser.Rectangle.intersects(e, t)
	},
	setupVisibleIndicies: function() {
		for (var e = 0; e < this.contents.children.length; e++) this.contents.children[e] instanceof Prodigy.UI.UIElement && this.contentsArray.push(this.contents.children[e]);
		this.dirty = !0
	},
	setupScrollWheel: function() {
		this.game.broadcaster.addAppListener(Prodigy.Events.Input.ON_MOUSE_WHEEL, this.scrollWheelListener.bind(this), this, "Input", !1)
	},
	stopWheelListener: function() {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Input.ON_MOUSE_WHEEL, this, "Input")
	},
	scrollWheelListener: function() {
		if (!(this.maxScrollDist <= 0)) {
			var e = this.game.input.mouse.wheelDelta,
				t = e * this.mouseWheelPixelDistance + this.contents.y;
			this.setToScrollPercent(-1 * t / this.maxScrollDist)
		}
	},
	update: function() {
		Prodigy.UI.Menu.prototype.update.call(this), this.dirty && (this.updateScrollVisibility(), this.dirty = !1)
	}
}), Prodigy.UI.ScrollBar = function(e, t) {
	Prodigy.UI.UIElement.call(this, e, t), this.thumbTravelDistance = 0, this.onScrollChangeCallback = null, this.onDragUpdateCallbacks = []
}, Prodigy.extends(Prodigy.UI.ScrollBar, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.ScrollBar,
	populate: function(e) {
		Prodigy.UI.UIElement.prototype.populate.call(this, e), this.trackFrameName = Util.isNullOrUndefined(e.trackFrameName) ? "" : e.trackFrameName, this.atlasName = Util.isNullOrUndefined(e.atlasName) ? "ui-shared" : e.atlasName, e.children = [], e.children.push({
			type: "SlicedGraphic",
			name: this.name + "-track",
			anchorX: .5,
			anchorY: .5,
			relativeX: .5,
			relativeY: .5,
			sliceType: "threeScale",
			isVertical: !0,
			atlasName: this.atlasName,
			baseFrameName: e.trackFrameName,
			relativeWidth: 1,
			height: e.height
		}, {
			type: "SlicedGraphic",
			name: this.name + "-thumb",
			anchorX: .5,
			anchorY: 0,
			relativeX: .3,
			relativeY: 0,
			sliceType: "threeScale",
			isVertical: !0,
			atlasName: this.atlasName,
			baseFrameName: e.thumbFrameName,
			relativeWidth: 1,
			height: e.height / 4
		}), this.thumbTravelDistance = this.height - e.height / 4
	},
	postPopulate: function() {
		for (var e = 0; e < this.children.length; e++)
			if (this.children[e].name === this.name + "-thumb") {
				this.thumbSlice = this.children[e];
				break
			} this.makeThumbInteractable()
	},
	makeThumbInteractable: function() {
		for (var e = 0; e < this.thumbSlice.images.length; e++) {
			var t = this.thumbSlice.images[e];
			t.inputEnabled = !0, t.input.enableDrag(!1), t.input.useHandCursor = !0, t.events.onDragStop.add(this.stopDrag, this), t.input.updateDrag = this.dragThumb.bind(this)
		}
	},
	dragThumb: function(e) {
		if (!(this.thumbTravelDistance <= 0)) {
			Util.isNullOrUndefined(this.thumbBeginPos) && (this.thumbBeginPos = this.thumbSlice.y);
			var t = this.thumbBeginPos + (e.y - e.positionDown.y);
			t = Math.min(Math.max(t, 0), this.thumbTravelDistance), this.thumbSlice.y = Math.round(t);
			for (var i = this.getPercent(), a = 0; a < this.onDragUpdateCallbacks.length; a++) this.onDragUpdateCallbacks[a](i)
		}
	},
	setThumbRatio: function(e) {
		e >= 1 && (e = 1);
		var t = this.height * e;
		this.thumbSlice.resize(this.thumbSlice.width, t), this.thumbTravelDistance = this.height - t
	},
	getPercent: function() {
		return 0 === this.thumbTravelDistance ? 0 : this.thumbSlice.y / this.thumbTravelDistance
	},
	setPercent: function(e) {
		if (0 === this.thumbTravelDistance) return 0;
		var t = Math.min(Math.max(e, 0), 1);
		this.thumbSlice.y = t * this.thumbTravelDistance, this.thumbSlice.y = Math.round(this.thumbSlice.y)
	},
	stopDrag: function() {
		this.thumbBeginPos = null
	}
}), Prodigy.UI.UIParser = function(e) {
	this.game = e
}, Prodigy.UI.UIParser.elementDictionary = {
	UIElement: Prodigy.UI.UIElement,
	Text: Prodigy.UI.Text,
	Button: Prodigy.UI.Button,
	Graphic: Prodigy.UI.Graphic,
	SlicedGraphic: Prodigy.UI.SlicedGraphic,
	SlicedBanner: Prodigy.UI.SlicedBanner,
	WoodSlicedPanel: Prodigy.UI.WoodSlicedPanel,
	Slider: Prodigy.UI.Slider,
	TabButton: Prodigy.UI.TabButton,
	Tab: Prodigy.UI.Tab,
	ScrollView: Prodigy.UI.ScrollView,
	ScrollBar: Prodigy.UI.ScrollBar
}, Prodigy.UI.UIParser.prototype = {
	constructor: Prodigy.UI.UIParser,
	parseJSON: function(e) {
		try {
			return JSON.parse(e)
		} catch (t) {
			Util.log("Error parsing config file", Util.ERROR)
		}
	},
	createUIElements: function(e, t) {
		for (var i = null, a = null, s = null, r = [], n = t.width, o = t.height, h = 0; h < e.length; h++)
			if (i = e[h], Util.isDefined(i.type)) {
				if (a = Prodigy.UI.UIParser.elementDictionary[i.type], Util.isDefined(a) || (a = Prodigy.UI.UIParser.elementDictionary.UIElement, Util.log("UIParser.instantiateUIElements - parser has no definition for element of type: " + i.type + ".  Creating UIElement instead.", Util.ERROR)), s = new a(this.game, t), s.processRelativeFields(i, {
						width: n,
						height: o
					}), s.populate(i), r.push(s), Util.isDefined(i.children) && (r = r.concat(this.createUIElements(i.children, s))), Util.isDefined(i.layoutConfig)) {
					var l = new Prodigy.UI.LayoutElement(this.game, s, i.layoutConfig);
					s.layoutElement = l
				}
				s.postPopulate()
			} else Util.log("UIParser.instantiateUIElements - element is missing type field.  Skipping.", Util.ERROR);
		return r
	}
}, Prodigy.UI.Menu = function(e, t, i, a) {
	Prodigy.UI.UIElement.call(this, e, t, 0, 0), Util.isDefined(a) || (a = {}), this.background = e.prodigy.create.element(this), this.isModal = Util.isDefined(a.isModal) ? a.isModal : !0, this.uIElements = [], this.uIElementTemplates = [], this.uiRoot = null, this.isLoaded = !1, Util.isDefined(i) && (this.configFile = i), this.configModifiers = a, Util.isDefined(this.configFile) ? this.startLoad([this.configFile, "font-ui", "popup-member-modular"], this.startLoadComplete.bind(this)) : Util.log("Config file for this UI has not been specified", Util.ERROR), this.onLoadCallbacks = []
}, Prodigy.extends(Prodigy.UI.Menu, Prodigy.UI.UIElement, {
	constructor: Prodigy.UI.Menu,
	init: function(e) {
		e.add(this), this.process()
	},
	close: function() {
		Util.isDefined(this.game) && Util.isDefined(this.game.prodigy) && (Util.isDefined(this.game.broadcaster) && (this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_UI, this, this.game), this.game.broadcaster.removeAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this, this.game)), this.game.prodigy.open.setActiveMenu());
		try {
			Util.isDefined(this.onClose) && this.onClose.apply(this, arguments)
		} catch (e) {}
		Util.isDefined(this.game) && this.game.prodigy.open.close(this), this.destroy()
	},
	processConfigObj: function() {
		if (Util.isDefined(this.configFile) && (this.configObj = this.game.cache.getJSON(this.configFile)), Util.isDefined(this.configModifiers) && Util.isDefined(this.configObj.elements)) {
			var e;
			if (Util.isDefined(this.configModifiers.modifyProperty))
				for (var t = 0; t < this.configModifiers.modifyProperty.length; t++) e = this.configModifiers.modifyProperty[t], this.updateConfigProperty(this.configObj.elements, e.element, e.property, e.value);
			if (Util.isDefined(this.configModifiers.addChildren))
				for (var t = 0; t < this.configModifiers.addChildren.length; t++) e = this.configModifiers.addChildren[t], this.addConfigChild(this.configObj.elements, e.parent, e.child);
			if (Util.isDefined(this.configModifiers.modifyTemplateProperty) && Util.isDefined(this.configObj.templates))
				for (var t = 0; t < this.configModifiers.modifyTemplateProperty.length; t++) e = this.configModifiers.modifyTemplateProperty[t], this.updateConfigProperty(this.configObj.templates, e.element, e.property, e.value)
		}
		this.create()
	},
	startLoad: function(e, t) {
		this.game.prodigy.load.assets(e, t)
	},
	createUIElements: function(e, t) {
		var i = new Prodigy.UI.UIParser(this.game);
		this.processConfig(e), Util.isDefined(e.elements) && (this.uiRoot = new Prodigy.UI.UIElement(this.game, t), this.uiRoot.populate({
			width: t.width,
			height: t.height
		}), this.uIElements = i.createUIElements(e.elements, this.uiRoot)), Util.isDefined(e.templates) && (this.uIElementTemplates = e.templates)
	},
	processConfig: function() {},
	addTransparent: function(e) {
		var t = this.background.add(this.game.prodigy.create.sprite(-10, -10, "core", "overlay-small"));
		t.width = 1300, t.height = 740, t.alpha = Util.isDefined(e) ? e : .75, t.inputEnabled = !0
	},
	create: function() {
		this.addTransparent(), this.createUIElements(this.configObj, this);
		for (var e = 0; e < this.uIElements.length; e++) Util.isDefined(this.uIElements[e].name) && (this[this.uIElements[e].name] = this.uIElements[e]);
		this.onLoad(), this.isModal && this.game.prodigy.open.hideActiveMenu(), this.game.prodigy.open.setActiveMenu(this), this.process(), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_UI, this.onDebugAutoClick.bind(this), this, this.game), this.game.broadcaster.addAppListener(Prodigy.Events.Debug.AUTO_CLICK_LIST, this.onDebugAutoClickList.bind(this), this, this.game), this.game.broadcaster.broadcast(Prodigy.Events.PlayerLocomotion.STOP_PLAYER), this.game.broadcaster.broadcast(Prodigy.Events.UI.MENU_OPENED, this.game, [this.configFile])
	},
	process: function(e) {
		Util.isDefined(e) || (e = this, this.isModal && !Util.isNullOrUndefined(this.game) && this.game.prodigy.textureMenu.clear());
		for (var t = 0; t < e.children.length; t++) {
			var i = e.children[t];
			if (i instanceof Prodigy.UI.UIElement && i.renderOnly === !0) {
				for (var a = 0; a < i.images.length; a++) {
					var s = i.images[a];
					this.game.prodigy.textureMenu.renderXY(s, s.x + i.x, s.y + i.y), s.visible = !1
				}
				this.process(i)
			}
		}
	},
	onLoad: function() {
		this.onLoadCallbacks.forEach(function(e) {
			e()
		}), this.onLoadCallbacks = []
	},
	startLoadComplete: function() {
		this.isLoaded = !0
	},
	queuePostCreateCallback: function() {
		for (var e = 0; e < arguments.length; e++) this.onLoadCallbacks.push(arguments[e])
	},
	findConfigElement: function(e, t) {
		for (var i = 0; i < e.length; i++) {
			if (Util.isDefined(e[i].name) && e[i].name === t) return e[i];
			if (Util.isDefined(e[i].children)) {
				var a = this.findConfigElement(e[i].children, t);
				if (Util.isDefined(a)) return a
			}
		}
		return null
	},
	updateConfigProperty: function(e, t, i, a) {
		var s = this.findConfigElement(e, t);
		Util.isDefined(s) ? s[i] = a : Util.log("Config file for this UI does not have " + t + " element!", Util.ERROR)
	},
	updateConfigModifierProperty: function(e, t, i) {
		Util.isDefined(this.configModifiers) || (this.configModifiers = {}), Util.isDefined(this.configModifiers.modifyProperty) || (this.configModifiers.modifyProperty = []);
		var a = {
			element: e,
			property: t,
			value: i
		};
		this.configModifiers.modifyProperty.push(a)
	},
	addConfigChild: function(e, t, i) {
		var a = this.findConfigElement(e, t);
		Util.isDefined(a) ? Util.isDefined(a.children) ? a.children.push(i) : a.children = [i] : Util.log("Config file for this UI does not have " + t + " element!", Util.ERROR)
	},
	instantiateTemplate: function(e, t) {
		for (var i = 0; i < this.uIElementTemplates.length; i++)
			if (this.uIElementTemplates[i].name === e) {
				for (var a = new Prodigy.UI.UIParser(this.game), s = a.createUIElements(new Array(this.uIElementTemplates[i]), t), r = {}, n = 0; n < s.length; n++) r[s[n].name] = s[n];
				return r
			} Util.log("Could not find template with name: " + e)
	},
	update: function() {
		Prodigy.RenderMenu.prototype.update.call(this), this.isLoaded && (this.isLoaded = !1, this.processConfigObj())
	},
	setCloseCallback: function(e) {
		this.onClose = e
	},
	openTween: function() {
		if (Util.isDefined(this.uiRoot)) {
			var e = this.uiRoot;
			e.pivot.x = e.width / 2, e.pivot.y = e.height / 2, e.x += e.pivot.x, e.y += e.pivot.y, e.scale.x = .1, e.scale.y = .1, e.alpha = 0, this.game.add.tween(e.scale).to({
				x: 1,
				y: 1
			}, 200, Phaser.Easing.Back.Out, !0).frameBased = !1, this.game.add.tween(e).to({
				alpha: 1
			}, 120, "Linear", !0).frameBased = !1
		}
	},
	findUIElement: function(e) {
		for (var t = null, i = 0; i < this.uIElements.length; i++)
			if (t = this.uIElements[i], Util.isDefined(t.name) && t.name === e) return t;
		return Util.log("Menu.findUIElement - couldn't find UIElement with name: " + e, Util.INFO), null
	},
	findUIElementTemplate: function(e) {
		for (var t = null, i = 0; i < this.uIElementTempaltes.length; i++)
			if (t = this.uIElementTempaltes[i], Util.isDefined(t.name) && t.name === e) return t;
		return Util.log("Menu.findUIElementTemplate - couldn't find UIElement template with name: " + e, Util.INFO), null
	},
	debugDrawUIElementBounds: function(e) {
		for (var t = null, i = 0; i < this.uIElements.length; i++) t = this.uIElements[i], t.debugDrawBounds(e)
	},
	setActive: function(e) {
		this.visible = e, e && this.process()
	},
	onDebugAutoClick: function(e) {
		if (this.visible)
			for (var t = 0; t < this.uIElements.length; t++)
				if (this.uIElements[t].name === e && Util.isDefined(this.uIElements[t].onDown)) {
					this.uIElements[t].onDown();
					break
				}
	},
	onDebugAutoClickList: function() {
		for (var e = 0; e < this.uIElements.length; e++) Util.isDefined(this.uIElements[e].onClickCallback) && Util.log("Clickable UI - Name: " + this.uIElements[e].name)
	}
}), Prodigy.UI.UIViewer = function(e, t) {
	this.configFile = null, Prodigy.UI.Menu.call(this, e, t), this.configObj = Prodigy.UI.UIViewer.config, this.createdUi = null, this.create()
}, Prodigy.extends(Prodigy.UI.UIViewer, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.UIViewer,
	create: function() {
		Prodigy.UI.Menu.prototype.create.call(this), this.loadButton.onClickCallback = this.loadFile.bind(this), this.closeButton.onClickCallback = this.close.bind(this), this.backButton.onClickCallback = this.showViewer.bind(this), this.showViewer(), this.findUIElement("loadingText").visible = !1
	},
	loadFile: function() {
		var e = document.createElement("INPUT");
		e.setAttribute("type", "file"), e.setAttribute("id", "fileinput"), document.body.appendChild(e), e.addEventListener("change", this.fileChosen.bind(this)), e.click(), document.body.removeChild(e)
	},
	fileChosen: function(e) {
		var t = new FileReader;
		t.onloadstart = function() {
			this.findUIElement("loadingText").visible = !0
		}.bind(this), t.onload = function(e) {
			this.filename = e.src;
			try {
				this.hideViewer(), this.createSampleUI(t.result)
			} catch (i) {
				Util.log("Error loading config file", Util.ERROR)
			}
		}.bind(this), t.onloadend = function() {
			this.findUIElement("loadingText").visible = !1
		}.bind(this), t.onerror = function() {
			Util.log("Error loading config file", Util.ERROR)
		}, t.readAsText(e.currentTarget.files[0])
	},
	createSampleUI: function(e) {
		var t = new Prodigy.UI.UIParser(this.game),
			i = t.parseJSON(e),
			a = ["font-ui"];
		Util.isDefined(i.dependencies) && (a = a.concat(i.dependencies));
		var s = function(e) {
			this.createdUi = t.createUIElements(e.elements, this.findUIElement("viewerInterface"))
		};
		Util.isDefined(i.elements) && this.game.prodigy.load.assets(a, s.bind(this, i))
	},
	destroyUIElements: function() {
		Util.isDefined(this.createdUi) && this.createdUi.forEach(function(e) {
			e.destroy()
		})
	},
	showViewer: function() {
		this.destroyUIElements(), this.findUIElement("loadInterface").visible = !0, this.findUIElement("viewerInterface").visible = !1
	},
	hideViewer: function() {
		this.findUIElement("loadInterface").visible = !1, this.findUIElement("viewerInterface").visible = !0
	}
}), Prodigy.UI.UIViewer.config = {
	elements: [{
		type: "UIElement",
		name: "loadInterface",
		anchorX: .5,
		anchorY: .5,
		relativeX: .5,
		relativeY: .5,
		relativeHeight: 1,
		relativeWidth: 1,
		children: [{
			type: "SlicedGraphic",
			name: "panel",
			atlasName: "ui-shared",
			baseFrameName: "bases/beige",
			sliceType: "nine",
			anchorX: .5,
			anchorY: .5,
			relativeX: .5,
			relativeY: .5,
			relativeHeight: .5,
			relativeWidth: .5,
			children: [{
				type: "Button",
				name: "closeButton",
				anchorX: .5,
				anchorY: .5,
				relativeX: 1,
				relativeY: 0,
				relativeHeight: .15,
				relativeWidth: .08,
				children: [{
					type: "Graphic",
					name: "closeGraphic",
					atlasName: "ui-shared",
					frameName: "buttons/close",
					anchorX: .5,
					anchorY: .5,
					relativeX: .5,
					relativeY: .5
				}]
			}, {
				type: "Button",
				name: "loadButton",
				anchorX: .5,
				anchorY: .5,
				relativeX: .5,
				relativeY: .8,
				relativeHeight: .1,
				relativeWidth: .4,
				children: [{
					type: "SlicedGraphic",
					name: "loadGraphic",
					atlasName: "ui-shared",
					baseFrameName: "buttons/green",
					sliceType: "three",
					relativeHeight: 1,
					relativeWidth: 1
				}, {
					type: "Text",
					name: "loadText",
					relativeHeight: 1,
					relativeWidth: 1,
					text: "LOAD",
					font: "button",
					fontSize: 36,
					horizontalAlignment: "center"
				}]
			}, {
				type: "Text",
				name: "loadingText",
				anchorX: .5,
				anchorY: .5,
				relativeX: .5,
				relativeY: .2,
				relativeHeight: .2,
				relativeWidth: .4,
				text: "LOADING...",
				font: "general",
				fontSize: 20,
				horizontalAlignment: "center"
			}]
		}]
	}, {
		type: "UIElement",
		name: "viewerInterface",
		relativeHeight: 1,
		relativeWidth: 1,
		children: [{
			type: "Button",
			name: "backButton",
			anchorX: 0,
			anchorY: 0,
			relativeX: 0,
			relativeY: 0,
			relativeHeight: .05,
			relativeWidth: .2,
			children: [{
				type: "SlicedGraphic",
				name: "backGraphic",
				atlasName: "ui-shared",
				baseFrameName: "buttons/red",
				sliceType: "three",
				relativeHeight: 1,
				relativeWidth: 1
			}, {
				type: "Text",
				name: "backText",
				relativeHeight: 1,
				relativeWidth: 1,
				text: "BACK",
				font: "button",
				fontSize: 36,
				horizontalAlignment: "center"
			}]
		}]
	}],
	templates: []
}, Prodigy.UI.MessageBox = function(e, t, i, a) {
	this.configFile = "ui-message-box", Prodigy.UI.Menu.call(this, e, t, i, a)
}, Prodigy.extends(Prodigy.UI.MessageBox, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.MessageBox,
	preprocess: function(e, t, i) {
		(!Util.isDefined(t) || "pumpkin" !== t && "star-shard-small" !== t && "snowflake-small" !== t) && (t = null);
		var a = Util.isDefined(t) ? "[" + t + "] " + i : i;
		this.updateConfigModifierProperty("titleBanner", "text", a), this.updateConfigModifierProperty("titleBanner", "visible", Util.isDefined(i)), this.updateConfigModifierProperty("contentText", "text", e), this.queuePostCreateCallback(this.setTimerText.bind(this, e), this.openTween.bind(this))
	},
	setOkay: function(e, t) {
		Util.isDefined(e) || (e = "OKAY"), this.okayButton.visible = !0, this.okayText.setText(e), this.okayButton.onClickCallback = this.close.bind(this, t)
	},
	setConfirm: function(e, t) {
		this.yesButton.visible = !0, this.yesButton.onClickCallback = this.close.bind(this, e), this.noButton.visible = !0, this.noButton.onClickCallback = this.close.bind(this, t)
	},
	setConfirmGeneric: function(e, t, i) {
		this.yesButton.visible = !0, this.yesButton.onClickCallback = this.close.bind(this, e), this.noButton.visible = !0, this.noButton.onClickCallback = this.close.bind(this, t), this.closeButton.visible = !0, this.closeButton.onClickCallback = this.close.bind(this, i)
	},
	setTimerText: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && this.setText(e, (new Date).getTime())
	},
	close: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), Prodigy.RenderMenu.prototype.close.call(this)
	},
	setText: function(e, t) {
		if (Util.isDefined(this.game)) {
			if (!Util.isDefined(this.contentText)) return Util.log("ERROR: Attempting to set text before finished loading message.", Util.ERROR), void 0;
			if (e.indexOf("XTIMERX") >= 0) {
				var i = (new Date).getTime(),
					a = Util.processTime(i - t);
				this.contentText.setText(e.replace("XTIMERX", a)), this.timer = window.setTimeout(this.setText.bind(this, e, t), 500)
			} else this.contentText.setText(e)
		}
	}
}), Prodigy.UI.YourMail = function(e, t, i, a) {
	this.configFile = "ui-your-mail", this.mailPerPage = 4, this.mailData = [], this.currentlyDisplayedMailItems = [], this.currentPage = 0, this.mailerSplitTests = new Prodigy.MailerSplitTests(e), Prodigy.UI.Menu.call(this, e, t, i, a), this.game.broadcaster.addAppListener(Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL, this.deleteMailSuccessful.bind(this), this, "ProdigyMailer")
}, Prodigy.extends(Prodigy.UI.YourMail, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.YourMail,
	preprocess: function() {
		this.queuePostCreateCallback(this.buttonSetup.bind(this), this.fetchMail.bind(this))
	},
	buttonSetup: function() {
		this.closeButton.onClickCallback = this.close.bind(this), this.pageLeftButton.onClickCallback = this.pageLeft.bind(this), this.pageRightButton.onClickCallback = this.pageRight.bind(this), this.pageLeftButton.scale.x = -1, this.pageLeftButton.visible = !1, this.pageRightButton.visible = !1
	},
	fetchMail: function() {
		this.game.broadcaster.broadcast(Prodigy.Events.Mailer.GET_ALL_MAIL, "ProdigyMailer", [this.afterFetchMail.bind(this), 0, 300])
	},
	afterFetchMail: function(e) {
		for (var t = 0; t < e.length; t++) {
			var i = new Prodigy.MailModel;
			i.data = e[t], this.mailData.push(i)
		}
		this.updateMailCounter(), this.renderMailItems(this.currentPage), this.updatePageButtons(), this.updateNoMailNotice()
	},
	renderMailItems: function(e) {
		if (!(0 > e || e + 1 > this.getNumPages())) {
			this.currentPage = e, this.clearMailDisplay();
			for (var t = this.currentPage * this.mailPerPage, i = 0, a = 10, s = t; s < t + this.mailPerPage && !(this.mailData.length <= s); s++)
				if (Util.isNullOrUndefined(this.mailData[s].splitTest) || this.mailerSplitTests.isInSplitTest(this.mailData[s].splitTest)) {
					var r = this.instantiateTemplate("mailItem", this.mailDisplay);
					r.mailItem.y = i, i += r.mailItem.height + a, this.currentlyDisplayedMailItems.push(r), r.subject.setText(this.mailData[s].subject), r.openButtonGraphic.visible = !0, r.unOpenButtonGraphic.visible = !1, r.secretButton.onClickCallback = this.openMail.bind(this, s), r.openButton.onClickCallback = this.openMail.bind(this, s), r.deleteButton.onClickCallback = this.deleteMail.bind(this, s), this.mailData[s].data.isOpened || (r.openButtonGraphic.visible = !1, r.unOpenButtonGraphic.visible = !0)
				} else this.mailData.splice(s, 1), s--
		}
	},
	clearMailDisplay: function() {
		for (var e = 0; e < this.currentlyDisplayedMailItems.length; e++) this.currentlyDisplayedMailItems[e].mailItem.destroy();
		this.currentlyDisplayedMailItems = []
	},
	pageRight: function() {
		this.renderMailItems(this.currentPage + 1), this.updatePageButtons()
	},
	pageLeft: function() {
		this.renderMailItems(this.currentPage - 1), this.updatePageButtons()
	},
	updateMailCounter: function() {
		for (var e = 0, t = 0; t < this.mailData.length; t++) this.mailData[t].data.isOpened || e++;
		return this.mailIconEmpty.visible = 0 >= e, this.mailIcon.visible = !this.mailIconEmpty.visible, e > 99 ? (this.mailCount.setText("99 +"), void 0) : (this.mailCount.setText(e.toString()), void 0)
	},
	updatePageButtons: function() {
		this.pageLeftButton.visible = this.currentPage > 0, this.pageRightButton.visible = this.currentPage < this.getNumPages() - 1, this.updatePageIndicators()
	},
	updatePageIndicators: function() {
		if (this.leftButtonUnreadIndicator.visible = this.pageLeftButton.isActive, this.rightButtonUnreadIndicator.visible = this.pageRightButton.isActive, this.currentPage > 0) {
			this.leftButtonUnreadIndicator.visible = !1, this.arrowLeftGraphic.visible = !0;
			for (var e = this.currentPage * this.mailPerPage - 1; e > 0; e--)
				if (!this.mailData[e].data.isOpened) {
					this.leftButtonUnreadIndicator.visible = !0, this.arrowLeftGraphic.visible = !1;
					break
				}
		}
		if (this.currentPage < this.getNumPages() - 1) {
			this.rightButtonUnreadIndicator.visible = !1, this.arrowRightGraphic.visible = !0;
			for (var e = (this.currentPage + 1) * this.mailPerPage; e < this.mailData.length; e++)
				if (!this.mailData[e].data.isOpened) {
					this.rightButtonUnreadIndicator.visible = !0, this.arrowRightGraphic.visible = !1;
					break
				}
		}
	},
	updateNoMailNotice: function() {
		this.noMailNotice.visible = this.mailData.length <= 0
	},
	openMail: function(e) {
		this.game.broadcaster.broadcast(Prodigy.Events.Mailer.MARK_AS_READ, "ProdigyMailView", [this.afterMailOpen(e), this.mailData[e].data])
	},
	afterMailOpen: function(e) {
		this.currentlyDisplayedMailItems[e % this.mailPerPage].openButtonGraphic.visible = !0, this.currentlyDisplayedMailItems[e % this.mailPerPage].unOpenButtonGraphic.visible = !1, !this.mailData[e].data.isOpened && this.mailData[e].attachments.length > 0 ? this.game.prodigy.open.gotItem(this.mailData[e].attachments, this.openMailer.bind(this, this.mailData[e], this.mailData[e].isOpened), null, "mail-open") : this.game.prodigy.open.mailerOpenMail(this.mailData[e], this.mailData[e].data.isOpened), this.mailData[e].data.isOpened = !0, this.updateMailCounter()
	},
	openMailer: function(e, t) {
		this.woodBackground.visible = !1;
		var i = this.game.prodigy.open.mailerOpenMail(e, t);
		i.setCloseCallback(function() {
			this.woodBackground.visible = !0
		}.bind(this))
	},
	deleteMail: function(e) {
		this.mailData[e].data.isOpened ? this.networkDeleteMailCall(e) : this.game.prodigy.open.messageBox("Are you sure you want to delete? It may contain something cool!", this.networkDeleteMailCall.bind(this, e))
	},
	networkDeleteMailCall: function(e) {
		this.game.input.enabled = !1, this.game.broadcaster.broadcast(Prodigy.Events.Mailer.DELETE_MAIL, "ProdigyMailer", [this.mailData[e].data, this.mailData[e].id]), this.mailData.splice(e, 1), this.currentPage >= this.getNumPages() && (this.currentPage = Math.max(this.currentPage - 1, 0)), this.clearMailDisplay(), this.updateMailCounter(), this.renderMailItems(this.currentPage), this.updatePageButtons()
	},
	deleteMailSuccessful: function() {
		this.game.input.enabled = !0, this.updateNoMailNotice()
	},
	getNumPages: function() {
		return Math.ceil(this.mailData.length / this.mailPerPage)
	},
	removeCachedMailNotificationImages: function() {
		for (var e = 0; e < this.mailData.length; e++) {
			var t = this.mailData[e].data.image;
			this.game.cache.checkImageKey(t) && this.game.cache.removeImage(t, !0)
		}
	},
	close: function(e) {
		this.game.broadcaster.removeAppListener(Prodigy.Events.Mailer.DELETE_MAIL_SUCCESSFUL, this, "ProdigyMailer"), this.game.broadcaster.broadcast(Prodigy.Events.Mailer.GET_TOTAL_MAIL, "ProdigyMailerButton"), this.removeCachedMailNotificationImages(), Util.isDefined(e) && e(), Prodigy.RenderMenu.prototype.close.call(this)
	}
}), Prodigy.UI.YourMail.MAIL = [{
	id: 0,
	subject: "Hello World 0",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42. This text is particularly long so we can figure out what happens when it's very long! Arguably there has to be a logical limit to the size of the text but putting in an entire paragraph is probably a pretty good test of the max size.",
	attachments: [{
		type: "item",
		ID: 1
	}, {
		type: "item",
		ID: 2
	}, {
		type: "item",
		ID: 3
	}, {
		type: "item",
		ID: 4
	}, {
		type: "item",
		ID: 5
	}]
}, {
	id: 1,
	subject: "SPLIT TEST MAIL",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: [{
		type: "item",
		ID: 1
	}, {
		type: "item",
		ID: 2
	}, {
		type: "item",
		ID: 3
	}, {
		type: "item",
		ID: 4
	}],
	gameMethod: {
		name: "openStore",
		params: [2]
	},
	splitTest: "test"
}, {
	id: 2,
	subject: "Hello World 2",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: [{
		type: "item",
		ID: 1
	}, {
		type: "item",
		ID: 2
	}]
}, {
	id: 3,
	subject: "Hello World 3",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: [{
		type: "currency",
		ID: 11,
		N: 50
	}]
}, {
	id: 4,
	subject: "Hello World 4",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 10,
	subject: "Hello World 10",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 20,
	subject: "Hello World 20",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 30,
	subject: "Hello World 30",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 40,
	subject: "Hello World 40",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 50,
	subject: "Hello World 50",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 60,
	subject: "Hello World 60",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 70,
	subject: "Hello World 70",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 80,
	subject: "Hello World 80",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 90,
	subject: "Hello World 90",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 100,
	subject: "Hello World 100",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 1e3,
	subject: "Hello World 1000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 2e3,
	subject: "Hello World 2000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 3e3,
	subject: "Hello World 3000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 4e3,
	subject: "Hello World 4000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 5e3,
	subject: "Hello World 5000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 6e3,
	subject: "Hello World 6000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 7e3,
	subject: "Hello World 7000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 8e3,
	subject: "Hello World 8000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 9e3,
	subject: "Hello World 9000",
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}, {
	id: 1e4,
	subject: "Hello World " + 1e4,
	isOpened: !1,
	image: null,
	message: "The answer to the ultimate question of life, the universe, and everything is 42.",
	attachments: []
}], Prodigy.UI.YourMail.TOTAL_MAIL = {
	totalUnread: Prodigy.UI.YourMail.MAIL.length
}, Prodigy.UI.OpenMail = function(e, t, i, a) {
	this.configFile = "ui-open-mail", this.mailModel = null, this.attachments = [], this.attachmentImageID = 0, this.mailerMethods = new Prodigy.MailerMethods(e), Prodigy.UI.Menu.call(this, e, t, i, a)
}, Prodigy.extends(Prodigy.UI.OpenMail, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.OpenMail,
	preprocess: function(e) {
		this.mailModel = e, this.addImageToAssets(e.image, e.vImage), this.queuePostCreateCallback(this.tweenLoader.bind(this), this.render.bind(this), this.setButtons.bind(this))
	},
	addImageToAssets: function(e, t) {
		var i = {};
		i[e] = {
			type: "singleImage",
			v: t || 1
		}, this.game.prodigy.assets.appendAssets(i)
	},
	render: function() {
		this.renderTitle(), this.renderImages(), this.renderBody(), this.renderCheckItOutButton(), this.renderAttachments(), this.resize()
	},
	renderTitle: function() {
		this.titleText.setText(this.mailModel.data.subject.toUpperCase())
	},
	renderImages: function() {
		var e = this.mailModel.image || "letter-mail-open-image";
		0 !== e.indexOf("letter-") && (e = "letter-" + e), this.game.prodigy.create.sprite(Math.floor(this.imageContainer.width / 2), Math.floor(this.imageContainer.height / 2), e, null, {
			x: .5,
			y: .5
		}, this.fixImage.bind(this), null, null, !0)
	},
	tweenLoader: function() {
		this.imageLoader.image.pivot.x = .5, this.imageLoader.image.pivot.y = .5, this.imageLoader.image.anchor.x = .5, this.imageLoader.image.anchor.y = .5, this.imageLoader.image.x += this.imageLoader.width / 2, this.imageLoader.image.y += this.imageLoader.height / 2, this.loadingSpinner = this.game.add.tween(this.imageLoader.image).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, GameConstants.MAX_SAFE_INTEGER, !1)
	},
	fixImage: function(e) {
		Util.isDefined(this.loadingSpinner) && (this.loadingSpinner.stop(), this.loadingSpinner = null), this.imageLoader.visible = !1;
		var t = this.imageContainer.width - 40;
		this.imageContainer.add(e), e.smoothing = !1;
		var i = this.imageContainer.height / 2;
		if (e.y = i, e.width > t) {
			var a = 1 - (e.width - t) / t;
			e.scale.x = a, e.scale.y = a
		}
		this.resize()
	},
	renderBody: function() {
		this.bodyText.setText(this.mailModel.data.message)
	},
	renderCheckItOutButton: function() {
		!Util.isNullOrUndefined(this.mailModel.data.gameMethod) && this.mailerMethods.doesFunctionExist(this.mailModel.data.gameMethod.name) ? (this.actionButtonContainer.visible = !0, this.actionButton.onClickCallback = this.runMailAction.bind(this, this.mailModel.data.gameMethod)) : this.actionButtonContainer.visible = !1
	},
	renderAttachments: function() {
		this.attachmentImageID = 0;
		for (var e = this.attachmentContainer, t = 0; t < this.mailModel.data.attachments.length; t++) {
			var i = this.instantiateTemplate("attachmentItem", e);
			this.attachments.push(i);
			var a = this.mailModel.data.attachments[t],
				s = this.game.prodigy.icon.iconKey(a);
			this.game.prodigy.icon.createIcon(Math.floor(i.attachmentItem.width / 2), Math.floor(i.attachmentItem.height / 2) - 3, s, {
				x: .5,
				y: .5
			}, this.attachmentLoaded.bind(this)), !Util.isNullOrUndefined(a.N) && a.N > 1 && (i.amount.visible = !0, i.amount.setText(a.N.toString()))
		}
		this.attachments.length <= 0 && this.attachmentContainer.destroy()
	},
	runMailAction: function(e) {
		this.game.prodigy.network.sendAnalytics("mail-check-it-out-clicked", "click-check-it-out-" + this.mailModel.data.subject, "Events"), this.mailerMethods.runFunction(e.name, e.params)
	},
	resize: function() {
		this.content.layoutElement.calculateChildren();
		var e = this.content.layoutElement.getContentHeight() + 30;
		this.woodBackground.resize(this.woodBackground.width - 20, e), this.woodBackground.y = Math.floor((720 - e) / 2)
	},
	setButtons: function() {
		this.closeButton.onClickCallback = this.close.bind(this)
	},
	attachmentLoaded: function(e) {
		this.attachments[this.attachmentImageID++].attachmentImage.add(e)
	},
	close: function() {
		Prodigy.UI.Menu.prototype.close.call(this), this.destroy()
	}
}), Prodigy.UI.SystemMenu = function(e, t, i, a) {
	this.configFile = "ui-settings-menu", Prodigy.UI.Menu.call(this, e, t, i, a)
}, Prodigy.extends(Prodigy.UI.SystemMenu, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.SystemMenu,
	create: function() {
		if (Prodigy.UI.Menu.prototype.create.call(this), this.soundSlider.onScrollChangeCallback = this.onSoundSliderChange.bind(this), this.musicSlider.onScrollChangeCallback = this.onMusicSliderChange.bind(this), this.voiceSlider.onScrollChangeCallback = this.onVoiceSliderChange.bind(this), this.closeButton.onClickCallback = this.onCloseButtonClick.bind(this), this.resetDefaultsButton.onClickCallback = this.onResetDefaultsButtonClick.bind(this), this.logoutButton.onClickCallback = this.onLogoutButtonClick.bind(this), this.smallScreenButton.onClickCallback = this.game.prodigy.graphics.setResolutionSmall.bind(this), this.mediumScreenButton.onClickCallback = this.game.prodigy.graphics.setResolutionMedium.bind(this), this.largeScreenButton.onClickCallback = this.game.prodigy.graphics.setResolutionLarge.bind(this), this.soundSlider.setPercentComplete(this.game.prodigy.audio.getSFXVolume(), !0), this.musicSlider.setPercentComplete(this.game.prodigy.audio.getBGMVolume(), !0), this.voiceSlider.setPercentComplete(this.game.prodigy.audio.getVoiceVolume(), !0), this.networkTabText.setText(Util.isDefined(this.game.prodigy.player.world) ? "Your world is: " + this.game.prodigy.player.world.name : "You are playing in Offline Mode."), this.parentalLinkButton.visible = !this.game.prodigy.player.hasValidatedParentEmail() && this.game.prodigy.player.hasCompletedTutorial(), this.parentalLinkButton.visible) {
			var e = this.game.prodigy.create.indicator(0, 0);
			this.parentalLinkButton.add(e);
			var t = Util.getCenteredXY(e.width, 0, 0, 0, this.parentalLinkButton.width, 0);
			e.x = t.x, e.y = -e.height, e.addTween()
		}
		this.parentalLinkButton.onClickCallback = this.game.prodigy.open.parentalLinkInfoPrompt.bind(this.game.prodigy.open, Prodigy.Menu.ParentLinkBenefitsConfig.ANALYTICS_SOURCE_SETTINGS), this.soundTab.select()
	},
	onSoundSliderChange: function(e) {
		this.game.prodigy.audio.setSFXVolume(e)
	},
	onMusicSliderChange: function(e) {
		this.game.prodigy.audio.setBGMVolume(e)
	},
	onVoiceSliderChange: function(e) {
		this.game.prodigy.audio.setVoiceVolume(e)
	},
	onResetDefaultsButtonClick: function() {
		this.soundSlider.setPercentComplete(GameConstants.get("GameConstants.Audio.DEFAULT_SOUND_VOLUME")), this.musicSlider.setPercentComplete(GameConstants.get("GameConstants.Audio.DEFAULT_MUSIC_VOLUME")), this.voiceSlider.setPercentComplete(GameConstants.get("GameConstants.Audio.DEFAULT_VOICE_VOLUME"))
	},
	onCloseButtonClick: function() {
		this.close()
	},
	onLogoutButtonClick: function() {
		this.game.prodigy.network.logout()
	}
}), Prodigy.UI.ZoneProgress = function(e, t, i) {
	this.configFile = "ui-zone-progress", this.friendCellList = [];
	var a = "ui-" + i.tag + "-progress",
		s = {
			modifyProperty: [{
				element: "woodBackground",
				property: "atlasName",
				value: a
			}, {
				element: "progressMatte",
				property: "atlasName",
				value: a
			}, {
				element: "summaryMatte",
				property: "atlasName",
				value: a
			}, {
				element: "completeMatte",
				property: "atlasName",
				value: a
			}, {
				element: "jewelMatte",
				property: "atlasName",
				value: a
			}, {
				element: "jewel",
				property: "atlasName",
				value: a
			}, {
				element: "buttonNPC",
				property: "atlasName",
				value: a
			}, {
				element: "mainQuestSlider",
				property: "endCapAtlas",
				value: a
			}, {
				element: "completeQuestSlider",
				property: "endCapAtlas",
				value: a
			}, {
				element: "npc",
				property: "atlasName",
				value: a
			}, {
				element: "npcCellMatte",
				property: "atlasName",
				value: a
			}, {
				element: "PlayButtonBackground",
				property: "atlasName",
				value: a
			}, {
				element: "friendScrollBar",
				property: "atlasName",
				value: a
			}, {
				element: "friendsMatte",
				property: "atlasName",
				value: a
			}, {
				element: "bossButtonContainer",
				property: "visible",
				value: e.prodigy.titansNetworkHandler.isTitanAlive() && "shipwreck" === i.tag
			}],
			addChildren: [],
			modifyTemplateProperty: [{
				element: "friendsCellMatte",
				property: "atlasName",
				value: a
			}, {
				element: "friendsJewel",
				property: "atlasName",
				value: a
			}, {
				element: "friendsCellHighlightLayer",
				property: "atlasName",
				value: a
			}]
		};
	Prodigy.UI.Menu.call(this, e, t, this.configFile, s)
}, Prodigy.extends(Prodigy.UI.ZoneProgress, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.ZoneProgress,
	preprocess: function(e) {
		this.currentPage = 0, this.friendProgress = this.game.prodigy.friendsListNetworkHandler.getFriendQuestProgress(e.zone), this.sortFriendProgress(), this.playerProgress = this.game.prodigy.player.state.getCompletedQuests(e.zone) + 1, this.queuePostCreateCallback(this.openTween.bind(this), this.setButtons.bind(this), this.setPanelText.bind(this, e), this.setProgress.bind(this, e), this.setBorders.bind(this, e), this.makeNotches.bind(this, e), this.fillFriends.bind(this, e), this.setupScrollBar.bind(this))
	},
	setPanelText: function(e) {
		if (this.summaryText.setText(e.summary), this.playerProgress < 1) this.taskContainer.visible = !1;
		else if (!Util.isNullOrUndefined(e.msg[this.playerProgress])) {
			this.taskContainer.visible = !0;
			var t = e.msg[this.playerProgress];
			this.questText.setText(t)
		}
	},
	setBorders: function(e) {
		this.instantiateTemplate(e.tag + "BannerDecals", this.titleContainer), this.instantiateTemplate(e.tag + "ZoneDecals", this.zoneDecals)
	},
	setProgress: function(e) {
		var t = this.playerProgress / (Object.keys(e.msg).length + 1);
		t >= 1 && (this.completeContainer.visible = !0, this.inProgressContainer.visible = !1), t > 0 ? this.setPage(1) : this.rightPage.visible = !1, this.mainQuestSlider.setPercentComplete(t + .08, !0), this.completeQuestSlider.setPercentComplete(1, !0)
	},
	makeNotches: function(e) {
		var t = Object.keys(e.msg).length + 1,
			i = [],
			a = this.mainQuestSlider;
		this.completeContainer.visible === !0 && (a = this.completeQuestSlider);
		for (var s = 1, r = this.friendProgress.length - 1; r >= 0; r--)
			if (r < this.friendProgress.length - 1 && this.friendProgress[r].questProgress === this.friendProgress[r + 1].questProgress) s += 1, i[i.length - 1].friendCount.setText(s.toString()), Util.isNullOrUndefined(i[i.length - 1].notch) ? i[i.length - 1].notchFlip.onClickCallback = this.clickNotch.bind(this, r) : i[i.length - 1].notch.onClickCallback = this.clickNotch.bind(this, r);
			else if (s = 1, (this.playerProgress % 2 === 1 && this.friendProgress[r].questProgress % 2 === 1 || this.playerProgress % 2 === 0 && this.friendProgress[r].questProgress % 2 === 0) && this.friendProgress[r].questProgress !== t && a !== this.completeQuestSlider) {
			var n = this.instantiateTemplate("notchFlip", a);
			n.notchFlip.x = a.getPositionAtPercent(Math.max(this.friendProgress[r].questProgress / t - .035, 0)) + n.notchFlip.width, n.notchFlip.y = n.notchFlip.defaultY = 75, n.notchFlip.onClickCallback = this.clickNotch.bind(this, r), i.push(n)
		} else {
			var o = this.instantiateTemplate("notch", a);
			o.notch.x = a.getPositionAtPercent(Math.max(this.friendProgress[r].questProgress / t - .035, 0)) + o.notch.width, o.notch.onClickCallback = this.clickNotch.bind(this, r), i.push(o)
		}
	},
	clickNotch: function(e) {
		this.setPage(1);
		var t = 0,
			i = 0,
			a = this.friendContents.height,
			s = this.friendScrollView.viewHeight,
			r = this;
		this.friendContents.children.forEach(function(r) {
			r instanceof Prodigy.UI.UIElement && (t === e && (i = r.y / (a - s - 20)), t++)
		}), this.friendScrollView.setToScrollPercent(i);
		var n = this.friendCellList[e].friendsCellHighlightLayer;
		n.alpha = 0, n.visible = !0, r.game.add.tween(n).to({
			alpha: 1
		}, 1e3, Phaser.Easing.Cubic.InOut, !0, 0, 0, !0)
	},
	setButtons: function() {
		this.closeButton.onClickCallback = this.close.bind(this), this.leftPage.onClickCallback = this.setPage.bind(this, -1), this.rightPage.onClickCallback = this.setPage.bind(this, 1)
	},
	setConfirm: function(e, t) {
		this.playButton.visible = !0, this.playButton.onClickCallback = this.close.bind(this, e), this.bossButton.onClickCallback = this.close.bind(this, t)
	},
	setPage: function(e) {
		switch (this.currentPage += e, this.currentPage) {
			case 0:
				this.summaryContainer.visible = !0, this.progressContainer.visible = !1, this.friendsContainer.visible = !1, this.leftPage.visible = !1;
				break;
			case 1:
				this.summaryContainer.visible = !1, this.progressContainer.visible = !0, this.friendsContainer.visible = !1, this.leftPage.visible = !0, this.rightPage.visible = !0;
				break;
			case 2:
				this.summaryContainer.visible = !1, this.progressContainer.visible = !1, this.friendsContainer.visible = !0, this.rightPage.visible = !1
		}
		this.currentPage = Math.min(Math.max(0, this.currentPage), 2)
	},
	setupScrollBar: function() {
		this.friendScrollView.linkScrollBar(this.friendScrollBar)
	},
	fillFriends: function(e) {
		this.noFriendsElement.visible = this.friendProgress.length <= 0;
		for (var t = 0; t < this.friendProgress.length; t++) {
			var i = this.instantiateTemplate("friendCell", this.friendContents);
			i.friendName.setText(this.friendProgress[t].name), i.levelText.setText(this.friendProgress[t].level.toString());
			var a = new Player(this.game);
			a.init(this.friendProgress[t]);
			var s = this.game.prodigy.create.player(i.friendFace, a, 1, 0, 0, !0);
			s.reload(), i.memberGraphic.visible = this.friendProgress[t].isMember;
			var r = this.friendProgress[t].questProgress / (Object.keys(e.msg).length + 1),
				n = r >= 1 ? 0 : -14;
			i.friendsQuestSlider.setPercentCompleteOffset(r, n), i.friendsQuestSlider.thumbSprite.visible = r > 0, i.friendButton.onClickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, this.game.prodigy.friendsListNetworkHandler.getFriend(a.userID), !0), this.friendCellList.push(i)
		}
		this.friendContents.layoutElement.calculateChildren(), this.friendScrollView.setupVisibleIndicies(), this.friendScrollView.calculateMaxScrollDist()
	},
	sortFriendProgress: function() {
		this.friendProgress.sort(function(e, t) {
			return e.questProgress > t.questProgress ? -1 : e.questProgress < t.questProgress ? 1 : e.name.localeCompare(t.name)
		})
	},
	close: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), Prodigy.UI.Menu.prototype.close.call(this)
	}
}), Prodigy.UI.TitanProgress = function(e, t, i) {
	this.configFile = "ui-titan-progress", this.infoToggle = i;
	var a = {
		modifyProperty: [{
			element: "rewardsContainer",
			property: "visible",
			value: !this.infoToggle
		}, {
			element: "infoContainer",
			property: "visible",
			value: this.infoToggle
		}],
		addChildren: [],
		modifyTemplateProperty: []
	};
	Prodigy.UI.Menu.call(this, e, t, this.configFile, a), e.broadcaster.addAppListener(Prodigy.Events.Titan.GOT_TITAN, this.renderBar.bind(this), this, "TitanProgress", !1)
}, Prodigy.extends(Prodigy.UI.TitanProgress, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.TitanProgress,
	preprocess: function() {
		this.queuePostCreateCallback(this.openTween.bind(this), this.setButtons.bind(this), this.callTitanHits.bind(this))
	},
	callTitanHits: function() {
		this.infoToggle || this.game.prodigy.titansNetworkHandler.getTitan(this.game.prodigy.titansNetworkHandler.titan.id, "TitanProgress")
	},
	renderBar: function() {
		this.game.prodigy.titansNetworkHandler.isTitanAlive() ? (this.playerProgress = this.game.prodigy.titansNetworkHandler.titan.hits || 0, this.percentageComplete = this.playerProgress / 70, this.setProgress(), this.makeNotches()) : this.titanDeadKick()
	},
	setProgress: function() {
		this.progressSlider.setPercentComplete(this.percentageComplete, !0)
	},
	makeNotches: function() {
		for (var e = this.game.prodigy.titansNetworkHandler.titan.increments, t = this.game.prodigy.titansNetworkHandler.titan.rewards, i = this.progressSlider, a = 0; a < e.length; a++) {
			var s;
			s = this.playerProgress < e[a] || this.playerProgress > e[a] && a < e.length - 1 && this.playerProgress < e[a + 1] || this.playerProgress > e[a] && a === e.length - 1 ? this.instantiateTemplate("notch", i).notch : this.instantiateTemplate("notchFade", i).notchFade, s.x = i.getPositionAtPercent(Math.min(e[a] / 70, .95)) + s.width, s.y = s.defaultY = 75, s.children[2].setText(t[a].toString())
		}
	},
	setButtons: function() {
		this.closeButton.onClickCallback = this.close.bind(this)
	},
	close: function(e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), this.game.broadcaster.removeAppListener(Prodigy.Events.Titan.GOT_TITAN, this, "TitanProgress"), Prodigy.UI.Menu.prototype.close.call(this)
	},
	titanDeadKick: function() {
		var e = "The Titan has been defeated, for now!\nThe Puppet Master is hard at work, summoning it back once again. Keep an eye on the island map for signs of the Titan's return...";
		this.game.prodigy.open.message(e, this.titanDeadTeleport.bind(this), null, "Titan Defeated!", null, {
			isModal: !1
		})
	},
	titanDeadTeleport: function() {
		var e = this.game;
		this.close(), e.prodigy.world.teleport("lamplight-B3")
	}
}), Prodigy.UI.MembershipParent = function(e, t, i, a, s) {
	this.configFile = "ui-membership-parent", this.analyticEvents = Util.getOptionalParameter(s, {}), this.analyticEvents.conversionFunnelName = Util.getOptionalParameter(this.analyticEvents.conversionFunnelName, ""), this.analyticEvents.conversionFunnelMetadata = Util.getOptionalParameter(this.analyticEvents.conversionFunnelMetadata, ""), Prodigy.UI.Menu.call(this, e, t, i, a)
}, Prodigy.extends(Prodigy.UI.MembershipParent, Prodigy.UI.Menu, {
	constructor: Prodigy.UI.MembershipParent,
	create: function() {
		Prodigy.UI.Menu.prototype.create.call(this), this.setCallbacks()
	},
	preprocess: function(e) {
		this.updateConfigModifierProperty("signUpButton", "visible", e), e || (this.updateConfigModifierProperty("bannerOverlay", "frameName", "banner-overlay1"), this.updateConfigModifierProperty("bodyTextOverlay", "frameName", "body-text-overlay1"))
	},
	setCallbacks: function() {
		this.closeButton.onClickCallback = this.close.bind(this), this.signUpButton.onClickCallback = this.onMembershipButtonClick.bind(this)
	},
	setMemberAd: function(e) {
		this.memberAd = e
	},
	onMembershipButtonClick: function() {
		if (this.game.prodigy.network.sendConversionFunnelEvent(this.analyticEvents.conversionFunnelName, Prodigy.FunnelEventIDs.STAGE_CLICK_PARENT_CONFIRMATION, this.analyticEvents.conversionFunnelMetadata), 1 == Util.getUrlVariable("iosApp")) this.game.prodigy.open.message("Visit the Prodigy website to purchase a membership!");
		else try {
			this.game.prodigy.network.stopInactiveTimer();
			var e = Util.isNullOrUndefined(this.game.prodigy.player.username) ? this.game.prodigy.player.getName() : this.game.prodigy.player.username,
				t = this.game.prodigy.player.locationSelectionType === GameConstants.get("GameConstants.LocationSelection.HOME");
			prodigyWeb.membershipFlow.open(e, this.game.prodigy.player.userID, this.memberAd.finishUpgrade.bind(this), this.memberAd.adID || 0, this.analyticEvents.conversionFunnelName, t, this.analyticEvents.conversionFunnelMetadata, this.game.prodigy.network.getKey())
		} catch (i) {
			this.game.prodigy.open.message("There was an error contacting our server. Please try again later.")
		}
	},
	close: function() {
		this.memberAd.membershipParentOpen = !1, Prodigy.UI.Menu.prototype.close.call(this)
	}
});
//# sourceMappingURL=game.min.js.map